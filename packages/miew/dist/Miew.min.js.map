{"version":3,"file":"dist/Miew.min.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,UAAWA,QAAQ,UAC3B,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,SAAU,SAAUJ,GACF,iBAAZC,QACdA,QAAc,KAAID,EAAQG,QAAQ,UAAWA,QAAQ,UAErDJ,EAAW,KAAIC,EAAQD,EAAQ,EAAGA,EAAY,MAC/C,CATD,CASGO,MAAM,CAACC,EAAkCC,IAC5C,M,cCiEA,IAAIC,EAAU,WACd,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,CAAC,EAAEG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,CAAC,EAAEK,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,KAAKC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,IAAIC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAI,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,KAAKC,GAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAKC,GAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,G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sE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEsE,GAAK,CAAC,EAAE,MAAMtE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAAC,EAAE,MAAMvE,EAAEuE,GAAK,CAA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,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAEL,KAAK,GAAG,OAAO,GAEf,KAAK,GAEL,KAAK,GAAG,OAAO,GAEf,KAAK,GAEL,KAAK,GAEL,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAoD,OAAjDD,EAAI1L,OAASL,EAAGoB,MAAM8K,cAAcH,EAAI1L,QAAgB,GAEhE,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,OAAO,IAEf,KAAK,GAAG,MAAO,KAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAGf,EACA+K,MAAO,CAAC,YAAY,cAAc,eAAe,2BAA2B,8BAA8B,yBAAyB,gBAAgB,eAAe,cAAc,gBAAgB,gBAAgB,gBAAgB,eAAe,eAAe,cAAc,cAAc,mBAAmB,sBAAsB,oBAAoB,iBAAiB,eAAe,cAAc,cAAc,iBAAiB,eAAe,eAAe,eAAe,iBAAiB,iBAAiB,mBAAmB,eAAe,gBAAgB,mBAAmB,eAAe,eAAe,eAAe,kBAAkB,oBAAoB,iBAAiB,oBAAoB,gBAAgB,iBAAiB,cAAc,qBAAqB,eAAe,oBAAoB,wBAAwB,sBAAsB,qBAAqB,wBAAwB,wBAAwB,wBAAwB,sBAAsB,0BAA0B,yBAAyB,0BAA0B,4BAA4B,wBAAwB,YAAY,aAAa,YAAY,YAAY,YAAY,YAAY,YAAY,aAAa,aAAa,cAAc,gBAAgB,eAAe,eAAe,kDAAkD,qBAAqB,UAAU,WAAW,WAAW,WAAW,aAAa,aAAa,aAAa,aAAa,WAC14CM,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAK1R,SAASS,KACPpR,KAAKiF,GAAK,CAAC,CACb,CAEA,OALA9E,GAAO8L,MAAQA,GAIfmF,GAAOjF,UAAYhM,GAAOA,GAAOiR,OAASA,GACnC,IAAIA,EACX,CA14Bc,GA44BdxR,EAAOD,QAAU,CAACQ,OAAQA,E,SC54B1B,IAAIA,EAAU,WACd,IAAIC,EAAE,SAASC,EAAEC,EAAEF,EAAEG,GAAG,IAAIH,EAAEA,GAAG,CAAC,EAAEG,EAAEF,EAAEG,OAAOD,IAAIH,EAAEC,EAAEE,IAAID,GAAG,OAAOF,CAAC,EAAEK,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,GAAGC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,IAAIC,EAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAC/NnB,EAAS,CAAC6E,MAAO,WAAmB,EACxCC,GAAI,CAAC,EACLC,SAAU,CAAC,MAAQ,EAAE,QAAU,EAAE,WAAa,EAAE,IAAM,EAAE,SAAW,EAAE,GAAK,EAAE,IAAM,EAAE,IAAM,EAAE,IAAI,GAAG,IAAI,GAAG,SAAW,GAAG,eAAiB,GAAG,gBAAkB,GAAG,UAAY,GAAG,eAAiB,GAAG,SAAW,GAAG,MAAQ,GAAG,IAAI,GAAG,OAAS,GAAG,IAAI,GAAG,KAAO,GAAG,WAAa,GAAG,OAAS,GAAG,QAAU,EAAE,KAAO,GAChTC,WAAY,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,WAAW,GAAG,iBAAiB,GAAG,kBAAkB,GAAG,iBAAiB,GAAG,IAAI,GAAG,SAAS,GAAG,IAAI,GAAG,aAAa,GAAG,UAC5LC,aAAc,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IACzIC,cAAe,SAAmBC,EAAQC,EAAQC,EAAUP,EAAIQ,EAAyBC,EAAiBC,GAG1G,IAAIC,EAAKF,EAAGlF,OAAS,EACrB,OAAQiF,GACR,KAAK,EACJ,OAAOC,EAAGE,EAAG,GAEd,KAAK,EACL5F,KAAK6F,EAAIZ,EAAGoM,QAAQ,KAAXpM,CAAiBS,EAAGE,EAAG,GAAIF,EAAGE,IACvC,MACA,KAAK,EACL5F,KAAK6F,EAAIZ,EAAGoM,QAAQ,MAAXpM,CAAkBS,EAAGE,EAAG,GAAIF,EAAGE,IACxC,MACA,KAAK,EACL5F,KAAK6F,EAAIZ,EAAGoM,QAAQ,MAAXpM,CAAkBS,EAAGE,IAC9B,MACA,KAAK,EACL5F,KAAK6F,EAAIH,EAAGE,EAAG,GACf,MACA,KAAK,EACL5F,KAAK6F,EAAIZ,EAAGoM,QAAQ3L,EAAGE,GAAdX,GACT,MACA,KAAK,EACLjF,KAAK6F,EAAIZ,EAAGqM,YAAY5L,EAAGE,GAAI8B,cAAcoE,MAAM,EAAGpG,EAAGE,GAAIpF,SAC7D,MACA,KAAK,EAAG,KAAK,GACbR,KAAK6F,EAAIZ,EAAGoM,QAAQ3L,EAAGE,EAAG,GAAjBX,CAAqBS,EAAGE,IACjC,MACA,KAAK,GACL5F,KAAK6F,EAAI,IAAIZ,EAAGsM,UAAU7L,EAAGE,IAC7B,MACA,KAAK,GAAI,KAAK,GACd5F,KAAK6F,EAAIH,EAAGE,EAAG,GAAG4E,OAAO9E,EAAGE,IAC5B,MACA,KAAK,GACL5F,KAAK6F,EAAI,IAAIZ,EAAGuM,MAAMzJ,OAAOrC,EAAGE,KAChC,MACA,KAAK,GACL5F,KAAK6F,EAAI,IAAIZ,EAAGuM,MAAMzJ,OAAOrC,EAAGE,EAAG,IAAKmC,OAAOrC,EAAGE,KAClD,MACA,KAAK,GACL5F,KAAK6F,EAAI,IAAIZ,EAAGwM,UAAU/L,EAAGE,IAG7B,EACAkF,MAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAErK,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,GAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAEC,EAAI,EAAEC,GAAKZ,EAAEa,EAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAER,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,GAAK,CAAC,EAAE,GAAG,EAAE,EAAE,EAAEL,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,GAAKV,EAAEa,EAAI,CAAC,EAAE,IAAIb,EAAEa,EAAI,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAGC,GAAK,CAAC,GAAG,GAAG,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,GAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAEZ,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,GAAK,CAAC,EAAE,GAAG,EAAE,EAAE,EAAEL,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,EAAI,GAAGC,GAAKV,EAAEa,EAAI,CAAC,EAAE,IAAI,CAAC,EAAEF,EAAI,EAAEC,EAAI,GAAG,CAAC,EAAE,KAAKZ,EAAEa,EAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,MAAMb,EAAEkB,EAAI,CAAC,EAAE,KAAKlB,EAAEkB,EAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,MAAMlB,EAAEa,EAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,MAAMb,EAAEkB,EAAI,CAAC,EAAE,KAAKlB,EAAEkB,EAAI,CAAC,EAAE,KAAKlB,EAAEkB,EAAI,CAAC,EAAE,KAAKlB,EAAEkB,EAAI,CAAC,EAAE,KAAKlB,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAEY,IAAMZ,EAAEa,EAAI,CAAC,EAAE,IAAIb,EAAEa,EAAI,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAGC,GAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAAGC,EAAI,GAAG,GAAG,GAAGC,EAAI,GAAGC,GAAKjB,EAAEkB,EAAI,CAAC,EAAE,KAAKlB,EAAEkB,EAAI,CAAC,EAAE,KAAKlB,EAAEkB,EAAI,CAAC,EAAE,MAChuByJ,eAAgB,CAAC,GAAG,CAAC,EAAE,IACvBC,WAAY,SAAoBC,EAAKC,GACjC,IAAIA,EAAKC,YAEF,CACH,IAAIC,EAAQ,IAAIC,MAAMJ,GAEtB,MADAG,EAAMF,KAAOA,EACPE,CACV,CALIpL,KAAKgF,MAAMiG,EAMnB,EACAL,MAAO,SAAeU,GAClB,IAAIC,EAAOvL,KAAMwL,EAAQ,CAAC,GAAIC,EAAS,GAAIC,EAAS,CAAC,MAAOC,EAAS,GAAIb,EAAQ9K,KAAK8K,MAAOxF,EAAS,GAAIE,EAAW,EAAGD,EAAS,EAAGqG,EAAa,EAC7IC,EAAOF,EAAOG,MAAMC,KAAKC,UAAW,GACpCC,EAAQ9B,OAAOC,OAAOpK,KAAKiM,OAC3BC,EAAc,CAAEjH,GAAI,CAAC,GACzB,IAAK,IAAI5E,KAAKL,KAAKiF,GACXkF,OAAOgC,UAAUC,eAAeL,KAAK/L,KAAKiF,GAAI5E,KAC9C6L,EAAYjH,GAAG5E,GAAKL,KAAKiF,GAAG5E,IAGpC4L,EAAMI,SAASf,EAAOY,EAAYjH,IAClCiH,EAAYjH,GAAGgH,MAAQA,EACvBC,EAAYjH,GAAG9E,OAASH,UACG,IAAhBiM,EAAMK,SACbL,EAAMK,OAAS,CAAC,GAEpB,IAAIC,EAAQN,EAAMK,OAClBX,EAAOa,KAAKD,GACZ,IAAIE,EAASR,EAAMS,SAAWT,EAAMS,QAAQD,OACH,mBAA9BP,EAAYjH,GAAG+F,WACtBhL,KAAKgL,WAAakB,EAAYjH,GAAG+F,WAEjChL,KAAKgL,WAAab,OAAOwC,eAAe3M,MAAMgL,WAoBlD,IADA,IAAI4B,EAAQC,EAAgBC,EAAOC,EAAWC,EAAeC,EAAGC,EAAKC,EAAUC,EAXnEC,EAWqCC,EAAQ,CAAC,IAC7C,CAUT,GATAR,EAAQtB,EAAMA,EAAMhL,OAAS,GACzBR,KAAK+K,eAAe+B,GACpBC,EAAS/M,KAAK+K,eAAe+B,IAEzBF,UAjBAS,SAEiB,iBADrBA,EAAQ5B,EAAO8B,OAAStB,EAAMuB,OA9BgI,KAgCtJH,aAAiBzD,QAEjByD,GADA5B,EAAS4B,GACME,OAEnBF,EAAQ9B,EAAKrG,SAASmI,IAAUA,GAWhCT,EATGS,GAWPN,EAASjC,EAAMgC,IAAUhC,EAAMgC,GAAOF,SAEpB,IAAXG,IAA2BA,EAAOvM,SAAWuM,EAAO,GAAI,CAC/D,IAAIU,EAAS,GAEb,IAAKR,KADLG,EAAW,GACDtC,EAAMgC,GACR9M,KAAKmF,WAAW8H,IAAMA,EAvDuH,GAwD7IG,EAASZ,KAAK,IAAOxM,KAAKmF,WAAW8H,GAAK,KAI9CQ,EADAxB,EAAMyB,aACG,wBAA0BlI,EAAW,GAAK,MAAQyG,EAAMyB,eAAiB,eAAiBN,EAASO,KAAK,MAAQ,WAAc3N,KAAKmF,WAAWyH,IAAWA,GAAU,IAEnK,wBAA0BpH,EAAW,GAAK,iBA9DuG,GA8DpFoH,EAAgB,eAAiB,KAAQ5M,KAAKmF,WAAWyH,IAAWA,GAAU,KAExJ5M,KAAKgL,WAAWyC,EAAQ,CACpBG,KAAM3B,EAAM4B,MACZR,MAAOrN,KAAKmF,WAAWyH,IAAWA,EAClCkB,KAAM7B,EAAMzG,SACZuI,IAAKxB,EACLa,SAAUA,GAElB,CACA,GAAIL,EAAO,aAAcnD,OAASmD,EAAOvM,OAAS,EAC9C,MAAM,IAAI6K,MAAM,oDAAsDyB,EAAQ,YAAcF,GAEhG,OAAQG,EAAO,IACf,KAAK,EACDvB,EAAMgB,KAAKI,GACXlB,EAAOc,KAAKP,EAAM3G,QAClBqG,EAAOa,KAAKP,EAAMK,QAClBd,EAAMgB,KAAKO,EAAO,IAClBH,EAAS,KACJC,GASDD,EAASC,EACTA,EAAiB,OATjBtH,EAAS0G,EAAM1G,OACfD,EAAS2G,EAAM3G,OACfE,EAAWyG,EAAMzG,SACjB+G,EAAQN,EAAMK,OACVV,EAAa,GACbA,KAMR,MACJ,KAAK,EAwBD,GAvBAsB,EAAMlN,KAAKoF,aAAa2H,EAAO,IAAI,GACnCO,EAAMzH,EAAI6F,EAAOA,EAAOlL,OAAS0M,GACjCI,EAAM3H,GAAK,CACPqI,WAAYrC,EAAOA,EAAOnL,QAAU0M,GAAO,IAAIc,WAC/CC,UAAWtC,EAAOA,EAAOnL,OAAS,GAAGyN,UACrCC,aAAcvC,EAAOA,EAAOnL,QAAU0M,GAAO,IAAIgB,aACjDC,YAAaxC,EAAOA,EAAOnL,OAAS,GAAG2N,aAEvC1B,IACAa,EAAM3H,GAAGyI,MAAQ,CACbzC,EAAOA,EAAOnL,QAAU0M,GAAO,IAAIkB,MAAM,GACzCzC,EAAOA,EAAOnL,OAAS,GAAG4N,MAAM,UAYvB,KATjBpB,EAAIhN,KAAKqF,cAAcgJ,MAAMf,EAAO,CAChChI,EACAC,EACAC,EACA0G,EAAYjH,GACZ8H,EAAO,GACPrB,EACAC,GACFrB,OAAOuB,KAEL,OAAOmB,EAEPE,IACA1B,EAAQA,EAAMM,MAAM,GAAI,EAAIoB,EAAM,GAClCxB,EAASA,EAAOI,MAAM,GAAI,EAAIoB,GAC9BvB,EAASA,EAAOG,MAAM,GAAI,EAAIoB,IAElC1B,EAAMgB,KAAKxM,KAAKoF,aAAa2H,EAAO,IAAI,IACxCrB,EAAOc,KAAKc,EAAMzH,GAClB8F,EAAOa,KAAKc,EAAM3H,IAClBwH,EAAWrC,EAAMU,EAAMA,EAAMhL,OAAS,IAAIgL,EAAMA,EAAMhL,OAAS,IAC/DgL,EAAMgB,KAAKW,GACX,MACJ,KAAK,EACD,OAAO,EAEf,CACA,OAAO,CACX,GAIIlB,EACS,CAEbqC,IAAI,EAEJtD,WAAW,SAAoBC,EAAKC,GAC5B,IAAIlL,KAAKiF,GAAG9E,OAGR,MAAM,IAAIkL,MAAMJ,GAFhBjL,KAAKiF,GAAG9E,OAAO6K,WAAWC,EAAKC,EAIvC,EAGJmB,SAAS,SAAUf,EAAOrG,GAiBlB,OAhBAjF,KAAKiF,GAAKA,GAAMjF,KAAKiF,IAAM,CAAC,EAC5BjF,KAAKuO,OAASjD,EACdtL,KAAKwO,MAAQxO,KAAKyO,WAAazO,KAAK0O,MAAO,EAC3C1O,KAAKwF,SAAWxF,KAAKuF,OAAS,EAC9BvF,KAAKsF,OAAStF,KAAK2O,QAAU3O,KAAK6N,MAAQ,GAC1C7N,KAAK4O,eAAiB,CAAC,WACvB5O,KAAKsM,OAAS,CACV0B,WAAY,EACZE,aAAc,EACdD,UAAW,EACXE,YAAa,GAEbnO,KAAK0M,QAAQD,SACbzM,KAAKsM,OAAO8B,MAAQ,CAAC,EAAE,IAE3BpO,KAAK6O,OAAS,EACP7O,IACX,EAGJsL,MAAM,WACE,IAAIwD,EAAK9O,KAAKuO,OAAO,GAkBrB,OAjBAvO,KAAKsF,QAAUwJ,EACf9O,KAAKuF,SACLvF,KAAK6O,SACL7O,KAAK6N,OAASiB,EACd9O,KAAK2O,SAAWG,EACJA,EAAGjB,MAAM,oBAEjB7N,KAAKwF,WACLxF,KAAKsM,OAAO2B,aAEZjO,KAAKsM,OAAO6B,cAEZnO,KAAK0M,QAAQD,QACbzM,KAAKsM,OAAO8B,MAAM,KAGtBpO,KAAKuO,OAASvO,KAAKuO,OAAOzC,MAAM,GACzBgD,CACX,EAGJC,MAAM,SAAUD,GACR,IAAI5B,EAAM4B,EAAGtO,OACTwO,EAAQF,EAAGG,MAAM,iBAErBjP,KAAKuO,OAASO,EAAK9O,KAAKuO,OACxBvO,KAAKsF,OAAStF,KAAKsF,OAAO4J,OAAO,EAAGlP,KAAKsF,OAAO9E,OAAS0M,GAEzDlN,KAAK6O,QAAU3B,EACf,IAAIiC,EAAWnP,KAAK6N,MAAMoB,MAAM,iBAChCjP,KAAK6N,MAAQ7N,KAAK6N,MAAMqB,OAAO,EAAGlP,KAAK6N,MAAMrN,OAAS,GACtDR,KAAK2O,QAAU3O,KAAK2O,QAAQO,OAAO,EAAGlP,KAAK2O,QAAQnO,OAAS,GAExDwO,EAAMxO,OAAS,IACfR,KAAKwF,UAAYwJ,EAAMxO,OAAS,GAEpC,IAAIwM,EAAIhN,KAAKsM,OAAO8B,MAgBpB,OAdApO,KAAKsM,OAAS,CACV0B,WAAYhO,KAAKsM,OAAO0B,WACxBC,UAAWjO,KAAKwF,SAAW,EAC3B0I,aAAclO,KAAKsM,OAAO4B,aAC1BC,YAAaa,GACRA,EAAMxO,SAAW2O,EAAS3O,OAASR,KAAKsM,OAAO4B,aAAe,GAC5DiB,EAASA,EAAS3O,OAASwO,EAAMxO,QAAQA,OAASwO,EAAM,GAAGxO,OAChER,KAAKsM,OAAO4B,aAAehB,GAG7BlN,KAAK0M,QAAQD,SACbzM,KAAKsM,OAAO8B,MAAQ,CAACpB,EAAE,GAAIA,EAAE,GAAKhN,KAAKuF,OAAS2H,IAEpDlN,KAAKuF,OAASvF,KAAKsF,OAAO9E,OACnBR,IACX,EAGJoP,KAAK,WAEG,OADApP,KAAKwO,OAAQ,EACNxO,IACX,EAGJqP,OAAO,WACC,OAAIrP,KAAK0M,QAAQ4C,iBACbtP,KAAKyO,YAAa,EASfzO,MAPIA,KAAKgL,WAAW,0BAA4BhL,KAAKwF,SAAW,GAAK,mIAAqIxF,KAAK0N,eAAgB,CAC9NE,KAAM,GACNP,MAAO,KACPS,KAAM9N,KAAKwF,UAKvB,EAGJ+J,KAAK,SAAUhH,GACPvI,KAAK+O,MAAM/O,KAAK6N,MAAM/B,MAAMvD,GAChC,EAGJiH,UAAU,WACF,IAAIC,EAAOzP,KAAK2O,QAAQO,OAAO,EAAGlP,KAAK2O,QAAQnO,OAASR,KAAK6N,MAAMrN,QACnE,OAAQiP,EAAKjP,OAAS,GAAK,MAAM,IAAMiP,EAAKP,QAAQ,IAAIQ,QAAQ,MAAO,GAC3E,EAGJC,cAAc,WACN,IAAIC,EAAO5P,KAAK6N,MAIhB,OAHI+B,EAAKpP,OAAS,KACdoP,GAAQ5P,KAAKuO,OAAOW,OAAO,EAAG,GAAGU,EAAKpP,UAElCoP,EAAKV,OAAO,EAAE,KAAOU,EAAKpP,OAAS,GAAK,MAAQ,KAAKkP,QAAQ,MAAO,GAChF,EAGJhC,aAAa,WACL,IAAImC,EAAM7P,KAAKwP,YACXM,EAAI,IAAIlG,MAAMiG,EAAIrP,OAAS,GAAGmN,KAAK,KACvC,OAAOkC,EAAM7P,KAAK2P,gBAAkB,KAAOG,EAAI,GACnD,EAGJC,WAAW,SAAUlC,EAAOmC,GACpB,IAAI3C,EACA2B,EACAiB,EAwDJ,GAtDIjQ,KAAK0M,QAAQ4C,kBAEbW,EAAS,CACLzK,SAAUxF,KAAKwF,SACf8G,OAAQ,CACJ0B,WAAYhO,KAAKsM,OAAO0B,WACxBC,UAAWjO,KAAKiO,UAChBC,aAAclO,KAAKsM,OAAO4B,aAC1BC,YAAanO,KAAKsM,OAAO6B,aAE7B7I,OAAQtF,KAAKsF,OACbuI,MAAO7N,KAAK6N,MACZqC,QAASlQ,KAAKkQ,QACdvB,QAAS3O,KAAK2O,QACdpJ,OAAQvF,KAAKuF,OACbsJ,OAAQ7O,KAAK6O,OACbL,MAAOxO,KAAKwO,MACZD,OAAQvO,KAAKuO,OACbtJ,GAAIjF,KAAKiF,GACT2J,eAAgB5O,KAAK4O,eAAe9C,MAAM,GAC1C4C,KAAM1O,KAAK0O,MAEX1O,KAAK0M,QAAQD,SACbwD,EAAO3D,OAAO8B,MAAQpO,KAAKsM,OAAO8B,MAAMtC,MAAM,MAItDkD,EAAQnB,EAAM,GAAGA,MAAM,sBAEnB7N,KAAKwF,UAAYwJ,EAAMxO,QAE3BR,KAAKsM,OAAS,CACV0B,WAAYhO,KAAKsM,OAAO2B,UACxBA,UAAWjO,KAAKwF,SAAW,EAC3B0I,aAAclO,KAAKsM,OAAO6B,YAC1BA,YAAaa,EACAA,EAAMA,EAAMxO,OAAS,GAAGA,OAASwO,EAAMA,EAAMxO,OAAS,GAAGqN,MAAM,UAAU,GAAGrN,OAC5ER,KAAKsM,OAAO6B,YAAcN,EAAM,GAAGrN,QAEpDR,KAAKsF,QAAUuI,EAAM,GACrB7N,KAAK6N,OAASA,EAAM,GACpB7N,KAAKkQ,QAAUrC,EACf7N,KAAKuF,OAASvF,KAAKsF,OAAO9E,OACtBR,KAAK0M,QAAQD,SACbzM,KAAKsM,OAAO8B,MAAQ,CAACpO,KAAK6O,OAAQ7O,KAAK6O,QAAU7O,KAAKuF,SAE1DvF,KAAKwO,OAAQ,EACbxO,KAAKyO,YAAa,EAClBzO,KAAKuO,OAASvO,KAAKuO,OAAOzC,MAAM+B,EAAM,GAAGrN,QACzCR,KAAK2O,SAAWd,EAAM,GACtBR,EAAQrN,KAAKqF,cAAc0G,KAAK/L,KAAMA,KAAKiF,GAAIjF,KAAMgQ,EAAchQ,KAAK4O,eAAe5O,KAAK4O,eAAepO,OAAS,IAChHR,KAAK0O,MAAQ1O,KAAKuO,SAClBvO,KAAK0O,MAAO,GAEZrB,EACA,OAAOA,EACJ,GAAIrN,KAAKyO,WAAY,CAExB,IAAK,IAAIpO,KAAK4P,EACVjQ,KAAKK,GAAK4P,EAAO5P,GAErB,OAAO,CACX,CACA,OAAO,CACX,EAGJuP,KAAK,WACG,GAAI5P,KAAK0O,KACL,OAAO1O,KAAKsO,IAMhB,IAAIjB,EACAQ,EACAsC,EACAC,EAPCpQ,KAAKuO,SACNvO,KAAK0O,MAAO,GAOX1O,KAAKwO,QACNxO,KAAKsF,OAAS,GACdtF,KAAK6N,MAAQ,IAGjB,IADA,IAAIwC,EAAQrQ,KAAKsQ,gBACRhI,EAAI,EAAGA,EAAI+H,EAAM7P,OAAQ8H,IAE9B,IADA6H,EAAYnQ,KAAKuO,OAAOV,MAAM7N,KAAKqQ,MAAMA,EAAM/H,SAC5BuF,GAASsC,EAAU,GAAG3P,OAASqN,EAAM,GAAGrN,QAAS,CAGhE,GAFAqN,EAAQsC,EACRC,EAAQ9H,EACJtI,KAAK0M,QAAQ4C,gBAAiB,CAE9B,IAAc,KADdjC,EAAQrN,KAAK+P,WAAWI,EAAWE,EAAM/H,KAErC,OAAO+E,EACJ,GAAIrN,KAAKyO,WAAY,CACxBZ,GAAQ,EACR,QACJ,CAEI,OAAO,CAEf,CAAO,IAAK7N,KAAK0M,QAAQ6D,KACrB,KAER,CAEJ,OAAI1C,GAEc,KADdR,EAAQrN,KAAK+P,WAAWlC,EAAOwC,EAAMD,MAE1B/C,EAKK,KAAhBrN,KAAKuO,OACEvO,KAAKsO,IAELtO,KAAKgL,WAAW,0BAA4BhL,KAAKwF,SAAW,GAAK,yBAA2BxF,KAAK0N,eAAgB,CACpHE,KAAM,GACNP,MAAO,KACPS,KAAM9N,KAAKwF,UAGvB,EAGJgI,IAAI,WACI,IAAIR,EAAIhN,KAAK4P,OACb,OAAI5C,GAGOhN,KAAKwN,KAEpB,EAGJgD,MAAM,SAAeC,GACbzQ,KAAK4O,eAAepC,KAAKiE,EAC7B,EAGJC,SAAS,WAED,OADQ1Q,KAAK4O,eAAepO,OAAS,EAC7B,EACGR,KAAK4O,eAAerB,MAEpBvN,KAAK4O,eAAe,EAEnC,EAGJ0B,cAAc,WACN,OAAItQ,KAAK4O,eAAepO,QAAUR,KAAK4O,eAAe5O,KAAK4O,eAAepO,OAAS,GACxER,KAAK2Q,WAAW3Q,KAAK4O,eAAe5O,KAAK4O,eAAepO,OAAS,IAAI6P,MAErErQ,KAAK2Q,WAAoB,QAAEN,KAE1C,EAGJO,SAAS,SAAkBrI,GAEnB,OADAA,EAAIvI,KAAK4O,eAAepO,OAAS,EAAIiI,KAAKoI,IAAItI,GAAK,KAC1C,EACEvI,KAAK4O,eAAerG,GAEpB,SAEf,EAGJuI,UAAU,SAAmBL,GACrBzQ,KAAKwQ,MAAMC,EACf,EAGJM,eAAe,WACP,OAAO/Q,KAAK4O,eAAepO,MAC/B,EACJkM,QAAS,CAAC,oBAAmB,GAC7BrH,cAAe,SAAmBJ,EAAG+L,EAAIC,EAA0BC,GAEnE,OAAOD,GACP,KAAK,EACL,MACA,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,EAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,EAAE,OAAO,GAEd,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,MAAO,KAEf,KAAK,GAAG,MAAO,KAEf,KAAK,GAAG,MAAO,IAEf,KAAK,GAAG,MAAO,IAEf,KAAK,GAAmD,OAAhDD,EAAI1L,OAAS0L,EAAI1L,OAAO4J,OAAO,EAAE8B,EAAIzL,OAAO,GAAW,GAE/D,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,GAEf,KAAK,GAAG,OAAO,EAEf,KAAK,GAAG,MAAO,UAGf,EACA8K,MAAO,CAAC,YAAY,oCAAoC,aAAa,cAAc,cAAc,oIAAoI,wDAAwD,qCAAqC,WAAW,WAAW,UAAU,UAAU,WAAW,WAAW,UAAU,UAAU,kDAAkD,sBAAsB,qBAAqB,UAAU,WAC7fM,WAAY,CAAC,QAAU,CAAC,MAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,WAAY,KAKnG,SAASS,IACPpR,KAAKiF,GAAK,CAAC,CACb,CAEA,OALA9E,EAAO8L,MAAQA,EAIfmF,EAAOjF,UAAYhM,EAAOA,EAAOiR,OAASA,EACnC,IAAIA,CACX,CA7kBc,GA+kBdxR,EAAOD,QAAU,CAACQ,OAAQA,E;;;;;;;;;CC7oB1B,WACE,IAAIuR,EAAsBC,EAAmBC,EAAMC,EAAoBC,EAAqBpJ,EAAIqJ,EAAwBC,EAAQC,EAAWC,EAAYC,EAAcC,EAAeC,EAAWC,EAASC,EAAelS,EAAGmS,EAAmBC,EAAoBC,EAAgBC,EAAkBC,EAAaC,EAAKC,EAAMxS,EAAGyS,EAAgBC,EAC5UC,EAAY9I,OAAOgC,UAAUC,eAC7B8G,EAAY,SAASC,EAAOC,GAAU,IAAK,IAAInJ,KAAOmJ,EAAcH,EAAUlH,KAAKqH,EAAQnJ,KAAMkJ,EAAMlJ,GAAOmJ,EAAOnJ,IAAQ,SAASoJ,IAASrT,KAAKsT,YAAcH,CAAO,CAAqG,OAAnGE,EAAKlH,UAAYiH,EAAOjH,UAAWgH,EAAMhH,UAAY,IAAIkH,EAAMF,EAAMI,UAAYH,EAAOjH,UAAkBgH,CAAO,EAgY9R,IAAK9S,KA1WL+R,EAAgB,CACdoB,QArBF5B,EAAO,CAGL6B,eAAgB,UAChBC,cAAe,SACfC,aAAc,QACdC,eAAgB,UAChBC,YAAa,OAGbC,WAAY,QACZC,UAAW,OACXC,cAAe,WACfC,YAAa,SAGbC,sBAAuB,EACvBC,0BAA2B,IAIdR,aACbS,aAAcxC,EAAKsC,sBACnBG,KAAMzC,EAAKkC,WACXQ,QAAS,EACTC,eAAgB,EAChBC,gBAAY,GAMdvC,EAAY,SAAS3J,EAAGC,GACtB,OAAOE,KAAKgM,IAAI,EAAGhM,KAAKiM,IAAIpM,EAAGC,EAAI,GACrC,EAEA4J,EAAe,SAAS7J,EAAGC,GAGzB,OAFAD,GAAQC,GACA,IAAGD,GAAKC,GACTD,CACT,EAEA4J,EAAa,SAAS5J,EAAGC,GACvB,IAAIoM,EAIJ,OAFArM,EAAI6J,EAAa7J,EADjBqM,EAAS,GAAKpM,EAAI,KAEVA,EAAI,IAAGD,EAAIqM,EAASrM,GACrBA,CACT,EAQAoJ,EAAwB,WAEtB,SAASA,EAAqBkD,EAAOC,GAGnC,GAFA7U,KAAK4U,MAAQA,EAAM9I,MAAM,GACzB9L,KAAKQ,OAASR,KAAK4U,MAAMpU,SACnBR,KAAK8U,WAAa,CACtBC,MAAO/U,KAAKgV,gBACZC,KAAMjV,KAAKkV,eACXC,SAAUnV,KAAKoV,mBACfC,OAAQrV,KAAKsV,kBACbT,EAAOR,OACP,KAAM,iBAAmBQ,EAAOR,IAEpC,CA8BA,OA5BA3C,EAAqBvF,UAAUoJ,gBAAkB,SAASjN,GACxD,OAAK,GAAKA,GAAKA,EAAItI,KAAKQ,OACfR,KAAK4U,MAAMtM,GAEXtI,KAAK8U,WAAWxM,EAE3B,EAEAoJ,EAAqBvF,UAAU6I,gBAAkB,SAAS1M,GACxD,OAAOtI,KAAK4U,MAAM3C,EAAU3J,EAAGtI,KAAKQ,QACtC,EAEAkR,EAAqBvF,UAAU+I,eAAiB,SAAS5M,GACvD,OAAO,CACT,EAEAoJ,EAAqBvF,UAAUiJ,mBAAqB,SAAS9M,GAC3D,OAAOtI,KAAK4U,MAAMzC,EAAa7J,EAAGtI,KAAKQ,QACzC,EAEAkR,EAAqBvF,UAAUmJ,iBAAmB,SAAShN,GACzD,OAAOtI,KAAK4U,MAAM1C,EAAW5J,EAAGtI,KAAKQ,QACvC,EAEAkR,EAAqBvF,UAAUqJ,YAAc,SAASC,GACpD,KAAM,4EACR,EAEO/D,CAET,CA7CwB,GA+CxBI,EAAuB,SAAS4D,GAI9B,SAAS5D,IACPA,EAAoByB,UAAUD,YAAYjF,MAAMrO,KAAMgM,UACxD,CAMA,OAVAkH,EAAUpB,EAAqB4D,GAM/B5D,EAAoB3F,UAAUqJ,YAAc,SAASC,GACnD,OAAOzV,KAAKuV,gBAAgB9M,KAAKkN,MAAMF,GACzC,EAEO3D,CAET,CAduB,CAcpBJ,GAEHG,EAAsB,SAAS6D,GAI7B,SAAS7D,IACPA,EAAmB0B,UAAUD,YAAYjF,MAAMrO,KAAMgM,UACvD,CASA,OAbAkH,EAAUrB,EAAoB6D,GAM9B7D,EAAmB1F,UAAUqJ,YAAc,SAASC,GAClD,IAAIpV,EAGJ,OAAQ,GADRoV,GADApV,EAAIoI,KAAKmN,MAAMH,KAEEzV,KAAKuV,gBAAgBlV,GAAKoV,EAAIzV,KAAKuV,gBAAgBlV,EAAI,EAC1E,EAEOwR,CAET,CAjBsB,CAiBnBH,GAEHC,EAAqB,SAAS+D,GAI5B,SAAS/D,EAAkBiD,EAAOC,GAChC7U,KAAK6V,cAAgB,EAAIpN,KAAKgM,KAAK,EAAGhM,KAAKiM,IAAI,EAAGG,EAAOT,eACzDzC,EAAkB4B,UAAUD,YAAYjF,MAAMrO,KAAMgM,UACtD,CAiBA,OAtBAkH,EAAUvB,EAAmB+D,GAO7B/D,EAAkBxF,UAAU2J,WAAa,SAASzV,GAChD,OAAOL,KAAK6V,eAAiB7V,KAAKuV,gBAAgBlV,EAAI,GAAKL,KAAKuV,gBAAgBlV,EAAI,IAAM,CAC5F,EAEAsR,EAAkBxF,UAAUqJ,YAAc,SAASC,GACjD,IAAIpV,EAAG0V,EAAG9I,EAAG+I,EAAIC,EAOjB,OANA5V,EAAIoI,KAAKmN,MAAMH,GACfM,EAAI,CAAC/V,KAAK8V,WAAWzV,GAAIL,KAAK8V,WAAWzV,EAAI,KAKrC,GADR4V,GAFAR,GAAKpV,IACL2V,EAAKP,EAAIA,IAEQ,EAAIO,EAAK,IAJ1B/I,EAAI,CAACjN,KAAKuV,gBAAgBlV,GAAIL,KAAKuV,gBAAgBlV,EAAI,KAItB,IAAM4V,EAAK,EAAID,EAAKP,GAAKM,EAAE,KAAO,EAAIE,EAAK,EAAID,GAAM/I,EAAE,IAAMgJ,EAAKD,GAAMD,EAAE,EAC7G,EAEOpE,CAET,CA1BqB,CA0BlBD,GAEHmB,EAAMpK,KAAKoK,IAAKnK,EAAKD,KAAKC,GAE1BoK,EAAO,SAASoD,GACd,OAAU,IAANA,EACK,EAEArD,EAAInK,EAAKwN,IAAMxN,EAAKwN,EAE/B,EAEA1D,EAAoB,SAAS2D,GAC3B,OAAO,SAASD,GACd,OAAOpD,EAAKoD,EAAIC,EAClB,CACF,EAEAzD,EAAiB,SAAS0D,GACxB,OAAO,SAASF,GACd,OAAOpD,EAAKoD,GAAKE,EAAOF,EAC1B,CACF,EAEAnE,EAA0B,SAAS2D,GAIjC,SAAS3D,EAAuB6C,EAAOC,GAGrC,GAFA9C,EAAuBwB,UAAUD,YAAYjF,MAAMrO,KAAMgM,WACzDhM,KAAKmW,EAAItB,EAAON,gBACXM,EAAOL,WAAY,KAAM,yBAC9BxU,KAAKqW,OAAS3D,EAAemC,EAAOL,WACtC,CAYA,OAnBAtB,EAAUnB,EAAwB2D,GASlC3D,EAAuB5F,UAAUqJ,YAAc,SAASC,GACtD,IAAIpV,EAAGkI,EAAG+N,EAAKC,EAAMC,EAGrB,IADAF,EAAM,EACD/N,EAAIgO,GAFTlW,EAAIoI,KAAKmN,MAAMH,IAEKzV,KAAKmW,EAAI,EAAGK,EAAQnW,EAAIL,KAAKmW,EAAGI,GAAQC,EAAQjO,GAAKiO,EAAQjO,GAAKiO,EAAOD,GAAQC,EAAQjO,IAAMA,IACjH+N,GAAOtW,KAAKqW,OAAOZ,EAAIlN,GAAKvI,KAAKuV,gBAAgBhN,GAEnD,OAAO+N,CACT,EAEOvE,CAET,CAvB0B,CAuBvBL,GAEHW,EAAY,SAASoE,EAAKnO,GACxB,IAAIoO,EAAKC,EAAIC,EAAMC,EAEnB,IADAA,EAAW,GACNF,EAAK,EAAGC,EAAOH,EAAIjW,OAAQmW,EAAKC,EAAMD,IACzCD,EAAMD,EAAIE,GACVE,EAASrK,KAAKkK,EAAIpO,IAEpB,OAAOuO,CACT,EAEApE,EAAqB,SAASqE,EAAGC,EAAWC,GAC1C,IAAIC,EAAaC,EACjB,MAAwB,QAApBF,EAAWrJ,KACNmJ,GAEPG,EAAcF,GAAaC,EAAW,GAAKA,EAAW,IACtDE,EAAcF,EAAW,GAClB,SAASvB,GACd,OAAOqB,EAAEG,GAAexB,EAAIyB,GAC9B,EAEJ,EAEA5E,EAAU,SAAS4D,GACjB,OAAO/L,OAAOgC,UAAU5F,SAASwF,KAAKmK,GAAGpK,MAAM,GAAoB,EACrE,EAEAiH,EAAiB,SAASxK,GACxB,GAAI4O,MAAM5O,GAAI,KAAM,wBACpB,GAAmB,WAAf+J,EAAQ/J,GAAiB,KAAM,+BACnC,IAAK6O,SAAS7O,GAAI,KAAM,4BAC1B,EAEAyK,EAAiB,SAAS1S,EAAG+W,GAC3B,IAAI9O,EAAGoO,EAAIC,EACX,GAAmB,UAAftE,EAAQhS,GAAgB,KAAM,+BAClC,GAAIA,EAAEE,SAAW6W,EAAW,KAAM,2CAClC,IAAKV,EAAK,EAAGC,EAAOtW,EAAEE,OAAQmW,EAAKC,EAAMD,IACvCpO,EAAIjI,EAAEqW,GACN5D,EAAexK,EAEnB,EAEAgK,EAAgB,SAAShK,GACvB,MAAuB,WAAf+J,EAAQ/J,IAAoB6O,SAAS7O,KAAO4O,MAAM5O,EAC5D,EAEAoK,EAAmB,SAAS2E,GAC1B,IAAIC,EAEJ,OADAA,EAAa,uDACLjF,EAAQgF,IACd,IAAK,SACH,IAAK/E,EAAc+E,GAAI,MAAMC,EAC7BD,EAAI,CAAC,EAAGA,GACR,MACF,IAAK,QACH,GAAiB,IAAbA,EAAE9W,OAAc,MAAM+W,EAC1B,IAAMhF,EAAc+E,EAAE,MAAO/E,EAAc+E,EAAE,IAAM,MAAMC,EACzD,MACF,QACE,MAAMA,EAEV,OAAOD,CACT,EAEA1E,EAAc,SAAS4E,GACrB,IAAIC,EAAMpX,EAAGC,EAEb,IAAKD,KADLoX,EAAO,CAAC,EACED,EACHvE,EAAUlH,KAAKyL,EAAKnX,KACzBC,EAAIkX,EAAInX,GACRoX,EAAKpX,GAAKC,GAEZ,OAAOmX,CACT,EAEAzF,EAAS,SAASyE,EAAK5B,GACrB,IAAI6C,EAAeL,EAAW/O,EAAGqP,EAAcC,EAAmBC,EAAexX,EAAGkI,EAAGuP,EAAYC,EAAYzX,EAS/G,IAAKD,KARS,MAAVwU,IAAgBA,EAAS,CAAC,GAC9BiD,EAAa,CAAC,EACdjD,EAASjC,EAAYiC,GACrBiD,EAAWjD,OAASjC,EAAYiC,GACV,MAAlBA,EAAOP,UAAiBO,EAAOP,QAAUO,EAAOF,QACvB,MAAzBE,EAAON,iBACTM,EAAON,eAAiBM,EAAOmD,mBAEvB5F,EACHa,EAAUlH,KAAKqG,EAAe/R,KACnCC,EAAI8R,EAAc/R,GACD,MAAbwU,EAAOxU,KAAYwU,EAAOxU,GAAKC,IAErC,KAAMsX,EAAoB,CACxBK,QAASnG,EACToG,OAAQrG,EACRsG,MAAOxG,EACPyG,QAASrG,EACTe,KAAMf,GACN8C,EAAOrB,SACP,KAAM,mBAAqBqB,EAAOrB,OAKpC,GAHsB,YAAlBqB,EAAOrB,SACTqB,EAAOL,WAAahC,EAAkBqC,EAAON,iBAE3CkC,EAAIjW,OAAS,EAAG,KAAM,wCA0D1B,IAAKH,KAzDLyX,EAAWO,MAAQ5B,EAAIjW,OACvBuX,EAAc,WACZ,IAAIpB,EAAI2B,EAAI1B,EAAM2B,EAClB,OAAQjG,EAAQmE,EAAI,KAClB,IAAK,SAEH,GADAqB,EAAWT,UAAY,SACnBrF,EAAOwG,eACT,IAAK7B,EAAK,EAAGC,EAAOH,EAAIjW,OAAQmW,EAAKC,EAAMD,IACzCpO,EAAIkO,EAAIE,GACR5D,EAAexK,GAInB,OADAoP,EAAe,IAAIC,EAAkBnB,EAAK5B,GACnC,SAASY,GACd,OAAOkC,EAAanC,YAAYC,EAClC,EACF,IAAK,QAEH,GADAqC,EAAWT,UAAYA,EAAYZ,EAAI,GAAGjW,QACrC6W,EAAW,KAAM,4BACtB,GAAIrF,EAAOwG,eACT,IAAKF,EAAK,EAAGC,EAAQ9B,EAAIjW,OAAQ8X,EAAKC,EAAOD,IAC3ChY,EAAImW,EAAI6B,GACRtF,EAAe1S,EAAG+W,GAWtB,OARAQ,EAAiB,WACf,IAAIhB,EAEJ,IADAA,EAAW,GACNvO,EAAI,EAAG,GAAK+O,EAAY/O,EAAI+O,EAAY/O,EAAI+O,EAAW,GAAKA,EAAY/O,IAAMA,IACjFuO,EAASrK,KAAK,IAAIoL,EAAkBvF,EAAUoE,EAAKnO,GAAIuM,IAEzD,OAAOgC,CACT,CAPiB,GAQV,SAASpB,GACd,IAAIkC,EAAcc,EAAIC,EAAO7B,EAE7B,IADAA,EAAW,GACN4B,EAAK,EAAGC,EAAQb,EAAcrX,OAAQiY,EAAKC,EAAOD,IACrDd,EAAeE,EAAcY,GAC7B5B,EAASrK,KAAKmL,EAAanC,YAAYC,IAEzC,OAAOoB,CACT,EACF,QACE,KAAM,yBAA4BvE,EAAQmE,EAAI,IAEpD,CA5Cc,GA8CZiB,EADkB,aAAhB7C,EAAOR,KACOoC,EAAIjW,OAEJiW,EAAIjW,OAAS,EAE/BqU,EAAOP,UAAYO,EAAOP,QAAUoD,GACpCI,EAAWa,OAAShG,EAAiBkC,EAAOP,SAC5CyD,EAAatF,EAAmBsF,EAAYL,EAAeI,EAAWa,QACtEb,EAAWa,OAAOC,OAGRd,EACH7E,EAAUlH,KAAK+L,EAAYzX,KAChCC,EAAIwX,EAAWzX,GACf0X,EAAW1X,GAAKC,GAElB,OAAOyX,CACT,EAEUnG,EACHqB,EAAUlH,KAAK6F,EAAMvR,KAC1BC,EAAIsR,EAAKvR,GACT2R,EAAO3R,GAAKC,GAGd0R,EAAOwG,gBAAiB,GAEuB,OAAZ7Y,EAAmBA,EAAUyW,QAAQpE,OAASA,CAElF,GAAEjG,KAAK/L,K,oBC1ZR,UAAwDF,EAAO,CAAC,QAAY,0BAAF,EAA4G,SAASkN,GAAG,aAAa,SAASyI,EAAEzI,EAAEyI,EAAElN,GAAG,IAAI,IAAIsQ,GAAG7L,EAAE8L,WAAW,GAAGxQ,EAAEC,EAAE/H,OAAO8H,EAAEuQ,EAAEA,IAAI,CAAC,IAAIzY,EAAEmI,EAAEwQ,WAAWF,GAAG,GAAG,IAAIzY,EAAE4M,EAAEgM,SAASvD,IAAIrV,IAAI,EAAE,IAAI,QAAQ,GAAG,KAAKA,EAAE4M,EAAEgM,SAASvD,IAAIrV,IAAI,EAAE,GAAG,KAAK4M,EAAEgM,SAASvD,IAAIrV,IAAI,EAAE,GAAG,UAAU,GAAG,MAAMA,EAAE4M,EAAEgM,SAASvD,IAAIrV,IAAI,GAAG,GAAG,KAAK4M,EAAEgM,SAASvD,IAAIrV,IAAI,EAAE,GAAG,KAAK4M,EAAEgM,SAASvD,IAAIrV,IAAI,EAAE,GAAG,SAAS,CAAC,KAAK,QAAQA,GAAG,MAAM,IAAIiL,MAAM,iBAAiBjL,GAAG4M,EAAEgM,SAASvD,IAAIrV,IAAI,GAAG,EAAE,KAAK4M,EAAEgM,SAASvD,IAAIrV,IAAI,GAAG,GAAG,KAAK4M,EAAEgM,SAASvD,IAAIrV,IAAI,EAAE,GAAG,KAAK4M,EAAEgM,SAASvD,IAAIrV,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,SAASmI,EAAEyE,GAAG,IAAI,IAAIyI,EAAE,EAAElN,EAAE,EAAEsQ,EAAE7L,EAAExM,OAAOqY,EAAEtQ,EAAEA,IAAI,CAAC,IAAID,EAAE0E,EAAE+L,WAAWxQ,GAAG,GAAG,IAAID,EAAEmN,GAAG,OAAO,GAAG,KAAKnN,EAAEmN,GAAG,OAAO,GAAG,MAAMnN,EAAEmN,GAAG,MAAM,CAAC,KAAK,QAAQnN,GAAG,MAAM,IAAI+C,MAAM,iBAAiB/C,GAAGmN,GAAG,CAAC,CAAC,CAAC,OAAOA,CAAC,CAAC,SAASoD,EAAE7L,EAAE1E,EAAElI,GAAG,IAAI+V,SAASnJ,EAAE,GAAG,WAAWmJ,EAAE,CAAY,GAAG,IAAV8C,EAAE1Q,EAAEyE,IAAW,OAAO1E,EAAE0Q,SAAS5Y,EAAE,IAAI6Y,GAAGxD,EAAEnN,EAAElI,EAAE,EAAE4M,GAAG,EAAEiM,EAAE,GAAG,IAAIA,EAAE,OAAO3Q,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE0Q,SAAS5Y,EAAE,EAAE6Y,GAAGxD,EAAEnN,EAAElI,EAAE,EAAE4M,GAAG,EAAEiM,EAAE,GAAG,MAAMA,EAAE,OAAO3Q,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE4Q,UAAU9Y,EAAE,EAAE6Y,GAAGxD,EAAEnN,EAAElI,EAAE,EAAE4M,GAAG,EAAEiM,EAAE,GAAG,WAAWA,EAAE,OAAO3Q,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE6Q,UAAU/Y,EAAE,EAAE6Y,GAAGxD,EAAEnN,EAAElI,EAAE,EAAE4M,GAAG,EAAEiM,CAAC,CAAC,GAAGjM,aAAaoM,WAAW,CAAC,IAAIH,EAAEjM,EAAE8L,WAAWxB,EAAE,IAAI8B,WAAW9Q,EAAE+Q,QAAQ,GAAG,IAAIJ,EAAE,OAAO3Q,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE0Q,SAAS5Y,EAAE,EAAE6Y,GAAG3B,EAAE3Q,IAAIqG,EAAE5M,EAAE,GAAG,EAAE6Y,EAAE,GAAG,MAAMA,EAAE,OAAO3Q,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE4Q,UAAU9Y,EAAE,EAAE6Y,GAAG3B,EAAE3Q,IAAIqG,EAAE5M,EAAE,GAAG,EAAE6Y,EAAE,GAAG,WAAWA,EAAE,OAAO3Q,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE6Q,UAAU/Y,EAAE,EAAE6Y,GAAG3B,EAAE3Q,IAAIqG,EAAE5M,EAAE,GAAG,EAAE6Y,CAAC,CAAC,GAAG,WAAW9C,EAAE,CAAC,IAAIiB,SAASpK,GAAG,MAAM,IAAI3B,MAAM,sBAAsB2B,GAAG,GAAGvE,KAAKmN,MAAM5I,KAAKA,EAAE,OAAO1E,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAEgR,WAAWlZ,EAAE,EAAE4M,GAAG,EAAE,GAAGA,GAAG,EAAE,CAAC,GAAG,IAAIA,EAAE,OAAO1E,EAAE0Q,SAAS5Y,EAAE4M,GAAG,EAAE,GAAG,IAAIA,EAAE,OAAO1E,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE0Q,SAAS5Y,EAAE,EAAE4M,GAAG,EAAE,GAAG,MAAMA,EAAE,OAAO1E,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE4Q,UAAU9Y,EAAE,EAAE4M,GAAG,EAAE,GAAG,WAAWA,EAAE,OAAO1E,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAE6Q,UAAU/Y,EAAE,EAAE4M,GAAG,EAAE,MAAM,IAAI3B,MAAM,oBAAoB2B,EAAEzG,SAAS,IAAI,CAAC,GAAGyG,IAAI,GAAG,OAAO1E,EAAEiR,QAAQnZ,EAAE4M,GAAG,EAAE,GAAGA,IAAI,IAAI,OAAO1E,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAEiR,QAAQnZ,EAAE,EAAE4M,GAAG,EAAE,GAAGA,IAAI,MAAM,OAAO1E,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAEkR,SAASpZ,EAAE,EAAE4M,GAAG,EAAE,GAAGA,IAAI,WAAW,OAAO1E,EAAE0Q,SAAS5Y,EAAE,KAAKkI,EAAEmR,SAASrZ,EAAE,EAAE4M,GAAG,EAAE,MAAM,IAAI3B,MAAM,yBAAyB2B,GAAGzG,SAAS,IAAI2I,OAAO,GAAG,CAAC,GAAG,OAAOlC,EAAE,OAAO1E,EAAE0Q,SAAS5Y,EAAE,KAAK,EAAE,GAAG,YAAY+V,EAAE,OAAO7N,EAAE0Q,SAAS5Y,EAAE4M,EAAE,IAAI,KAAK,EAAE,GAAG,WAAWmJ,EAAE,CAAC,IAAMW,EAAE,EAAEhH,EAAElG,MAAM8P,QAAQ1M,GAAG,GAAG8C,EAAEmJ,EAAEjM,EAAExM,WAAW,CAAC,IAAImZ,EAAExP,OAAOyP,KAAK5M,GAAGiM,EAAEU,EAAEnZ,MAAM,CAAO,GAAG,GAAGyY,GAAG3Q,EAAE0Q,SAAS5Y,EAAE6Y,GAAGnJ,EAAE,IAAI,MAAMgH,EAAE,GAAG,MAAMmC,GAAG3Q,EAAE0Q,SAAS5Y,EAAE0P,EAAE,IAAI,KAAKxH,EAAE4Q,UAAU9Y,EAAE,EAAE6Y,GAAGnC,EAAE,GAAG,WAAWmC,IAAI3Q,EAAE0Q,SAAS5Y,EAAE0P,EAAE,IAAI,KAAKxH,EAAE6Q,UAAU/Y,EAAE,EAAE6Y,GAAGnC,EAAE,GAAGhH,EAAE,IAAI,IAAIvP,EAAE,EAAE0Y,EAAE1Y,EAAEA,IAAIuW,GAAG+B,EAAE7L,EAAEzM,GAAG+H,EAAElI,EAAE0W,QAAQ,IAAQvW,EAAE,EAAE0Y,EAAE1Y,EAAEA,IAAI,CAAC,IAAID,EAAEqZ,EAAEpZ,GAAGuW,GAAG+B,EAAEvY,EAAEgI,EAAElI,EAAE0W,GAAGA,GAAG+B,EAAE7L,EAAE1M,GAAGgI,EAAElI,EAAE0W,EAAE,CAAC,OAAOA,CAAC,CAAC,MAAM,IAAIzL,MAAM,gBAAgB8K,EAAE,CAAC,SAAS7N,EAAE0E,GAAG,IAAIyI,SAASzI,EAAE,GAAG,WAAWyI,EAAE,CAAY,GAAG,IAAVoD,EAAEtQ,EAAEyE,IAAW,OAAO,EAAE6L,EAAE,GAAG,IAAIA,EAAE,OAAO,EAAEA,EAAE,GAAG,MAAMA,EAAE,OAAO,EAAEA,EAAE,GAAG,WAAWA,EAAE,OAAO,EAAEA,CAAC,CAAC,GAAG7L,aAAaoM,WAAW,CAAoB,GAAG,KAAlBP,EAAE7L,EAAE8L,YAAoB,OAAO,EAAED,EAAE,GAAG,MAAMA,EAAE,OAAO,EAAEA,EAAE,GAAG,WAAWA,EAAE,OAAO,EAAEA,CAAC,CAAC,GAAG,WAAWpD,EAAE,CAAC,GAAGhN,KAAKmN,MAAM5I,KAAKA,EAAE,OAAO,EAAE,GAAGA,GAAG,EAAE,CAAC,GAAG,IAAIA,EAAE,OAAO,EAAE,GAAG,IAAIA,EAAE,OAAO,EAAE,GAAG,MAAMA,EAAE,OAAO,EAAE,GAAG,WAAWA,EAAE,OAAO,EAAE,MAAM,IAAI3B,MAAM,oBAAoB2B,EAAEzG,SAAS,IAAI,CAAC,GAAGyG,IAAI,GAAG,OAAO,EAAE,GAAGA,IAAI,IAAI,OAAO,EAAE,GAAGA,IAAI,MAAM,OAAO,EAAE,GAAGA,IAAI,WAAW,OAAO,EAAE,MAAM,IAAI3B,MAAM,uBAAuB2B,EAAEzG,SAAS,IAAI2I,OAAO,GAAG,CAAC,GAAG,YAAYuG,GAAG,OAAOzI,EAAE,OAAO,EAAE,GAAG,WAAWyI,EAAE,CAAC,IAAIoD,EAAEzY,EAAE,EAAE,GAAGwJ,MAAM8P,QAAQ1M,GAAG,CAAC6L,EAAE7L,EAAExM,OAAO,IAAI,IAAI2V,EAAE,EAAE0C,EAAE1C,EAAEA,IAAI/V,GAAGkI,EAAE0E,EAAEmJ,GAAG,KAAK,CAAC,IAAI8C,EAAE9O,OAAOyP,KAAK5M,GAAc,IAAX6L,EAAEI,EAAEzY,OAAe2V,EAAE,EAAE0C,EAAE1C,EAAEA,IAAI,CAAC,IAAImB,EAAE2B,EAAE9C,GAAG/V,GAAGkI,EAAEgP,GAAGhP,EAAE0E,EAAEsK,GAAG,CAAC,CAAC,GAAG,GAAGuB,EAAE,OAAO,EAAEzY,EAAE,GAAG,MAAMyY,EAAE,OAAO,EAAEzY,EAAE,GAAG,WAAWyY,EAAE,OAAO,EAAEzY,EAAE,MAAM,IAAIiL,MAAM,8BAA8BwN,EAAEtS,SAAS,IAAI,CAAC,MAAM,IAAI8E,MAAM,gBAAgBoK,EAAE,CAAC,SAASrV,EAAE4M,GAAG,IAAIyI,EAAE,IAAIoE,YAAYvR,EAAE0E,IAAsB,OAAO6L,EAAE7L,EAAzB,IAAI8M,SAASrE,GAAgB,GAAG,IAAI2D,WAAW3D,EAAE,CAAC,SAASU,EAAEnJ,EAAEyI,EAAElN,GAAG,OAAOkN,EAAE,IAAIzI,EAAEyI,EAAE4D,OAAO5D,EAAEsE,WAAWtE,EAAEqD,YAAYvQ,GAAG,SAAI,CAAM,CAAC,SAAS0Q,EAAEjM,GAAG,OAAOmJ,EAAE2D,SAAS9M,EAAE,CAAC,SAASsK,EAAEtK,GAAG,OAAOmJ,EAAEiD,WAAWpM,EAAE,CAAC,SAAS8J,EAAE9J,GAAG,OAAOmJ,EAAE6D,UAAUhN,EAAE,CAAC,SAAS8C,EAAE9C,GAAG,OAAOmJ,EAAE8D,WAAWjN,EAAE,EAAE,CAAC,SAAS2M,EAAE3M,GAAG,OAAOmJ,EAAE+D,aAAalN,EAAE,EAAE,CAAC,SAASzM,EAAEyM,EAAEyI,GAAG,IAAIlN,EAAEyE,EAAExM,OAAO,EAAEiV,IAAIA,EAAE,IAAI0E,WAAW5R,IAAI,IAAI,IAAIsQ,EAAE,EAAEvQ,EAAE,EAAEC,EAAEsQ,IAAIA,EAAEvQ,GAAG,EAAEmN,EAAEoD,GAAG7L,EAAE1E,IAAI,EAAE0E,EAAE1E,EAAE,IAAI,EAAE,OAAOmN,CAAC,CAAC,SAASnV,EAAE0M,EAAEyI,GAAG,IAAIlN,EAAEyE,EAAExM,OAAOiV,IAAIA,EAAE,IAAI2D,WAAW,EAAE7Q,IAAI,IAAI,IAAIsQ,EAAEI,EAAExD,GAAGnN,EAAE,EAAEC,EAAED,IAAIA,EAAEuQ,EAAEW,SAAS,EAAElR,EAAE0E,EAAE1E,IAAI,OAAOgP,EAAE7B,EAAE,CAAC,SAAS2E,EAAEpN,EAAEyI,GAAG,IAAIlN,EAAEyE,EAAExM,OAAO,EAAEiV,IAAIA,EAAE,IAAIwE,WAAW1R,IAAI,IAAI,IAAIsQ,EAAE,EAAEvQ,EAAE,EAAEC,EAAEsQ,IAAIA,EAAEvQ,GAAG,EAAEmN,EAAEoD,GAAG7L,EAAE1E,IAAI,GAAG0E,EAAE1E,EAAE,IAAI,GAAG0E,EAAE1E,EAAE,IAAI,EAAE0E,EAAE1E,EAAE,IAAI,EAAE,OAAOmN,CAAC,CAAC,SAAS4E,EAAErN,EAAEyI,GAAG,IAAIlN,EAAEyE,EAAExM,OAAOiV,IAAIA,EAAE,IAAI2D,WAAW,EAAE7Q,IAAI,IAAI,IAAIsQ,EAAEI,EAAExD,GAAGnN,EAAE,EAAEC,EAAED,IAAIA,EAAEuQ,EAAEY,SAAS,EAAEnR,EAAE0E,EAAE1E,IAAI,OAAOgP,EAAE7B,EAAE,CAAC,SAAS6E,EAAEtN,EAAEyI,GAAG,IAAIlN,EAAEyE,EAAExM,OAAOiV,IAAIA,EAAE,IAAIyE,aAAa3R,EAAE,IAAI,IAAI,IAAIsQ,EAAEI,EAAExD,GAAGnN,EAAE2Q,EAAEjM,GAAG5M,EAAE,EAAE+V,EAAE,EAAEmB,EAAE/O,EAAE,EAAE+O,EAAElX,IAAIA,EAAE+V,GAAG,EAAE0C,EAAE0B,WAAWpE,EAAE7N,EAAEkS,WAAWrE,IAAG,GAAI,OAAOV,CAAC,CAAC,SAASgF,EAAEzN,EAAEyI,EAAElN,GAAG,IAAIsQ,EAAE7L,EAAExM,OAAO8H,EAAE,EAAEmN,EAAElN,IAAIA,EAAE,IAAI2R,aAAarB,IAAI,IAAI,IAAIzY,EAAE,EAAEyY,EAAEzY,IAAIA,EAAEmI,EAAEnI,GAAG4M,EAAE5M,GAAGkI,EAAE,OAAOC,CAAC,CAAC,SAASwN,EAAE/I,EAAEyI,EAAElN,GAAG,IAAIsQ,EAAE7L,EAAExM,OAAO+H,IAAIA,EAAE,IAAI0R,WAAWpB,IAAI,IAAI,IAAIvQ,EAAE,EAAEuQ,EAAEvQ,IAAIA,EAAEC,EAAED,GAAGG,KAAKkN,MAAM3I,EAAE1E,GAAGmN,GAAG,OAAOlN,CAAC,CAAC,SAAS0E,EAAED,EAAEyI,GAAG,IAAIlN,EAAEsQ,EAAE,IAAIpD,EAAE,CAAC,IAAInN,EAAE,EAAE,IAAIC,EAAE,EAAEsQ,EAAE7L,EAAExM,OAAOqY,EAAEtQ,EAAEA,GAAG,EAAED,GAAG0E,EAAEzE,EAAE,GAAGkN,EAAE,IAAIzI,EAAEsG,YAAYhL,EAAE,CAAC,IAAIlI,EAAE,EAAE,IAAImI,EAAE,EAAEsQ,EAAE7L,EAAExM,OAAOqY,EAAEtQ,EAAEA,GAAG,EAAE,IAAI,IAAI4N,EAAEnJ,EAAEzE,GAAG0Q,EAAEjM,EAAEzE,EAAE,GAAG+O,EAAE,EAAE2B,EAAE3B,IAAIA,EAAE7B,EAAErV,GAAG+V,IAAI/V,EAAE,OAAOqV,CAAC,CAAC,SAASiF,EAAE1N,GAAG,GAAG,IAAIA,EAAExM,OAAO,OAAO,IAAIyZ,WAAW,IAAIxE,EAAElN,EAAEsQ,EAAE,EAAE,IAAIpD,EAAE,EAAElN,EAAEyE,EAAExM,OAAO+H,EAAEkN,IAAIA,EAAEzI,EAAEyI,EAAE,KAAKzI,EAAEyI,KAAKoD,GAAG,GAAG,IAAIvQ,EAAE,IAAI2R,WAAWpB,GAAGzY,EAAE,EAAE+V,EAAE,EAAE,IAAIV,EAAE,EAAElN,EAAEyE,EAAExM,OAAO+H,EAAEkN,IAAIA,EAAEzI,EAAEyI,EAAE,KAAKzI,EAAEyI,IAAInN,EAAElI,GAAG4M,EAAEyI,EAAE,GAAGnN,EAAElI,EAAE,GAAG+V,EAAEA,EAAE,EAAE/V,GAAG,KAAK+V,EAAE,OAAO7N,EAAElI,GAAG4M,EAAEA,EAAExM,OAAO,GAAG8H,EAAElI,EAAE,GAAG+V,EAAE7N,CAAC,CAAC,SAASqS,EAAE3N,EAAEyI,GAAG,IAAIlN,EAAEyE,EAAExM,OAAOiV,IAAIA,EAAE,IAAIzI,EAAEsG,YAAY/K,IAAIA,IAAIkN,EAAE,GAAGzI,EAAE,IAAI,IAAI,IAAI6L,EAAE,EAAEtQ,EAAEsQ,IAAIA,EAAEpD,EAAEoD,GAAG7L,EAAE6L,GAAGpD,EAAEoD,EAAE,GAAG,OAAOpD,CAAC,CAAC,SAASmF,EAAE5N,EAAEyI,GAAG,IAAIlN,EAAEyE,EAAExM,OAAOiV,IAAIA,EAAE,IAAIzI,EAAEsG,YAAY/K,IAAIkN,EAAE,GAAGzI,EAAE,GAAG,IAAI,IAAI6L,EAAE,EAAEtQ,EAAEsQ,IAAIA,EAAEpD,EAAEoD,GAAG7L,EAAE6L,GAAG7L,EAAE6L,EAAE,GAAG,OAAOpD,CAAC,CAAC,SAASoF,EAAE7N,EAAEyI,GAAG,IAAIlN,EAAEsQ,EAAEvQ,EAAE0E,aAAagN,UAAU,IAAI,MAAM5Z,GAAGkI,EAAE,EAAE6N,EAAEnJ,EAAExM,OAAO,IAAIiV,EAAE,CAAC,IAAIwD,EAAE,EAAE,IAAI1Q,EAAE,EAAE4N,EAAE5N,IAAIA,EAAEyE,EAAEzE,GAAGD,GAAG0E,EAAEzE,GAAGnI,KAAK6Y,EAAExD,EAAE,IAAIwE,WAAWhB,EAAE,CAAC,IAAI1Q,EAAE,EAAEsQ,EAAE,EAAE1C,EAAE5N,GAAG,CAAC,IAAI,IAAI+O,EAAE,EAAEtK,EAAEzE,KAAKD,GAAG0E,EAAEzE,KAAKnI,GAAGkX,GAAGtK,EAAEzE,KAAKA,EAAE+O,GAAGtK,EAAEzE,KAAKA,EAAEkN,EAAEoD,GAAGvB,IAAIuB,CAAC,CAAC,OAAOpD,CAAC,CAAC,SAASqF,EAAE9N,EAAEyI,GAAG,IAAIlN,EAAEsQ,EAAEpD,EAAE,IAAI,MAAMnN,GAAGuQ,EAAE,EAAEzY,EAAE4M,EAAExM,OAAO2V,EAAE,EAAE,IAAI5N,EAAE,EAAEnI,EAAEmI,IAAIA,EAAc,KAAP0Q,EAAEjM,EAAEzE,MAAW4N,EAAEA,GAAG8C,IAAIJ,GAAGI,IAAI3Q,EAAE,EAAE2Q,EAAE,EAAExQ,KAAKsS,KAAK9B,EAAEJ,GAAGpQ,KAAKsS,KAAK9B,EAAE3Q,GAAG,IAAIgP,EAAE7B,EAAE,IAAIuE,UAAU7D,GAAG,IAAIgE,WAAWhE,GAAGW,EAAE,EAAE,IAAIvO,EAAE,EAAEnI,EAAEmI,IAAIA,EAAE,CAAC,IAAI0Q,EAAO,IAAPA,EAAEjM,EAAEzE,KAAS,EAAE,KAAK0Q,GAAGJ,GAAGvB,EAAER,GAAG+B,IAAI/B,EAAEmC,GAAGJ,OAAO,KAAKvQ,GAAG2Q,GAAG3B,EAAER,GAAGxO,IAAIwO,EAAEmC,GAAG3Q,EAAEgP,EAAER,GAAGmC,IAAInC,CAAC,CAAC,OAAOQ,CAAC,CAAC,SAAS0D,EAAEhO,EAAEyI,GAAG,OAAOkF,EAAE1N,EAAED,GAAGyI,EAAE,CAAC,SAASS,EAAElJ,GAAG,OAAO0N,EAAEE,EAAE5N,GAAG,CAAC,SAASiO,EAAEjO,EAAEyI,EAAElN,GAAG,OAAOkS,EAAExN,EAAED,EAAE8C,EAAEvH,IAAIkN,EAAElN,EAAE,CAAC,SAAS2S,EAAElO,EAAEyI,GAAG,OAAOiF,EAAE3E,EAAE/I,EAAEyI,GAAG,CAAC,SAAS0F,EAAEnO,EAAEyI,EAAElN,GAAG,OAAOkS,EAAEE,EAAE3N,EAAE8C,EAAEvH,IAAIkN,EAAElN,EAAE,CAAC,SAAS6S,EAAEpO,EAAEyI,EAAElN,GAAG,OAAOqS,EAAE7E,EAAE/I,EAAEyI,GAAGlN,EAAE,CAAC,SAAS8S,EAAErO,EAAEyI,EAAElN,GAAG,OAAOkS,EAAEI,EAAE7N,EAAE8C,EAAEvH,IAAIkN,EAAElN,EAAE,CAAC,SAAS+S,EAAEtO,EAAEyI,EAAElN,GAAG,IAAIsQ,EAAEgC,EAAE7N,EAAE8C,EAAEvH,IAAI,OAAO4S,EAAEtC,EAAEpD,EAAEkE,EAAEd,GAAG,CAAC,SAAS0C,EAAEvO,EAAEyI,EAAElN,GAAG,OAAOuS,EAAEM,EAAEpO,EAAEyI,GAAGlN,EAAE,CAAC,SAASlI,EAAE2M,GAAG,IAAIyI,EAAEwD,EAAEjM,GAAGzE,EAAEkN,EAAE+F,SAAS,GAAG3C,EAAEpD,EAAE+F,SAAS,GAAGlT,EAAE0E,EAAEyO,SAAS,EAAE,IAAqB,MAAM,CAAClT,EAAxByE,EAAEA,EAAEyO,SAAS,IAAe5C,EAAEvQ,EAAE,CAAC,SAASoT,EAAE1O,EAAEyI,EAAElN,EAAEsQ,GAAG,IAAIvQ,EAAE,IAAIuR,YAAY,GAAGhB,EAAEC,YAAY1Y,EAAE,IAAIgZ,WAAW9Q,GAAG6N,EAAE,IAAI2D,SAASxR,GAAG,OAAO6N,EAAEsD,SAAS,EAAEzM,GAAGmJ,EAAEsD,SAAS,EAAEhE,GAAGlN,GAAGnI,EAAEuG,IAAI4B,EAAE,GAAGnI,EAAEuG,IAAIkS,EAAE,IAAIzY,CAAC,CAAC,SAASub,EAAE3O,GAAyB,OAAO0O,EAAE,EAAzB1O,EAAExM,YAA2B,EAAlB8W,EAAEtK,GAAyB,CAAC,SAAS4O,EAAE5O,GAAyB,OAAO0O,EAAE,EAAzB1O,EAAExM,YAA2B,EAAlB6Z,EAAErN,GAAyB,CAAC,SAAS6O,EAAE7O,EAAEyI,GAAoC,OAAOiG,EAAE,EAApC1O,EAAExM,OAAOiV,EAAI4E,EAAE,CAAC5E,IAAM6B,EAAEtK,GAAoB,CAAC,SAAS8O,EAAE9O,GAA4B,OAAO0O,EAAE,EAA5B1O,EAAExM,YAA8B,EAArB6Z,EAAEK,EAAE1N,IAA0B,CAAC,SAAS+O,EAAE/O,GAA4B,OAAO0O,EAAE,EAA5B1O,EAAExM,YAA8B,EAArB6Z,EAAEnE,EAAElJ,IAA0B,CAAC,SAASgP,EAAEhP,EAAEyI,GAAuC,OAAOiG,EAAE,EAAvC1O,EAAExM,OAAS6Z,EAAE,CAAC5E,IAAM4E,EAAEa,EAAElO,EAAEyI,IAAqB,CAAC,SAASwG,EAAEjP,EAAEyI,GAAuC,OAAOiG,EAAE,GAAvC1O,EAAExM,OAAS6Z,EAAE,CAAC5E,IAAMnV,EAAEib,EAAEvO,EAAEyI,IAAsB,CAAC,SAASyG,EAAElP,GAAG,IAAIyI,EAAE,CAAC,EAAE,OAAO0G,GAAGC,SAAQ,SAAS7T,QAAG,IAASyE,EAAEzE,KAAKkN,EAAElN,GAAGyE,EAAEzE,GAAG,IAAGyE,EAAEqP,eAAe5G,EAAE4G,aAAaT,EAAE5O,EAAEqP,eAAerP,EAAEsP,gBAAgB7G,EAAE6G,cAAcX,EAAE3O,EAAEsP,gBAAgB7G,EAAE8G,WAAWN,EAAEjP,EAAEuP,WAAW,KAAK9G,EAAE+G,WAAWP,EAAEjP,EAAEwP,WAAW,KAAK/G,EAAEgH,WAAWR,EAAEjP,EAAEyP,WAAW,KAAKzP,EAAE0P,cAAcjH,EAAEiH,YAAYT,EAAEjP,EAAE0P,YAAY,MAAM1P,EAAE2P,aAAalH,EAAEkH,WAAWZ,EAAE/O,EAAE2P,aAAa3P,EAAE4P,aAAanH,EAAEmH,WAAWd,EAAE9O,EAAE4P,aAAa5P,EAAE6P,gBAAgBpH,EAAEoH,cAAcb,EAAEhP,EAAE6P,cAAc,MAAMpH,EAAEqH,YAAYf,EAAE/O,EAAE8P,aAAarH,EAAEsH,cAAcnB,EAAE5O,EAAE+P,eAAe/P,EAAEgQ,gBAAgBvH,EAAEuH,cAAcrB,EAAE3O,EAAEgQ,cAAc,IAAIhQ,EAAEiQ,cAAcxH,EAAEwH,YAAYnB,EAAE9O,EAAEiQ,cAAcjQ,EAAEkQ,oBAAoBzH,EAAEyH,kBAAkBnB,EAAE/O,EAAEkQ,oBAAoBzH,EAAE0H,YAAYtB,EAAE7O,EAAEmQ,YAAY,GAAGnQ,EAAEoQ,gBAAgB3H,EAAE2H,cAAcvB,EAAE7O,EAAEoQ,cAAc,IAAI3H,CAAC,CAAC,SAAS4H,EAAErQ,GAAG,SAASyI,EAAEzI,GAAG,IAAI,IAAIyI,EAAE,CAAC,EAAElN,EAAE,EAAEyE,EAAEzE,EAAEA,IAAekN,EAAJrV,KAASA,IAAI,OAAOqV,CAAC,CAAC,SAASlN,EAAEkN,GAAG,IAAIlN,EAAEyE,EAAEyO,SAAStF,EAAEA,EAAEV,GAAG,OAAOU,GAAGV,EAAElN,CAAC,CAAC,SAASsQ,EAAEpD,GAAG,IAAIlN,EAAEyE,EAAEyO,SAAStF,EAAEA,EAAEV,GAAGU,GAAGV,EAAE,IAAIoD,EAAE,MAAM,GAAGpD,EAAEoD,EAAE,CAAC,IAAI,IAAIvQ,EAAE,GAAGlI,EAAE,EAAEA,EAAEmI,EAAE/H,OAAOJ,GAAGyY,EAAEvQ,EAAEkE,KAAK3B,OAAOyS,aAAajP,MAAM,KAAK9F,EAAEkT,SAASrb,EAAEA,EAAEyY,KAAK,OAAOvQ,EAAEqF,KAAK,GAAG,CAAC,OAAO9C,OAAOyS,aAAajP,MAAM,KAAK9F,EAAE,CAAC,SAASD,EAAE0E,GAAG,IAAI,IAAIyI,EAAE,IAAI7L,MAAMoD,GAAGzE,EAAE,EAAEyE,EAAEzE,EAAEA,IAAIkN,EAAElN,GAAGnI,IAAI,OAAOqV,CAAC,CAAC,SAASrV,IAAI,IAAIA,EAAEkX,EAAER,EAAE9J,EAAEmJ,GAAG,GAAG,IAAK,IAAIW,GAAG,OAAOX,IAAIW,EAAE,GAAG,MAAO,IAAIA,GAAG,OAAcX,IAAIV,EAAX6B,EAAE,GAAGR,GAAW,GAAG,MAAO,IAAIA,GAAG,OAAcX,IAAI7N,EAAXgP,EAAE,GAAGR,GAAW,GAAG,MAAO,IAAIA,GAAG,OAAcX,IAAI0C,EAAXvB,EAAE,GAAGR,GAAW,GAAG,MAAO,IAAIA,GAAG,OAAO1W,EAAE6Y,EAAEsE,QAAQpH,GAAGA,IAAI/V,EAAE,OAAO0W,GAAG,KAAK,IAAI,OAAOX,IAAI,KAAK,KAAK,IAAI,OAAOA,KAAI,EAAG,KAAK,IAAI,OAAOA,KAAI,EAAG,KAAK,IAAI,OAAOmB,EAAE2B,EAAEuE,SAASrH,EAAE,GAAGA,GAAG,EAAE5N,EAAE+O,GAAG,KAAK,IAAI,OAAOA,EAAE2B,EAAEwE,UAAUtH,EAAE,GAAGA,GAAG,EAAE5N,EAAE+O,GAAG,KAAK,IAAI,OAAOA,EAAE2B,EAAEyE,UAAUvH,EAAE,GAAGA,GAAG,EAAE5N,EAAE+O,GAAG,KAAK,IAAI,OAAOlX,EAAE6Y,EAAEuB,WAAWrE,EAAE,GAAGA,GAAG,EAAE/V,EAAE,KAAK,IAAI,OAAOA,EAAE6Y,EAAE0E,WAAWxH,EAAE,GAAGA,GAAG,EAAE/V,EAAE,KAAK,IAAI,OAAOA,EAAE4M,EAAEmJ,EAAE,GAAGA,GAAG,EAAE/V,EAAE,KAAK,IAAI,OAAOA,EAAE6Y,EAAEwE,UAAUtH,EAAE,GAAGA,GAAG,EAAE/V,EAAE,KAAK,IAAI,OAAOA,EAAE6Y,EAAEyE,UAAUvH,EAAE,GAAGA,GAAG,EAAE/V,EAAE,KAAK,IAAI,OAAOA,EAAE6Y,EAAEsE,QAAQpH,EAAE,GAAGA,GAAG,EAAE/V,EAAE,KAAK,IAAI,OAAOA,EAAE6Y,EAAE2E,SAASzH,EAAE,GAAGA,GAAG,EAAE/V,EAAE,KAAK,IAAI,OAAOA,EAAE6Y,EAAEuC,SAASrF,EAAE,GAAGA,GAAG,EAAE/V,EAAE,KAAK,IAAI,OAAOkX,EAAE2B,EAAEuE,SAASrH,EAAE,GAAGA,GAAG,EAAE0C,EAAEvB,GAAG,KAAK,IAAI,OAAOA,EAAE2B,EAAEwE,UAAUtH,EAAE,GAAGA,GAAG,EAAE0C,EAAEvB,GAAG,KAAK,IAAI,OAAOA,EAAE2B,EAAEyE,UAAUvH,EAAE,GAAGA,GAAG,EAAE0C,EAAEvB,GAAG,KAAK,IAAI,OAAOA,EAAE2B,EAAEwE,UAAUtH,EAAE,GAAGA,GAAG,EAAE7N,EAAEgP,GAAG,KAAK,IAAI,OAAOA,EAAE2B,EAAEyE,UAAUvH,EAAE,GAAGA,GAAG,EAAE7N,EAAEgP,GAAG,KAAK,IAAI,OAAOA,EAAE2B,EAAEwE,UAAUtH,EAAE,GAAGA,GAAG,EAAEV,EAAE6B,GAAG,KAAK,IAAI,OAAOA,EAAE2B,EAAEyE,UAAUvH,EAAE,GAAGA,GAAG,EAAEV,EAAE6B,GAAG,MAAM,IAAIjM,MAAM,kBAAkByL,EAAEvQ,SAAS,IAAI,CAAC,IAAI4P,EAAE,EAAE8C,EAAE,IAAIa,SAAS9M,EAAEqM,QAAQ,OAAOjZ,GAAG,CAAC,SAASyd,EAAE7Q,EAAEyI,EAAElN,EAAEsQ,GAAG,OAAO7L,GAAG,KAAK,EAAE,OAAOsN,EAAE7E,GAAG,KAAK,EAAE,OAAOqB,EAAErB,GAAG,KAAK,EAAE,OAAOlV,EAAEkV,GAAG,KAAK,EAAE,OAAO2E,EAAE3E,GAAG,KAAK,EAAE,OAAO6B,EAAE7B,GAAG,KAAK,EAAE,OAAOxI,EAAEmN,EAAE3E,GAAG,IAAI2D,WAAW7Q,IAAI,KAAK,EAAE,OAAO0E,EAAEmN,EAAE3E,IAAI,KAAK,EAAE,OAAOuF,EAAEZ,EAAE3E,IAAI,KAAK,EAAE,OAAOwF,EAAEb,EAAE3E,GAAG2E,EAAEvB,GAAG,IAAI,KAAK,GAAG,OAAOyC,EAAE/a,EAAEkV,GAAG2E,EAAEvB,GAAG,IAAI,KAAK,GAAG,OAAO4B,EAAEla,EAAEkV,GAAG2E,EAAEvB,GAAG,IAAI,KAAK,GAAG,OAAOwC,EAAE9a,EAAEkV,GAAG2E,EAAEvB,GAAG,IAAI,KAAK,GAAG,OAAOwC,EAAEvE,EAAErB,GAAG2E,EAAEvB,GAAG,IAAI,KAAK,GAAG,OAAOgC,EAAEta,EAAEkV,IAAI,KAAK,GAAG,OAAOoF,EAAE/D,EAAErB,IAAI,CAAC,SAASqI,EAAE9Q,EAAEyI,GAAW,IAAIlN,GAAZkN,EAAEA,GAAG,CAAC,GAAUsI,aAAalF,EAAE,CAAC,EAAE,OAAOmF,GAAG5B,SAAQ,SAAS3G,GAAG,IAAInN,IAAEC,IAAG,IAAIA,EAAE0V,QAAQxI,GAAMrV,EAAE4M,EAAEyI,GAAGnN,QAAG,IAASlI,IAAIA,aAAagZ,WAAWP,EAAEpD,GAAGoI,EAAExP,MAAM,KAAKhO,EAAED,IAAIyY,EAAEpD,GAAGrV,EAAE,IAAGyY,CAAC,CAAC,SAASqF,EAAElR,GAAG,OAAOnC,OAAOyS,aAAajP,MAAM,KAAKrB,GAAG0C,QAAQ,MAAM,GAAG,CAAC,SAASyO,EAAEnR,EAAEyI,EAAElN,GAAW,IAAIsQ,EAAEvQ,EAAElI,EAAE+V,EAAE8C,EAAE3B,EAAER,GAAxBvO,EAAEA,GAAG,CAAC,GAAsB6V,eAAetO,EAAE2F,EAAE4I,QAAQ1E,EAAElE,EAAE6I,QAAQ/d,EAAEkV,EAAE8I,QAAQje,EAAEmV,EAAE+I,OAAOpE,EAAE3E,EAAEgJ,OAAOpE,EAAE,EAAEC,EAAE,EAAEG,EAAE,EAAE1E,EAAE,EAAE9I,EAAE,EAAEyN,GAAG,EAAEC,EAAE3N,EAAEoQ,cAAcxC,EAAE5N,EAAEgQ,cAAcnC,EAAE7N,EAAEiQ,YAAYnC,EAAE9N,EAAEkQ,kBAAkBlC,EAAEhO,EAAE2P,WAAWzG,EAAElJ,EAAE0P,YAAYzB,EAAEjO,EAAE4P,WAAW1B,EAAElO,EAAE6P,cAAc1B,EAAEnO,EAAEqP,aAAajB,EAAEpO,EAAEsP,cAAc,IAAIzD,EAAE,EAAEvQ,EAAE0E,EAAE0R,eAAele,OAAO8H,EAAEuQ,KAAK/B,GAAGuD,EAAE,KAAKxB,EAAE,CAAC,IAAIwC,EAAErO,EAAE0R,eAAerE,GAAG,IAAIvK,GAAGA,EAAE,CAAC6O,WAAWtD,EAAEuD,WAAWvE,IAAIja,EAAE,EAAEib,EAAEjb,IAAIA,EAAE,CAAC,IAAIkb,EAAEtO,EAAE6R,eAAevE,GAAG,GAAGX,EAAE,CAAC,IAAI4B,EAAE2C,EAAElR,EAAEmQ,YAAY1B,SAAS,EAAEnB,EAAE,EAAEA,EAAE,IAAIja,EAAE,KAAKsa,IAAIta,EAAE6d,EAAEvD,EAAEc,SAAS,EAAEnB,EAAE,EAAEA,EAAE,KAAKX,EAAE,CAACmF,WAAWxD,EAAEyD,WAAWzE,EAAEsE,WAAWvE,EAAE2E,QAAQzD,EAAE0D,UAAU5e,GAAG,CAAC,IAAI8V,EAAE,EAAEmF,EAAEnF,IAAIA,EAAE,CAAC,IAAIuF,EAAE1O,EAAEkS,UAAUlS,EAAE+P,cAActC,IAAIkB,EAAED,EAAEyD,aAAa3e,OAAO,GAAGD,EAAE,CAAC,IAAIqb,EAAE,KAAKhB,IAAIgB,EAAEhB,EAAEH,IAAI,IAAIoB,EAAE,KAAK7O,EAAEiQ,cAAcpB,EAAEhR,OAAOyS,aAAazC,EAAEJ,KAAK,IAAIqB,EAAE,KAAKhB,IAAIgB,EAAEhB,EAAEL,IAAIla,EAAE,CAAC6e,UAAUzD,EAAE0D,WAAW5E,EAAEsE,WAAWzE,EAAEsE,WAAWvE,EAAEiF,QAAQtS,EAAE8P,YAAYrC,GAAG8E,UAAUvS,EAAE+P,cAActC,GAAG+E,UAAU9D,EAAE8D,UAAUC,iBAAiB/D,EAAE+D,iBAAiBC,aAAahE,EAAEgE,aAAaC,UAAU/D,EAAEgE,QAAQ/D,EAAEgE,cAAc/D,GAAG,CAAC,IAAI7C,EAAE,EAAE0C,EAAE1C,IAAIA,EAAE,CAAC,GAAG3Y,EAAE,CAAC,IAAIyb,EAAE,KAAKf,IAAIe,EAAEf,EAAEjF,IAAI,IAAIiG,EAAE,KAAK9F,IAAI8F,EAAE9F,EAAEH,IAAI,IAAIkG,EAAE,KAAKhB,IAAIgB,EAAEpR,OAAOyS,aAAarC,EAAElF,KAAK,IAAImG,EAAE,KAAKhB,IAAIgB,EAAEhB,EAAEnF,IAAIzV,EAAE,CAACwf,UAAU/J,EAAEsJ,WAAW5E,EAAEsE,WAAWzE,EAAEsE,WAAWvE,EAAE0F,OAAOhE,EAAEiE,QAAQtE,EAAEuE,YAAYhH,GAAGiH,SAASxE,EAAEyD,aAAalG,GAAGkH,aAAazE,EAAE0E,iBAAiBnH,GAAGoH,OAAOrT,EAAEuP,WAAWxG,GAAGuK,OAAOtT,EAAEwP,WAAWzG,GAAGwK,OAAOvT,EAAEyP,WAAW1G,GAAGyK,QAAQxE,EAAEyE,OAAOxE,EAAEyE,UAAUxE,GAAG,CAACnG,GAAG,CAAC,CAAC,GAAGqE,EAAE,CAAC,IAAIiD,EAAE3B,EAAEW,aAAa,IAAIpD,EAAE,EAAE3B,EAAEoE,EAAEY,cAAc9b,OAAO8W,EAAE2B,IAAIA,EAAEmB,EAAE,CAACuG,WAAW5K,EAAE4F,EAAE0B,EAAE,EAAEpE,GAAG2H,WAAW7K,EAAE4F,EAAE0B,EAAE,EAAEpE,EAAE,GAAG4H,UAAUnF,EAAEY,cAAcrD,IAAI,CAACwB,GAAG,CAAC,CAACH,GAAG,CAAC,CAAC,GAAGrN,EAAEyN,EAAE,EAAEA,EAAE3E,EAAE,EAAEqE,GAAGe,EAAE,IAAIlC,EAAE,EAAE3B,EAAE6D,EAAE3a,OAAO8W,EAAE2B,EAAEA,GAAG,EAAE,CAAC,IAAI4E,EAAE1C,EAAElC,GAAG6E,EAAE3C,EAAElC,EAAE,IAAI4E,GAAG5Q,GAAGyN,GAAGmD,GAAGC,GAAG7Q,GAAGyN,GAAGoD,IAAI1D,EAAE,CAACuG,WAAW9C,EAAE+C,WAAW9C,EAAE+C,UAAUzF,EAAEA,EAAEnC,EAAE,GAAG,MAAM,CAACoB,GAAG,CAAC,CAAC,CAAC,SAASyG,EAAE9T,GAAG,OAAO5M,EAAE8b,EAAElP,GAAG,CAAC,SAAS+T,EAAE/T,EAAEyI,GAAyD,OAAtDzI,aAAa6M,cAAc7M,EAAE,IAAIoM,WAAWpM,IAAkD8Q,EAA/B9Q,aAAaoM,WAAWiE,EAAErQ,GAAGA,EAAMyI,EAAE,CAAC,SAASuL,EAAEhU,EAAEyI,EAAElN,EAAEsQ,GAAG,SAASvQ,IAAI,IAAI,IAAI0E,EAAE+T,EAAE3gB,EAAE6gB,UAAU1Y,EAAEyE,EAAE,CAAC,MAAMyI,GAAGoD,EAAEpD,EAAE,CAAC,CAAC,IAAIrV,EAAE,IAAI8gB,eAAe9gB,EAAE+gB,iBAAiB,OAAO7Y,GAAE,GAAIlI,EAAE+gB,iBAAiB,QAAQtI,GAAE,GAAIzY,EAAEghB,aAAa,cAAchhB,EAAEihB,KAAK,MAAM5L,EAAEzI,EAAE/E,eAAe7H,EAAEkhB,MAAM,CAAC,SAASzb,EAAEmH,EAAEyI,EAAElN,GAAGyY,EAAEhU,EAAEuU,GAAG9L,EAAElN,EAAE,CAAC,SAASuB,EAAEkD,EAAEyI,EAAElN,GAAGyY,EAAEhU,EAAEwU,GAAG/L,EAAElN,EAAE,CAAC,IAAI4T,GAAG,CAAC,cAAc,eAAe,WAAW,aAAa,cAAc,QAAQ,iBAAiB,cAAc,sBAAsB,aAAa,QAAQ,QAAQ,kBAAkB,kBAAkB,aAAa,YAAY,WAAW,WAAW,YAAY,YAAY,YAAY,iBAAiB,kBAAkBsF,GAAG,CAAC,aAAa,aAAa,aAAa,cAAc,gBAAgB,cAAc,cAAc,aAAa,aAAa,gBAAgB,gBAAgB,cAAc,oBAAoB,gBAAgB,eAAe,iBAAiBzD,GAAG7B,GAAG7R,OAAOmX,IAAIC,GAAG,YAAYC,GAAG,wBAAwBJ,GAAGI,GAAG,QAAQH,GAAGG,GAAG,WAAW3U,EAAE4U,OAAOd,EAAE9T,EAAE6U,OAAOd,EAAE/T,EAAE8U,SAAS3D,EAAEnR,EAAE+U,MAAMlc,EAAEmH,EAAEgV,aAAalY,EAAEkD,EAAEiV,QAAQP,GAAG1U,EAAEkV,SAASX,GAAGvU,EAAEmV,gBAAgBX,GAAGxU,EAAEoV,cAAchiB,EAAE4M,EAAEqV,WAAWnG,EAAElP,EAAEsV,cAAcjF,EAAErQ,EAAEuV,WAAWzE,CAAC,GAAh7Z,8B,uBCA5Ele,EAAOD,QAAUM,C,uBCAjBL,EAAOD,QAAUO,C,GCCbsiB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAahjB,QAGrB,IAAIC,EAAS4iB,EAAyBE,GAAY,CAGjD/iB,QAAS,CAAC,GAOX,OAHAkjB,EAAoBH,GAAU3W,KAAKnM,EAAOD,QAASC,EAAQA,EAAOD,QAAS8iB,GAGpE7iB,EAAOD,OACf,CCrBA8iB,EAAoBla,EAAK3I,IACxB,IAAIkjB,EAASljB,GAAUA,EAAOmjB,WAC7B,IAAOnjB,EAAiB,QACxB,IAAM,EAEP,OADA6iB,EAAoB9I,EAAEmJ,EAAQ,CAAE3M,EAAG2M,IAC5BA,CAAM,ECLdL,EAAoB9I,EAAI,CAACha,EAASqjB,KACjC,IAAI,IAAI/Y,KAAO+Y,EACXP,EAAoBriB,EAAE4iB,EAAY/Y,KAASwY,EAAoBriB,EAAET,EAASsK,IAC5EE,OAAO8Y,eAAetjB,EAASsK,EAAK,CAAEiZ,YAAY,EAAMxc,IAAKsc,EAAW/Y,IAE1E,ECNDwY,EAAoBriB,EAAI,CAACoX,EAAK2L,IAAUhZ,OAAOgC,UAAUC,eAAeL,KAAKyL,EAAK2L,G,yFCA9EC,EAAsC,WAStC,OARAA,EAAWjZ,OAAOJ,QAAU,SAAS0L,GACjC,IAAK,IAAI6B,EAAGhP,EAAI,EAAGC,EAAIyD,UAAUxL,OAAQ8H,EAAIC,EAAGD,IAE5C,IAAK,IAAI2E,KADTqK,EAAItL,UAAU1D,GACO6B,OAAOgC,UAAUC,eAAeL,KAAKuL,EAAGrK,KACzDwI,EAAExI,GAAKqK,EAAErK,IAEjB,OAAOwI,CACX,EACO2N,EAAS/U,MAAMrO,KAAMgM,UAChC,EACIqX,EAAW,CACXrU,MAAO,GACPxO,OAAQ,EACR8iB,MAAO,EACPC,OAAQ,GACRlb,MAAO,EACPmb,QAAS,EACTC,MAAO,OACPC,UAAW,cACXC,UAAW,4BACXnb,OAAQ,EACRob,UAAW,EACXC,MAAO,EACPC,OAAQ,IACRC,UAAW,UACXC,IAAK,MACLC,KAAM,MACNC,OAAQ,sBACRC,SAAU,YAEVC,EAAyB,WACzB,SAASA,EAAQpb,QACA,IAATA,IAAmBA,EAAO,CAAC,GAC/BhJ,KAAKgJ,KAAOoa,EAASA,EAAS,CAAC,EAAGC,GAAWra,EACjD,CAoCA,OA9BAob,EAAQjY,UAAUkY,KAAO,SAAUC,GAe/B,OAdAtkB,KAAKukB,OACLvkB,KAAKwkB,GAAKC,SAASC,cAAc,OACjC1kB,KAAKwkB,GAAGT,UAAY/jB,KAAKgJ,KAAK+a,UAC9B/jB,KAAKwkB,GAAGG,aAAa,OAAQ,eAC7B3kB,KAAKwkB,GAAGI,MAAMT,SAAWnkB,KAAKgJ,KAAKmb,SACnCnkB,KAAKwkB,GAAGI,MAAMtB,MAAQ,IACtBtjB,KAAKwkB,GAAGI,MAAMd,OAAS9jB,KAAKgJ,KAAK8a,OAAOvd,WACxCvG,KAAKwkB,GAAGI,MAAMX,KAAOjkB,KAAKgJ,KAAKib,KAC/BjkB,KAAKwkB,GAAGI,MAAMZ,IAAMhkB,KAAKgJ,KAAKgb,IAC9BhkB,KAAKwkB,GAAGI,MAAMC,UAAY,SAASva,OAAOtK,KAAKgJ,KAAKX,MAAO,KACvDic,GACAA,EAAOQ,aAAa9kB,KAAKwkB,GAAIF,EAAOS,YAAc,MA8B9D,SAAmBP,EAAIxb,GACnB,IAAIgc,EAAgBvc,KAAKkN,MAAM3M,EAAKwa,QAAUxa,EAAKsa,MAAQ,KAAO,IAAQ,KACtEY,EAAS,QACO,IAAhBlb,EAAKkb,OACLA,EAAS,iBAEmB,iBAAhBlb,EAAKkb,SACjBA,EAASlb,EAAKkb,QAGlB,IADA,IAAIe,EAyBR,SAAwBC,GAGpB,IAFA,IAAIC,EAAQ,kFACRF,EAAU,GACLtO,EAAK,EAAGyO,EAAKF,EAAUjW,MAAM,KAAM0H,EAAKyO,EAAG5kB,OAAQmW,IAAM,CAC9D,IACIzG,EADSkV,EAAGzO,GACK9I,MAAMsX,GAC3B,GAAgB,OAAZjV,EAAJ,CAGA,IAAIgG,GAAKhG,EAAQ,GACbuK,GAAKvK,EAAQ,GACbmV,EAASnV,EAAQ,GACjBoV,EAASpV,EAAQ,GACX,IAANgG,GAAYmP,IACZA,EAASC,GAEH,IAAN7K,GAAY6K,IACZA,EAASD,GAETA,IAAWC,GAGfL,EAAQzY,KAAK,CACT+Y,OAAQrV,EAAQ,IAAM,GACtBgG,EAAGA,EACHuE,EAAGA,EACH4K,OAAQA,EACRC,OAAQA,EACRE,IAAKtV,EAAQ,IApBjB,CAsBJ,CACA,OAAO+U,CACX,CAzDkBQ,CAAevB,GACpB5b,EAAI,EAAGA,EAAIU,EAAKgG,MAAO1G,IAAK,CACjC,IAAIod,KAAa,IAAM1c,EAAKgG,MAAQ1G,EAAIU,EAAKR,QACzCmd,EAAiBlB,SAASC,cAAc,OAC5CiB,EAAef,MAAMT,SAAW,WAChCwB,EAAef,MAAMZ,IAAM,GAAG1Z,QAAQtB,EAAKsa,MAAQ,EAAG,MACtDqC,EAAef,MAAMtB,MAASta,EAAKxI,OAASwI,EAAKsa,MAAS,KAC1DqC,EAAef,MAAMgB,OAAS5c,EAAKsa,MAAQ,KAC3CqC,EAAef,MAAMiB,WAAaC,EAAS9c,EAAK0a,UAAWpb,GAC3Dqd,EAAef,MAAMI,aAAeA,EACpCW,EAAef,MAAMmB,gBAAkB,OACvCJ,EAAef,MAAMC,UAAY,UAAUva,OAAOob,EAAS,oBAAoBpb,OAAOtB,EAAKua,OAAQ,OACnG,IAAIyC,EAAQ1d,EAAIU,EAAK4a,UAAY5a,EAAKgG,MAAQhG,EAAK6a,MACnDmC,GAAS,EAAIhd,EAAK6a,MAClB,IAAI/V,EAAO2W,SAASC,cAAc,OAClC5W,EAAK8W,MAAMtB,MAAQ,OACnBxV,EAAK8W,MAAMgB,OAAS,OACpB9X,EAAK8W,MAAMiB,WAAaC,EAAS9c,EAAKya,MAAOnb,GAC7CwF,EAAK8W,MAAMI,aAAeA,EAC1BlX,EAAK8W,MAAMM,UAAYe,EAAgBhB,EAASS,GAChD5X,EAAK8W,MAAMjB,UAAY,GAAGrZ,OAAO,EAAItB,EAAK6a,MAAO,aAAavZ,OAAO0b,EAAO,eAAe1b,OAAOtB,EAAK2a,WACvGgC,EAAeO,YAAYpY,GAC3B0W,EAAG0B,YAAYP,EACnB,CACJ,CA7DQQ,CAAUnmB,KAAKwkB,GAAIxkB,KAAKgJ,MACjBhJ,IACX,EAKAokB,EAAQjY,UAAUoY,KAAO,WAOrB,OANIvkB,KAAKwkB,KACDxkB,KAAKwkB,GAAG4B,YACRpmB,KAAKwkB,GAAG4B,WAAWC,YAAYrmB,KAAKwkB,IAExCxkB,KAAKwkB,QAAK5B,GAEP5iB,IACX,EACOokB,CACX,CAzC6B,GA8C7B,SAAS0B,EAASrC,EAAO6C,GACrB,MAAuB,iBAAT7C,EAAoBA,EAAQA,EAAM6C,EAAM7C,EAAMjjB,OAChE,CA0EA,SAASylB,EAAgBhB,EAASS,GAE9B,IADA,IAAIa,EAAa,GACR5P,EAAK,EAAG6P,EAAYvB,EAAStO,EAAK6P,EAAUhmB,OAAQmW,IAAM,CAC/D,IAAIuN,EAASsC,EAAU7P,GACnB8P,EAAKC,EAAcxC,EAAOhO,EAAGgO,EAAOzJ,EAAGiL,GAC3Ca,EAAW/Z,KAAK0X,EAAOqB,OAASkB,EAAG,GAAKvC,EAAOmB,OAAS,IAAMoB,EAAG,GAAKvC,EAAOoB,OAASpB,EAAOsB,IACjG,CACA,OAAOe,EAAW5Y,KAAK,KAC3B,CACA,SAAS+Y,EAAcxQ,EAAGuE,EAAGiL,GACzB,IAAIiB,EAAUjB,EAAUjd,KAAKC,GAAK,IAC9BmK,EAAMpK,KAAKoK,IAAI8T,GACfC,EAAMne,KAAKme,IAAID,GACnB,MAAO,CACHle,KAAKkN,MAA4B,KAArBO,EAAI0Q,EAAMnM,EAAI5H,IAAe,IACzCpK,KAAKkN,MAA6B,MAArBO,EAAIrD,EAAM4H,EAAImM,IAAe,IAElD,CCvKe,MAAMC,EACnBvT,WAAAA,GACEtT,KAAK8mB,UAAY,EACjB9mB,KAAK+mB,QAAU,EACf/mB,KAAKgnB,YAAc,EACnBhnB,KAAKinB,SAAU,CACjB,CAEAC,KAAAA,GACElnB,KAAK8mB,UAAYD,EAAMM,MACvBnnB,KAAK+mB,QAAU/mB,KAAK8mB,UACpB9mB,KAAKinB,SAAU,CACjB,CAEA1C,IAAAA,GACEvkB,KAAKonB,iBACLpnB,KAAKinB,SAAU,CACjB,CAEAG,cAAAA,GAEE,OADApnB,KAAKqnB,SACErnB,KAAKgnB,WACd,CAEAK,MAAAA,GACE,IAAIC,EAAQ,EACZ,GAAItnB,KAAKinB,QAAS,CAChB,MAAMM,EAAUV,EAAMM,MACtBG,EAAQ,MAASC,EAAUvnB,KAAK+mB,SAChC/mB,KAAK+mB,QAAUQ,EACfvnB,KAAKgnB,aAAeM,CACtB,CAEA,OAAOA,CACT,EAGFT,EAAMM,IAAO,WACX,MAAMla,EAAsB,oBAAXmJ,QAA0BA,OAAOoR,YAClD,OAAQva,GAAKA,EAAEka,IAAOla,EAAEka,IAAIM,KAAKxa,GAAKya,KAAKP,GAC7C,CAHa,GCtCb,MAAM,IAAEA,GAAQN,EAEhB,SAASnC,EAAciD,EAAKC,EAAIC,GAC9B,MAAM7H,EAAUyE,SAASC,cAAciD,GAGvC,OAFA3H,EAAQ4H,GAAKA,EACb5H,EAAQ4E,MAAMkD,QAAUD,EACjB7H,CACT,CAqDA,QAnDA,MACE1M,WAAAA,GACEtT,KAAK+nB,WAAarD,EAAc,MAAO,QAAS,eAChD1kB,KAAKgoB,MAAQtD,EAAc,IAAK,MAAO,yCACvC1kB,KAAK+nB,WAAW7B,YAAYlmB,KAAKgoB,OAEjChoB,KAAKioB,WAAad,IAClBnnB,KAAKkoB,UAAYloB,KAAKioB,WAEtBjoB,KAAKmoB,QAAU,IAAIve,MAAM,IACzB5J,KAAKooB,OAAS,EACdpoB,KAAKqoB,OAAS,EACdroB,KAAKsoB,OAAS,CAChB,CAEA9C,GAAAA,GACE,MAAM+C,EAAOpB,IACPG,EAAQiB,EAAOvoB,KAAKioB,WAmB1B,OAjBIjoB,KAAKsoB,OAAStoB,KAAKmoB,QAAQ3nB,OAC7BR,KAAKsoB,SAELtoB,KAAKqoB,QAAUroB,KAAKmoB,QAAQnoB,KAAKooB,QAEnCpoB,KAAKqoB,QAAUf,EACftnB,KAAKmoB,QAAQnoB,KAAKooB,QAAUd,EAC5BtnB,KAAKooB,QAAUpoB,KAAKooB,OAAS,GAAKpoB,KAAKmoB,QAAQ3nB,OAE/CR,KAAKwoB,GAAKxoB,KAAKqoB,OAASroB,KAAKsoB,OAC7BtoB,KAAKyoB,IAAM,IAAOzoB,KAAKwoB,GAEnBD,EAAOvoB,KAAKkoB,UAAY,MAC1BloB,KAAKgoB,MAAMU,YAAc1oB,KAAKyoB,IAAIE,YAAY,GAC9C3oB,KAAKkoB,UAAYK,GAGZA,CACT,CAEAlB,MAAAA,GACErnB,KAAKioB,WAAajoB,KAAKwlB,KACzB,CAEAoD,IAAAA,CAAKC,QACQjG,IAAPiG,IACFA,GAAK,GAEP7oB,KAAK+nB,WAAWnD,MAAMkE,QAAUD,EAAK,QAAU,MACjD,GCrDF,SAASE,EAAeC,EAAOC,GAC7B,OAAQD,GAASA,IAAUC,CAC7B,CAQA,SAASC,IACPlpB,KAAKmpB,UAAY,CAAC,CACpB,CASAD,EAAgB/c,UAAUgV,iBAAmB,SAAUrY,EAAMsgB,EAAUC,GACrE,IAAIC,EAAWtpB,KAAKmpB,UAAUrgB,GAEzBwgB,IACHtpB,KAAKmpB,UAAUrgB,GAAQ,GACvBwgB,EAAWtpB,KAAKmpB,UAAUrgB,IAG5B,MAAMC,EAAS,CAACqgB,EAAUC,QAKUzG,IAAhC9Y,IAAAA,KAAOwf,GAJX,SAAmBC,GACjB,OAAOA,EAAI,KAAOxgB,EAAO,IAAMwgB,EAAI,KAAOxgB,EAAO,EACnD,KAGEugB,EAAS9c,KAAKzD,EAElB,EAYAmgB,EAAgB/c,UAAUqd,oBAAsB,SAAU1gB,EAAMsgB,EAAUC,GACxE,MAAM9d,EAAOvL,KACb8J,IAAAA,QAAUyB,EAAK4d,WAAW,CAACM,EAASC,KAClC5f,IAAAA,OAAS2f,GAAUE,GAAWZ,EAAejgB,EAAM4gB,IAC1CX,EAAeK,EAAUO,EAAO,KAChCZ,EAAeM,EAASM,EAAO,IAAMpe,IAAM,IAGtDvL,KAAKmpB,UAAYrf,IAAAA,OAASyB,EAAK4d,WAAYM,GAA+B,IAAnBA,EAAQjpB,QACjE,EAOA0oB,EAAgB/c,UAAUyd,cAAgB,SAAUC,GAClD,MAAMte,EAAOvL,KAEb8J,IAAAA,QAAU9J,KAAKmpB,UAAUU,EAAM/gB,OAAQsgB,IACrC,MAAMC,EAAUD,EAAS,IAAM7d,EAC/B6d,EAAS,GAAG/a,MAAMgb,EAAS,CAACQ,GAAO,GAEvC,EAEA,UCvEMC,EAAa,CACjBC,MAAO,EACPC,KAAM,EACNC,OAAQ,EACRC,KAAM,EACN9e,MAAO,GAUT,SAAS+e,IACPjB,EAAgBnd,KAAK/L,MAIrBA,KAAKoqB,SAAU,EACfpqB,KAAKqqB,UAAYP,EAAWI,IAC9B,CAaA,SAASI,EAAOC,GACd,IAAKzgB,IAAAA,SAAWygB,GACd,MAAM,IAAIlf,MAAM,8BAElB,OAAOkf,CACT,CAhBAJ,EAAOhe,UAAYhC,OAAOC,OAAO8e,EAAgB/c,WACjDge,EAAOhe,UAAUmH,YAAc6W,EAM/BA,EAAOhe,UAAUqe,YAAc,WAC7B,OAAO,IAAIL,CACb,EAaAhgB,OAAO8Y,eAAekH,EAAOhe,UAAW,QAAS,CAC/CzF,GAAAA,GACE,OAAOoD,IAAAA,QAAUggB,GAAab,GAAUA,IAAUjpB,KAAKqqB,WACzD,EACA1jB,GAAAA,CAAI8jB,GACFzqB,KAAKqqB,UAAYC,EAAOR,EAAWW,GACrC,IAOFN,EAAOhe,UAAUue,OAAS,WACxB,OAAOvgB,OAAOyP,KAAKkQ,EACrB,EAQAK,EAAOhe,UAAUwe,QAAU,SAAUF,EAAOE,GAC1C,MAAMC,EAAWN,EAAOR,EAAWW,IACnCzqB,KAAK6qB,SAASD,EAAUD,EAC1B,EAMAR,EAAOhe,UAAU4d,MAAQ,SAAUY,GACjC3qB,KAAK6qB,SAASf,EAAWC,MAAOY,EAClC,EAMAR,EAAOhe,UAAU6d,KAAO,SAAUW,GAChC3qB,KAAK6qB,SAASf,EAAWE,KAAMW,EACjC,EAMAR,EAAOhe,UAAU8d,OAAS,SAAUU,GAClC3qB,KAAK6qB,SAASf,EAAWG,OAAQU,EACnC,EAMAR,EAAOhe,UAAU+d,KAAO,SAAUS,GAChC3qB,KAAK6qB,SAASf,EAAWI,KAAMS,EACjC,EAMAR,EAAOhe,UAAUf,MAAQ,SAAUuf,GACjC3qB,KAAK6qB,SAASf,EAAW1e,MAAOuf,EAClC,EAQAR,EAAOhe,UAAU0e,SAAW,SAAUD,EAAUD,GAC9C,GAAIC,EAAW5qB,KAAKqqB,UAClB,OAEF,MAAMI,EAAQ3gB,IAAAA,QAAUggB,GAAab,GAAUA,IAAU2B,IAEzD,GADAD,EAAU9f,OAAO8f,GACb3qB,KAAKoqB,QAAS,CASlB,CACApqB,KAAK4pB,cAAc,CAAE9gB,KAAM,UAAW2hB,QAAOE,WAC/C,EAEA,YAAmBR,ECjJbW,EAAc,CAClBC,QAAS,EACTC,OAAQ,GAiCV,SAASC,EAAqBrd,GAC5B,OAAOsd,mBAAmBtd,EAAK8B,QAAQ,MAAO,KAChD,CAOA,SAASyb,EAAiBC,GAGxB,MAAMC,GAFND,EAAMA,GAAOhV,OAAOkV,SAASC,QAEXC,UAAUJ,EAAInN,QAAQ,KAAO,GACzCsN,EAAS,qBACTE,EAAS,GACf,IAAI5d,EAEJ,KAAwC,QAAhCA,EAAQ0d,EAAOG,KAAKL,KAC1BI,EAAOjf,KAAK,CAACye,EAAqBpd,EAAM,IAAKod,EAAqBpd,EAAM,MAG1E,OAAO4d,CACT,CAgJA,SAASE,EAAYC,GACnB,IAAIC,GAAU,EAEd7rB,KAAK8rB,OAAS,SAAUjD,GACtBgD,EAAUhD,CACZ,EAEA,IAAIkD,EAAS,EACb,MAAMC,EAAU7hB,OAAOyP,KAAKgS,GAE5B,SAASK,EAAKC,EAASC,GACrB,OAAO,WACL,MAAMC,EAAST,EAAYS,OAAOld,OAAO,EAAY,EAAT6c,GACxCF,GACFQ,EAAOtC,MAAM,GAAGqC,EAASD,OAE3BJ,IAAS,QAAAnV,EAAA5K,UAAAxL,OALSqL,EAAI,IAAAjC,MAAAgN,GAAA0V,EAAA,EAAAA,EAAA1V,EAAA0V,IAAJzgB,EAAIygB,GAAAtgB,UAAAsgB,GAMtB,MAAMb,EAASS,EAAQ7d,MAAMrO,KAAM6L,GAKnC,OAJAkgB,IACIF,GACFQ,EAAOtC,MAAM,GAAGqC,SAAcD,KAEzBV,CACT,CACF,CAEA,IAAK,IAAInjB,EAAI,EAAGC,EAAIyjB,EAAQxrB,OAAQ8H,EAAIC,IAAKD,EAAG,CAC9C,MAAMikB,EAAOP,EAAQ1jB,GACfkL,EAASoY,EAAUW,GACrB/Y,aAAkBgZ,UAAqB,gBAATD,IAChCX,EAAUW,GAAQN,EAAKzY,EAAQ+Y,GAEnC,CACF,CAEAZ,EAAYS,OAAS,6FAErB,MAAMK,UAAyBphB,MAC7BiI,WAAAA,CAAYqX,GACV+B,QACA1sB,KAAKusB,KAAO,mBACZvsB,KAAK2qB,QAAUA,CACjB,EAoBF,SAASgC,EAAiCtT,GACxC,MAAMuT,EAAQ,IAAIxT,WAAWC,GAC7B,IAAIwT,EAAS,GACb,IAAK,IAAIvkB,EAAI,EAAGA,EAAIskB,EAAM9T,WAAYxQ,IACpCukB,GAAUhiB,OAAOyS,aAAasP,EAAMtkB,IAEtC,OAAO8N,OAAO0W,KAAKD,EACrB,CAEA,SAASE,EAA8B9hB,GACrC,MAAM4hB,EAASzW,OAAO4W,KAAK/hB,GACrB2hB,EAAQ,IAAIxT,WAAWyT,EAAOrsB,QACpC,IAAK,IAAI8H,EAAI,EAAGA,EAAIskB,EAAMpsB,SAAU8H,EAClCskB,EAAMtkB,GAAKukB,EAAOvkB,GAAGyQ,WAAW,GAElC,OAAO6T,EAAMvT,MACf,CA8BA,SAAS4T,EAAoB7sB,GAC3B,GAAI0J,IAAAA,cAAgB1J,GAClB,OAAO,EAET,MAAM8sB,EAAQ9sB,GAAK+J,OAAOwC,eAAevM,GACzC,QAAS8sB,IAAUA,EAAM9gB,eAAe,gBAAkB6gB,EAAoBC,EAChF,CA6DA,SAASC,EAAiBC,GACxB,OAAOA,EAASthB,MAAOrD,KAAKgM,IAAI,EAAG2Y,EAASC,YAAY,OAASC,IACnE,CAQA,SAASC,EAAcnC,GACrB,MAAMoC,EAAQpC,EAAInc,MAAM,SAClBwe,EAAaD,EAAMhtB,OACzB,OAAIitB,GAAc,GAA+B,WAA1BD,EAAMC,EAAa,GACjC,IAAIC,KAAK,CAACX,EAAgBS,EAAMC,EAAa,MAE/C,IACT,CA+EA,MAAME,EAAmB,kBACnBC,EAAgB,CAAC,IAAK,GAAI,KAmDhC,SACE9C,cACA+C,qBAvfF,SAA8BjgB,EAAMkgB,GAElC,OAAOC,mBAAmBngB,GAAM8B,QAAQoe,GADxBE,GAASnjB,OAAOyS,aAAa5S,SAASsjB,EAAK9e,OAAO,GAAI,OACVQ,QAAQ,OAAQ,IAC9E,EAqfEub,uBACAE,mBACA8C,uBAjdF,SAAgC7C,GAC9B,MAAMK,EAAS,CAAC,EACVtV,EAAIgV,EAAiBC,GAC3B,IAAK,IAAI9iB,EAAI,EAAGA,EAAI6N,EAAE3V,SAAU8H,EAAG,CACjC,MAAO2B,EAAKgf,GAAS9S,EAAE7N,GACvBmjB,EAAOxhB,GAAOgf,CAChB,CACA,OAAOwC,CACT,EA0cEyC,WAxcF,SAAoBjjB,GAClB,GAAmB,oBAARkjB,IACT,IACE,MAAsB,oBAAX/X,OACF,IAAI+X,IAAIljB,EAAKmL,OAAOkV,UAAU8C,KAEhC,IAAID,IAAIljB,GAAKmjB,IACtB,CAAE,MAAOhjB,GACP,CAGJ,GAAwB,oBAAbqZ,SAA0B,CACnC,MAAM4J,EAAS5J,SAASC,cAAc,KAEtC,OADA2J,EAAOD,KAAOnjB,EACPojB,EAAOD,IAChB,CACA,OAAOnjB,CACT,EAwbEqjB,eAhbF,SAAwBC,GACtB,MAAMC,EAAa,GAEnB,IAAK,IAAIlmB,EAAI,EAAGC,EAAIgmB,EAAU/tB,OAAQ8H,EAAIC,IAAKD,EAC7CkmB,EAAWA,EAAWhuB,QAAU+tB,EAAUjmB,GAAGyQ,WAAW,GAAGxS,SAAS,IAGtE,MAAMkoB,EAAUD,EAAW7gB,KAAK,KAEhC,OAAO,IAAI+gB,OAAO,OAAOD,KAAY,KACvC,EAuaE/J,cAlaF,SAAuBiD,EAAKgH,EAAOC,GACjC,MAAM5O,EAAUyE,SAASC,cAAciD,GACvC,IAAIrf,EACAC,EACJ,GAAIomB,EAAO,CACT,MAAM/U,EAAOzP,OAAOyP,KAAK+U,GACzB,IAAKrmB,EAAI,EAAGC,EAAIqR,EAAKpZ,OAAQ8H,EAAIC,IAAKD,EAAG,CACvC,MAAM2B,EAAM2P,EAAKtR,GACjB0X,EAAQ2E,aAAa1a,EAAK0kB,EAAM1kB,GAClC,CACF,CACA,GAAI2kB,EAIF,IAHMA,aAAmBhlB,QACvBglB,EAAU,CAACA,IAERtmB,EAAI,EAAGC,EAAIqmB,EAAQpuB,OAAQ8H,EAAIC,IAAKD,EAAG,CAC1C,MAAM6K,EAAQyb,EAAQtmB,GACD,iBAAV6K,EACT6M,EAAQkG,YAAYzB,SAASoK,eAAe1b,IACnCA,aAAiB2b,aAC1B9O,EAAQkG,YAAY/S,EAExB,CAEF,OAAO6M,CACT,EA0YE+O,YA7XF,SAAqBC,EAAKC,EAAMC,EAASC,GAKvC,OAJAH,EAAI7iB,UAAYrC,IAAAA,OAASK,OAAOC,OAAO6kB,EAAK9iB,WAAY,CAAEmH,YAAa0b,GAAOE,GAC1EC,GACFrlB,IAAAA,OAASklB,EAAKG,GAETH,CACT,EAwXEI,WAnXF,SAASA,EAAW5X,EAAK6X,GACvB,IACI/mB,EACAC,EAFA+mB,EAAM9X,EAGV,GAAIA,aAAe5N,MAEjB,IADA0lB,EAAM,IAAI1lB,MAAM4N,EAAIhX,QACf8H,EAAI,EAAGC,EAAIiP,EAAIhX,OAAQ8H,EAAIC,IAAKD,EACnCgnB,EAAIhnB,GAAK8mB,EAAW5X,EAAIlP,SAErB,GAAIkP,aAAerN,OAAQ,CAChCmlB,EAAMnlB,OAAOC,OAAOoN,GACpB,MAAMoC,EAAOzP,OAAOyP,KAAKpC,GACzB,IAAKlP,EAAI,EAAGC,EAAIqR,EAAKpZ,OAAQ8H,EAAIC,IAAKD,EAAG,CACvC,MAAM2B,EAAM2P,EAAKtR,GACX2gB,EAAQzR,EAAIvN,GACZwN,EAAO2X,EAAWnG,GACpBxR,IAASwR,IACXqG,EAAIrlB,GAAOwN,EAEf,CACI4X,GAAyBllB,OAAOyP,KAAK0V,GAAK9uB,OAAS,IACrD8uB,EAAMnlB,OAAOC,OAAOklB,GAExB,CACA,OAAOA,CACT,EA2VEC,SAtVF,SAAkB9L,GAEhB,MAAO,IADM,UAAUA,EAAMld,SAAS,MAAO2I,QAAQ,IAEvD,EAoVEyc,cACAc,mBACA+C,cApSF,SAAuBC,EAAgBC,GACrC,IAAIjE,EAAS,KACb,IACEA,EAAS,IAAIgE,EAAeC,EAC9B,CAAE,MAAO7W,GACP,MAAIA,aAAa8W,WACT,IAAIlD,EAAiB5T,EAAE8R,SAEvB9R,CAEV,CACA,OAAO4S,CACT,EAyREsB,kBACAJ,gBACAiD,gBAhQF,SAAuC3kB,EAAqB4kB,GAC1D,OAAOjmB,MAAMuC,UAAUL,MAAMC,KAAK,IAAI8jB,EAAgB9C,EAAgB9hB,IACxE,EA+PE6kB,cArQF,SAAuClb,EAAuBib,GAC5D,OAAOlD,EAAc,IAAIkD,EAAgBjb,GAAOyE,OAClD,EAoQE0W,2BA7PF,SAAoC/mB,EAAMgnB,GACxC,MAAMC,EAAU,GAChB,GAAID,GAAWhnB,EAAM,CACnB,MAAM4Q,EAAOzP,OAAOyP,KAAK5Q,GACzB,IAAK,IAAIiE,EAAI,EAAGA,EAAI2M,EAAKpZ,SAAUyM,EAAG,CACpC,MAAMhD,EAAM2P,EAAK3M,GACXgc,EAAQjgB,EAAKiB,GAEbgf,aAAiB9e,aAAmC,IAAjB6lB,EAAQ/lB,IAAwB+lB,EAAQ/lB,KAASgf,GACxFgH,EAAQzjB,KAAK,GAAGvC,KAAOgf,IAE3B,CACA,GAAIgH,EAAQzvB,OAAS,EACnB,MAAO,IAAIyvB,EAAQtiB,QAEvB,CACA,MAAO,EACT,EA6OEuiB,YA5NF,SAASA,EAAYC,EAAKC,GACxB,MAAMC,EAAO,CAAC,EAYd,OAXAvmB,IAAAA,MAAQqmB,GAAK,CAACG,EAAUrmB,KACtB,MAAMsmB,EAAWH,EAAInmB,GACrB,GAAIgjB,EAAoBqD,IAAarD,EAAoBsD,GAAW,CAClE,MAAMC,EAAWN,EAAYI,EAAUC,GAClCzmB,IAAAA,QAAU0mB,KACbH,EAAKpmB,GAAOumB,EAEhB,MAAY1mB,IAAAA,QAAUwmB,EAAUC,KAC9BF,EAAKpmB,GAAOqmB,EACd,IAEKD,CACT,EA+MEI,eA7MF,SAAwBC,EAAQtH,IAC9B,SAASuH,EAAenZ,EAAK+N,GAC3Bzb,IAAAA,MAAQ0N,GAAK,CAACyR,EAAOhf,KACnB,MAAM2mB,EAAUrL,GAAUA,EAAO/kB,OAAS,EAAI,IAAM,IAChDyoB,aAAiB9e,OACnBwmB,EAAe1H,EAAO2H,EAAU3mB,QACb2Y,IAAVqG,GACTG,EAASH,EAAO2H,EAAU3mB,EAC5B,GAEJ,CACA0mB,CAAeD,EAAQ,GACzB,EAkMEG,cAhMF,SAAuB5H,GACrB,OAAInf,IAAAA,SAAWmf,GACN,IAAIA,EAAMvZ,QAAQ,KAAM,UAE1BuZ,CACT,EA4LE9X,cA1LF,SAAuB8X,GACrB,IAAKnf,IAAAA,SAAWmf,GACd,OAAOA,EAET,GAAiB,MAAbA,EAAM,IAA0C,MAA5BA,EAAMA,EAAMzoB,OAAS,GAE3C,OADAyoB,EAAQA,EAAMnd,MAAM,EAAGmd,EAAMzoB,OAAS,IACzBkP,QAAQ,OAAQ,KAE/B,GAAiB,MAAbuZ,EAAM,IAA0C,MAA5BA,EAAMA,EAAMzoB,OAAS,GAE3C,OADAyoB,EAAQA,EAAMnd,MAAM,EAAGmd,EAAMzoB,OAAS,IACzBkP,QAAQ,OAAQ,KAE/B,MAAM,IAAIohB,YAAY,2CACxB,EA8KEC,WAzJF,WACE,OAAIC,UAAUC,QAAUD,UAAUC,OAAOhT,QAAQ,UAAY,GACxD+S,UAAUE,YACgC,IAA1CF,UAAUE,UAAUjT,QAAQ,WACc,IAA1C+S,UAAUE,UAAUjT,QAAQ,SACxB6M,EAAYE,OAEdF,EAAYC,OACrB,EAkJEoG,SAhJF,SAAkB/F,GACM,oBAAXhV,QACTA,OAAOiL,OAAOoD,SAAS2M,MAAM,oCAAoChG,eAErE,EA6IEiG,aA3IF,SAAsBC,EAASC,GAC7B,GAAKD,GAAoC,UAAzBA,EAAQpiB,OAAO,EAAG,GAMlC,GAHKqiB,IACHA,EAAW,CAAC,eAAgB,IAAI7J,KAAQ,QAAQ/Z,KAAK,KAEjC,oBAAXyI,QAA0BA,OAAO4a,WAAa5a,OAAO4a,UAAUQ,WACxEpb,OAAO4a,UAAUQ,WAAWjE,EAAc+D,GAAUC,QAC/C,GAAwB,oBAAb9M,SAA0B,CAC1C,MAAMgN,EAAOhN,SAASC,cAAc,KACpC+M,EAAKC,SAAWH,EAChBE,EAAKE,UAAY,WACjBF,EAAKrD,KAAOhY,OAAO+X,IAAIyD,gBAAgBrE,EAAc+D,IACrD7M,SAASoN,KAAK3L,YAAYuL,GAC1BA,EAAKK,QACLrN,SAASoN,KAAKxL,YAAYoL,EAC5B,CACF,EA0HEM,cA9FF,SAAuB5B,EAAKC,EAAK4B,EAASC,GACxC,IAAK,IAAI3pB,EAAI,EAAGC,EAAIypB,EAAQxxB,OAAQ8H,EAAIC,IAAKD,EAC3C,IAAK,IAAIoT,EAAI,EAAGA,EAAIuW,IAAYvW,EAC9B0U,EAAI9nB,EAAI2pB,EAAWvW,GAAKyU,EAAI6B,EAAQ1pB,GAAK2pB,EAAWvW,EAG1D,EAyFEwW,iBAvFF,SAA0BC,GACxB,MAAMC,EAAUD,EAAKE,WAAU,GAG/B,OAFAD,EAAQE,SAAWH,EAAKG,SAEjBF,CACT,EAmFEG,0BA7EF,SAAmCtJ,GACjC,OAAI0E,EAAiB6E,KAAKvJ,GACjBA,GAGT2E,EAAc,GAAK3E,EACZ2E,EAAcjgB,KAAK,IAC5B,EAuEEwf,mBACAsF,cA/KF,SAAuBrF,GACrB,MAAMsF,EAAMvF,EAAiBC,GAE7B,MAAO,CADMA,EAASthB,MAAM,EAAGshB,EAAS5sB,OAASkyB,EAAIlyB,QACvCkyB,EAChB,EA4KEhB,SA7HF,SAAkBiB,EAAMpB,EAAUzoB,GAChC,MAAM8pB,EAAW,IAAIlF,KAAK,CAACiF,IAY3B,GAVKpB,IACHA,EAAW,CAAC,QAAS,IAAI7J,MAAQ/Z,KAAK,KAMtC4jB,GAHGzoB,EAGS,IAAIA,IAFJ8pB,EAAS9pB,MAAQ,OAKT,oBAAXsN,QAA0BA,OAAO4a,WAAa5a,OAAO4a,UAAUQ,WACxEpb,OAAO4a,UAAUQ,WAAWoB,EAAUrB,QACjC,GAAwB,oBAAb9M,SAA0B,CAC1C,MAAMgN,EAAOhN,SAASC,cAAc,KACpC+M,EAAKC,SAAWH,EAChBE,EAAKE,UAAY,WACjBF,EAAKrD,KAAOhY,OAAO+X,IAAIyD,gBAAgBgB,GACvCnO,SAASoN,KAAK3L,YAAYuL,GAC1BA,EAAKK,QACLrN,SAASoN,KAAKxL,YAAYoL,EAC5B,CACF,EAsGEoB,wBAhEF,SAAiCC,EAAOC,GACtC,MAAMtH,EAAS,IAAIqH,EAAMxf,YAAYwf,EAAMtyB,OAASuyB,EAAOvyB,QAG3D,OAFAirB,EAAO9kB,IAAImsB,GACXrH,EAAO9kB,IAAIosB,EAAQD,EAAMtyB,QAClBirB,CACT,EA4DEuH,uBArDF,SAAgCpe,GAC9B,GAAIA,EAAMpU,QAAU,EAClB,OAAO,KAGT,MAAMkvB,EAAO9a,EAAMqe,QAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAI3yB,QAAQ,GAEpDirB,EAAS,IAAI7W,EAAM,GAAGtB,YAAYoc,GACxC,IAAK,IAAIpnB,EAAI,EAAG4e,EAAQ,EAAG5e,EAAIsM,EAAMpU,OAAQ8H,IAAK,CAChD,MAAM+P,EAAQzD,EAAMtM,GAAG9H,OACvBirB,EAAO9kB,IAAIiO,EAAMtM,GAAI4e,GACrBA,GAAS7O,CACX,CACA,OAAOoT,CACT,GCxgBe,MAAM2H,UAAkBlK,EACrC5V,WAAAA,GACEoZ,QACA1sB,KAAKqzB,eAAgB,CACvB,CAEAC,MAAAA,GACEtzB,KAAKqzB,eAAgB,EACrBrzB,KAAK4pB,cAAc,CAAE9gB,KAAM,UAC7B,CAEAyqB,YAAAA,GACE,OAAOvzB,KAAKqzB,aACd,CAIAG,MAAAA,CAAO3J,GACL7pB,KAAK4pB,cAAc,CAAE9gB,KAAM,eAAgB2qB,WAAY5J,GACzD,ECjBF,MAqBMxG,EAAW,CAyBfqQ,MAAO,CAmBLC,GAAI,CACFC,KAAM,IACNC,KAAM,IACNC,MAAO,GACPC,WAAW,EACXC,QAAS,GACTC,UAAU,EACVC,eAAgB,CACdC,KAAM,EACNC,IAAK,EACLC,OAAQ,EACRC,KAAM,GACNC,MAAO,KAeXC,GAAI,CACFN,eAAgB,CACdC,KAAM,EACNC,IAAK,EACLC,OAAQ,EACRC,KAAM,GACNC,MAAO,KAoBXE,GAAI,CACFV,WAAW,EACXE,UAAU,EACVS,SAAU,GACVC,UAAW,GACXf,KAAM,IACNgB,UAAW,GAoBbC,GAAI,CACFhB,KAAM,GACNC,MAAO,EACPC,WAAW,EACXC,QAAS,GACTC,UAAU,EACVC,eAAgB,CACdC,KAAM,EACNC,IAAK,EACLC,OAAQ,EACRC,KAAM,GACNC,MAAO,KAoBXO,GAAI,CACFC,OAAO,EACPC,YAAa,IACbC,OAAQ,GACRC,WAAW,EACXhB,eAAgB,CACdC,KAAM,EACNC,IAAK,EACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,KAoBXY,GAAI,CACFJ,OAAO,EACPC,YAAa,IACbC,OAAQ,GACRC,WAAW,EACXhB,eAAgB,CACdC,KAAM,EACNC,IAAK,EACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,KAuBXa,GAAI,CACFC,SAAU,GACVC,SAAU,CACRnB,KAAM,IACNC,IAAK,EACLC,OAAQ,IACRC,KAAM,EACNC,MAAO,GAETlsB,MAAO,EACP6sB,WAAW,EACXK,YAAa,CACXpB,KAAM,EACNC,IAAK,IACLC,OAAQ,EACRC,KAAM,GACNC,MAAO,KAETU,OAAQ,GACRF,OAAO,GAsBTS,GAAI,CACFR,YAAa,IACbK,SAAU,IACVH,WAAW,EACXO,eAAgB,GAChBvB,eAAgB,CACdC,KAAM,GACNC,IAAK,EACLC,OAAQ,IACRC,KAAM,KACNC,MAAO,GAETU,OAAQ,GACRF,OAAO,GAeTW,GAAI,CACFnS,OAAQ,GACR2Q,eAAgB,CACdC,KAAM,GACNC,IAAK,GACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,KAkBXoB,GAAI,CACFpS,OAAQ,GACRqS,oBAAqB,IACrBC,SAAU,GACV3B,eAAgB,CACdC,KAAM,EACNC,IAAK,EACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,KAyBXuB,GAAI,CACFvS,OAAQ,GACRwS,MAAO,IACPC,GAAI,CACFC,MAAO,CACL3S,MAAO,EACP4S,MAAO,GAETC,OAAQ,CACN7S,MAAO,EACP4S,MAAO,IAGXN,oBAAqB,IACrBC,SAAU,GACV3B,eAAgB,CACdC,KAAM,EACNC,IAAK,EACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,KAwBX6B,GAAI,CACFC,SAAU,6CACVC,gBAAiB,SACjBC,cAAe,SACfC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,OACJC,GAAI,WACJC,QAAQ,GAiBVC,GAAI,CACFC,OAAQ,EACRC,UAAW,EACXC,UAAW,EACXC,OAAO,EACPC,SAAS,EACTjD,eAAgB,CACdC,KAAM,EACNC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,MA0Bb6C,SAAU,CAQRC,GAAI,CACFC,QAAS,GAUXC,GAAI,CACF9T,MAAO,UAYT+T,GAAI,CACFvC,OAAQ,UACRxR,MAAO,SACPgU,UAAW,UAWbC,GAAI,CACFjU,MAAO,QACPkU,OAAQ,IAUVC,GAAI,CACFC,SAAU,WAYZC,GAAI,CACFD,SAAU,OACVnjB,IAAK,EACLD,IAAK,IAUPsjB,GAAI,CACFF,SAAU,QAUZG,GAAI,CACFH,SAAU,YAUZI,GAAI,CACFJ,SAAU,YAQdK,WAAW,EAMXC,OAAQ,GAMRC,QAAS,GAMTC,OAAQ,IAERC,YAAa,IAEbC,YAAa,EAMbC,cAAe,GAMfC,aAAc,EACdC,SAAU,EACVC,SAAU,EACVC,gBAAgB,EAMhBC,QAAS,KAMTC,WAAY,SAEZC,gBAAgB,EAEhBC,YAAY,EAEZC,OAAQ,UAERC,QAAS,CAEPC,QAAS,CAAC,CACRxvB,KAAM,KACNE,QAAS,KACThC,SAAU,MACVG,SAAU,OAGZoxB,MAAO,GAGPC,KAAM,CAAC,CACL1vB,KAAM,KACNE,QAAS,KACThC,SAAU,MACVG,SAAU,OAIZsxB,MAAO,CAAC,CACN3vB,KAAM,KACNE,QAAS,KACThC,SAAU,MACVG,SAAU,OAIZuxB,MAAO,CAAC,CACN5vB,KAAM,KACNE,QAAS,KACThC,SAAU,aACVG,SAAU,MACT,CACD2B,KAAM,KACNE,QAAS,KACThC,SAAU,uBACVG,SAAU,QAIdwxB,QAAS,CACP1rB,KAAM,CACJ2V,MAAO,WACPgW,SAAU,GACVC,QAAS,MAMb9C,GAAI,CACFnT,MAAO,QACPkW,aAAa,GAGfC,MAAO,CACLC,WAAW,EACXC,gBAAiB,GACjBC,eAAgB,MAOlBC,QAAS,CAET,EAMAC,MAAM,EAMNC,KAAK,EAMLzR,KAAK,EAOL0R,UAAU,EAEVC,uBAAuB,EAMvBC,eAAe,EAEfC,SAAS,EAMTC,WAAW,EAOXC,MAAM,EAMNC,QAAS,CACP5R,IAAI,EACJpF,MAAO,EACPiX,UAAW,GACXC,UAAW,GAQbC,IAAI,EASJ1W,OAAQ,CACN2E,IAAI,EACJ/f,KAAM,SACNya,OAAQ,GAQVsX,aAAc,EAOdC,OAAQ,GAORC,QAAS,EAWTC,uBAAuB,EAOvBC,SAAS,EAOTC,SAAS,EAOTC,KAAM,OAONC,SAAS,EAOTC,UAAU,EAOVC,YAAY,EAOZC,OAAQ,OAORC,kBAAkB,EAOlBC,aAAc,UAOdC,iBAAkB,EAElB3R,MAAO,CACL4R,QAAS,IACT/tB,KAAM,SACNguB,MAAM,EACNC,iBAAkB,GAClBC,WAAY,GACZC,aAAc,KAEhBC,IAAK,CACHC,WAAW,IAQf,SAASC,IACPhT,EAAgBnd,KAAK/L,MAErBA,KAAKm8B,IAAM,KACXn8B,KAAKmnB,IAAM,CAAC,EACZnnB,KAAKo8B,SAAW,CAAC,EAEjBp8B,KAAK+F,OACP,CAEAM,EAAM0oB,YAAYmN,EAAUhT,EAAiB,CAC3C7F,SAAQ,EAER1c,GAAAA,CAAI01B,EAAMpT,GACR,GAAInf,IAAAA,SAAWuyB,GAAO,CACHvyB,IAAAA,IAAM9J,KAAKmnB,IAAKkV,KAChBpT,IACfnf,IAAAA,IAAM9J,KAAKmnB,IAAKkV,EAAMpT,GACtBjpB,KAAKs8B,cAAcD,EAAMpT,GAE7B,KAAO,CACL,MAAMoH,EAAOhqB,EAAM6pB,YAAYmM,EAAMr8B,KAAKmnB,KACrCrd,IAAAA,QAAUumB,KACbvmB,IAAAA,MAAQ9J,KAAKmnB,IAAKkJ,GAClBrwB,KAAKu8B,eAAelM,GAExB,CACF,EAEA3pB,GAAAA,CAAI21B,EAAMG,GACR,OAAO1yB,IAAAA,IAAM9J,KAAKmnB,IAAKkV,EAAMG,EAC/B,EAEAz2B,KAAAA,GACE,MAAMsqB,EAAOhqB,EAAM6pB,YAAY7M,EAAUrjB,KAAKmnB,KAC9CnnB,KAAKmnB,IAAMrd,IAAAA,UAAYuZ,GACvBrjB,KAAKm8B,IAAM,KACXn8B,KAAKu8B,eAAelM,GACpBrwB,KAAKo8B,SAAW,CAAC,CACnB,EAEAK,UAAAA,GACEz8B,KAAKm8B,IAAMryB,IAAAA,UAAY9J,KAAKmnB,KAC5BnnB,KAAKo8B,SAAW,CAAC,CACnB,EAEAE,aAAAA,CAAcD,EAAMpT,GAClBjpB,KAAKo8B,SAASC,IAAQ,EACtBr8B,KAAK4pB,cAAc,CAAE9gB,KAAM,UAAUuzB,IAAQpT,SAC/C,EAEAsT,cAAAA,CAAelM,GACbhqB,EAAMoqB,eAAeJ,GAAM,CAACqM,EAAWC,KACrC38B,KAAKs8B,cAAcK,EAAUD,EAAU,GAE3C,EAEAE,OAAAA,GACE,IAAK58B,KAAKm8B,IACR,MAAO,GAET,MAAM,IAAEA,EAAG,IAAEhV,GAAQnnB,KAErB,OADa8J,IAAAA,OAASK,OAAOyP,KAAK5Z,KAAKo8B,WAAYnyB,GAAQH,IAAAA,IAAMqyB,EAAKlyB,KAASH,IAAAA,IAAMqd,EAAKld,IAE5F,EAEA4yB,UAAAA,CAAWC,GACT,GAAIA,EAAM1wB,eAAe,YAp9Bb,IAo9B2B0wB,EAAMC,QAC3C,MAAM,IAAI1xB,MAAM,2CAGXyxB,EAAMC,QACb/8B,KAAK+F,QACL/F,KAAK2G,IAAIm2B,EACX,EAEAE,QAAAA,CAASC,GACP,MAAMH,EAAQz2B,EAAM6pB,YAAYlwB,KAAKmnB,IAAK9D,GAI1C,OAHI4Z,IACFH,EAAMC,QAh+BI,GAk+BLD,CACT,EAEAI,aAAAA,CAAcC,EAAQn0B,GACpBqa,EAAS2W,QAAQmD,GAAUrzB,IAAAA,UAAYd,GACvChJ,KAAKmnB,IAAI6S,QAAQmD,GAAUrzB,IAAAA,UAAYd,EACzC,IAGF,YAAmBkzB,EC1+BnB,IAAIkB,EAAW,EAEf,SAASC,EAAUpU,GACjB,SAAUA,GAAmB,MAAVA,GAAkBnf,IAAAA,SAAWmf,IAAkC,UAAxBA,EAAMvhB,cAClE,CAEA,MAAM41B,EAAW,CACfC,OAAQ1yB,OACR0f,OAAQxiB,OACRy1B,QAASH,GAMLI,EAAW,IAEXC,EAAS,IAETC,EAAQ,IAERC,EAAuB,QAuB7B,MAAMC,EAZGx3B,EAAMioB,eAAesP,EADL,MAczB,SAASE,EAAuB7U,GAC9B,OAAO5iB,EAAMwnB,qBAAqB5E,EAAO4U,EAC3C,CAEA,MAAME,EARG13B,EAAMioB,eAAesP,EADL,KAUzB,SAASI,EAAuB/U,GAC9B,OAAO5iB,EAAMwnB,qBAAqB5E,EAAO8U,EAC3C,CAEA,SAASE,EAAcj1B,GACrB,IAAI,KAAEk1B,GAASl1B,EACf,IAAKk1B,EAAM,CACT,MAAM,QAAEhF,GAAY7vB,EAAS8d,IAC7B,IAAI8R,EAASjwB,EAAKiwB,QAAU5vB,EAAS8d,IAAI8R,OACzCiF,EAAOhF,EAAQD,GACViF,IACH7R,EAAOnC,KAAK,mBAAmB+O,OAC9BA,GAAU9uB,OAAOyP,KAAKsf,GACvBgF,EAAOhF,EAAQD,IAEjBjwB,EAAKiwB,OAASA,EACdjwB,EAAKk1B,KAAO73B,EAAM+oB,WAAW8O,GAAM,EACrC,CACF,CAEA,SAASC,EAAgBn1B,EAAMma,EAAM8F,GACnCgV,EAAcj1B,GACd,MAAMrB,EAAMqB,EAAKk1B,KAAKd,GAElBz1B,EAAIyE,eAAe+W,KACrBia,EAAWp0B,EAAKk1B,KAAK19B,OACrBwI,EAAKk1B,KAAKd,GAAY/2B,EAAM+oB,WAAWznB,GAAK,SAEhCib,IAAVqG,IACFjgB,EAAKk1B,KAAKd,GAAUja,GAAQ8F,EAEhC,CA8BA,SAASmV,EAAY9yB,EAAO+yB,EAAct1B,GACxC,GAAIuC,EAAO,CACT,MAAMgzB,EAAOhzB,EAAM2S,QAAQwf,GACrBc,EAbV,SAAqBtzB,EAAKlC,GACxB,MAAMy1B,EAAMvzB,EAAIgT,QAAQ,KACxB,OAAIugB,GAAO,GACTz1B,EAAOyD,KAAKvB,EAAIiE,OAAOsvB,EAAM,GAAGvvB,MAAM,MAC/BhE,EAAIiE,OAAO,EAAGsvB,IAGhBvzB,CACT,CAKqBwzB,CAAYnzB,EAAM4D,OAAO,EAAGovB,GAAQ,EAAIA,OAAO1b,GAAY7Z,GAC5E,GAAIu1B,GAAQ,EAAG,CACb,MAAMzyB,EAAOP,EAAM4D,OAAOovB,EAAO,GAAGrvB,MAAM0uB,GAE1C,GADAryB,EAAQizB,EACJF,EAAc,CAChB,MAAMhb,EAAWgb,EAAa/yB,GACxBtC,EAAO3C,EAAM+oB,WAAW/L,GAAU,GACxCxX,EAAKuQ,SAASsiB,IACZ,MAAMC,EAAOD,EAAIzvB,MAAMyuB,EAAQ,GACzBzzB,EAAMihB,mBAAmByT,EAAK,IAC9B1V,EAAQiC,mBAAmByT,EAAK,IAChCC,EAAUtB,SAAgBxzB,IAAAA,IAAMuZ,EAAUpZ,IAC5C20B,EACF90B,IAAAA,IAAMd,EAAMiB,EAAK20B,EAAQ3V,IAEzBoD,EAAOnC,KAAK,qBAAqBjgB,kBAAoBqB,KACvD,IAEEnB,OAAOyP,KAAK5Q,GAAMxI,OAAS,IAC7B8K,EAAQ,CAACA,EAAOtC,GAEpB,CACF,MACEsC,EAAQizB,CAEZ,CACA,OAAOjzB,CACT,CAEA,MAAMuzB,EAAU,CAEdt+B,EAAG,OACHgJ,KAAMsB,OACN4K,EAAG,OACH3M,KAAM+B,OACNvK,EAAG,OACH4H,KAAM2C,OACNoO,EAAG,OACH6lB,KAAM/2B,OACNg3B,KAAM1B,EAINj9B,EAAG,SACHswB,MAAAA,CAAOzH,EAAOjgB,GACZ,MAAMD,EAAS,GACf,IAAI2D,EAAU0xB,EAAYnV,EAAO5f,EAASga,SAASmW,QAASzwB,GACvDa,MAAM8P,QAAQhN,KACjBA,EAAU,CAACA,IA/EjB,SAAmB1D,EAAMD,EAAQ2D,QACTkW,IAAlB5Z,EAAKg2B,WACPh2B,EAAKg2B,SAAW,IAGlB,MAAOl2B,EAAMm2B,GAAWvyB,EAClBwyB,EAAS,CACbp2B,OACAC,eAGc6Z,IAAZqc,IACFC,EAAOl2B,KAAOi2B,GAGhBj2B,EAAKg2B,SAASh2B,EAAKg2B,SAASx+B,QAAU0+B,CACxC,CAiEIr2B,CAAUG,EAAMD,EAAO,GAAI2D,EAC7B,EAEAO,EAAG,SACHgsB,MAAAA,CAAOhQ,EAAOjgB,GACZA,EAAKiwB,OAAShQ,EACdjgB,EAAKk1B,KAAO,KACZD,EAAcj1B,EAChB,EAEAgE,EAAG,MACHrF,GAAAA,CAAIshB,EAAOjgB,GACTi1B,EAAcj1B,GACdo0B,EAAWr1B,OAAOkhB,GAElBmU,EAAWA,GAAYp0B,EAAKk1B,KAAK19B,OAAU48B,EAAW,EAAI,EAAIA,EAAYp0B,EAAKk1B,KAAK19B,OAEhF48B,IAAap0B,EAAKk1B,KAAK19B,SAEzBwI,EAAKk1B,KAAKd,GAAYA,EAAW,EAAI/2B,EAAM+oB,WAAWpmB,EAAKk1B,KAAKd,EAAW,IAAI,GAC3E/2B,EAAM+oB,WAAW/lB,EAASga,SAAS6V,QAAQC,QAAQ,IAAI,GAE/D,EAEA7hB,EAAG,SACH9P,MAAAA,CAAOyhB,EAAOjgB,GACZm1B,EAAgBn1B,EAAM,WAAYigB,EACpC,EAEAlT,EAAG,OACHpM,IAAAA,CAAKsf,EAAOjgB,GACVm1B,EAAgBn1B,EAAM,OAAQo1B,EAAYnV,EAAO5f,EAASga,SAASqQ,OACrE,EAEA5jB,EAAG,QACH2T,KAAAA,CAAMwF,EAAOjgB,GACXm1B,EAAgBn1B,EAAM,UAAWo1B,EAAYnV,EAAO5f,EAASga,SAAS+T,UACxE,EAEA+H,GAAI,WACJn3B,QAAAA,CAASihB,EAAOjgB,GACdm1B,EAAgBn1B,EAAM,WAAYo1B,EAAYnV,EAAO5f,EAASga,SAAS+b,WACzE,EAEAC,GAAAA,CAAIpW,EAAOjgB,GACTi1B,EAAcj1B,GACd,MAAM,KAAEk1B,GAASl1B,EACXrB,EAAMu2B,EAAKd,GACjBA,EAAWc,EAAK19B,OAChB09B,EAAKd,GAAY/2B,EAAM+oB,WAAWznB,GAAK,EACzC,EAIA6Z,GAAI,kBAGN,SAAS8d,GAAWC,GAClBnC,EAAW,EAEX,MAAMp0B,EAAO,CAAC,EACd,IAAK,IAAIV,EAAI,EAAGC,EAAIg3B,EAAQ/+B,OAAQ8H,EAAIC,IAAKD,EAAG,CAC9C,MAAsBk3B,EAAQD,EAAQj3B,GACtC,IAAmB2B,EAAMu1B,EAAM,GAC/B,MAAqBvW,EAAQuW,EAAM,GACnC,IAA4BzyB,EAAS8xB,EAAQ50B,GAG7C,KAAOH,IAAAA,SAAWiD,IAChB9C,EAAM8C,EACNA,EAAS8xB,EAAQ50B,GAInB,GAAK8C,GAOE,GAAIjD,IAAAA,WAAaiD,GAAS,CAC/B,MAAM0e,EAAS1e,EAAOkc,EAAOjgB,QACd4Z,IAAX6I,IACFziB,EAAKiB,GAAOwhB,EAEhB,MAZa,CACX,MAAMmT,EAAUtB,SAAgBxzB,IAAAA,IAAMT,EAASga,SAAUpZ,IACrD20B,EACF90B,IAAAA,IAAMd,EAAM,YAAYiB,IAAO20B,EAAQ3V,IAEvCoD,EAAOnC,KAAK,mBAAmBjgB,KAEnC,CAMF,CAEA,OAAOjB,CACT,CAUA,SAASy2B,GAAmBz2B,GAC1B,MAAMiC,EAAM,GACZ,IAAI3C,EAAI,EAIR,OAHAjC,EAAMoqB,eAAeznB,GAAM,CAACigB,EAAOhf,KACjCgB,EAAI3C,KAAO01B,EAAuB/zB,GAAOyzB,EAASM,EAAuB/U,EAAM,IAE1Ehe,EAAI0C,KAAKgwB,EAClB,CAEA,SAAS+B,GAAmB7zB,GAC1B,OAAK/B,IAAAA,QAAU+B,GAGXA,EAAKrL,OAAS,EACTqL,EAAK,GAEP,GAAGA,EAAK,KAAK4xB,IAAWgC,GAAmB5zB,EAAK,MAL9CA,CAMX,CAEA,SAAS8zB,GAAkBC,GACzB,IAAKA,IAAYA,EAAQ92B,KACvB,OAEF,IAAIwmB,EAAMsQ,EAAQ92B,KAOlB,OANIgB,IAAAA,QAAU81B,EAAQ72B,SAAW62B,EAAQ72B,OAAOvI,OAAS,IACvD8uB,GAAO,IAAIsQ,EAAQ72B,OAAO4E,KAAK,QAE7BiyB,EAAQ52B,OACVsmB,GAAOmO,EAAWgC,GAAmBG,EAAQ52B,OAExCsmB,CACT,CAmEA,SAASuQ,GAAsB72B,GAC7B,MAAMiC,EAAM,GACZ,IAAI3C,EAAI,EAIR,OAHAjC,EAAMoqB,eAAeznB,GAAM,CAACigB,EAAOhf,KACjCgB,EAAI3C,KAAO,GAAG2B,KAAO5D,EAAMwqB,cAAc5H,IAAQ,IAE5Che,EAAI0C,KAAK,IAClB,CAEA,SAASmyB,GAAsBj0B,GAC7B,OAAK/B,IAAAA,QAAU+B,GAGXA,EAAKrL,OAAS,EACTqL,EAAK,GAEP,GAAGA,EAAK,MAAMg0B,GAAsBh0B,EAAK,MALvCA,CAMX,CAEA,SAASk0B,GAAqBH,GAC5B,IAAKA,IAAYA,EAAQ92B,KACvB,OAEF,IAAIwmB,EAAMsQ,EAAQ92B,KAOlB,OANIgB,IAAAA,QAAU81B,EAAQ72B,SAAW62B,EAAQ72B,OAAOvI,OAAS,IACvD8uB,GAAO,IAAIsQ,EAAQ72B,OAAOi3B,IAAI35B,EAAMwqB,eAAeljB,KAAK,QAEtDiyB,EAAQ52B,OACVsmB,GAAO,IAAIuQ,GAAsBD,EAAQ52B,SAEpCsmB,CACT,CAEA,SAAS2Q,GAAsBt4B,EAAKyI,GAClC,MAAM8vB,EAAY,GAClB,IAAIC,EAAS,EACb,SAASC,EAAS7a,EAAQ0D,GACpBA,UACFiX,EAAUC,KAAY5a,EAAS0D,EAEnC,CACA,OAAInf,IAAAA,QAAUnC,GACL,MAETy4B,EAAS,GAAIhwB,GACbgwB,EAAS,KAAM/5B,EAAMwqB,cAAclpB,EAAIE,WACvCu4B,EAAS,KAAMN,GAAsBn4B,EAAIgC,OACzCy2B,EAAS,KAAMN,GAAsBn4B,EAAIkC,UACzCu2B,EAAS,MAAON,GAAsBn4B,EAAIK,WACnCk4B,EAAUvyB,KAAK,KACxB,CAmDA,UACE0yB,QA5MF,SAAiBjV,GACf,OAAOkU,GAAWj5B,EAAM8kB,iBAAiBC,GAC3C,EA2MEkV,SAjNF,SAAkBC,GAChB,OAAOjB,GAAWj5B,EAAM8kB,iBAAiB,IAAIoV,GAAQ,MACvD,EAgNEjD,WACAkD,MA1KF,SAAex3B,GACb,MAAMy3B,EAAa,GACnB,IAAIna,EAAM,EAEV,SAASoa,EAAYnb,EAAQ0D,GACvBA,UACFwX,EAAWna,KAASwX,EAAuBvY,GAlSlC,IAmSwBuY,EAAuB7U,GAE5D,CA2BAyX,EAAY,IAAK13B,EAAKO,MACtBm3B,EAAY,IAAK13B,EAAK81B,MACtB4B,EAAY,IAAK13B,EAAKiwB,QA3BtB,SAAiB0H,GACf,GAAKA,EAGL,IAAK,IAAIr4B,EAAI,EAAGC,EAAIo4B,EAAQngC,OAAQ8H,EAAIC,IAAKD,EACvCwB,IAAAA,QAAU62B,EAAQr4B,MAGtBo4B,EAAY,IAAKp4B,GACjBo4B,EAAY,IAAKC,EAAQr4B,GAAGT,UAC5B64B,EAAY,IAAKhB,GAAmBiB,EAAQr4B,GAAGqB,OAC/C+2B,EAAY,IAAKhB,GAAmBiB,EAAQr4B,GAAGuB,UAC/C62B,EAAY,KAAMhB,GAAmBiB,EAAQr4B,GAAGN,WAEpD,CAcA44B,CAAQ53B,EAAKk1B,MAZb,SAAoB2C,GAClB,GAAKA,EAGL,IAAK,IAAIv4B,EAAI,EAAGC,EAAIs4B,EAAQrgC,OAAQ8H,EAAIC,IAAKD,EAC3Co4B,EAAY,IAAKf,GAAkBkB,EAAQv4B,IAE/C,CAMAw4B,CAAW93B,EAAKg2B,UAEhB0B,EAAY,IAAK13B,EAAKd,MAEtB7B,EAAMoqB,eAAeznB,EAAKK,UAAU,CAAC4f,EAAOhf,KAG9B,WAARA,GAGJy2B,EAAYz2B,EAAKgf,EAAM,IAGzB,IAAImC,EAAM,GACV,GAAsB,oBAAXhV,OAAwB,CACjC,MAAM,SAAEkV,GAAalV,OACrBgV,EAAM,GAAGE,EAASyV,aAAazV,EAAS0V,OAAO1V,EAAS2V,UAC1D,CAKA,OAJIR,EAAWjgC,OAAS,IACtB4qB,GAAO,IAAIqV,EAAW9yB,KAAK,QAGtByd,CACT,EA4GE8V,SAtDF,SAAkBl4B,GAChB,MAAMm4B,EAAe,GACrB,IAAI7a,EAAM,EACV,SAASoa,EAAYU,EAASnY,EAAOoY,GACnC,GAAIpY,QAAuC,CACzC,MAAMqY,EAA0B,iBAAVrY,GAAsBoY,EAAc,IAAM,GAChEF,EAAa7a,KAAS,GAAG8a,KAAWE,IAAQrY,IAAQqY,IAAQC,MAC9D,CACF,CAsCA,OAjBAb,EAAY,MAAO,mBACnBA,EAAY,OAAQ13B,EAAKO,MAAM,GAC/Bm3B,EAAY,OAAQ13B,EAAK81B,MACzB4B,EAAY,SAAU13B,EAAKiwB,QAtB3B,SAAiB0H,GACf,GAAKA,EAIL,IAAK,IAAIr4B,EAAI,EAAGC,EAAIo4B,EAAQngC,OAAQ8H,EAAIC,IAAKD,EAC3Co4B,EAAY,MAAOT,GAAsBU,EAAQr4B,GAAIA,GAEzD,CAeAs4B,CAAQ53B,EAAKk1B,MAbb,SAAoB2C,GAClB,GAAKA,EAGL,IAAK,IAAIv4B,EAAI,EAAGC,EAAIs4B,EAAQrgC,OAAQ8H,EAAIC,IAAKD,EAC3Co4B,EAAY,GAAIX,GAAqBc,EAAQv4B,IAEjD,CAOAw4B,CAAW93B,EAAKg2B,UAEhB34B,EAAMoqB,eAAeznB,EAAKK,UAAU,CAAC4f,EAAOhf,KAG9B,WAARA,GAGJy2B,EAAY,OAAOz2B,IAAOgf,GAAO,EAAK,IAExCyX,EAAY,OAAQ13B,EAAKd,MACzBw4B,EAAY,MAAO,kBACZS,EAAaxzB,KAAK,KAC3B,GC7bA,MAAM6zB,GACJluB,WAAAA,CAAYmuB,EAASlV,EAAMzjB,EAAMqb,EAAUud,EAAMC,EAAKC,EAAQtW,EAAU5K,EAAWmhB,EAAaC,GAC9F9hC,KAAKoQ,OAAS,EACdpQ,KAAKyhC,QAAUA,EACfzhC,KAAKusB,KAAOA,EACZvsB,KAAKggB,QAAUlX,EACf9I,KAAKmkB,SAAWA,EAChBnkB,KAAK0hC,KAAOA,EACZ1hC,KAAK+hC,KAAO,EAEZ/hC,KAAK2hC,IAAMA,EAEX3hC,KAAK4hC,OAASA,EACd5hC,KAAKsrB,UAAYA,GAAY,KAAKvS,WAAW,GAC7C/Y,KAAK0gB,UAAYA,GAAa,EAC9B1gB,KAAK6hC,YAAcA,EACnB7hC,KAAK8hC,OAASA,EACd9hC,KAAKgiC,eAAiB,EACtBhiC,KAAKiiC,aAAe,EACpBjiC,KAAKkiC,SAAW,EAEhBliC,KAAKmiC,MAAQ,GAEbniC,KAAKoiC,MAAQ,EACK,MAAdt5B,EAAKyjB,KACPvsB,KAAKoiC,OAASZ,GAAKa,MAAMC,SACF,MAAdx5B,EAAKyjB,OACdvsB,KAAKoiC,OAASZ,GAAKa,MAAME,OAE7B,CAEAC,KAAAA,GACE,OAAOxiC,KAAK2hC,GACd,CAEAc,UAAAA,GACE,OAA+B,IAAxBziC,KAAKggB,QAAQuK,MACtB,CAEAmY,aAAAA,GACE,MAAM,KAAEnW,GAASvsB,KACjB,OAAIusB,EAAK/rB,OAAS,EACT+rB,EAEFvsB,KAAKggB,QAAQuM,KAAKgV,MAC3B,CAEAoB,WAAAA,CAAYC,GACV,MAAM,MAAET,GAAUniC,KAClB,IAAK,IAAIsI,EAAI,EAAGC,EAAI45B,EAAM3hC,OAAQ8H,EAAIC,IAAKD,EACzCs6B,EAAQT,EAAM75B,GAElB,CAEAu6B,WAAAA,GACE,IAAItW,EAAO,GAQX,OAPqB,OAAjBvsB,KAAKyhC,UACqB,OAAxBzhC,KAAKyhC,QAAQqB,SACfvW,GAAQ,GAAGvsB,KAAKyhC,QAAQqB,OAAOC,cAEjCxW,GAAQ,GAAGvsB,KAAKyhC,QAAQuB,cAE1BzW,GAAQvsB,KAAKusB,KACNA,CACT,CAQA0W,aAAe,CACbV,OAAQ,EAGRD,SAAU,EAEVY,UAAW,MAIf,YCvGA,MAAMC,GACJ7vB,WAAAA,CAAYiX,EAAQgC,EAAM6W,EAAUC,EAAQ9f,EAAQ+f,EAAeC,GACjEvjC,KAAKuqB,OAASA,EACdvqB,KAAKusB,KAAOA,EACZvsB,KAAKojC,SAAWA,EAChBpjC,KAAKqjC,OAASA,EACdrjC,KAAKujB,OAASA,EACdvjB,KAAKsjC,cAAgBA,EACrBtjC,KAAKwjC,gBAAkBD,CACzB,CAEAN,iBAAmB,CAEjBQ,GAAI,EACJC,KAAM,EACNC,GAAI,EACJC,KAAM,EACNC,IAAK,IAIPZ,YAAc,MAAH,CAET5nB,EAAG8nB,GAAQW,UAAUL,GACrB3N,GAAIqN,GAAQW,UAAUJ,KACtB5oB,EAAGqoB,GAAQW,UAAUH,GACrBroB,EAAG6nB,GAAQW,UAAUF,KACrBG,GAAIZ,GAAQW,UAAUD,MANV,GAWdZ,sBAAwB,MAEtB,KACA,IAAIE,GAAQ,EAAG,IAAK,WAAY,MAAO,IAAK,IAAM,CAAC,IACnD,IAAIA,GAAQ,EAAG,KAAM,SAAU,MAAO,IAAK,IAAM,CAAC,IAClD,IAAIA,GAAQ,EAAG,KAAM,UAAW,MAAO,KAAM,IAAM,CAAC,IACpD,IAAIA,GAAQ,EAAG,KAAM,YAAa,MAAO,IAAK,IAAM,CAAC,IACrD,IAAIA,GAAQ,EAAG,IAAK,QAAS,MAAO,KAAM,IAAM,CAAC,IACjD,IAAIA,GAAQ,EAAG,IAAK,SAAU,OAAQ,KAAM,IAAM,CAAC,IACnD,IAAIA,GAAQ,EAAG,IAAK,WAAY,OAAQ,KAAM,IAAM,CAAC,EAAG,IACxD,IAAIA,GAAQ,EAAG,IAAK,SAAU,OAAQ,IAAK,IAAM,CAAC,EAAG,IACrD,IAAIA,GAAQ,EAAG,IAAK,WAAY,OAAQ,KAAM,IAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,OAAQ,MAAO,KAAM,KAAM,CAAC,IAClD,IAAIA,GAAQ,GAAI,KAAM,SAAU,MAAO,KAAM,IAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,KAAM,YAAa,OAAQ,KAAM,IAAK,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,KAAM,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,IAAK,CAAC,IACpD,IAAIA,GAAQ,GAAI,IAAK,aAAc,OAAQ,KAAM,IAAM,CAAC,EAAG,IAC3D,IAAIA,GAAQ,GAAI,IAAK,SAAU,MAAO,EAAG,KAAM,CAAC,EAAG,EAAG,IACtD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,KAAM,IAAM,CAAC,EAAG,EAAG,EAAG,IAChE,IAAIA,GAAQ,GAAI,KAAM,QAAS,OAAQ,KAAM,KAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,IAAK,YAAa,KAAM,KAAM,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,UAAW,MAAO,MAAO,IAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,WAAY,MAAO,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,IAAK,WAAY,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,WAAY,GAAI,IAAK,KAAM,CAAC,IAClD,IAAIA,GAAQ,GAAI,KAAM,YAAa,OAAQ,IAAK,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,OAAQ,OAAQ,IAAK,KAAM,CAAC,IAClD,IAAIA,GAAQ,GAAI,KAAM,SAAU,MAAO,IAAK,KAAM,CAAC,IACnD,IAAIA,GAAQ,GAAI,KAAM,SAAU,MAAO,KAAM,IAAK,CAAC,IACnD,IAAIA,GAAQ,GAAI,KAAM,SAAU,MAAO,IAAK,KAAM,CAAC,IACnD,IAAIA,GAAQ,GAAI,KAAM,OAAQ,MAAO,KAAM,KAAM,CAAC,IAClD,IAAIA,GAAQ,GAAI,KAAM,UAAW,MAAO,KAAM,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,YAAa,MAAO,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,UAAW,MAAO,KAAM,KAAM,CAAC,EAAG,IACxD,IAAIA,GAAQ,GAAI,KAAM,WAAY,MAAO,IAAK,KAAM,CAAC,EAAG,EAAG,IAC3D,IAAIA,GAAQ,GAAI,KAAM,UAAW,KAAM,IAAK,KAAM,CAAC,EAAG,EAAG,EAAG,IAC5D,IAAIA,GAAQ,GAAI,KAAM,UAAW,KAAM,KAAM,KAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,KAAM,WAAY,MAAO,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,YAAa,MAAO,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,IAAK,UAAW,MAAO,IAAK,KAAM,CAAC,IACnD,IAAIA,GAAQ,GAAI,KAAM,YAAa,MAAO,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,UAAW,MAAO,IAAK,KAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,KAAM,aAAc,MAAO,IAAK,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,aAAc,MAAO,IAAK,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,YAAa,OAAQ,IAAK,IAAK,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,YAAa,OAAQ,KAAM,IAAK,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,SAAU,OAAQ,KAAM,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,KAAM,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,SAAU,OAAQ,KAAM,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,MAAO,OAAQ,KAAM,KAAM,CAAC,EAAG,IACrD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,IAAK,KAAM,CAAC,EAAG,IACzD,IAAIA,GAAQ,GAAI,KAAM,YAAa,MAAO,KAAM,KAAM,CAAC,EAAG,EAAG,IAC7D,IAAIA,GAAQ,GAAI,IAAK,SAAU,OAAQ,KAAM,IAAK,CAAC,EAAG,EAAG,EAAG,IAC5D,IAAIA,GAAQ,GAAI,KAAM,QAAS,OAAQ,KAAM,KAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,KAAM,SAAU,OAAQ,IAAK,KAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,KAAM,SAAU,OAAQ,IAAK,KAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,KAAM,YAAa,OAAQ,IAAK,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,SAAU,OAAQ,IAAK,KAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,KAAM,eAAgB,OAAQ,IAAK,KAAM,CAAC,IAC1D,IAAIA,GAAQ,GAAI,KAAM,YAAa,OAAQ,IAAK,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,aAAc,MAAO,IAAK,IAAK,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,IAAK,IAAK,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,aAAc,OAAQ,IAAK,KAAM,CAAC,IACxD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,aAAc,MAAO,IAAK,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,SAAU,OAAQ,IAAK,KAAM,CAAC,IACpD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,YAAa,OAAQ,IAAK,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,IAAK,WAAY,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,SAAU,MAAO,IAAK,KAAM,CAAC,IACnD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,KAAM,IAAK,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,OAAQ,OAAQ,KAAM,IAAK,CAAC,IAClD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,KAAM,IAAK,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,KAAM,KAAM,CAAC,EAAG,IAC1D,IAAIA,GAAQ,GAAI,KAAM,OAAQ,MAAO,KAAM,KAAM,CAAC,EAAG,IACrD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,EAAG,IACxD,IAAIA,GAAQ,GAAI,KAAM,WAAY,IAAK,IAAK,KAAM,CAAC,EAAG,EAAG,IACzD,IAAIA,GAAQ,GAAI,KAAM,WAAY,IAAK,IAAK,IAAK,CAAC,EAAG,EAAG,EAAG,IAC3D,IAAIA,GAAQ,GAAI,KAAM,QAAS,IAAK,IAAK,IAAK,CAAC,IAC/C,IAAIA,GAAQ,GAAI,KAAM,WAAY,IAAK,IAAK,EAAG,CAAC,IAChD,IAAIA,GAAQ,GAAI,KAAM,SAAU,OAAQ,IAAK,IAAK,CAAC,IACnD,IAAIA,GAAQ,GAAI,KAAM,WAAY,OAAQ,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,UAAW,OAAQ,IAAK,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,eAAgB,OAAQ,IAAK,KAAM,CAAC,IAC1D,IAAIA,GAAQ,GAAI,IAAK,UAAW,OAAQ,KAAM,KAAM,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,YAAa,OAAQ,IAAK,KAAM,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,YAAa,MAAO,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,YAAa,MAAO,IAAK,KAAM,CAAC,IACtD,IAAIA,GAAQ,GAAI,KAAM,SAAU,MAAO,IAAK,IAAK,CAAC,IAClD,IAAIA,GAAQ,GAAI,KAAM,YAAa,MAAO,IAAK,IAAK,CAAC,IACrD,IAAIA,GAAQ,GAAI,KAAM,cAAe,MAAO,IAAK,IAAK,CAAC,IACvD,IAAIA,GAAQ,GAAI,KAAM,cAAe,MAAO,IAAK,IAAK,CAAC,IACvD,IAAIA,GAAQ,IAAK,KAAM,UAAW,MAAO,IAAK,IAAK,CAAC,IACpD,IAAIA,GAAQ,IAAK,KAAM,cAAe,MAAO,IAAK,IAAK,CAAC,IACxD,IAAIA,GAAQ,IAAK,KAAM,WAAY,MAAO,IAAK,IAAK,CAAC,IACrD,IAAIA,GAAQ,IAAK,KAAM,aAAc,MAAO,IAAK,IAAK,CAAC,IACvD,IAAIA,GAAQ,IAAK,KAAM,gBAAiB,IAAK,IAAK,IAAK,CAAC,IACxD,IAAIA,GAAQ,IAAK,KAAM,UAAW,IAAK,IAAK,IAAK,CAAC,IAClD,IAAIA,GAAQ,IAAK,KAAM,aAAc,IAAK,IAAK,IAAK,CAAC,IACrD,IAAIA,GAAQ,IAAK,KAAM,UAAW,IAAK,IAAK,IAAK,CAAC,IAClD,IAAIA,GAAQ,IAAK,KAAM,UAAW,IAAK,IAAK,IAAK,CAAC,IAClD,IAAIA,GAAQ,IAAK,KAAM,aAAc,IAAK,IAAK,IAAK,CAAC,KA/G/B,GAoHxBF,cAAgB,MAAH,CAGXrnB,EAAG,IAAIunB,GAAQ,EAAG,IAAK,YAAa,MAAO,IAAK,IAAM,CAAC,IACvD5nB,EAAG,IAAI4nB,GAAQ,EAAG,IAAK,UAAW,MAAO,IAAK,IAAM,CAAC,MAJvC,IAWjB,WACC,MAAMa,EAAiBb,GAAQc,eACzBC,EAASf,GAAQgB,OACvB,IAAK,IAAI77B,EAAI,EAAGC,EAAIy7B,EAAexjC,OAAQ8H,EAAIC,IAAKD,EAAG,CACrD,MAAM0X,EAAUgkB,EAAe17B,GAC3B0X,IACFkkB,EAAOlkB,EAAQuM,MAAQvM,EAE3B,CACD,CATA,GAYDmjB,GAAQiB,UAAY,SAAUpkB,GAC5B,IAAIlX,EAAOq6B,GAAQgB,OAAOnkB,GAI1B,OAHKlX,IACHA,EAAOq6B,GAAQgB,OAAOnkB,GAAW,IAAImjB,GAAQ,EAAGnjB,EAAS,UAAW,EAAG,EAAK,IAAM,CAAC,KAE9ElX,CACT,EAEA,YCnLMu7B,GAAa,CAEjBC,QAAS,EAETC,SAAU,EAEVC,SAAU,GAGZ,SAASC,GAAW7Q,GAClB,OAAOA,EAAKzP,QACd,CAcA,MAAMugB,GACJpxB,WAAAA,CAAY2Q,EAAM0gB,EAAOC,EAAO97B,EAAM+7B,GAKpC,GAJA7kC,KAAK8kC,MAAQ7gB,EACbjkB,KAAK+kC,OAASJ,EACd3kC,KAAKglC,OAASH,EACd7kC,KAAKooB,QAAU,EACXnE,EAAO0gB,EACT,MAAM,IAAIt5B,MAAM,sDAElBrL,KAAKilC,OAASL,EACd5kC,KAAKklC,MAAQp8B,CACf,CAEAq8B,OAAAA,GACE,OAAOnlC,KAAK8kC,KACd,CAEAM,QAAAA,GACE,OAAOplC,KAAK+kC,MACd,CAEAM,QAAAA,GACE,OAAOrlC,KAAKilC,MACd,CAEAK,UAAAA,GACE,OAAOtlC,KAAK8kC,MAAM3gB,SAASohB,WAAWvlC,KAAK+kC,OAAO5gB,SACpD,CAEAqhB,iBAAAA,CAAkBC,EAAU7C,GAC1B,MAAM,MAAET,GAAUsD,EAClB,IAAK,IAAIn9B,EAAI,EAAGC,EAAI45B,EAAM3hC,OAAQ8H,EAAIC,IAAKD,EACzCs6B,EAAQT,EAAM75B,GAAGw8B,QAAUW,EAAWtD,EAAM75B,GAAGw8B,MAAQ3C,EAAM75B,GAAGy8B,OAEpE,CAEAW,eAAAA,CAAgB9C,GACd,MAAM3e,EAAOjkB,KAAK8kC,MACZH,EAAQ3kC,KAAK+kC,OACnB/kC,KAAKwlC,kBAAkBvhB,GAAO2P,IACxBA,IAAS+Q,GAGb/B,EAAQhP,EAAK,IAEf5zB,KAAKwlC,kBAAkBb,GAAQ/Q,IACzBA,IAAS3P,GAGb2e,EAAQhP,EAAK,GAEjB,CAEA+R,eAAAA,CAAgB/C,GAEd,MAAM3e,EAAOjkB,KAAK8kC,MACZH,EAAQ3kC,KAAK+kC,OACbx5B,EAAOvL,KACbuL,EAAKi6B,kBAAkBvhB,GAAO2P,IACxBA,IAAS+Q,GAGbp5B,EAAKi6B,kBAAkB5R,GAAOgS,IACxBA,IAAW3hB,GAGf2e,EAAQgD,EAAO,GACf,IAEJr6B,EAAKi6B,kBAAkBb,GAAQ/Q,IACzBA,IAAS3P,GAGb1Y,EAAKi6B,kBAAkB5R,GAAOgS,IACxBA,IAAWjB,GAGf/B,EAAQgD,EAAO,GACf,GAEN,CAEAC,OAAAA,CAAQC,EAAUC,EAASC,GAEzB,IAAIC,EAAa,EACbC,EAAY,EAChB,MAAMC,EAASL,EAASM,QACxB,SAASC,EAASzS,GAChBuS,EAAO1uB,KAAKuuB,EAAUpS,IACtBuS,EAAOG,IAAIR,GACKC,EAAQQ,IAAIJ,GACd,IACVF,IAEAC,CAEN,CACA,SAASM,EAAY5S,GACO,MAAtBA,EAAK5T,QAAQuM,MACf8Z,EAASzS,EAEb,CAEA,MAAM6S,EAAS,CACb,CAACzmC,KAAK0lC,gBAAiBc,GACvB,CAACxmC,KAAK0lC,gBAAiBW,GACvB,CAACrmC,KAAK2lC,gBAAiBa,GACvB,CAACxmC,KAAK2lC,gBAAiBU,IAGzB,IAAK,IAAIK,EAAU,EAAGA,EAAUD,EAAOjmC,SAAUkmC,EAAS,CAExD,GADAD,EAAOC,GAAS,GAAG36B,KAAK/L,KAAMymC,EAAOC,GAAS,IAC1CR,EAAYD,EACd,OAAOF,EAAQY,gBAAgB,GAEjC,GAAIT,EAAYD,EACd,OAAOF,CAEX,CACA,OAAOA,CACT,CAEAa,aAAAA,CAAcZ,GACZ,MAAM/hB,EAAOjkB,KAAK8kC,MACZH,EAAQ3kC,KAAK+kC,OACnB,IAAIjS,EAAQ7O,EACR8O,EAAS4R,EACbqB,OAA0BpjB,IAAdojB,EAA0BvB,GAAauB,EAC/C/hB,EAAKke,MAAM3hC,OAASmkC,EAAMxC,MAAM3hC,SAClCsyB,EAAQ6R,EACR5R,EAAS9O,GAEX,IAAI4iB,EAAQ/T,EACRgU,EAAW,EACf,MAAM,MAAE3E,GAAUpP,EAClB,IAAK,IAAIzqB,EAAI,EAAGC,EAAI45B,EAAM3hC,OAAQ8H,EAAIC,IAAKD,EAAG,CAC5C,IAAIy+B,EAAU5E,EAAM75B,GAAGw8B,MACnB3C,EAAM75B,GAAGw8B,QAAU/R,IACrBgU,EAAU5E,EAAM75B,GAAGy8B,QAEjBgC,EAAQ5E,MAAM3hC,OAASsmC,GAAYC,IAAYjU,IACjD+T,EAAQE,EACRD,EAAWC,EAAQ5E,MAAM3hC,OAE7B,CACA,MAAMwmC,EAAYhB,EAAUjT,GACtBkU,EAASjB,EAAUlT,GAAOsT,QAAQE,IAAIU,GACtCE,EAAUlB,EAAUa,GAAOT,QAAQE,IAAIU,GAY7C,OAXAE,EAAQC,aAAaF,EAAQC,GACzBA,EAAQE,WAAa,MACvBF,EAAQvgC,IAAI,EAAG,EAAG,GAEpBsgC,EAAOI,YACPH,EAAQG,YACRJ,EAAOE,aAAaD,EAASD,GACzBA,EAAOG,WAAa,MACtBH,EAAOtgC,IAAI,EAAG,EAAG,GAEnBsgC,EAAOI,YACArnC,KAAK6lC,QAAQmB,EAAWC,EAAQjB,EACzC,CAEA/C,gBAAkB,KAAAoB,GAAA,GAGpBK,GAAKv4B,UAAUm7B,SAAWjD,GAE1B,YC5LMkD,GAAuB,CAAC,MAAQ,MAAO,IAAK,MAAO,OACnDC,GAAqB,CAAC,MAAO,OAC7BC,GAAqB,CAAC,MAAO,OAE7BC,GAAkB,CAAC,MAAQ,MAAO,KAAM,MAAQ,MAAO,KACvDC,GAAkB,CAAC,CACvBC,MAAO,CAAC,IAAK,KAAM,IAAK,MACxBC,MAAO,CAAC,OACP,CACDD,MAAO,CAAC,IAAK,MACbC,MAAO,CAAC,OACP,CACDD,MAAO,CAAC,IAAK,KAAM,IAAK,MACxBC,MAAO,CAAC,QAwRV,SA1QA,MACEv0B,WAAAA,CAAYw0B,EAAOh/B,EAAMi/B,EAAUC,GACjChoC,KAAK8iC,OAASgF,EACd9nC,KAAKioC,WAAa,KAClBjoC,KAAKklC,MAAQp8B,EACb9I,KAAKgjC,UAAY+E,EACjB/nC,KAAKkoC,OAASF,EACdhoC,KAAKmoC,MAAQ,EACbnoC,KAAKooB,QAAU,EAEfpoB,KAAKooC,OAAS,GACdpoC,KAAKqoC,WAAa,KAClBroC,KAAKsoC,WAAa,KAClBtoC,KAAKuoC,UAAY,KACjBvoC,KAAKwoC,UAAY,KACjBxoC,KAAKyoC,UAAY,KACjBzoC,KAAK0oC,cAAgB,KACrB1oC,KAAK2oC,UAAY,KACjB3oC,KAAK4oC,YAAc,KACnB5oC,KAAK6oC,WAAa,KAClB7oC,KAAK8oC,UAAW,EAChB9oC,KAAK+oC,MAAO,EACZ/oC,KAAKgpC,UAAY,KACjBhpC,KAAK6hC,YAAc,KACnB7hC,KAAK0gB,UAAY,IACnB,CAGAuoB,QAAAA,GACE,OAAOjpC,KAAK8iC,MACd,CAEAoG,WAAAA,GACE,OAAOlpC,KAAKgpC,SACd,CAEA12B,OAAAA,GACE,OAAOtS,KAAKklC,KACd,CAEAiE,WAAAA,GACE,OAAOnpC,KAAKgjC,SACd,CAEAoG,YAAAA,GACE,OAAOppC,KAAKqoC,UACd,CAEAgB,QAAAA,GACE,OAAOrpC,KAAKkoC,MACd,CAIAoB,OAAAA,CAAQ/c,EAAMzjB,EAAMygC,EAAK7H,EAAMC,EAAKC,EAAQnhB,EAAQC,EAAW8oB,EAAY1H,GACzE,MAAMlO,EAAO,IAAI4N,GAAKxhC,KAAMusB,EAAMzjB,EAAMygC,EAAK7H,EAAMC,EAAKC,EAAQnhB,EAAQC,EAAW8oB,EAAY1H,GAK/F,OAJgB9hC,KAAK8iC,OAAO2G,aACpBH,QAAQ1V,GAChB5zB,KAAKooC,OAAO57B,KAAKonB,GACjB5zB,KAAK+oC,KAAO/oC,KAAK+oC,MAAQpH,EAClB/N,CACT,CAEA8V,YAAAA,GACE,OAAO1pC,KAAKooC,OAAO5nC,MACrB,CAEAmpC,WAAAA,CAAY/G,GACV,MAAMiF,EAAQ7nC,KAAKooC,OACnB,IAAK,IAAI9/B,EAAI,EAAGC,EAAIs/B,EAAMrnC,OAAQ8H,EAAIC,IAChCq6B,EAAQiF,EAAMv/B,MADuBA,GAK7C,CAEAshC,eAAAA,CAAgBrd,GACd,IAAI+C,EAAM,KAQV,OAPAtvB,KAAK2pC,aAAa/V,GACZA,EAAKrH,OAASA,IAChB+C,EAAMsE,GACC,KAIJtE,CACT,CAEAua,oBAAAA,CAAqBC,GACnB,IAAIxa,EAAM,KACV,IAAK,IAAIhnB,EAAI,EAAGA,EAAIwhC,EAAMtpC,SAAU8H,EAElC,GADAgnB,EAAMtvB,KAAK4pC,gBAAgBE,EAAMxhC,IACrB,OAARgnB,EACF,OAAOA,EAGX,OAAOA,CACT,CAEAya,WAAAA,GACE,IAAIhI,EAAO,WACX,MAAM8F,EAAQ7nC,KAAKooC,OACnB,IAAK,IAAI9/B,EAAI,EAAGC,EAAIs/B,EAAMrnC,OAAQ8H,EAAIC,IAAKD,EACzCy5B,GAAQ8F,EAAMv/B,GAAGy5B,KAEnB/hC,KAAKmoC,MAAQpG,CACf,CAEAiI,qBAAAA,GACE,MAAMlhC,EAAO9I,KAAKklC,MAAM+E,MACxB,IAAK,IAAI3hC,EAAI,EAAGC,EAAIo/B,GAAgBnnC,OAAQ8H,EAAIC,IAAKD,EACnD,IAAK,IAAIoT,EAAI,EAAG3F,EAAI4xB,GAAgBr/B,GAAGs/B,MAAMpnC,OAAQkb,EAAI3F,IAAK2F,EAC5D,GAAI5S,IAAS6+B,GAAgBr/B,GAAGs/B,MAAMlsB,GACpC,OAAOisB,GAAgBr/B,GAAGu/B,MAIhC,OAAO,IACT,CAEAqC,eAAAA,CAAgB9Z,EAAKxgB,EAAMu6B,GACzB,MAAMC,EAAWpqC,KAAK6pC,qBAAqBtC,IAC3C,IAAI8C,EAAYrqC,KAAK6pC,qBAAqBrC,IACtC8C,EAAUtqC,KAAK6pC,qBAAqBpC,IAUxC,GARkB,OAAd4C,GAA+B,OAATz6B,IACxBy6B,EAAYz6B,EAAKi6B,qBAAqBrC,KAGxB,OAAZ8C,GAA6B,OAAT16B,IACtB06B,EAAU16B,EAAKi6B,qBAAqBpC,KAGrB,OAAb2C,GAAmC,OAAdC,GAAkC,OAAZC,EAC7C,OAGFla,EAAImY,UAAY6B,EAChBha,EAAIsY,cAAgByB,EAAgBC,GACpCha,EAAIwY,YAAcuB,EAAgBG,GAASlE,QAAQE,IAAI6D,EAAgBE,IACvEja,EAAI0Y,UAAW,EAEf,MAAMyB,EAAYvqC,KAAK6pC,qBAAqBnC,IACtC8C,EAAaxqC,KAAKgqC,wBAClBS,EAA2B,OAAfD,EAAsBxqC,KAAK6pC,qBAAqBW,GAAc,KAC9D,OAAdD,GAAoC,OAAdE,IAG1Bra,EAAIyY,WAAa,CAACsB,EAAgBI,GAAYJ,EAAgBM,IAChE,CAEAC,QAAAA,CAASC,EAAaC,EAAaC,EAAaC,GAC9C,MAAMC,EAAUH,EAAYxE,QAAQE,IAAIqE,GAClCK,EAAUL,EAAYvE,QAAQE,IAAIuE,GAGxC,GAFAG,EAAQ7D,aAAa4D,EAASC,GAC9BA,EAAQ7D,aAAa4D,EAASC,GAAS3D,YACtB,OAAbyD,GAAqBA,EAAStqC,SAAW,KAAQ,CAC9BwqC,EAAQxqC,SAAW,MAAUiI,KAAKoI,IAAIi6B,EAASG,QAAQD,IAAYviC,KAAKC,GAAK,GAEhGsiC,EAAQE,QAEZ,CACA,OAAOF,CACT,CAEAG,cAAAA,CAAeC,EAASC,EAAMC,EAASlb,EAAKmb,EAAgBpB,GAC1D,MAAMqB,EAAyB,OAATH,EAEhBI,EAAKtB,EAAgBnqC,KAAKuoC,WAC1BqC,EAAc,IAAIc,EAAAA,QAAcD,EAAGv1B,EAAGu1B,EAAGhxB,EAAGgxB,EAAG3vB,GACrD,GAAIyvB,EACFvrC,KAAKkqC,gBAAgB9Z,EAAKkb,EAASnB,OADrC,CAKA,GAAIqB,EACFpb,EAAIuY,UAAYwB,EAAgBnqC,KAAKsoC,YAAYlC,YAC5C,CACL,MAAMuE,EAAcU,EAAK3C,cACzBtY,EAAIuY,UAAYgC,EAAYvE,QAAQuF,KAAKf,EAAa,IACtDxa,EAAIwY,YAAc5oC,KAAK0qC,SAASC,EAAaC,EAAaT,EAAgBiB,EAAQ5C,WAAY6C,EAAKzC,YACrG,CACAxY,EAAIsY,cAAgBkC,CATpB,CAUF,CAEAgB,UAAAA,CAAWP,EAAMz7B,EAAMi8B,GAErB7rC,KAAKmrC,eAAeE,EAAMA,EAAMz7B,EAAM5P,KAAM6rC,GAAYjY,GAASA,EAAKzP,UACxE,CAEA2nB,WAAAA,CAAYC,GACV,GAAI/rC,KAAK8iC,SAAWiJ,EAAejJ,OACjC,OAAO,EAET,GAAI9iC,OAAS+rC,EACX,OAAO,EAET,IAAIzc,GAAM,EAYV,OAXAtvB,KAAK2pC,aAAa/V,IAChB,MAAM,MAAEuO,GAAUvO,EAClB,IAAK,IAAItrB,EAAI,EAAGC,EAAI45B,EAAM3hC,OAAQ8H,EAAIC,IAAKD,EAAG,CAC5C,MAAMurB,EAAOsO,EAAM75B,GACnB,GAAIurB,EAAKiR,MAAMrD,UAAYsK,GAAkBlY,EAAKkR,OAAOtD,UAAYsK,EAEnE,OADAzc,GAAM,GACC,CAEX,CACA,OAAO,CAAK,IAEPA,CACT,CAEA0c,SAAAA,GACE,MAAMzgC,EAAOvL,MACZA,KAAKsoC,YAActoC,KAAKooC,OACzBpoC,KAAKyoC,UAAYzoC,KAAKooC,OAAOpoC,KAAKooC,OAAO5nC,OAAS,GAElDR,KAAKuoC,UAAY,KACjBvoC,KAAKwoC,UAAY,KAEjB,IAAIyD,EAAY,EACZpK,EAAc,EACdqK,EAAa,EACbxrB,EAAY,EAChB1gB,KAAK2pC,aAAaxzB,IACO,OAAnB5K,EAAKg9B,WACHpyB,EAAEurB,OAASyB,GAAQW,UAAUJ,OAC/Bn4B,EAAKg9B,UAAYpyB,GAGE,OAAnB5K,EAAKi9B,WACHryB,EAAEurB,OAASyB,GAAQW,UAAUF,OAC/Br4B,EAAKi9B,UAAYryB,GAGjBA,EAAE0rB,cACJA,GAAe1rB,EAAE0rB,YACjBoK,KAEE91B,EAAEuK,YACJA,GAAavK,EAAEuK,UACfwrB,KAEyB,OAAnB3gC,EAAKg9B,WAAyC,OAAnBh9B,EAAKi9B,aAGtCyD,EAAY,IACdjsC,KAAK6hC,YAAcA,EAAcoK,GAE/BC,EAAa,IACflsC,KAAK0gB,UAAYA,EAAYwrB,GAIR,OAAnBlsC,KAAKuoC,WAAyC,OAAnBvoC,KAAKwoC,YAClCxoC,KAAK8oC,UAAW,GAEK,OAAnB9oC,KAAKuoC,YACPvoC,KAAKuoC,UAAYvoC,KAAKsoC,YAED,OAAnBtoC,KAAKwoC,YACPxoC,KAAKwoC,UAAYxoC,KAAKyoC,UAE1B,GC1RF,MAAM0D,GACJ74B,WAAAA,CAAYiZ,EAAM6W,EAAUgJ,GAC1BpsC,KAAKiqC,MAAQ1d,EACbvsB,KAAKqsC,UAAYjJ,EACjBpjC,KAAKosC,WAAaA,EAClBpsC,KAAKoiC,MAAQ,CACf,CAEAW,OAAAA,GACE,OAAO/iC,KAAKiqC,KACd,CAGAhH,qBAAuB,MAAH,CAElBqJ,IAAK,IAAIH,GAAY,MAAO,UAAW,KACvCI,IAAK,IAAIJ,GAAY,MAAO,WAAY,KACxCK,IAAK,IAAIL,GAAY,MAAO,aAAc,KAC1CM,IAAK,IAAIN,GAAY,MAAO,gBAAiB,KAC7CO,IAAK,IAAIP,GAAY,MAAO,WAAY,KACxCQ,IAAK,IAAIR,GAAY,MAAO,YAAa,KACzCS,IAAK,IAAIT,GAAY,MAAO,gBAAiB,KAC7CU,IAAK,IAAIV,GAAY,MAAO,UAAW,KACvCW,IAAK,IAAIX,GAAY,MAAO,YAAa,KACzCY,IAAK,IAAIZ,GAAY,MAAO,aAAc,KAC1Ca,IAAK,IAAIb,GAAY,MAAO,UAAW,KACvCc,IAAK,IAAId,GAAY,MAAO,SAAU,KACtCe,IAAK,IAAIf,GAAY,MAAO,aAAc,KAC1CgB,IAAK,IAAIhB,GAAY,MAAO,gBAAiB,KAC7CiB,IAAK,IAAIjB,GAAY,MAAO,UAAW,KACvCkB,IAAK,IAAIlB,GAAY,MAAO,cAAe,KAC3CmB,IAAK,IAAInB,GAAY,MAAO,iBAAkB,KAC9CoB,IAAK,IAAIpB,GAAY,MAAO,SAAU,KACtCqB,IAAK,IAAIrB,GAAY,MAAO,YAAa,KACzCsB,IAAK,IAAItB,GAAY,MAAO,aAAc,KAC1CuB,IAAK,IAAIvB,GAAY,MAAO,WAAY,KACxCwB,IAAK,IAAIxB,GAAY,MAAO,SAAU,KACtCnxB,EAAG,IAAImxB,GAAY,IAAK,UAAW,KACnCrxB,EAAG,IAAIqxB,GAAY,IAAK,WAAY,KACpClwB,EAAG,IAAIkwB,GAAY,IAAK,UAAW,KACnCvxB,EAAG,IAAIuxB,GAAY,IAAK,UAAW,KACnC5wB,EAAG,IAAI4wB,GAAY,IAAK,UAAW,KACnCzxB,EAAG,IAAIyxB,GAAY,IAAK,SAAU,KAClCyB,GAAI,IAAIzB,GAAY,KAAM,UAAW,KACrC0B,GAAI,IAAI1B,GAAY,KAAM,WAAY,KACtC2B,GAAI,IAAI3B,GAAY,KAAM,UAAW,KACrC4B,GAAI,IAAI5B,GAAY,KAAM,UAAW,KACrC6B,GAAI,IAAI7B,GAAY,KAAM,UAAW,KACrC8B,GAAI,IAAI9B,GAAY,KAAM,SAAU,KACpC,KAAM,IAAIA,GAAY,KAAM,UAAW,KACvC,KAAM,IAAIA,GAAY,KAAM,WAAY,KACxC,KAAM,IAAIA,GAAY,KAAM,UAAW,KACvC,KAAM,IAAIA,GAAY,KAAM,UAAW,KACvC,KAAM,IAAIA,GAAY,KAAM,UAAW,KACvC,KAAM,IAAIA,GAAY,KAAM,SAAU,KACtC+B,IAAK,IAAI/B,GAAY,MAAO,QAAS,IACrCgC,IAAK,IAAIhC,GAAY,MAAO,QAAS,IACrCiC,IAAK,IAAIjC,GAAY,MAAO,QAAS,IACrCkC,IAAK,IAAIlC,GAAY,MAAO,QAAS,IACrCmC,IAAK,IAAInC,GAAY,MAAO,UAAW,IACvCoC,IAAK,IAAIpC,GAAY,MAAO,iBAAkB,MA/CzB,GAyDvBlJ,aAAe,CAGbuL,QAAS,EAETC,MAAO,EAEPC,OAAQ,EAERC,MAAO,EAEPC,SAAU,GAEVpK,SAAU,GAKVqK,QAAS,IAETC,OAAQ,IAERC,WAAY,KAEZC,IAAK,KAELC,IAAK,KAGLC,MAAO,OAKX,SAASC,GAASC,EAAM/nC,GACtB,IAAK,IAAIiB,EAAI,EAAGC,EAAIlB,EAAK7G,OAAQ8H,EAAIC,IAAKD,EAAG,CAC3C,MAAMgnB,EAAM6c,GAAYkD,cAAchoC,EAAKiB,IACvCgnB,IACFA,EAAI8S,OAASgN,EAEjB,CACF,CAEA,MAAM,MAAE/M,IAAU8J,GAClBgD,GAAS9M,GAAM6M,MAAO,CAAC,MAAO,MAAO,MAAO,QAE5CC,GAAS9M,GAAMmM,QAAS,CACtB,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/D,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC/D,MAAO,QAETW,GAAS9M,GAAMoM,MAAO,CAAC,MAAO,MAAO,QACrCU,GAAS9M,GAAMqM,OAAQ,CAAC,MAAO,QAC/BS,GAAS9M,GAAMsM,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,QAC1DQ,GAAS9M,GAAMuM,SAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAClFO,GAAS9M,GAAMmC,SAAU,CAAC,MAAO,MAAO,QAExC2K,GAAS9M,GAAMwM,QAAS,CACtB,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAC7C,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,OAE/CM,GAAS9M,GAAMyM,OAAQ,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,OACrEK,GAAS9M,GAAM0M,WAAY,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,OACzEI,GAAS9M,GAAM2M,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,OACnDG,GAAS9M,GAAM4M,IAAK,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,OAyB9C,SAAmBjmB,EAAO3hB,GACxB,MAAMuS,EAAOzP,OAAOyP,KAAKvS,GACzB,IAAK,IAAIiB,EAAI,EAAGC,EAAIqR,EAAKpZ,OAAQ8H,EAAIC,IAAKD,EAAG,CAC3C,MAAM2B,EAAM2P,EAAKtR,GACX2gB,EAAQ5hB,EAAK4C,GACnBkiC,GAAYkD,cAAcplC,GAAK+e,GAASC,CAC1C,CACF,CAEAqmB,CAAU,iBAhCI,CACZvC,IAAK,IACLY,IAAK,IACLX,IAAK,IACLG,IAAK,IACLT,IAAK,IACLQ,IAAK,IACLZ,IAAK,IACLO,KAAM,GACNW,KAAM,GACND,KAAM,GACNE,KAAM,GACNC,KAAM,IACNN,KAAM,IACNN,KAAM,IACNF,KAAM,IACND,KAAM,IACNF,KAAM,IACND,KAAM,IACNS,KAAM,IACNV,KAAM,MAcR,YC7KMgD,GACK,EADLA,GAEK,EAFLA,GAGK,EA8KX,SAlKA,MACEj8B,WAAAA,CAAYk8B,EAASjjB,GACnBvsB,KAAKyvC,SAAWD,EAChBxvC,KAAKiqC,MAAQ1d,EACbvsB,KAAKmoC,MAAQ,EACbnoC,KAAKooB,QAAU,EACfpoB,KAAK0vC,UAAY,GAEjB1vC,KAAK2vC,YAAc5nC,OAAO6nC,kBAC1B5vC,KAAK6vC,YAAc9nC,OAAO+nC,iBAC5B,CAEArG,UAAAA,GACE,OAAOzpC,KAAKyvC,QACd,CAEA1M,OAAAA,GACE,OAAO/iC,KAAKiqC,KACd,CAEA8F,WAAAA,GACE,OAAO/vC,KAAK0vC,SACd,CAEAM,cAAAA,GACE,MAAMC,EAAWjwC,KAAK0vC,WAEhB,QAAElB,EAAO,QAAEK,GAAY1C,GAAY9J,MAEzCriC,KAAK8I,KAAOymC,GAEZ,IAAK,IAAIjnC,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAAG,CAC/C,MAAM,MAAE85B,GAAU6N,EAAS3nC,GAAG48B,MAE9B,GAA0B,IAArB9C,EAAQyM,GAAgB,CAC3B7uC,KAAK8I,KAAOymC,GACZ,KACF,CAAO,GAA0B,IAArBnN,EAAQoM,GAAgB,CAClCxuC,KAAK8I,KAAOymC,GACZ,KACF,CACF,CACF,CAQAW,WAAAA,CAAYC,EAAQC,GAClB,MAAMH,EAAWjwC,KAAK0vC,UAEtB,IAAK,IAAIpnC,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAAG,CAC/C,MAAMgnB,EAAM2gB,EAAS3nC,GACrB,GAAIgnB,EAAI0T,YAAcmN,GAAU7gB,EAAI4Y,SAAWkI,EAC7C,MAAO,CAAC9gB,EAAKhnB,EAEjB,CAEA,OAAO,IACT,CAEA0jC,SAAAA,GACEhsC,KAAKgwC,iBAEL,MAAMC,EAAWjwC,KAAK0vC,UAEtB,IAAIrE,EAAO,KACX,IAAK,IAAI/iC,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAAG,CAC/C,MAAMsH,EAAQtH,EAAI,EAAIC,EAAK0nC,EAAS3nC,EAAI,GAAK,KACvC+nC,EAAOJ,EAAS3nC,GAGpB+nC,EAAKzE,WAAWP,EAAMz7B,EAAM5P,KAAK8I,OAASymC,IAC1ClE,EAAOgF,CAEX,CAGA,GAAIJ,EAASzvC,OAAS,GAAKyvC,EAAS,GAAGrH,YAAa,CAClD,MAAM37B,EAAIgjC,EAAS,GAAGrH,YACtBqH,EAAS,GAAGrH,YAAc,IAAI8C,EAAAA,QAAcz+B,EAAEiJ,EAAGjJ,EAAEwN,EAAGxN,EAAE6O,EAC1D,MAAWm0B,EAASzvC,OAAS,IAC3ByvC,EAAS,GAAGrH,YAAc,IAAI8C,EAAAA,QAAc,EAAG,EAAG,GAEtD,CAEA4E,aAAAA,CAAcC,GACZ,MAAMN,EAAWjwC,KAAK0vC,UACtB,IAAIrE,EAAO,KACPmF,EAAW,KACf,MAAMC,EAAWF,EAAUb,UACrBnnC,EAAI0nC,EAASzvC,OACnB,SAASikC,EAAW7Q,GAClB,OAAO2c,EAAU9L,WAAW7Q,EAAKxjB,MACnC,CAEA,IAAK,IAAI9H,EAAI,EAAGA,EAAIC,IAAKD,EAAG,CAC1B,MAAM+nC,EAAOJ,EAAS3nC,GAChBooC,EAAWD,EAASJ,EAAKjoB,QACzBkjB,EAAWhjC,EAAI,EAAIC,EAAK0nC,EAAS3nC,EAAI,GAAK,KAChD+nC,EAAKlF,eAAeE,EAAMmF,EAAUlF,EAASoF,EAAU1wC,KAAK8I,OAASymC,GAAmB9K,GACxF4G,EAAOgF,EACPG,EAAWE,CACb,CAEAD,EAASR,EAAS,GAAG7nB,QAAQwgB,YAAcrgC,EAAI,EAC3CkoC,EAASR,EAAS,GAAG7nB,QAAQwgB,YAC7B,IAAI8C,EAAAA,QAAc,EAAG,EAAG,EAC9B,CAUAiF,UAAAA,CAAWpkB,EAAMwb,EAAUqI,GACzB,IAAItnC,EAAO9I,KAAKyvC,SAASmB,eAAerkB,GAC3B,OAATzjB,IACFA,EAAO9I,KAAKyvC,SAASoB,eAAetkB,IAEtC,MAAMkV,EAAU,IAAIqP,GAAQ9wC,KAAM8I,EAAMi/B,EAAUqI,GAalD,OAZApwC,KAAKyvC,SAASkB,WAAWlP,GACzBzhC,KAAK0vC,UAAUljC,KAAKi1B,GAEhB34B,EAAKs5B,OAAS+J,GAAY9J,MAAMwM,QAAU1C,GAAY9J,MAAMmM,WAC1DxuC,KAAK6vC,YAAc9H,IACrB/nC,KAAK6vC,YAAc9H,GAEjB/nC,KAAK2vC,YAAc5H,IACrB/nC,KAAK2vC,YAAc5H,IAIhBtG,CACT,CAEAsP,eAAAA,GACE,OAAO/wC,KAAK0vC,UAAUlvC,MACxB,CAEAwwC,cAAAA,CAAepO,GACb,MAAMqN,EAAWjwC,KAAK0vC,UACtB,IAAK,IAAIpnC,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAC5Cs6B,EAAQqN,EAAS3nC,GAErB,CAEAyhC,WAAAA,GACE,IAAIhI,EAAO,WACX,MAAMkO,EAAWjwC,KAAK0vC,UACtB,IAAK,IAAIpnC,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAC5Cy5B,GAAQkO,EAAS3nC,GAAG6/B,MAEtBnoC,KAAKmoC,MAAQpG,CACf,GCpLF,MAAMkP,GAQJ39B,WAAAA,CAAYxK,EAAMooC,EAAMC,GAKtBnxC,KAAK8I,KAAOA,EAKZ9I,KAAKoxC,QAAUH,GAAkBI,cAAcrxC,KAAK8I,OAAS,OAK7D9I,KAAKkxC,KAAOA,EAKZlxC,KAAKmxC,KAAOA,CACd,CAYAnF,SAAAA,CAAUsF,EAAeC,EAAa/B,GACpC,GAAIxvC,KAAKkxC,gBAAgBJ,IAAW9wC,KAAKmxC,gBAAgBL,GACvD,OAIF,MAAM5pB,EAAQsoB,EAAQgC,mBAAmBxxC,KAAKkxC,MACxC1rB,EAAMgqB,EAAQgC,mBAAmBxxC,KAAKmxC,MAC5C,IAAK,IAAInyB,EAAUkI,EAAM4gB,MAAO9oB,GAAWwG,EAAIsiB,MAAO9oB,IACpD,IAAK,IAAIyyB,EAAWvqB,EAAM0a,OAAQ6P,GAAYjsB,EAAIoc,OAAQ6P,IACxD,IAAK,IAAI,MAAErB,GAAUlpB,EAAOkpB,GAAS5qB,EAAI4qB,MAAOA,IAAS,CACvD,MAAMsB,EAAWlC,EAAQmC,iBAAiB3yB,EAASyyB,EAAUrB,GACzDmB,EAAYG,KACdH,EAAYG,GAAUrJ,WAAaroC,KAEvC,CAKJA,KAAKkxC,KAAOK,EAAYvxC,KAAKkxC,MAC7BlxC,KAAKmxC,KAAOI,EAAYvxC,KAAKmxC,KAC/B,EAQFF,GAAkBW,KAAO,CAEvBC,OAAQ,IAERC,OAAQ,IAGRC,UAAW,IAEXC,YAAa,IAEbC,SAAU,IAEVC,MAAO,IAGPC,SAAU,IAEVC,WAAY,IAEZC,QAAS,IAETC,KAAM,IAGNC,KAAM,IAENC,KAAM,KAQRvB,GAAkBwB,QAAU,CAE1BZ,OAAQ,SAERK,MAAO,QAEPQ,KAAM,QAGR,MAAMC,GAAwB1B,GAAkBW,KAC1CgB,GAA2B3B,GAAkBwB,QAMnDxB,GAAkBI,cAAgB,CAChC,CAACsB,GAAsBd,QAASe,GAAyBf,OACzD,CAACc,GAAsBZ,WAAYa,GAAyBV,MAC5D,CAACS,GAAsBX,aAAcY,GAAyBV,MAC9D,CAACS,GAAsBV,UAAWW,GAAyBV,MAC3D,CAACS,GAAsBT,OAAQU,GAAyBV,OAG1D,YCnIMS,GAAwB1B,GAAkBW,KAEnCiB,GAAsB,CACjC,EAAGF,GAAsBX,YACzB,EAAGW,GAAsBV,SACzB,EAAGU,GAAsBZ,WA8C3B,SAvCA,cAAoBd,GAalB39B,WAAAA,CAAYw/B,EAAY5B,EAAMC,EAAMvP,EAAQrV,EAAMwmB,EAASvyC,GACzDksB,MAAMmmB,GAAoBC,IAAe7B,GAAkBW,KAAKM,MAAOhB,EAAMC,GAM7EnxC,KAAK4hC,OAASA,EAKd5hC,KAAKusB,KAAOA,EAKZvsB,KAAK+yC,QAAUA,EAKf/yC,KAAKQ,OAASA,CAChB,GCwBF,SApEA,cAAqBywC,GAcnB39B,WAAAA,CAAY0/B,EAAO9B,EAAMC,EAAM8B,EAAOC,EAASC,GAC7CzmB,MAAMukB,GAAkBW,KAAKC,OAAQX,EAAMC,GAM3CnxC,KAAKgzC,MAAQA,EAQbhzC,KAAKizC,MAAQA,EAKbjzC,KAAKkzC,QAAUA,EAKflzC,KAAKmzC,SAAWA,CAClB,CAcAnH,SAAAA,CAAUsF,EAAeC,EAAa/B,GACpC9iB,MAAMsf,UAAUsF,EAAeC,EAAa/B,GAE5C,IAAI4D,EAAKpzC,KAAKkzC,QACH,OAAPE,GAAgBrrC,OAAOoP,MAAMi8B,KAC/BpzC,KAAKkzC,QAAU5B,EAAc8B,IAE/BA,EAAKpzC,KAAKmzC,SACC,OAAPC,GAAgBrrC,OAAOoP,MAAMi8B,KAC/BpzC,KAAKmzC,SAAW7B,EAAc8B,GAElC,GCpBF,SAxCA,MACE9/B,WAAAA,CAAYiZ,EAAMjJ,GAChBtjB,KAAKiqC,MAAQ1d,EACbvsB,KAAKqzC,OAAS/vB,EAEdtjB,KAAKszC,SAAW,EAClB,CAGAvQ,OAAAA,GACE,OAAO/iC,KAAKiqC,KACd,CAEAsJ,QAAAA,GACE,OAAOvzC,KAAKqzC,MACd,CAEAG,SAAAA,CAAUrd,GACRn2B,KAAKszC,SAAS9mC,KAAK2pB,GACnBn2B,KAAKqzC,OAASrzC,KAAKszC,SAAS9yC,MAC9B,CAEAizC,cAAAA,GACEzzC,KAAKszC,SAAS9mC,KAAK,IAAIknC,GAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9D,CAEA1H,SAAAA,CAAUsF,EAAeC,EAAa/B,GACpC,MAAMl4B,EAAItX,KAAKszC,SACf,IAAK,IAAIhrC,EAAI,EAAGC,EAAI+O,EAAE9W,OAAQ8H,EAAIC,IAAKD,EACrCgP,EAAEhP,GAAG0jC,UAAUsF,EAAeC,EAAa/B,GAK7C,GAHKxvC,KAAKqzC,SACRrzC,KAAKqzC,OAAS/7B,EAAE9W,QAEd8W,EAAE9W,SAAWR,KAAKqzC,OACpB,MAAM,IAAIhoC,MAAM,SAASrL,KAAKiqC,yBAElC,GCYF,SA9CA,MACE32B,WAAAA,CAAYsU,EAAI2E,EAAMpI,EAAU0jB,EAAO8L,GACrC3zC,KAAK4zC,IAAMhsB,EACX5nB,KAAKiqC,MAAQ1d,EACbvsB,KAAK6zC,UAAY1vB,GAAY,IAAIunB,EAAAA,QACjC1rC,KAAKooC,OAASP,GAAS,GACvB7nC,KAAK8zC,QAAU,EACf9zC,KAAK+zC,QAAU,EACf/zC,KAAKg0C,QAAU,KACfh0C,KAAKi0C,WAAaN,GAAY,IAChC,CAMA5Q,OAAAA,GACE,OAAO/iC,KAAKiqC,KACd,CAEAiK,WAAAA,GACE,OAAOl0C,KAAK6zC,SACd,CAEAM,eAAAA,GACE,OAAOn0C,KAAKg0C,OACd,CAEAI,0BAAAA,GACE,MAAMC,EAAS,IACf,GAAqB,OAAjBr0C,KAAKg0C,QACP,OAGF,MAAMM,EAAO,IAAI5I,EAAAA,QAAc2I,EAAQA,EAAQA,GACzCE,EAAS,IAAI7I,EAAAA,SAAe2I,GAASA,GAASA,GACpD,IAAK,IAAI34B,EAAI,EAAGnT,EAAIvI,KAAKooC,OAAO5nC,OAAQkb,EAAInT,EAAGmT,IAAK,CAClD,MAAM84B,EAAOx0C,KAAKooC,OAAO1sB,GAAGyI,SAC5BmwB,EAAK3tC,IAAI8B,KAAKiM,IAAI4/B,EAAKp+B,EAAGs+B,EAAKt+B,GAAIzN,KAAKiM,IAAI4/B,EAAK75B,EAAG+5B,EAAK/5B,GAAIhS,KAAKiM,IAAI4/B,EAAKx4B,EAAG04B,EAAK14B,IACnFy4B,EAAO5tC,IAAI8B,KAAKgM,IAAI8/B,EAAOr+B,EAAGs+B,EAAKt+B,GAAIzN,KAAKgM,IAAI8/B,EAAO95B,EAAG+5B,EAAK/5B,GAAIhS,KAAKgM,IAAI8/B,EAAOz4B,EAAG04B,EAAK14B,GAC7F,CACA9b,KAAKg0C,QAAQS,WAAWH,EAAMC,GAC9Bv0C,KAAKg0C,QAAQrN,eAAe,GAC9B,G,aChCF,MAAM+N,GACJphC,WAAAA,CAAYorB,GACV,GAAIA,aAAe1+B,KAAKsT,YAGtB,OAAOorB,EAGP1+B,KAAK20C,QADHjW,aAAe90B,MACF80B,EAAI5yB,MAAM,GAChB4yB,EACM,CAACA,GAED,EAEnB,CAEAl0B,MAAAA,CAAOye,GACL,MAAMU,EAAS3pB,KAAK20C,QAEpB,OADAhrB,EAAOA,EAAOnpB,QAAUyoB,EACjBjpB,IACT,CAEAkH,MAAAA,CAAO+hB,GACL,MAAMU,EAAS3pB,KAAK20C,QACdvkC,EAAQuZ,EAAO1L,QAAQgL,GAI7B,OAHI7Y,GAAS,GACXuZ,EAAOirB,OAAOxkC,EAAO,GAEhBpQ,IACT,CAEAuG,QAAAA,GACE,OAAOvG,KAAK20C,QAAQhnC,KAAK,IAC3B,CAEAknC,MAAAA,GACE,MAAMlrB,EAAS3pB,KAAK20C,QACdlpB,EAAS,GACf,IAAK,IAAInjB,EAAI,EAAGC,EAAIohB,EAAOnpB,OAAQ8H,EAAIC,IAAKD,EAAG,CAC7C,MAAM2gB,EAAQU,EAAOrhB,GACrBmjB,EAAOnjB,GAAK2gB,EAAM4rB,OAAS5rB,EAAM4rB,SAAW5rB,CAC9C,CACA,OAAOwC,CACT,EAKF,MAAMla,WAAkBmjC,GACtBI,QAAAA,CAAS7rB,GACP,MAAM5hB,EAAOrH,KAAK20C,QAClB,IAAK,IAAIrsC,EAAI,EAAGC,EAAIlB,EAAK7G,OAAQ8H,EAAIC,IAAKD,EACxC,GAAIjB,EAAKiB,GAAGwsC,SAAS7rB,GACnB,OAAO,EAGX,OAAO,CACT,EAKF,MAAM8rB,GAAc,GAEpB,MAAMtjC,WAAkBijC,GACtBphC,WAAAA,CAAYorB,EAAKsW,GACf,MAAM3tC,EAAOqlB,MAAMgS,GACnB,GAAIsW,EAAW,CACbh1C,KAAKg1C,WAAY,EACjB,MAAMrrB,EAAStiB,EAAKstC,QACpB,IAAK,IAAIrsC,EAAI,EAAGC,EAAIohB,EAAOnpB,OAAQ8H,EAAIC,IAAKD,EAAG,CAC7C,MAAM2gB,EAAQU,EAAOrhB,GACA,iBAAV2gB,IACTU,EAAOrhB,GAAK2gB,EAAMhhB,cAEtB,CACF,MACEjI,KAAKg1C,WAAY,EAInB,OAAO3tC,CACT,CAEAytC,QAAAA,CAAS7rB,GAGP,OAAwC,IAAjCjpB,KAAK20C,QAAQ12B,QAAQgL,EAC9B,CAEA1iB,QAAAA,GAEE,MAAMojB,EAAS3pB,KAAK20C,QACpBI,GAAYv0C,OAAS,EACrB,IAAK,IAAI8H,EAAI,EAAGC,EAAIohB,EAAOnpB,OAAQ8H,EAAIC,IAAKD,EAC1CysC,GAAYzsC,GAAKjC,EAAMksB,0BAA0B1nB,OAAO8e,EAAOrhB,KAEjE,OAAOysC,GAAYpnC,KAAK,IAC1B,CAEAsnC,SAAAA,CAAUhsB,GACR,OAAQjpB,KAAKg1C,WAA8B,iBAAV/rB,EAAsBA,EAAMhhB,cAAgBghB,CAC/E,CAEAze,MAAAA,CAAOye,GAEL,OADAyD,MAAMliB,OAAOxK,KAAKi1C,UAAUhsB,IACrBjpB,IACT,CAEAkH,MAAAA,CAAO+hB,GAEL,OADAyD,MAAMxlB,OAAOlH,KAAKi1C,UAAUhsB,IACrBjpB,IACT,ECtIF,MAAMk1C,GACJ3uC,QAAAA,GACE,OAAOvG,KAAKqR,OACd,CAEAwjC,MAAAA,GACE,MAAO,CAAC70C,KAAKusB,KACf,EAGF2oB,GAAS/oC,UAAUogB,KAAO,QAC1B2oB,GAAS/oC,UAAUkF,QAAU,QAG7B,MAAM8jC,WAAqBD,GACzB5hC,WAAAA,CAAYjM,GACVqlB,QACA1sB,KAAKqH,KAAOA,CACd,CAEAd,QAAAA,GACE,MAAO,GAAGvG,KAAKqR,WAAWrR,KAAKqH,MACjC,CAEAwtC,MAAAA,GACE,MAAO,CAAC70C,KAAKusB,KAAMvsB,KAAKqH,KAAKwtC,SAC/B,EAGF,MAAMO,WAA0BD,GAC9B7hC,WAAAA,CAAYorB,GACVhS,MAAM,IAAInb,GAAUmtB,GACtB,EAGF,MAAM2W,WAA0BF,GAC9B7hC,WAAAA,CAAYorB,EAAK4W,GACf5oB,MAAM,IAAIjb,GAAUitB,GAAM4W,GAC5B,EAGF,MAAMC,WAAqBL,GACzBM,YAAAA,CAAaC,GACX,OAAO,CACT,EAGFF,GAAappC,UAAUogB,KAAO,OAC9BgpB,GAAappC,UAAUkF,QAAU,OAEjC,MAAMqkC,WAAoBR,GACxBM,YAAAA,CAAaC,GACX,OAAO,CACT,EAGFC,GAAYvpC,UAAUogB,KAAO,MAC7BmpB,GAAYvpC,UAAUkF,QAAU,MCvDhC,MAAMskC,GAAO,IAAIJ,GAEjB,MAAMK,WAAuBV,GAC3B5hC,WAAAA,CAAYuiC,GACVnpB,QACA1sB,KAAK61C,IAAMA,GAAOF,EACpB,CAEApvC,QAAAA,GACE,MAAMsvC,EAAM71C,KAAK61C,IAAIjrB,UAAY5qB,KAAK61C,IAAIjrB,SAAW5qB,KAAK4qB,SAAW,IAAI5qB,KAAK61C,OAAS71C,KAAK61C,IAC5F,MAAO,GAAG71C,KAAKqR,WAAWwkC,GAC5B,CAEAhB,MAAAA,GACE,MAAO,CAAC70C,KAAKusB,KAAMvsB,KAAK61C,IAAIhB,SAC9B,EAGFe,GAAezpC,UAAUye,SAAW,EAEpC,MAAMkrB,WAAsBZ,GAC1B5hC,WAAAA,CAAYyiC,EAAKF,GACfnpB,QACA1sB,KAAK+1C,IAAMA,GAAOJ,GAClB31C,KAAK61C,IAAMA,GAAOF,EACpB,CAEApvC,QAAAA,GACE,MAAMwvC,EAAM/1C,KAAK+1C,IAAInrB,UAAY5qB,KAAK+1C,IAAInrB,SAAW5qB,KAAK4qB,SAAW,IAAI5qB,KAAK+1C,OAAS/1C,KAAK+1C,IACtFF,EAAM71C,KAAK61C,IAAIjrB,UAAY5qB,KAAK61C,IAAIjrB,SAAW5qB,KAAK4qB,SAAW,IAAI5qB,KAAK61C,OAAS71C,KAAK61C,IAC5F,MAAO,GAAGE,KAAO/1C,KAAKqR,WAAWwkC,GACnC,CAEAhB,MAAAA,GACE,MAAO,CAAC70C,KAAKusB,KAAMvsB,KAAK+1C,IAAIlB,SAAU70C,KAAK61C,IAAIhB,SACjD,EAGFiB,GAAc3pC,UAAUye,SAAW,IC9BnC,MAAMorB,GAAW,CAAC,EAMlB,SAASC,GAAe1pB,EAAM2pB,GAC5B,MAAM7kC,EAAUkb,EAAK7kB,cACrBwuC,EAAc/pC,UAAUkF,QAAUA,EAClC6kC,EAAc/pC,UAAUogB,KAAOA,EAE/B,MAAM7sB,EAAW,mBAAAkX,EAAA5K,UAAAxL,OAAIqL,EAAI,IAAAjC,MAAAgN,GAAA0V,EAAA,EAAAA,EAAA1V,EAAA0V,IAAJzgB,EAAIygB,GAAAtgB,UAAAsgB,GAAA,OAAK,IAAI4pB,KAAiBrqC,EAAK,EAIxD,OAHAnM,EAAQw2C,cAAgBA,EACxBF,GAAS3kC,GAAW3R,EAEbw2C,CACT,CAEAD,GAAe,SAAU,cAA6Bb,GACpDI,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASlhB,EAAKgO,OACjC,IAGFqU,GAAe,OAAQ,cAA2BZ,GAChDG,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASlhB,EAAKrH,KACjC,IAGF0pB,GAAe,SAAU,cAA6BZ,GACpDG,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASjqC,OAAOyS,aAAasW,EAAKtI,UACrD,IAGF2qB,GAAe,OAAQ,cAA2BZ,GAChDG,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASlhB,EAAK5T,QAAQuM,KACzC,IAGF0pB,GAAe,UAAW,cAA8BZ,GACtDG,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASlhB,EAAK6N,QAAQyD,MAAM+E,MAC/C,IAGFgM,GAAe,WAAY,cAA+Bb,GACxDI,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASlhB,EAAK6N,QAAQuB,UACzC,IAGFiT,GAAe,QAAS,cAA4BZ,GAClD/hC,WAAAA,CAAYorB,GACVhS,MAAMgS,GAAK,EACb,CAEA8W,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASlhB,EAAK6N,QAAQyG,OACzC,IAGF+N,GAAe,SAAU,cAA6Bb,GACpDI,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASlhB,EAAK6N,QAAQrZ,OACzC,IAGF6tB,GAAe,QAAS,cAA4BZ,GAClD/hC,WAAAA,CAAYorB,GACVhS,MAAMgS,GAAK,EACb,CAEA8W,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAKqH,KAAKytC,SAASlhB,EAAK6N,QAAQqB,OAAOmH,MAChD,IAGFgM,GAAe,SAAU,cAA6Bf,GACpDM,YAAAA,CAAa5hB,GACX,OAAOA,EAAK+N,GACd,IAGFsU,GAAe,SAAU,cAA6Bf,GACpDM,YAAAA,CAAa5hB,GACX,OAAQA,EAAKwO,MAAQZ,GAAKa,MAAMa,aAAe1B,GAAKa,MAAMC,QAC5D,IAGF2T,GAAe,YAAa,cAAgCf,GAC1DM,YAAAA,CAAa5hB,GACX,OAAQA,EAAKwO,MAAQZ,GAAKa,MAAMa,aAAe1B,GAAKa,MAAMa,SAC5D,IAGF+S,GAAe,MAAOP,IAEtBO,GAAe,OAAQV,IAEvB,MAAMY,GAAgBH,GAASL,OAM/B,SAASS,GAAe7pB,EAAM3B,EAAUyrB,GAEtC,OADAA,EAAclqC,UAAUye,SAAWA,EAC5BqrB,GAAe1pB,EAAM8pB,EAC9B,CAuBA,SAASC,GAAkBlH,EAAM7iB,GAC/B,OAAO0pB,GAAe1pB,EAAM,cAAc2oB,GACxCM,YAAAA,CAAa5hB,GACX,OAA6C,IAArCA,EAAK6N,QAAQyD,MAAM9C,MAAQgN,EACrC,GAEJ,CA5BAgH,GAAe,MAAO,EAAG,cAA0BR,GACjDJ,YAAAA,CAAa5hB,GACX,OAAQ5zB,KAAK61C,IAAIL,aAAa5hB,EAChC,IAGFwiB,GAAe,MAAO,EAAG,cAA0BN,GACjDN,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAK+1C,IAAIP,aAAa5hB,IAAS5zB,KAAK61C,IAAIL,aAAa5hB,EAC9D,IAGFwiB,GAAe,KAAM,EAAG,cAAyBN,GAC/CN,YAAAA,CAAa5hB,GACX,OAAO5zB,KAAK+1C,IAAIP,aAAa5hB,IAAS5zB,KAAK61C,IAAIL,aAAa5hB,EAC9D,IAeF0iB,GAAkBnK,GAAY9J,MAAMmM,QAAS,WAC7C8H,GAAkBnK,GAAY9J,MAAMoM,MAAO,SAC3C6H,GAAkBnK,GAAY9J,MAAMqM,OAAQ,UAC5C4H,GAAkBnK,GAAY9J,MAAMoM,MAAQtC,GAAY9J,MAAMqM,OAAQ,WACtE4H,GAAkBnK,GAAY9J,MAAMsM,MAAO,SAC3C2H,GAAkBnK,GAAY9J,MAAMuM,SAAU,YAC9C0H,GAAkBnK,GAAY9J,MAAMmC,SAAU,YAC9C8R,GAAkBnK,GAAY9J,MAAMwM,QAAS,WAC7CyH,GAAkBnK,GAAY9J,MAAMyM,OAAQ,UAC5CwH,GAAkBnK,GAAY9J,MAAM0M,WAAY,cAChDuH,GAAkBnK,GAAY9J,MAAM6M,MAAO,SAG3C,MAAMqH,GAAYpsC,OAAOC,OAAO4rC,IAEhCO,GAAUrB,SAAWA,GACrBqB,GAAUnB,kBAAoBA,GAC9BmB,GAAUlB,kBAAoBA,GAC9BkB,GAAU/kC,MH1KV,MACE8B,WAAAA,CAAYoB,EAAKD,GACfzU,KAAK0U,IAAMA,EACX1U,KAAKyU,SAAqB,IAARA,EAAsBC,EAAMD,CAChD,CAEAqgC,QAAAA,CAAS7rB,GACP,OAAOjpB,KAAK0U,KAAOuU,GAASA,GAASjpB,KAAKyU,GAC5C,CAEAlO,QAAAA,GACE,MAAM,IAAEmO,EAAG,IAAED,GAAQzU,KACrB,OAAO0U,IAAQD,EAAM5J,OAAO6J,GAAO,CAACA,EAAKD,GAAK9G,KAAK,IACrD,CAEAknC,MAAAA,GACE,MAAO,CAAC70C,KAAK0U,IAAK1U,KAAKyU,IACzB,GG0JF8hC,GAAUhlC,UAAYA,GACtBglC,GAAU9kC,UAAYA,GACtB8kC,GAAUX,eAAiBA,GAC3BW,GAAUT,cAAgBA,GAC1BS,GAAUhvC,QAAU4C,OAAOC,OAAO,CAAC,GAEnCmsC,GAAUjlC,YAAc,SAAUrH,GAChC,IAAKssC,GAAUhvC,QAAQ6E,eAAenC,GAAM,CAE1C,KADY,CAAE0gB,QAAS,YAAY1gB,sBAErC,CACA,OAAOssC,GAAUhvC,QAAQ0C,IAAQksC,EACnC,EAEAI,GAAUvwC,aAAe,WACvBmE,OAAOyP,KAAK28B,GAAUhvC,SAAS6U,SAAS/b,WAAek2C,GAAUhvC,QAAQlH,EAAE,GAC7E,EAEAk2C,GAAUllC,QAAU,SAAUpH,GAC5B,OAAO+rC,GAAS/rC,EAAIvC,gBAAkBsuC,GAASL,IACjD,EAEAY,GAAU3rC,MAAQ,SAAUK,GAC1B,MAAMqkB,EAAM,CAAC,EACb,IACEA,EAAIznB,SAAW1H,GAAAA,OAAOyK,MAAMK,EAC9B,CAAE,MAAO4N,GACPyW,EAAIznB,SAAWsuC,GACf7mB,EAAIlkB,MAAQyN,EAAE8R,OAChB,CACA,OAAO2E,CACT,EAEAnvB,GAAAA,OAAO8E,GAAKsxC,GACZp2C,GAAAA,OAAO8E,GAAG+F,WAAa7K,GAAAA,OAAO6K,WAE9B,YCrIA,SApEA,MACEsI,WAAAA,CAAYk8B,GACVxvC,KAAKyvC,SAAWD,EAChBxvC,KAAKw2C,UAAYD,GAAUllC,QAAQ,MAAlBklC,GACjBv2C,KAAKy2C,YAAc,CACjBC,YAAa,IAAIhL,EAAAA,KACjBiL,eAAgB,IAAIjL,EAAAA,OAExB,CAEAkL,iBAAAA,GACE,MAAM/O,EAAQ7nC,KAAKyvC,SAASrH,OACtB7/B,EAAIs/B,EAAMrnC,OACVqH,EAAW7H,KAAKw2C,WAEhB,YAAEE,GAAgB12C,KAAKy2C,YAE7B,GADAC,EAAYG,YACF,IAANtuC,EAAS,CACXmuC,EAAYI,cAAcjP,EAAM,GAAG1jB,UACnC,MAAM4yB,EAAM,IAAIrL,EAAAA,QAChBgL,EAAYM,UAAUD,GACtB,MAAMz/B,EAAI,EAAIuwB,EAAM,GAAG7nB,QAAQuD,OAC/BmzB,EAAYO,qBAAqBF,EAAK,IAAIrL,EAAAA,QAAcp0B,EAAGA,EAAGA,GAChE,MACE,IAAK,IAAIhP,EAAI,EAAGA,EAAIC,IAAKD,EACnBT,EAAS2tC,aAAa3N,EAAMv/B,KAC9BouC,EAAYI,cAAcjP,EAAMv/B,GAAG6b,UAMzC,IAAI+yB,EAAgB,EACpB,MAAMtuC,EAAS,IAAI8iC,EAAAA,QAEnB,GADAgL,EAAYM,UAAUpuC,GACZ,IAANL,EACFvI,KAAKy2C,YAAYE,eAAehwC,IAAIiC,EAAQi/B,EAAM,GAAG7nB,QAAQuD,YACxD,CACL,IAAK,IAAIjb,EAAI,EAAGA,EAAIC,IAAKD,EAAG,CAC1B,IAAKT,EAAS2tC,aAAa3N,EAAMv/B,IAC/B,SAEF,MAAM6uC,EAAMtP,EAAMv/B,GAAG6b,SACfizB,EAAgBxuC,EAAOyuC,kBAAkBF,GAC3CD,EAAgBE,IAClBF,EAAgBE,EAEpB,CACAp3C,KAAKy2C,YAAYE,eAAehwC,IAAIiC,EAAQH,KAAK6uC,KAAKJ,GACxD,CACF,CAEAK,aAAAA,GACE,MAAO,EACT,CAEAC,WAAAA,GACE,OAAOx3C,KAAKw2C,SACd,CAEAiB,aAAAA,GACE,OAAOz3C,KAAKy2C,WACd,CAEAiB,QAAAA,GACA,GCPF,SAxDA,cAAuBC,GACrBrkC,WAAAA,CAAYk8B,GACV9iB,MAAM8iB,GACNxvC,KAAK43C,OAAS,GACd53C,KAAK63C,SAAW,EAClB,CAEAjB,iBAAAA,GACElqB,MAAMkqB,oBAEN,MAAM,SAAEiB,GAAa73C,KACf83C,EAAY93C,KAAKy2C,YAAYE,eAAe/tC,OAC5CmvC,EAAS/3C,KAAKy2C,YAAYE,eAAepzB,OACzCmzB,EAAc12C,KAAKy2C,YAAYC,YAAc,IAAIhL,EAAAA,KACvDgL,EAAYG,YACZ,IAAK,IAAIvuC,EAAI,EAAGC,EAAIsvC,EAASr3C,OAAQ8H,EAAIC,IAAKD,EAC5CouC,EAAYI,cAAcgB,EAAU1R,QAAQ4R,aAAaH,EAASvvC,KAGpE,MAAM2vC,EAASvB,EAAYjiC,IAAI8wB,WAAWmR,EAAYhiC,KAAO,EAAIqjC,EAC3DnvC,EAAS,IAAI8iC,EAAAA,QACnBgL,EAAYM,UAAUpuC,GACtB5I,KAAKy2C,YAAYE,gBAAiB,IAAIjL,EAAAA,QAAe/kC,IAAIiC,EAAQqvC,GACjEvB,EAAYjiC,IAAIyjC,UAAUH,GAC1BrB,EAAYhiC,IAAIyjC,UAAUJ,EAC5B,CAMAK,QAAAA,CAAStQ,GACP9nC,KAAK43C,OAAO53C,KAAK43C,OAAOp3C,QAAUsnC,CACpC,CAMAuQ,SAAAA,CAAUC,GACRt4C,KAAK63C,SAAS73C,KAAK63C,SAASr3C,QAAU83C,CACxC,CAEAf,aAAAA,GACE,OAAOv3C,KAAK63C,QACd,CAEAH,QAAAA,GACM13C,KAAK43C,OAAOp3C,OAAS,EACvBR,KAAKw2C,UAAYD,GAAUllC,QAAQ,QAAlBklC,CAA2Bv2C,KAAK43C,QAEjD53C,KAAKw2C,UAAYD,GAAUllC,QAAQ,OAAlBklC,EAErB,GC8FF,SApJA,MACEjjC,WAAAA,CAAYk8B,GACVxvC,KAAKyvC,SAAWD,EAChBxvC,KAAKooB,QAAU,EACfpoB,KAAKu4C,gBAAkB,GACvBv4C,KAAKw4C,QAAU,GACfx4C,KAAKy4C,SAAW,GAChBz4C,KAAK04C,cAAgB,CACvB,CAEA3I,WAAAA,GACE,OAAO/vC,KAAKyvC,SAASC,SACvB,CAEAqB,eAAAA,GACE,OAAO/wC,KAAK04C,aACd,CAEA1H,cAAAA,CAAepO,GACb,MAAMqN,EAAWjwC,KAAKyvC,SAASC,UACzBiJ,EAAS34C,KAAKu4C,gBACpB,IAAK,IAAIK,EAAQ,EAAGC,EAAUF,EAAOn4C,OAAQo4C,EAAQC,IAAWD,EAC9D,IAAK,IAAItyB,EAAMqyB,EAAOC,GAAO1xB,MAAO4xB,EAAOH,EAAOC,GAAOpzB,IAAKc,GAAOwyB,IAAQxyB,EAC3Esc,EAAQqN,EAAS3pB,GAGvB,CAEAyyB,UAAAA,CAAWC,GACTh5C,KAAKy4C,SAAWO,EAChB,IAAI3I,EAAO,EACX,MAAMsI,EAAS,GACf,IAAIM,EAAS,EACb,IAAK,IAAI3wC,EAAI,EAAGC,EAAIywC,EAAQx4C,OAAQ8H,EAAIC,IAAKD,EAC3C,GAAIA,IAAMC,EAAI,GAAKywC,EAAQ1wC,GAAGkd,IAAM,IAAMwzB,EAAQ1wC,EAAI,GAAG4e,MAAO,CAC9D,MAAM,MAAEA,GAAU8xB,EAAQ3I,IACpB,IAAE7qB,GAAQwzB,EAAQ1wC,GACxBqwC,EAAOA,EAAOn4C,QAAU,CACtB0mB,QACA1B,OAEFyzB,GAAUzzB,EAAM0B,EAAQ,EACxBmpB,EAAO/nC,EAAI,CACb,CAGFtI,KAAKu4C,gBAAkBI,EACvB34C,KAAK04C,cAAgBO,CACvB,CAEAxP,UAAAA,GACE,OAAOzpC,KAAKyvC,QACd,CAEA9M,WAAAA,CAAYC,GACV,MAAMT,EAAQniC,KAAKyvC,SAASyJ,OAE5B,IAAK,IAAI5wC,EAAI,EAAGC,EAAI45B,EAAM3hC,OAAQ8H,EAAIC,IAAKD,EAAG,CAC5C,MAAMurB,EAAOsO,EAAM75B,GACfurB,EAAKiR,MAAMrD,QAAQwG,aAAejoC,MACpC4iC,EAAQ/O,EAEZ,CACF,CAEAxM,MAAAA,GACErnB,KAAKm5C,cAAcC,IACjBA,EAAM/xB,QAAQ,GAElB,CAEAsiB,WAAAA,CAAY/G,GACV5iC,KAAKgxC,gBAAgBvP,IACnBA,EAAQkI,YAAY/G,EAAQ,GAEhC,CAEAyW,QAAAA,CAASD,GACPp5C,KAAKw4C,QAAQhsC,KAAK4sC,EACpB,CAEAD,YAAAA,CAAavW,GACX,MAAM0W,EAASt5C,KAAKw4C,QACpB,IAAK,IAAIlwC,EAAI,EAAGC,EAAI+wC,EAAO94C,OAAQ8H,EAAIC,IAAKD,EAC1Cs6B,EAAQ0W,EAAOhxC,GAEnB,CAEAixC,YAAAA,GACE,MAAMhuC,EAAOvL,KACbuL,EAAKylC,gBAAgBvP,IACnBA,EAAQwG,WAAa18B,CAAI,GAE7B,CAEAiuC,gBAAAA,CAAiBzX,EAAMa,GACrB,MAAMqN,EAAWjwC,KAAKyvC,SAASC,UACzB+J,EAAOz5C,KAAKy4C,SAClB,IAAK,IAAInwC,EAAI,EAAGC,EAAIkxC,EAAKj5C,OAAQ8H,EAAIC,IAAKD,EACxC,IAAK,IAAIge,EAAMmzB,EAAKnxC,GAAG4e,MAAO4xB,EAAOW,EAAKnxC,GAAGkd,IAAKc,GAAOwyB,IAAQxyB,EAAK,CACpE,MAAMozB,EAAUzJ,EAAS3pB,GACzB,GAAIyb,EAAO2X,EAAQvR,OAASuR,EAAQ5Q,SAAU,CAC5C,IAAItjB,EAAMc,EAAM,EAChB,KAAOd,GAAOszB,IAAQtzB,EAAK,CACzB,MAAMm0B,EAAS1J,EAASzqB,GACxB,KAAMuc,EAAO4X,EAAOxR,OAASwR,EAAO7Q,UAClC,KAEJ,CACAlG,EAAQt6B,EAAGge,EAAKd,EAAM,GACtBc,EAAMd,CACR,CACF,CAEJ,CAEAo0B,kBAAAA,CAAmB7X,GACjB,MAAM0X,EAAO,GACb,IAAInzB,EAAM,EAKV,OAJAtmB,KAAKw5C,iBAAiBzX,GAAM,CAAC8X,EAAS3yB,EAAO1B,KAC3Ci0B,EAAKnzB,KAAS,CAAEY,QAAO1B,MAAK,IAGvBi0B,CACT,CAEAK,wBAAAA,CAAyB/X,GACvB,MAAM0X,EAAO,GACb,IAAIM,GAAW,EACXC,GAAc,EAClB,MAAMhB,EAAUh5C,KAAKy4C,SAcrB,OAZAz4C,KAAKw5C,iBAAiBzX,GAAM,CAACkY,EAAQ/yB,EAAO1B,KACtCw0B,IAAeC,MACfF,EACFN,EAAKM,GAAW,CACdtjC,IAAK,GACLyjC,WAAYlB,EAAQiB,IAEtBD,EAAaC,GAEfR,EAAKM,GAAStjC,IAAIgjC,EAAKM,GAAStjC,IAAIjW,QAAU,CAAE0mB,QAAO1B,MAAK,IAGvDi0B,CACT,GClFF,SA/DA,MACEnmC,WAAAA,CAAY6mC,GACVn6C,KAAKo6C,SAAW,EAChBp6C,KAAKq6C,YAAcF,EACnBn6C,KAAKs6C,UAAYj0C,EAAMmpB,cAAcvV,WAVjB,EAU6BkgC,GACjD,IAAK,IAAI7xC,EAAI,EAAGA,EAXI,EAWA6xC,EAAoC7xC,IACtDtI,KAAKs6C,UAAUhyC,IAVD,EAYhBtI,KAAKu6C,WAAal0C,EAAMmpB,cAAcvV,WAAYugC,UAClD,IAAK,IAAIlyC,EAAI,EAAGA,EAAIkyC,SAAuClyC,IACzDtI,KAAKu6C,WAAWjyC,IAdF,CAgBlB,CAKAmyC,OAAAA,GACEz6C,KAAKs6C,UAAY,KACjBt6C,KAAKu6C,WAAa,IACpB,CAOAG,OAAAA,CAAQC,EAAQC,GACd,MAAMC,EAAMF,EAASC,EAAUD,EAASC,EAClCE,EAAMH,EAASC,EAAUD,EAASC,EAClCG,EAAYF,GAAMC,GAnCL,IAsCnB,IAAIp/B,EAzCqB,IAwCPm/B,EAlCJ,MAkCUC,EAAoBN,SAExCQ,EAAM,EACV,KAAOA,EA3CkB,GA2CUA,IAAO,CACxC,MAAMhtB,EAAOhuB,KAAKu6C,WAAW7+B,EAAIs/B,GACjC,IAzCc,IAyCVhtB,EACF,MAEF,GAAIA,IAAS+sB,EACX,OAAO,CAEX,CAEA,GAAIC,GArDqB,GAsDvB,MAAM,IAAI3vC,MAAM,0CAKlB,GAHArL,KAAKu6C,WAAW7+B,EAAIs/B,GAAOD,EAGvB/6C,KAAKo6C,UAAYp6C,KAAKq6C,YACxB,MAAM,IAAIhvC,MAAM,+BAOlB,OALAqQ,EA5DoB,EA4DhB1b,KAAKo6C,SACTp6C,KAAKs6C,UAAU5+B,GAAKm/B,EACpB76C,KAAKs6C,UAAU5+B,EAAI,GAAKo/B,EACxB96C,KAAKs6C,UAAU5+B,EAAI,GAAKq/B,EACxB/6C,KAAKo6C,YACE,CACT,GCrDF,SAASa,GAAkBrnB,GACzB,MAAM,QAAE5T,GAAY4T,EACpB,GAAI5T,EACF,OAAOA,EAAQsjB,cAEjB,MAAM,IAAIj4B,MAAM,kCAClB,CAqLA,SAtKA,MACEiI,WAAAA,CAAYk8B,GACVxvC,KAAKyvC,SAAWD,EAChBxvC,KAAKk7C,QAAU,IACf,MAAMC,EAAOn7C,KAAKyvC,SAAS2L,uBAAuB1E,YAClD12C,KAAKq7C,SAAWF,EAAKzmC,IAAI0xB,QACzBpmC,KAAKs7C,SAAWH,EAAK1mC,IAAI2xB,QAEzBpmC,KAAKu7C,gBAAkB,IACzB,CAMAC,iBAAAA,GACE,MAAM3T,EAAQ7nC,KAAKyvC,SAASgM,WACtBC,EAAW7T,EAAMrnC,OACvB,IAAIm7C,EAAO,EACX,MAAMC,EAAa57C,KAAKu7C,gBAExB,KAAOI,EAAOD,EAAUC,IAAQ,CAC9B,MAAM,MAAExZ,GAAU0F,EAAM8T,GAClBE,EAAkB1Z,EAAM3hC,OAC9B,IAAK,IAAIs7C,EAAO,EAAGA,EAAOD,EAAiBC,IAAQ,CACjD,MAAMjoB,EAAOsO,EAAM2Z,GACLjoB,EAAKiR,MAAM10B,QACXurC,GACZC,EAAWlB,QAAQiB,EAAM9nB,EAAKkR,OAAO30B,MAEzC,CACF,CACA,OAAO,CACT,CAEA2rC,UAAAA,GACE,MAAMC,EAAKh8C,KAAKyvC,SAASwM,gBACzB,GAAW,OAAPD,EACF,OAGF,MAAMnU,EAAQ7nC,KAAKyvC,SAASrH,OACtB8T,EAAWrU,EAAMrnC,OACjB+K,EAAOvL,KAEb,IAAIm8C,EACAC,EACAC,EACAC,EACAC,EAEJ,MAAMC,EAAc,SAAUC,GAC5B,GAAIL,GAAeK,EAAMha,aACvB,OAGF,MAAMia,EAAYD,EAAMnxB,SACxB,GA1Fa,KA0FRgxB,GA1FQ,KA2FPI,GACAJ,IAAcI,EAClB,OAGF,MAAMC,EAAQN,EAAKhF,kBAAkBoF,EAAMt4B,UACrCy4B,EAAKH,EAAMz8B,QAAQsjB,cACnBuZ,EAAiCV,EAAKS,EAjG3B,IAmGbD,EAASE,EAAgBA,GAIzBF,EApGO,MAwGXpxC,EAAKgwC,gBAAgBb,QAAQ6B,EAAMnsC,MAAOqsC,EAAMrsC,MAClD,EAEA,IAAK,IAAI9H,EAAI,EAAGA,EAAI4zC,IAAY5zC,EAC9Bi0C,EAAQ1U,EAAMv/B,MA5FKsrB,EA6FE2oB,GA3FZ/Z,SAAY5O,EAAKuO,OAA+B,IAAtBvO,EAAKuO,MAAM3hC,UA+F9C27C,EAAKI,EAAMv8B,QAAQsjB,cACnB8Y,EAAcG,EAAM9Z,aACpB4Z,EAAOE,EAAMp4B,SACbm4B,EAAYC,EAAMjxB,SAElB0wB,EAAGc,wBAAwBT,EAAM,EAAIr8C,KAAKk7C,QAzHzB,IAyHmDsB,IAtG1E,IAAyB5oB,CAwGvB,CAEAmpB,SAAAA,GACE,MAAMlV,EAAQ7nC,KAAKyvC,SAASrH,OAE5B,IAAK,IAAI9/B,EAAI,EAAGjI,EAAI,EAAGiI,EAAItI,KAAKu7C,gBAAgBnB,SAAU9xC,IAAKjI,GAAK,EAAG,CACrE,MAAM28C,EAAKh9C,KAAKu7C,gBAAgBjB,UAAUj6C,GACpC48C,EAAKj9C,KAAKu7C,gBAAgBjB,UAAUj6C,EAAI,GAC9CL,KAAKk9C,SAASrV,EAAMmV,GAAKnV,EAAMoV,GACjC,CACF,CAEAC,QAAAA,CAASX,EAAOE,GACd,MAAMU,EAASZ,EAAMpa,MACfwY,EAAS4B,EAAMnsC,MACfwqC,EAAS6B,EAAMrsC,MACrB,IAAK,IAAIsL,EAAI,EAAG0hC,EAAWD,EAAO38C,OAAQkb,EAAI0hC,IAAY1hC,EAAG,CAC3D,MAAMmY,EAAOspB,EAAOzhC,GACpB,GAAImY,EAAKiR,MAAM10B,QAAUwqC,GAAU/mB,EAAKkR,OAAO30B,QAAUwqC,EACvD,MAEJ,CACA,MAAM32B,EAAO02B,EAASC,EAAS2B,EAAQE,EACjC9X,EAAQgW,EAASC,EAAS6B,EAAQF,EAClCc,EAAUr9C,KAAKyvC,SAAS6N,QAAQr5B,EAAM0gB,EAAO,EAAGD,GAAK4C,SAAShD,SAAS,GAC7E6Y,EAAO3wC,KAAK6wC,GACZZ,EAAMta,MAAM31B,KAAK6wC,EACnB,CAEAE,KAAAA,GAIEv9C,KAAKw9C,aAKP,CAEAA,WAAAA,GACE,MAAM3V,EAAQ7nC,KAAKyvC,SAASrH,OAC5B,KAAIP,EAAMrnC,OAAS,GAAnB,CAGA,GAAIqnC,EAAM,GAAGz3B,MAAQ,EACnB,MAAM,IAAI/E,MAAM,gDAGlBrL,KAAKy9C,mBACLz9C,KAAKu7C,gBAAkB,IAAImC,GA/KH,EA+Ka7V,EAAMrnC,QAC3CR,KAAKw7C,oBACLx7C,KAAK+7C,aACL/7C,KAAK+8C,WATL,CAUF,CAEAU,gBAAAA,GACE,MAAM5V,EAAQ7nC,KAAKyvC,SAASrH,OACtBuV,EAAS9V,EAAMrnC,OACrB,IAAIo9C,EAAS3C,GAAkBpT,EAAM,IACrC,IAAK,IAAIv/B,EAAI,EAAGA,EAAIq1C,IAAUr1C,EAC5Bs1C,EAASn1C,KAAKgM,IAAImpC,EAAQ3C,GAAkBpT,EAAMv/B,KAEpDtI,KAAKs7C,SAASpD,UAAU0F,GACxB59C,KAAKq7C,SAASnD,WAAW0F,GACzB59C,KAAKk7C,QAAmB,IAAT0C,CACjB,CAEAnD,OAAAA,GACMz6C,KAAKu7C,iBACPv7C,KAAKu7C,gBAAgBd,SAEzB,GCpMIoD,GAAgBnZ,GAAK4C,SAAS9C,SAC9BsZ,GAAiB,CACrB3a,GAAQgB,OAAOrpB,EAAEyP,OACjB4Y,GAAQgB,OAAO9oB,EAAEkP,QAWbwzB,GAAiB,WACrB,MAAMC,EAAQ,IAAItS,EAAAA,QACZuS,EAAQ,IAAIvS,EAAAA,QACZwS,EAAK,IAAIxS,EAAAA,QACf,OAAO,SAAUyS,EAAIC,GAInB,OAHAJ,EAAMvmC,KAAK0mC,GAAI9W,YACf4W,EAAMxmC,KAAK2mC,GAAI/W,YACf6W,EAAG/W,aAAa6W,EAAOC,KACnBC,EAAG19C,SAvBU,KA2BVw9C,EAAMzX,IAAI0X,IAAU,CAC7B,CACF,CAduB,GAgBvB,SAASI,GAAiB5nC,EAAKvM,GAC7B,IAAIoc,EAAM,EACV,KAAOA,EAAM7P,EAAIjW,QAAUiW,EAAI6P,GAAOpc,KAClCoc,EAEJ7P,EAAIm+B,OAAOtuB,EAAK,EAAGpc,EACrB,CAEA,SAASo0C,GAAazqB,EAAM4R,GAC1B,OAAO5R,EAAKiR,QAAUW,EAAW5R,EAAKkR,OAASlR,EAAKiR,KACtD,CAOA,SAASyZ,GAAc1qB,GACrBA,EAAKqR,MAAQ2Y,EACf,CAEA,MAAMW,GACJlrC,WAAAA,CAAYmrC,GACVz+C,KAAK6nC,MAAQ4W,EACbz+C,KAAKqnB,QACP,CAEAA,MAAAA,GACE,MAAM,MAAEwgB,GAAU7nC,KACZ4I,EAAS,IAAI8iC,EAAAA,QACbgT,EAAK7W,EAAMrnC,OACjB,IAAK,IAAIkb,EAAI,EAAGA,EAAIgjC,IAAMhjC,EACxB9S,EAAOa,IAAIo+B,EAAMnsB,GAAGyI,UAEtBvb,EAAO+9B,eAAe,EAAM+X,GAC5B1+C,KAAK4I,OAASA,EACd5I,KAAKujB,OAAS3a,EAAO28B,WAAWsC,EAAM,GAAG1jB,SAASiiB,QAAQuF,KAAK9D,EAAM,GAAG1jB,SAAU,IACpF,CAEAwe,WAAAA,CAAYC,GACV,MAAM,MAAEiF,GAAU7nC,KACZ0+C,EAAK7W,EAAMrnC,OACjB,IACIm+C,EADAlZ,EAAWoC,EAAM,GAGrB,SAAS+W,EAAU/qB,GACbA,EAAKiR,QAAU6Z,GAAY9qB,EAAKkR,SAAW4Z,GAC7C/b,EAAQ/O,EAEZ,CAEA,IAAK,IAAIvrB,EAAI,EAAGA,EAAIo2C,IAAMp2C,EACxBq2C,EAAW9W,GAAOv/B,EAAI,GAAKo2C,GAC3BjZ,EAAS9C,YAAYic,GACrBnZ,EAAWkZ,CAEf,EAGF,SAASE,GAAYhrB,GACnB,OAAOA,EAAKqR,QAAU2Y,EACxB,CAEA,SAASiB,GAAoBjrB,GAC3B,GAAIA,EAAK/qB,OAAS+0C,GAChB,OAAO,EAET,MAAMkB,EAAWjB,GAAe7/B,QAAQ4V,EAAKkR,OAAO/kB,QAAQuK,QACtDy0B,EAAUlB,GAAe7/B,QAAQ4V,EAAKiR,MAAM9kB,QAAQuK,QAC1D,OAAqB,IAAdw0B,IAAgC,IAAbC,CAC5B,CAEA,SAASC,GAAkB7F,GACzB,OAAOA,EAAM54C,OAAS,CACxB,CAEA,SAAS0+C,GAAmB9F,GAE1B,OAAO,CACT,CAwIA,SAtIA,MACE9lC,WAAAA,CAAYk8B,GACVxvC,KAAKyvC,SAAWD,EAChB,MAAM2P,EAAY,IAAIv1C,MAAM4lC,EAAQ0J,OAAO14C,QACrC4+C,EAAY,IAAIx1C,MAAM4lC,EAAQ0J,OAAO14C,QAC3C,IAAK,IAAI8H,EAAI,EAAGC,EAAI42C,EAAU3+C,OAAQ8H,EAAIC,IAAKD,EAC7C62C,EAAU72C,GAAK,GACf82C,EAAU92C,IAAK,EAEjBtI,KAAKq/C,WAAaF,EAClBn/C,KAAKs/C,WAAaF,EAClBp/C,KAAKu/C,cACP,CAEAA,YAAAA,GACEv/C,KAAKw4C,QAAU,GACfx4C,KAAKw/C,UAAY,CACnB,CAEAC,cAAAA,CAAeN,EAAWO,EAAOC,GAC/B,MAAMC,EAAOT,EAAUO,EAAMt3B,QACvBy3B,EAAOV,EAAUQ,EAAMv3B,QACvB03B,EAAKF,EAAKp/C,OACVu/C,EAAKF,EAAKr/C,OAChB,IAAIw/C,EAAK,EACLC,EAAK,EACT,KAAOD,EAAKF,GAAMG,EAAKF,GAAI,CACzB,GAAIH,EAAKI,KAAQH,EAAKI,GACpB,OAAO,EAELL,EAAKI,GAAMH,EAAKI,KAChBA,IAEAD,CAEN,CACA,OAAO,CACT,CAEAE,QAAAA,CAASC,EAAUC,EAAWra,GAC5B,MAAMsa,EAAa,GACblB,EAAYn/C,KAAKq/C,WACjBiB,EAAWhC,GAAa6B,EAAUC,GAClCG,EAAUH,EAAUj8B,SAASiiB,QAAQE,IAAIga,EAASn8B,UAClDq8B,EAAexgD,KAAKygD,WACpBl1C,EAAOvL,KACPo/C,EAAYp/C,KAAKs/C,WACvB,IAAIoB,EAAgB1gD,KAAK2gD,WACzBvB,EAAUe,EAAS/3B,SAAU,EAC7Bs4B,OAAkC99B,IAAlB89B,EAA8B7B,GAAc6B,EAC5DN,EAAUzd,aAAa0a,IACrB,IAAKqD,EAAcrD,IACdA,IAAY8C,GACZf,EAAU/B,EAAQj1B,SAClB7c,EAAKk0C,eAAeN,EAAWgB,EAAU9C,GAC5C,OAEF,MAAMuD,EAActC,GAAajB,EAAS+C,GACpCS,EAAaD,EAAYz8B,SAASiiB,QAAQE,IAAI8Z,EAAUj8B,UACxDja,EAAM02C,IAAgBJ,GAAgB,EAAM,EAhIxD,SAAqBrC,EAAIC,GACvB,MAAM0C,EAAQ3C,EAAG5X,IAAI6X,GAAO31C,KAAK6uC,KAAK6G,EAAG/W,WAAagX,EAAGhX,YACzD,OAAOsE,EAAAA,UAAgB32B,MAAM+rC,GAAQ,EAAG,EAC1C,CA6H4DC,CAAYR,EAASM,GACrEG,EAASH,EAAWI,MAAMV,GAChC,IAAKxC,GAAciD,EAAQjb,GACzB,OAEF,IAAIzf,EAAM,EACV,KAAOA,EAAM+5B,EAAW7/C,QAAU6/C,EAAW/5B,GAAKpc,IAAMA,KACpDoc,EAEJ+5B,EAAWzL,OAAOtuB,EAAK,EAAG,CAAEuN,KAAMwpB,EAASnzC,MAAKg3C,IAAKF,GAAS,IAGhE,IAAK,IAAI14C,EAAI,EAAGC,EAAI83C,EAAW7/C,OAAQ8H,EAAIC,IAAKD,EAAG,CACjD,MAAM,KAAEurB,GAASwsB,EAAW/3C,GACtB64C,EAAWttB,EAAKiR,QAAUsb,EAAYvsB,EAAKkR,OAASlR,EAAKiR,MAC/D,GAAIqc,IAAaX,EAIf,QAHExgD,KAAKw/C,SACPx/C,KAAKw4C,QAAQhsC,KAAK,CAAC4zC,IACnBhB,EAAUe,EAAS/3B,SAAU,GACtB,EAET,GAAIpoB,KAAKkgD,SAASrsB,EAAMstB,EAAUd,EAAW/3C,GAAG44C,KAI9C,OAHA7C,GAAiBc,EAAUtrB,EAAKzL,QAASpoB,KAAKw/C,UAC9Cx/C,KAAKw4C,QAAQx4C,KAAKw/C,UAAUhzC,KAAK4zC,GACjChB,EAAUe,EAAS/3B,SAAU,GACtB,CAEX,CAEA,OADAg3B,EAAUe,EAAS/3B,SAAU,GACtB,CACT,CAEAg5B,WAAAA,CAAYvtB,GAEV7zB,KAAKygD,WAAa5sB,EAAKiR,MACnB9kC,KAAKkgD,SAASrsB,EAAMA,EAAKkR,OAAQ,IAAI2G,EAAAA,WACvC2S,GAAiBr+C,KAAKq/C,WAAWxrB,EAAKzL,QAASpoB,KAAKw/C,UACpDx/C,KAAKw4C,QAAQx4C,KAAKw/C,UAAUhzC,KAAKqnB,EAAKiR,OAE1C,CAEAuc,UAAAA,CAAWzC,EAAW0C,GACpBthD,KAAK2gD,WAAa/B,EAClB,MAAMpP,EAAUxvC,KAAKyvC,SACflkC,EAAOvL,KAEbwvC,EAAQ+R,kBAAkBC,IACxBj2C,EAAKg0C,eACLiC,EAAU7e,aAAa9O,IACjB+qB,EAAU/qB,IACZtoB,EAAK61C,YAAYvtB,EACnB,IAEF,MAAMylB,EAAS/tC,EAAKitC,QACpB,IAAK,IAAIlwC,EAAI,EAAGC,EAAI+wC,EAAO94C,OAAQ8H,EAAIC,IAAKD,EAAG,CAC7C,MAAM8wC,EAAQE,EAAOhxC,GACrB,IAAKg5C,EAAWlI,GACd,SAEF,MAAMqI,EAAW,IAAIjD,GAAMpF,GAC3BqI,EAAS9e,YAAY4b,IACrBiD,EAAUnI,SAASoI,EACrB,IAEJ,CAEAC,UAAAA,GACE1hD,KAAKqhD,WAAWxC,GAAaI,GAC/B,CAEA0C,YAAAA,GACE3hD,KAAKqhD,WAAWvC,GAAqBI,GACvC,GC5OF,SAAS0C,GAA2Bh5C,EAAQ2a,EAAQs+B,EAAMC,GACxD,MAAMC,EAAQF,EAAOj5C,EAAOkT,EACtBkmC,EAAQF,EAAOl5C,EAAOkT,EACtBmmC,EAAQx5C,KAAK6uC,KAAK7uC,KAAKgM,IAAI8O,EAASA,EAASw+B,EAAQA,EAAO,IAC5DG,EAAQz5C,KAAK6uC,KAAK7uC,KAAKgM,IAAI8O,EAASA,EAASy+B,EAAQA,EAAO,IAE5DG,EAAO15C,KAAKiM,IAAIutC,EAAOC,GAC7B,IAAIE,EASJ,OALEA,EAFEP,GAAQj5C,EAAOkT,GAAKgmC,GAAQl5C,EAAOkT,EAE9ByH,EAEA9a,KAAKgM,IAAIwtC,EAAOC,GAGlB,CAACC,EAAMC,EAChB,CAcA,SAASC,GAA2Bz5C,EAAQ2a,EAAQ++B,EAAMC,GACxD,MAAMC,EAAQF,EAAO15C,EAAO6R,EACtBgoC,EAAQF,EAAO35C,EAAO6R,EACtBioC,EAAQj6C,KAAK6uC,KAAK7uC,KAAKgM,IAAI8O,EAASA,EAASi/B,EAAQA,EAAO,IAC5DG,EAAQl6C,KAAK6uC,KAAK7uC,KAAKgM,IAAI8O,EAASA,EAASk/B,EAAQA,EAAO,IAE5DN,EAAO15C,KAAKiM,IAAIguC,EAAOC,GAC7B,IAAIP,EASJ,OALEA,EAFEE,GAAQ15C,EAAO6R,GAAK8nC,GAAQ35C,EAAO6R,EAE9B8I,EAEA9a,KAAKgM,IAAIiuC,EAAOC,GAGlB,CAACR,EAAMC,EAChB,CAQA,MAAMQ,GACJtvC,WAAAA,CAAYuvC,EAAKC,GACf9iD,KAAK+iD,KAAOF,EAAIzc,QAChB,MAAM1W,EAAO,IAAIgc,EAAAA,QACjBmX,EAAIG,QAAQtzB,GACZ1vB,KAAKsoB,OAASoH,EAAK0W,QAAQ6c,OAAOH,GAAeltC,QAAQnB,IAAI,IAAIi3B,EAAAA,QAAc,EAAG,EAAG,IACrF1rC,KAAKkjD,MAAQljD,KAAKsoB,OAAO8d,QAAQ+R,UAAU,GAC3Cn4C,KAAKmjD,UAAYzzB,EAAK0W,QAAQ6c,OAAOjjD,KAAKsoB,QAC1CtoB,KAAKojD,YAAc,GAAM36C,KAAKiM,IAAIjM,KAAKiM,IAAI1U,KAAKmjD,UAAUjtC,EAAGlW,KAAKmjD,UAAU1oC,GAAIza,KAAKmjD,UAAUrnC,GAC/F9b,KAAKqjD,YAAc,GAAM56C,KAAK6uC,KAAKt3C,KAAKmjD,UAAU5c,IAAIvmC,KAAKmjD,YAG3D,MAAMG,EAAYtjD,KAAKsoB,OAAOpS,EAAIlW,KAAKsoB,OAAO7N,EAAIza,KAAKsoB,OAAOxM,EAC9D9b,KAAKujD,QAAUl9C,EAAMmpB,cAAcvV,WAAYqpC,GAC/C,IAAK,IAAIh7C,EAAI,EAAGA,EAAIg7C,IAAah7C,EAC/BtI,KAAKujD,QAAQj7C,IAAM,EAKrBtI,KAAKooC,OAAS,EAChB,CAOAob,QAAAA,CAAShU,GACP,MAAMjkC,EAAOvL,KAEb,IAAIsmB,EAAMtmB,KAAKooC,OAAO5nC,OAGtBR,KAAKooC,OAAO5nC,QAAU,EAAIgvC,EAAQ9F,eAElC8F,EAAQ7F,aAAa/V,IAEnB,MAAM6vB,EAAWl4C,EAAKm4C,WAAW9vB,EAAKzP,UAGtC5Y,EAAK68B,OAAO9hB,GAAOsN,EACnBroB,EAAK68B,OAAO9hB,EAAM,GAAK/a,EAAKg4C,QAAQE,GACpCl4C,EAAKg4C,QAAQE,GAAYn9B,EAEzBA,GAAO,CAAC,GAEZ,CAQA2c,aAAe,SAAIyI,EAAAA,QAAc,EAAG,EAAG,GAAxB,GAEfzI,cAAgB,SAAIyI,EAAAA,QAAJ,GAEhBgY,UAAAA,CAAWC,GACT,MAAM1uC,EAAO2tC,GAAWgB,MAClBC,EAAQjB,GAAWkB,OAMzB,OALAD,EAAMpsC,KAAKksC,GACRrd,IAAItmC,KAAK+iD,KAAKruC,KACduuC,OAAOjjD,KAAKmjD,WACZvtC,QACAb,MAAME,EAAMjV,KAAKkjD,OACbW,EAAM3tC,EAAIlW,KAAKsoB,OAAOpS,GAAK2tC,EAAMppC,EAAIza,KAAKsoB,OAAO7N,EAAIopC,EAAM/nC,EACpE,CAQAioC,mBAAAA,CAAoBF,EAAOjhB,GACzB,IAAK,IAAIt6B,EAAItI,KAAKujD,QAAQM,GAAQv7C,GAAK,EAAGA,EAAItI,KAAKooC,OAAO9/B,EAAI,GAC5Ds6B,EAAQ5iC,KAAKooC,OAAO9/B,GAExB,CAWA26B,eAAiB,SAAIyI,EAAAA,QAAJ,GAEjBzI,eAAiB,SAAIyI,EAAAA,QAAJ,GAEjBzI,eAAiB,SAAIyI,EAAAA,QAAJ,GAEjBsY,yBAAAA,CAA0Bp7C,EAAQ2a,EAAQqf,GACxC,MAAMqhB,EAASrB,GAAWsB,QACpBC,EAASvB,GAAWwB,QACpBC,EAASzB,GAAW0B,QAG1B,GAAI/gC,EAASvjB,KAAKojD,YAAc,GAE9B,YADApjD,KAAKukD,gCAAgC37C,EAAQ2a,EAAQqf,GAIvD,IAAI4hB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJV,EAAO19C,IAAIiC,EAAOkT,EAAIyH,EAAQ3a,EAAOkT,EAAIyH,GACzC8gC,EAAOlM,UAAUn4C,KAAK+iD,KAAKruC,IAAIoH,GAC5BkpC,aAAahlD,KAAKmjD,UAAUrnC,GAC5BlG,QACAqvC,YAAY,EAAGjlD,KAAKsoB,OAAOxM,EAAI,GAElC,IAAK,IAAIA,EAAIuoC,EAAOnuC,EAAG4F,GAAKuoC,EAAO5pC,IAAKqB,EAAG,CACzC8oC,EAAO,CAAC5kD,KAAK+iD,KAAKruC,IAAIoH,EAAIA,EAAI9b,KAAKmjD,UAAUrnC,EAC3C9b,KAAK+iD,KAAKruC,IAAIoH,GAAKA,EAAI,GAAK9b,KAAKmjD,UAAUrnC,GAE7CipC,EAAan8C,EAAOkT,EAAIyH,GAAUqhC,EAAK,IAAQA,EAAK,IAAMh8C,EAAOkT,EAAIyH,EAErEihC,EAAW5C,GAA2Bh5C,EAAQ2a,EAAQqhC,EAAK,GAAIA,EAAK,IAEpET,EAAOx9C,IAAIiC,EAAO6R,EAAI+pC,EAAS,GAAI57C,EAAO6R,EAAI+pC,EAAS,IACvDL,EAAOhM,UAAUn4C,KAAK+iD,KAAKruC,IAAI+F,GAC5BuqC,aAAahlD,KAAKmjD,UAAU1oC,GAC5B7E,QACAqvC,YAAY,EAAGjlD,KAAKsoB,OAAO7N,EAAI,GAElC,IAAK,IAAIA,EAAI0pC,EAAOjuC,EAAGuE,GAAK0pC,EAAO1pC,IAAKA,EAAG,CACzCkqC,EAAO,CAAC3kD,KAAK+iD,KAAKruC,IAAI+F,EAAIA,EAAIza,KAAKmjD,UAAU1oC,EAC3Cza,KAAK+iD,KAAKruC,IAAI+F,GAAKA,EAAI,GAAKza,KAAKmjD,UAAU1oC,GAE7CqqC,EAAal8C,EAAO6R,EAAI+pC,EAAS,IAAMG,EAAK,IAAQA,EAAK,IAAM/7C,EAAO6R,EAAI+pC,EAAS,GAEnFC,EAAUpC,GAA2Bz5C,EAAQ47C,EAAS,GAAIG,EAAK,GAAIA,EAAK,IAExEV,EAAOt9C,IAAIiC,EAAOsN,EAAIuuC,EAAQ,GAAI77C,EAAOsN,EAAIuuC,EAAQ,IACrDR,EAAO9L,UAAUn4C,KAAK+iD,KAAKruC,IAAIwB,GAC5B8uC,aAAahlD,KAAKmjD,UAAUjtC,GAC5BN,QACAqvC,YAAY,EAAGjlD,KAAKsoB,OAAOpS,EAAI,GAElC,IAAK,IAAI,EAAEA,GAAM+tC,EAAQ/tC,GAAK+tC,EAAOxpC,IAAKvE,EACxCwuC,EAAO,CAAC1kD,KAAK+iD,KAAKruC,IAAIwB,EAAIA,EAAIlW,KAAKmjD,UAAUjtC,EAC3ClW,KAAK+iD,KAAKruC,IAAIwB,GAAKA,EAAI,GAAKlW,KAAKmjD,UAAUjtC,GAC7C2uC,EAAaj8C,EAAOsN,EAAIuuC,EAAQ,IAAMC,EAAK,IAAQA,EAAK,IAAM97C,EAAOsN,EAAIuuC,EAAQ,GAEjF7hB,EAAQ1sB,EAAIlW,KAAKsoB,OAAOpS,GAAKuE,EAAIza,KAAKsoB,OAAO7N,EAAIqB,GAAI+oC,GAAaC,GAAaC,EAEnF,CACF,CACF,CAcA9hB,gBAAkB,SAAIyI,EAAAA,QAAJ,GAElB6Y,+BAAAA,CAAgC37C,EAAQ2a,EAAQqf,GAC9C,MAAMqhB,EAASrB,GAAWsB,QACpBC,EAASvB,GAAWwB,QACpBC,EAASzB,GAAW0B,QACpBY,EAAUtC,GAAWuC,SAErBC,GAAc7hC,EAASvjB,KAAKqjD,cAAgB9/B,EAASvjB,KAAKqjD,aAChE,IAAIgC,GAAe,EACf9hC,EAASvjB,KAAKqjD,cAChBgC,GAAe9hC,EAASvjB,KAAKqjD,cAAgB9/B,EAASvjB,KAAKqjD,cAI7DY,EAAOt9C,IAAIiC,EAAOsN,EAAIqN,EAAQ3a,EAAOsN,EAAIqN,GACzC0gC,EAAO9L,UAAUn4C,KAAK+iD,KAAKruC,IAAIwB,GAC5B8uC,aAAahlD,KAAKmjD,UAAUjtC,GAC5BN,QACHquC,EAAO/tC,EAAIzN,KAAKiM,IAAIjM,KAAKgM,IAAIwvC,EAAO/tC,EAAG,GAAIlW,KAAKsoB,OAAOpS,EAAI,GAC3D+tC,EAAOxpC,EAAIhS,KAAKiM,IAAIjM,KAAKgM,IAAIwvC,EAAOxpC,EAAG,GAAIza,KAAKsoB,OAAOpS,EAAI,GAE3DiuC,EAAOx9C,IAAIiC,EAAO6R,EAAI8I,EAAQ3a,EAAO6R,EAAI8I,GACzC4gC,EAAOhM,UAAUn4C,KAAK+iD,KAAKruC,IAAI+F,GAC5BuqC,aAAahlD,KAAKmjD,UAAU1oC,GAC5B7E,QACHuuC,EAAOjuC,EAAIzN,KAAKiM,IAAIjM,KAAKgM,IAAI0vC,EAAOjuC,EAAG,GAAIlW,KAAKsoB,OAAO7N,EAAI,GAC3D0pC,EAAO1pC,EAAIhS,KAAKiM,IAAIjM,KAAKgM,IAAI0vC,EAAO1pC,EAAG,GAAIza,KAAKsoB,OAAO7N,EAAI,GAE3D4pC,EAAO19C,IAAIiC,EAAOkT,EAAIyH,EAAQ3a,EAAOkT,EAAIyH,GACzC8gC,EAAOlM,UAAUn4C,KAAK+iD,KAAKruC,IAAIoH,GAC5BkpC,aAAahlD,KAAKmjD,UAAUrnC,GAC5BlG,QACHyuC,EAAOnuC,EAAIzN,KAAKiM,IAAIjM,KAAKgM,IAAI4vC,EAAOnuC,EAAG,GAAIlW,KAAKsoB,OAAOxM,EAAI,GAC3DuoC,EAAO5pC,EAAIhS,KAAKiM,IAAIjM,KAAKgM,IAAI4vC,EAAO5pC,EAAG,GAAIza,KAAKsoB,OAAOxM,EAAI,GAE3D,IAAK,IAAIA,EAAIuoC,EAAOnuC,EAAG4F,GAAKuoC,EAAO5pC,IAAKqB,EAAG,CACzC,MAAM8oC,EAAO,CAAC5kD,KAAK+iD,KAAKruC,IAAIoH,EAAIA,EAAI9b,KAAKmjD,UAAUrnC,EACjD9b,KAAK+iD,KAAKruC,IAAIoH,GAAKA,EAAI,GAAK9b,KAAKmjD,UAAUrnC,GAC7CopC,EAAQppC,EAAI,IAAO8oC,EAAK,GAAKA,EAAK,IAElC,IAAK,IAAInqC,EAAI0pC,EAAOjuC,EAAGuE,GAAK0pC,EAAO1pC,IAAKA,EAAG,CACzC,MAAMkqC,EAAO,CAAC3kD,KAAK+iD,KAAKruC,IAAI+F,EAAIA,EAAIza,KAAKmjD,UAAU1oC,EACjDza,KAAK+iD,KAAKruC,IAAI+F,GAAKA,EAAI,GAAKza,KAAKmjD,UAAU1oC,GAC7CyqC,EAAQzqC,EAAI,IAAOkqC,EAAK,GAAKA,EAAK,IAElC,IAAK,IAAI,EAAEzuC,GAAM+tC,EAAQ/tC,GAAK+tC,EAAOxpC,IAAKvE,EAAG,CAC3C,MAAMwuC,EAAO,CAAC1kD,KAAK+iD,KAAKruC,IAAIwB,EAAIA,EAAIlW,KAAKmjD,UAAUjtC,EACjDlW,KAAK+iD,KAAKruC,IAAIwB,GAAKA,EAAI,GAAKlW,KAAKmjD,UAAUjtC,GAC7CgvC,EAAQhvC,EAAI,IAAOwuC,EAAK,GAAKA,EAAK,IAElC,MAAMY,EAAK18C,EAAOyuC,kBAAkB6N,GAChCI,GAAMF,GACRxiB,EAAQ1sB,EAAIlW,KAAKsoB,OAAOpS,GAAKuE,EAAIza,KAAKsoB,OAAO7N,EAAIqB,GAAIwpC,GAAMD,EAE/D,CACF,CACF,CACF,CASAvI,uBAAAA,CAAwBl0C,EAAQ2a,EAAQqf,GACtC,MAAMr3B,EAAOvL,KACPulD,EAAKhiC,EAASA,EAEpBhY,EAAKy4C,0BAA0Bp7C,EAAQ2a,GAAQ,CAACsgC,EAAO2B,KACjDA,EACFj6C,EAAKw4C,oBAAoBF,EAAOjhB,GAEhCr3B,EAAKw4C,oBAAoBF,GAAQjwB,IAC3BhrB,EAAOyuC,kBAAkBzjB,EAAKzP,WAAaohC,GAC7C3iB,EAAQhP,EACV,GAEJ,GAEJ,CAUA6xB,+BAAAA,CAAgCjW,EAASzN,EAAM2jB,EAAM9iB,GACnD5iC,KAAK2lD,iCAAiCC,IACpCpW,EAAQ7F,aAAa/V,IACQ,IAAtBA,EAAKmO,KAAOA,IACf6jB,EAAShyB,EACX,GACA,GACD8xB,EAAM9iB,EACX,CAUAijB,iCAAAA,CAAkCrW,EAAS3nC,EAAU69C,EAAM9iB,GACzD5iC,KAAK2lD,iCAAiCC,IACpCpW,EAAQ7F,aAAa/V,IACf/rB,EAAS2tC,aAAa5hB,IACxBgyB,EAAShyB,EACX,GACA,GACD8xB,EAAM9iB,EACX,CASA+iB,+BAAAA,CAAgChc,EAAa+b,EAAM9iB,GACjD,MAAMr3B,EAAOvL,KACPulD,EAAKG,EAAOA,EAEZI,EAAS,GACTje,EAAQ,GACd,IAwBIgc,EAxBAv9B,EAAM,EAGVqjB,GAAa/V,IACXroB,EAAKy4C,0BAA0BpwB,EAAKzP,SAAUuhC,GAAM,CAAC7B,EAAO2B,KACtDA,EAEFM,EAAOjC,IAAU,OACiB,IAAlBiC,EAAOjC,IAEvBhc,EAAMr7B,KAAKonB,GACXiU,EAAMr7B,MAAM,GACZs5C,EAAOjC,GAASv9B,EAChBA,GAAO,IACqB,IAAnBw/B,EAAOjC,KAEhBhc,EAAMr7B,KAAKonB,GACXiU,EAAMr7B,KAAKs5C,EAAOjC,IAClBiC,EAAOjC,GAASv9B,EAChBA,GAAO,EACT,GACA,IAKJ,MAAMy/B,EAAkB,SAAUnyB,GAChC,QAA6B,IAAlBkyB,EAAOjC,GAKlB,GADAv9B,EAAMw/B,EAAOjC,IACA,IAATv9B,GAOJ,KAAOA,GAAO,EAAGA,EAAMuhB,EAAMvhB,EAAM,GACjC,GAAIsN,EAAKzP,SAASkzB,kBAAkBxP,EAAMvhB,GAAKnC,UAAYohC,EAAI,CAC7D3iB,EAAQhP,GACR,KACF,OATAgP,EAAQhP,EAWZ,EAGA,IAAKiwB,KAASiC,EACRA,EAAO15C,eAAey3C,IACxBt4C,EAAKw4C,oBAAoBF,EAAOkC,EAGtC,EAGF,YC3aMC,GAAmB,GACnBC,IAAoB,IAEpBC,IAAqB,OAIZ,MAAMC,GACnB7yC,WAAAA,CAAYk8B,GACVxvC,KAAKyvC,SAAWD,EAChBxvC,KAAKomD,QAAU,GACXpmD,KAAKyvC,SAASC,UAAUlvC,OAND,IAOzBR,KAAKqmD,WAELrmD,KAAKsmD,QAET,CAEAC,MAAAA,CAAOC,EAAMC,GACX,GAAIzmD,KAAKomD,QAAQI,GAAO,CACtB,MAAOE,EAAMC,GAAQ3mD,KAAKomD,QAAQI,GAAMI,SACxC,GAAIF,GAAQA,EAAKjlB,UAAYglB,GAAMC,EAAKG,QAnBrB,GAoBjB,OAAO,EAET,GAAIF,GAAQA,EAAKllB,UAAYglB,GAAME,EAAKE,QAtBrB,GAuBjB,OAAO,CAEX,CACA,OAAO,CACT,CAEAP,MAAAA,GACE,MAAM/6C,EAAOvL,KAEb,IAAK,IAAIsI,EAAI,EAAGA,EAAItI,KAAKyvC,SAASC,UAAUlvC,OAAS,IAAK8H,EAAG,CAC3D,MAAMw+C,EAAK9mD,KAAKyvC,SAASC,UAAUpnC,GACnC,GAAyD,IAApDw+C,EAAGx0C,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,SAC1C,SAIF,IAAIuY,EAAQ,KACRz+C,EAAI,GAAMtI,KAAKyvC,SAASC,UAAUpnC,EAAI,GAAGgK,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,SAC5EsY,EAAG9jB,YAAchjC,KAAKyvC,SAASC,UAAUpnC,EAAI,GAAG06B,UAAY,IAC/D+jB,EAAQ/mD,KAAKyvC,SAASC,UAAUpnC,EAAI,IAGtC,IAAK,IAAIoT,EAAIpT,EAAI,EAAGoT,EAAI1b,KAAKyvC,SAASC,UAAUlvC,SAAUkb,EAAG,CAC3D,MAAMsrC,EAAKhnD,KAAKyvC,SAASC,UAAUh0B,GACnC,GAAyD,IAApDsrC,EAAG10C,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,SAC1C,SAIF,IAAIyY,EAAQ,KACPjnD,KAAKyvC,SAASC,UAAUh0B,EAAI,GAAGpJ,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,SACnEwY,EAAGhkB,YAAchjC,KAAKyvC,SAASC,UAAUh0B,EAAI,GAAGsnB,UAAY,IAC/DikB,EAAQjnD,KAAKyvC,SAASC,UAAUh0B,EAAI,IAGtCnQ,EAAK27C,iBAAiBH,EAAOD,EAAIE,GAC7BtrC,IAAMpT,EAAI,GACZiD,EAAK27C,iBAAiBD,EAAOD,EAAIF,EAErC,CACF,CACF,CAEAT,QAAAA,GACE,MAAM96C,EAAOvL,KACPiwC,EAAWjwC,KAAKyvC,SAASC,UAC/B,IAAIoX,EACAC,EAEJ,MAAM/K,EAAKh8C,KAAKyvC,SAASwM,gBACzB,GAAW,OAAPD,EACF,OAGF,MAAMmL,EAAQ,IAAIC,GAAepnD,KAAKyvC,SAASC,UAAUlvC,OAASR,KAAKyvC,SAASC,UAAUlvC,OAAS,GAEnG,SAASg8C,EAAY5oB,GACnB,MAAMozB,EAAKpzB,EAAK6N,QAEhB,GAAIulB,EAAG5+B,SAAW0+B,EAAG1+B,OACnB,OAGF,GAAyD,IAApD4+B,EAAG10C,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,SAC1C,OAGF,IAAK2Y,EAAMzM,QAAQoM,EAAG1+B,OAAQ4+B,EAAG5+B,QAE/B,OAIF,IAAI6+B,EAAQD,EAAG5+B,OAAS,EAAI6nB,EAAS+W,EAAG5+B,OAAS,GAAK,MAClD6+B,GAC0D,IAAvDA,EAAM30C,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,UAAkBwY,EAAGhkB,YAAcikB,EAAMjkB,UAAY,IACpGikB,EAAQ,MAGV17C,EAAK27C,iBAAiBH,EAAOD,EAAIE,GAC7BA,EAAG5+B,SAAW0+B,EAAG1+B,OAAS,GAC5B7c,EAAK27C,iBAAiBD,EAAOD,EAAIF,EAErC,CAEA,IAAK,IAAIx+C,EAAI,EAAGA,EAAI2nC,EAASzvC,OAAS,IAAK8H,EACzCw+C,EAAK7W,EAAS3nC,GAC2C,IAApDw+C,EAAGx0C,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,WAK5CuY,EAAQz+C,EAAI,EAAI2nC,EAAS3nC,EAAI,GAAK,MAC9By+C,GAC0D,IAAvDA,EAAMz0C,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,UAAkBsY,EAAG9jB,YAAc+jB,EAAM/jB,UAAY,IACpG+jB,EAAQ,MAGV/K,EAAGc,wBAAwB98C,KAAKqnD,kBAAkBP,GAvH1B,EAuHsDtK,GAElF,CAEA6K,iBAAAA,CAAkB/3B,GAChB,IAAK,IAAIhnB,EAAI,EAAGA,EAAIgnB,EAAI8Y,OAAO5nC,SAAU8H,EAAG,CAC1C,MAAM,KAAEikB,GAAS+C,EAAI8Y,OAAO9/B,GAC5B,GAAa,OAATikB,GACU,OAATA,EACH,OAAO+C,EAAI8Y,OAAO9/B,GAAG6b,QAEzB,CAEA,OAAO,IACT,CAEAmjC,aAAAA,CAAch4B,GACZ,IAAIxf,EAAI,KACJ1P,EAAI,KAUR,OARAkvB,EAAIqa,aAAaxzB,IACA,MAAXA,EAAEoW,KACJzc,EAAIqG,EAAEgO,SACc,MAAXhO,EAAEoW,OACXnsB,EAAI+V,EAAEgO,SACR,IAGK,CAACrU,EAAG1P,EACb,CAGAmnD,aAAAA,CAAclc,EAAM/b,GAClB,MAAOxf,EAAG1P,GAAKJ,KAAKsnD,cAAcjc,GAElC,IAAI9iC,EAOJ,GANA+mB,EAAIqa,aAAaxzB,IACA,MAAXA,EAAEoW,OACJhkB,EAAI4N,EAAEgO,SACR,IAGErU,GAAK1P,GAAKmI,EAAG,CAEf,MAAM+R,EAAIxK,EAAEs2B,QAKZ,OAJA9rB,EAAEgsB,IAAIlmC,GACNka,EAAEqsB,eAAe,EAAMrsB,EAAE9Z,UACzB8Z,EAAE7Q,IAAIlB,GAEC,CAACA,EAAG+R,EACb,CAEA,MAAO,CAAC,KAAM,KAChB,CAEA4sC,gBAAAA,CAAiBM,EAAUC,EAAOb,GAChC,IAAIn7B,EAAS,EAEb,GAAiB,OAAb+7B,EACF,OAAO/7B,EAGT,GAAkC,QAA9Bg8B,EAAMn1C,UAAUywB,UAAqB,CACvC,MAAOx6B,EAAG+R,GAAKta,KAAKunD,cAAcC,EAAUC,IACrC33C,EAAG1P,GAAKJ,KAAKsnD,cAAcV,GAElC,GAAU,OAANr+C,GAAoB,OAAN+R,GAAoB,OAANxK,GAAoB,OAAN1P,EAC5C,OAAOqrB,EAGT,MAAMi8B,EAAaptC,EAAEirB,WAAWnlC,GAC1BunD,EAAartC,EAAEirB,WAAWz1B,GAC1B83C,EAAar/C,EAAEg9B,WAAWz1B,GAC1B+3C,EAAat/C,EAAEg9B,WAAWnlC,GAI9BqrB,EAFEi8B,EAAa1B,IAAoB2B,EAAa3B,IAC3C4B,EAAa5B,IAAoB6B,EAAa7B,GAC1CC,GAEAC,GAAoBwB,EAAaxB,GAAoByB,EACnDzB,GAAoB0B,EAAa1B,GAAoB2B,EAIlEp8B,EAAShjB,KAAKkN,MAAe,IAAT8V,GAAiB,IAEjCA,EAASw6B,KACXx6B,EAASw6B,GAEb,MAG0C,IAA/BjmD,KAAKomD,QAAQqB,EAAMr/B,UAC5BpoB,KAAKomD,QAAQqB,EAAMr/B,QAAU,CAC3Bq/B,MAAO,GACPb,SAAU,KAGd,MAAMkB,EAAY9nD,KAAKomD,QAAQqB,EAAMr/B,QAEjC0/B,EAAUlB,SAASpmD,OAAS,GAC9BsnD,EAAUlB,SAASp6C,KAAK,CACtBi1B,QAASmlB,EAASx+B,OAClBy+B,OAAQp7B,IAIRq8B,EAAUlB,SAASpmD,OAAS,IAC1BirB,EAASq8B,EAAUlB,SAAS,GAAGC,QACjCiB,EAAUlB,SAAS,GAAGnlB,QAAUqmB,EAAUlB,SAAS,GAAGnlB,QACtDqmB,EAAUlB,SAAS,GAAGC,OAASiB,EAAUlB,SAAS,GAAGC,OACrDiB,EAAUlB,SAAS,GAAGnlB,QAAUmlB,EAASx+B,OACzC0/B,EAAUlB,SAAS,GAAGC,OAASp7B,GACtBA,EAASq8B,EAAUlB,SAAS,GAAGC,SACxCiB,EAAUlB,SAAS,GAAGnlB,QAAUmlB,EAASx+B,OACzC0/B,EAAUlB,SAAS,GAAGC,OAASp7B,SAKU,IAAlCzrB,KAAKomD,QAAQQ,EAASx+B,UAC/BpoB,KAAKomD,QAAQQ,EAASx+B,QAAU,CAC9Bq/B,MAAO,GACPb,SAAU,KAGd,MAAMmB,EAAU/nD,KAAKomD,QAAQQ,EAASx+B,QAqBtC,OAnBI2/B,EAAQN,MAAMjnD,OAAS,GACzBunD,EAAQN,MAAMj7C,KAAK,CACjBi1B,QAASgmB,EAAMr/B,OACfy+B,OAAQp7B,IAIRs8B,EAAQN,MAAMjnD,OAAS,IACrBirB,EAASs8B,EAAQN,MAAM,GAAGZ,QAC5BkB,EAAQN,MAAM,GAAGhmB,QAAUsmB,EAAQN,MAAM,GAAGhmB,QAC5CsmB,EAAQN,MAAM,GAAGZ,OAASkB,EAAQN,MAAM,GAAGZ,OAC3CkB,EAAQN,MAAM,GAAGhmB,QAAUgmB,EAAMr/B,OACjC2/B,EAAQN,MAAM,GAAGZ,OAASp7B,GACjBA,EAASs8B,EAAQN,MAAM,GAAGZ,SACnCkB,EAAQN,MAAM,GAAGhmB,QAAUgmB,EAAMr/B,OACjC2/B,EAAQN,MAAM,GAAGZ,OAASp7B,IAIvBA,CACT,EC/QF,MAAMu8B,GAAa79C,OAAO89C,OAAO,CAC/BC,UAAW,EACXC,SAAU,EACVC,cAAe,IAGXC,GAAYl+C,OAAO89C,OAAO,CAC9BK,MAAO,EACPC,OAAQ,EACRC,IAAK,EACLC,cAAe,IAGXC,GAAgBv+C,OAAO89C,OAAO,CAClCpW,OAAQ,IACRC,OAAQ,IACRC,UAAW,IACXC,YAAa,IACbC,SAAU,IACVK,KAAM,IACNC,KAAM,IACNG,KAAM,MAGO,MAAMiW,GACnBr1C,WAAAA,CAAYk8B,GACVxvC,KAAKyvC,SAAWD,EAChBxvC,KAAKsmD,QACP,CAEAA,MAAAA,GACE,MAAM/6C,EAAOvL,KACbA,KAAKomD,QAAU,IAAID,GAAUnmD,KAAKyvC,UAClCzvC,KAAK4oD,IAAM,GAGX5oD,KAAK6oD,OAAS,GACd7oD,KAAK8oD,cAAgB,GACrB9oD,KAAK+oD,MAAQ,GACb,IAAK,IAAIzgD,EAAI,EAAGA,EAAItI,KAAKyvC,SAASM,cAAcvvC,SAAU8H,EACxDtI,KAAK8oD,cAAcxgD,GAAK,GAE1BtI,KAAKgpD,YAAc,GACnBhpD,KAAKgpD,YAAY,GAAK,GACtBhpD,KAAKgpD,YAAY,GAAK,GACtBhpD,KAAKgpD,YAAY,GAAK,GAGtBhpD,KAAKipD,cAAgB,GACrB,IAAK,IAAI3gD,EAAI,EAAGA,EAAItI,KAAKyvC,SAASyZ,QAAQ1oD,SAAU8H,EAAG,CACrD,MAAMw/B,EAAQ9nC,KAAKyvC,SAASyZ,QAAQ5gD,GAAGynC,cACvC,IAAI7iC,EAAM,EACV,KAAOA,EAAM46B,EAAMtnC,QACgD,IAA5DsnC,EAAM56B,GAAKoF,UAAU8vB,MAAQ+J,GAAY9J,MAAMmM,WADzBthC,GAK7BlN,KAAKipD,cAAc3gD,GAAK4E,CAC1B,CAEAlN,KAAKmpD,mBAEL,IAAK,IAAI7gD,EAAI,EAAGA,EAAItI,KAAKyvC,SAASyZ,QAAQ1oD,SAAU8H,EAClDiD,EAAK69C,mBAAmBppD,KAAKyvC,SAASyZ,QAAQ5gD,GAAGynC,cAAe/vC,KAAKipD,cAAc3gD,IAAI,EAE3F,CAEA8gD,kBAAAA,CAAmBC,EAAYC,EAAaC,GAE1C,IAAK,IAAIC,EAAS,EAAGA,GAAU,KACzBH,EAAW7oD,OAASgpD,KADUA,EAKlC,IAAK,IAAIlhD,EAAI,EAAGA,EAAIkhD,EAASF,IAAehhD,EAC1C,GAAItI,KAAKomD,QAAQG,OAAO8C,EAAW/gD,EAAIkhD,GAAQphC,OAAQihC,EAAW/gD,GAAG8f,QACrB,CAC9CpoB,KAAKgpD,YAAYQ,GAAQH,EAAW/gD,EAAIkhD,GAAQphC,QAAUigC,GAAUG,IACpE,IAAK,IAAI9sC,EAAIpT,EAAI,EAAGoT,EAAIpT,EAAIkhD,IAAU9tC,OAC0B,IAAnD1b,KAAKgpD,YAAYQ,GAAQH,EAAW3tC,GAAG0M,UAChDpoB,KAAKgpD,YAAYQ,GAAQH,EAAW3tC,GAAG0M,QAAUigC,GAAUE,QAI3DvoD,KAAKgpD,YAAYQ,GAAQH,EAAW/gD,GAAG8f,UAAYigC,GAAUG,IAC/DxoD,KAAKgpD,YAAYQ,GAAQH,EAAW/gD,GAAG8f,QAAUigC,GAAUI,cAE3DzoD,KAAKgpD,YAAYQ,GAAQH,EAAW/gD,GAAG8f,QAAUigC,GAAUC,KAE/D,CAIJ,IAAK,IAAIhgD,EAAI,EAAGA,EAAIghD,EAAc,IAAKhhD,EAAG,CACxC,MAAMmhD,EAAQzpD,KAAK0pD,OAAOL,EAAW/gD,EAAI,GAAI+gD,EAAW/gD,GAAI+gD,EAAW/gD,EAAI,IAC3EtI,KAAK+oD,MAAMM,EAAW/gD,GAAG8f,QAAqB,MAAVqhC,GAAiBA,EAAQ,EAC/D,CAEA,IAAK,IAAInhD,EAAI,EAAGA,EAAI,EAAIghD,IAAehhD,EACrC,GAAItI,KAAK2pD,cAAcN,EAAW/gD,GAAG8f,OAAQ,IAAMpoB,KAAK2pD,cAAcN,EAAW/gD,EAAI,GAAG8f,OAAQ,GAC9F,IAAK,IAAI1M,EAAIpT,EAAGoT,GAAKpT,EAAI,IAAKoT,EAC5B1b,KAAK4oD,IAAIS,EAAW3tC,GAAG0M,QAAUsgC,GAAc1W,YAKrD,IAAK,IAAI1pC,EAAI,EAAGA,EAAI,EAAIghD,IAAehhD,EACrC,GAAItI,KAAK2pD,cAAcN,EAAW/gD,GAAG8f,OAAQ,IAAMpoB,KAAK2pD,cAAcN,EAAW/gD,EAAI,GAAG8f,OAAQ,GAAI,CAClG,IAAIgR,GAAQ,EACZ,IAAK,IAAI1d,EAAIpT,EAAG8wB,GAAS1d,GAAKpT,EAAI,IAAKoT,EACrC0d,OAAkD,IAAnCp5B,KAAK4oD,IAAIS,EAAW3tC,GAAG0M,SAC3BpoB,KAAK4oD,IAAIS,EAAW3tC,GAAG0M,UAAYsgC,GAAc3W,UAE9D,GAAI3Y,EACF,IAAK,IAAI1d,EAAIpT,EAAGoT,GAAKpT,EAAI,IAAKoT,EAC5B1b,KAAK4oD,IAAIS,EAAW3tC,GAAG0M,QAAUsgC,GAAc3W,SAGrD,CAGF,IAAK,IAAIzpC,EAAI,EAAGA,EAAI,EAAIghD,IAAehhD,EACrC,GAAItI,KAAK2pD,cAAcN,EAAW/gD,GAAG8f,OAAQ,IAAMpoB,KAAK2pD,cAAcN,EAAW/gD,EAAI,GAAG8f,OAAQ,GAAI,CAClG,IAAIgR,GAAQ,EACZ,IAAK,IAAI1d,EAAIpT,EAAG8wB,GAAS1d,GAAKpT,EAAI,IAAKoT,EACrC0d,OAAkD,IAAnCp5B,KAAK4oD,IAAIS,EAAW3tC,GAAG0M,SAC3BpoB,KAAK4oD,IAAIS,EAAW3tC,GAAG0M,UAAYsgC,GAAczW,UAChDsX,GAAqBvpD,KAAK4oD,IAAIS,EAAW3tC,GAAG0M,UAAYsgC,GAAc1W,YAEpF,GAAI5Y,EACF,IAAK,IAAI1d,EAAIpT,EAAGoT,GAAKpT,EAAI,IAAKoT,EAC5B1b,KAAK4oD,IAAIS,EAAW3tC,GAAG0M,QAAUsgC,GAAczW,QAGrD,CAGF,IAAK,IAAI3pC,EAAI,EAAGA,EAAI,EAAIghD,IAAehhD,EACrC,QAA8C,IAAnCtI,KAAK4oD,IAAIS,EAAW/gD,GAAG8f,QAAyB,CACzD,IAAIwhC,GAAS,EACb,IAAK,IAAIJ,EAAS,EAAGA,GAAU,IAAMI,IAAUJ,EAC7C,IAAK,IAAInpD,EAAI,EAAGA,EAAImpD,IAAWI,IAAUvpD,EACvCupD,EAAUthD,GAAKjI,GAAML,KAAK2pD,cAAcN,EAAW/gD,EAAIjI,GAAG+nB,OAAQohC,GAIlEI,EACF5pD,KAAK4oD,IAAIS,EAAW/gD,GAAG8f,QAAUsgC,GAAcpW,KACtCtyC,KAAK+oD,MAAMM,EAAW/gD,GAAG8f,UAClCpoB,KAAK4oD,IAAIS,EAAW/gD,GAAG8f,QAAUsgC,GAAcnW,KAEnD,CAEJ,CAEA8U,iBAAAA,CAAkB/3B,GAChB,IAAK,IAAIhnB,EAAI,EAAGA,EAAIgnB,EAAI8Y,OAAO5nC,SAAU8H,EAAG,CAC1C,MAAM,KAAEikB,GAAS+C,EAAI8Y,OAAO9/B,GAC5B,GAAa,OAATikB,GACY,OAATA,EACL,OAAO+C,EAAI8Y,OAAO9/B,GAAG6b,QAEzB,CAEA,OAAO,IACT,CAEA0lC,aAAAA,CAAcC,EAAIC,EAAIC,EAAIC,GACxB,MAAMC,EAAMJ,EAAG1jB,QAAQE,IAAIyjB,GACrBI,EAAMH,EAAG5jB,QAAQE,IAAI2jB,GAE3B,IAAIx+B,EAAS,EAEb,MAAMvV,EAAIg0C,EAAI3jB,IAAI2jB,GAAOC,EAAI5jB,IAAI4jB,GAKjC,OAJIj0C,EAAI,IACNuV,EAASy+B,EAAI3jB,IAAI4jB,GAAO1hD,KAAK6uC,KAAKphC,IAG7BuV,CACT,CAEAi+B,MAAAA,CAAOU,EAAU96B,EAAK+6B,GACpB,MAAMC,EAAQtqD,KAAKqnD,kBAAkB/3B,GAC/Bi7B,EAAOvqD,KAAKqnD,kBAAkB+C,GAC9BI,EAAOxqD,KAAKqnD,kBAAkBgD,GACpC,GAAc,OAAVC,GAA2B,OAATC,GAA0B,OAATC,EACrC,OAAO,IAGT,MAAMC,EAAOzqD,KAAK6pD,cAAcS,EAAOC,EAAMC,EAAMF,GAC7CI,EAAOjiD,KAAK6uC,KAAK,EAAImT,EAAOA,GAClC,OAAgC,IAAzBhiD,KAAKkiD,MAAMD,EAAMD,GAAchiD,KAAKC,EAC7C,CAEAihD,aAAAA,CAAcr6B,EAAKk6B,GACjB,OAAQxpD,KAAKgpD,YAAYQ,GAAQl6B,KAAS+4B,GAAUC,OAC/CtoD,KAAKgpD,YAAYQ,GAAQl6B,KAAS+4B,GAAUI,aACnD,CAEAU,gBAAAA,GAGE,MAAMyB,EAAU,GAChB,IAAK,IAAIz0C,EAAI,EAAGA,EAAInW,KAAKyvC,SAASyZ,QAAQ1oD,SAAU2V,EAAG,CACrD,MAAM00C,EAAO7qD,KAAKipD,cAAc9yC,GAChC,GAAI00C,GAAQ,EACV,SAGF,MAAMC,EAAS9qD,KAAKyvC,SAASyZ,QAAQ/yC,GAAG45B,cAExC,IAAK,IAAIp1B,EAAIxE,EAAGwE,EAAI3a,KAAKyvC,SAASyZ,QAAQ1oD,SAAUma,EAAG,CACrD,MAAMowC,EAAO/qD,KAAKipD,cAActuC,GAChC,GAAIowC,GAAQ,EACV,SAGF,MAAMC,EAAShrD,KAAKyvC,SAASyZ,QAAQvuC,GAAGo1B,cAExC,IAAK,IAAIznC,EAAI,EAAGA,EAAI,EAAIuiD,IAAQviD,EAAG,CACjC,MAAMw+C,EAAKgE,EAAOxiD,GAElB,IAAIoT,EAAI,EAKR,IAJIf,IAAMxE,IACRuF,EAAIpT,EAAI,GAGHoT,EAAI,EAAIqvC,IAAQrvC,EAAG,CACxB,MAAMsrC,EAAKgE,EAAOtvC,GAEZ5S,EAAO9I,KAAKirD,YAAYH,EAAQxiD,EAAG0iD,EAAQtvC,GACjD,GAAI5S,IAASk/C,GAAWE,UACtB,SAIF,IAAIgD,GAAQ,EACZ,IAAK,MAAMC,KAAUP,EACnB,GAAI9hD,IAASqiD,EAAOriD,MAAQg+C,EAAG1+B,SAAW+iC,EAAO7iD,EAAE6iD,EAAO7iD,EAAE9H,OAAS,GAAK,EAA1E,CAIA,GAAIsI,IAASk/C,GAAWG,UAAYgD,EAAOzvC,EAAEyvC,EAAOzvC,EAAElb,OAAS,GAAK,IAAMwmD,EAAG5+B,OAAQ,CACnF+iC,EAAO7iD,EAAEkE,KAAKs6C,EAAG1+B,QACjB+iC,EAAOzvC,EAAElP,KAAKw6C,EAAG5+B,QACjB8iC,GAAQ,EACR,KACF,CAEA,GAAIpiD,IAASk/C,GAAWI,eAAiB+C,EAAOzvC,EAAE,GAAK,IAAMsrC,EAAG5+B,OAAQ,CACtE+iC,EAAO7iD,EAAEkE,KAAKs6C,EAAG1+B,QACjB+iC,EAAOzvC,EAAE0vC,QAAQpE,EAAG5+B,QACpB8iC,GAAQ,EACR,KACF,CAdA,CAkBGA,GACHN,EAAQp+C,KAAK,CACX1D,OACAR,EAAG,CAACw+C,EAAG1+B,QACPijC,OAAQvE,EAAG7d,WAAW7gB,OACtB1M,EAAG,CAACsrC,EAAG5+B,QACPkjC,OAAQtE,EAAG/d,WAAW7gB,QAG5B,CACF,CACF,CACF,CAGAwiC,EAAQhyC,MAAK,CAACzC,EAAGwE,IACXxE,EAAEk1C,OAAS1wC,EAAE0wC,QAAWl1C,EAAEk1C,SAAW1wC,EAAE0wC,QAAUl1C,EAAE7N,EAAE,GAAKqS,EAAErS,EAAE,IACxD,EAEH,IAGT,IAAK,IAAIA,EAAI,EAAGA,EAAIsiD,EAAQpqD,SAAU8H,EACpC,IAAK,IAAIoT,EAAIpT,EAAI,EAAGoT,EAAIkvC,EAAQpqD,SAAUkb,EAAG,CAC3C,MAAM6vC,EAAMX,EAAQtiD,GAAGA,EAAE,GACnBkjD,EAAMZ,EAAQtiD,GAAGA,EAAEsiD,EAAQtiD,GAAGA,EAAE9H,OAAS,GACzCirD,EAAMb,EAAQtiD,GAAGoT,EAAE,GACnBgwC,EAAMd,EAAQtiD,GAAGoT,EAAEkvC,EAAQtiD,GAAGoT,EAAElb,OAAS,GACzCmrD,EAAMf,EAAQlvC,GAAGpT,EAAE,GACnBsjD,EAAMhB,EAAQlvC,GAAGpT,EAAEsiD,EAAQlvC,GAAGpT,EAAE9H,OAAS,GACzCqrD,EAAMjB,EAAQlvC,GAAGA,EAAE,GACnBowC,EAAMlB,EAAQlvC,GAAGA,EAAEkvC,EAAQlvC,GAAGA,EAAElb,OAAS,GAE/C,GAAIoqD,EAAQtiD,GAAGQ,OAAS8hD,EAAQlvC,GAAG5S,MAC9B9I,KAAK+rD,eAAetjD,KAAKiM,IAAI62C,EAAKI,GAAMljD,KAAKgM,IAAI+2C,EAAKI,KACtD5rD,KAAK+rD,eAAetjD,KAAKiM,IAAI+2C,EAAKI,GAAMpjD,KAAKgM,IAAIi3C,EAAKI,KACtDH,EAAMH,GAAO,GAAMA,GAAOG,GAAOJ,GAAOK,EAC3C,SAGF,IAAII,GAAQ,EAEVA,EADEpB,EAAQtiD,GAAGQ,OAASk/C,GAAWG,SACvB0D,EAAMH,EAAM,GAAKC,EAAMH,EAAM,GAAOK,EAAMH,EAAM,EAEhDD,EAAMK,EAAM,GAAKH,EAAMH,EAAM,GAAOC,EAAMK,EAAM,EAGxDE,IACFpB,EAAQtiD,GAAGA,EAAIsiD,EAAQtiD,GAAGA,EAAEgC,OAAOsgD,EAAQlvC,GAAGpT,GAC1CsiD,EAAQtiD,GAAGQ,OAASk/C,GAAWG,SACjCyC,EAAQtiD,GAAGoT,EAAIkvC,EAAQtiD,GAAGoT,EAAEpR,OAAOsgD,EAAQlvC,GAAGA,GAE9CkvC,EAAQtiD,GAAGoT,EAAIkvC,EAAQlvC,GAAGA,EAAEpR,OAAOsgD,EAAQtiD,GAAGoT,GAEhDkvC,EAAQhW,OAAOl5B,IAAK,GAExB,CAIF,MAAMuwC,EAAY,IAAIC,IACtB,IAAK,IAAI5jD,EAAI,EAAGA,EAAIsiD,EAAQpqD,SAAU8H,EACpC2jD,EAAUxiD,IAAImhD,EAAQtiD,IAGxB,IAAI0qC,EAAQ,EACRmZ,EAAS,EACb,KAAOF,EAAUv8B,KAAO,GAAG,CACzB,IAAIy7B,EAASc,EAAUtiC,SAAS/Z,OAAOqZ,MACvCgjC,EAAUG,OAAOjB,GAEjB,MAAMkB,EAAW,IAAIH,IAGrB,IAAII,EAFJD,EAAS5iD,IAAI0hD,GAGb,EAAG,CACDmB,EAAS,IAAIJ,IACb,IAAK,MAAM/1C,KAAKk2C,EAAS1iC,SACvB,IAAK,MAAMhP,KAAKsxC,EAAUtiC,SACpB3pB,KAAKusD,kBAAkBp2C,EAAGwE,IAC5B2xC,EAAO7iD,IAAIkR,GAIjB,IAAKwwC,KAAUmB,EAAO3iC,SACpB0iC,EAAS5iD,IAAI0hD,GACbc,EAAUG,OAAOjB,EAErB,OAASmB,EAAO58B,KAAO,GAEvB,IAAKy7B,KAAUkB,EAAS1iC,SACtBwhC,EAAOgB,OAASA,EAChBhB,EAAOnY,MAAQA,EACfmY,EAAO15B,KAAO46B,IACZF,IAGFnZ,CACJ,CAEA,IAAK,IAAI1qC,EAAI,EAAGA,EAAIsiD,EAAQpqD,SAAU8H,EAAG,CACvC,MAAM6iD,EAASP,EAAQtiD,GAKvB,IAAIkkD,EAAQ,EACRC,EAAQ,EAEZ,IAAK,IAAIlsD,EAAI,EAAGA,EAAI4qD,EAAO7iD,EAAE9H,SAAUD,EACrC,GAAIP,KAAK8oD,cAAcqC,EAAO7iD,EAAE/H,IAAI,GAAI,CACtCisD,EAAQ,EACR,KACF,CAGF,IAAK,IAAIjsD,EAAI,EAAGA,EAAI4qD,EAAOzvC,EAAElb,SAAUD,EACrC,GAAIP,KAAK8oD,cAAcqC,EAAOzvC,EAAEnb,IAAI,GAAI,CACtCksD,EAAQ,EACR,KACF,CAGF,IAAIz2B,EAAK0yB,GAAc5W,OAKvB,GAJIqZ,EAAO7iD,EAAE9H,OAAS,IACpBw1B,EAAK0yB,GAAc7W,QAGjBsZ,EAAOriD,OAASk/C,GAAWG,SAAU,CACvC,IAAIzsC,EAAI,EACR,IAAK,IAAIrb,EAAI,EAAGA,EAAI8qD,EAAO7iD,EAAE9H,SAAUH,EACrCL,KAAK8oD,cAAcqC,EAAO7iD,EAAEjI,IAAImsD,GAAS,CACvC/qB,QAAS0pB,EAAOzvC,EAAEA,KAClBywC,OAAQhB,EAAOgB,OACfO,UAAU,GAIdhxC,EAAI,EACJ,IAAK,IAAIrb,EAAI,EAAGA,EAAI8qD,EAAOzvC,EAAElb,SAAUH,EACrCL,KAAK8oD,cAAcqC,EAAOzvC,EAAErb,IAAIosD,GAAS,CACvChrB,QAAS0pB,EAAO7iD,EAAEoT,KAClBywC,OAAQhB,EAAOgB,OACfO,UAAU,EAGhB,KAAO,CACL,IAAIhxC,EAAIyvC,EAAOzvC,EAAElb,OAAS,EAC1B,IAAK,IAAIH,EAAI,EAAGA,EAAI8qD,EAAO7iD,EAAE9H,SAAUH,EACrCL,KAAK8oD,cAAcqC,EAAO7iD,EAAEjI,IAAImsD,GAAS,CACvC/qB,QAAS0pB,EAAOzvC,EAAEA,KAClBywC,OAAQhB,EAAOgB,OACfO,UAAU,GAIdhxC,EAAIyvC,EAAO7iD,EAAE9H,OAAS,EACtB,IAAK,IAAIH,EAAI,EAAGA,EAAI8qD,EAAOzvC,EAAElb,SAAUH,EACrCL,KAAK8oD,cAAcqC,EAAOzvC,EAAErb,IAAIosD,GAAS,CACvChrB,QAAS0pB,EAAO7iD,EAAEoT,KAClBywC,OAAQhB,EAAOgB,OACfO,UAAU,EAGhB,CAEA,IAAK,IAAIrsD,EAAI8qD,EAAO7iD,EAAE,GAAIjI,GAAK8qD,EAAO7iD,EAAE6iD,EAAO7iD,EAAE9H,OAAS,KAAMH,EAC1DL,KAAK4oD,IAAIvoD,KAAOqoD,GAAc7W,SAChC7xC,KAAK4oD,IAAIvoD,GAAK21B,EACdh2B,KAAK6oD,OAAOxoD,GAAK8qD,EAAOnY,OAI5B,IAAK,IAAI3yC,EAAI8qD,EAAOzvC,EAAE,GAAIrb,GAAK8qD,EAAOzvC,EAAEyvC,EAAOzvC,EAAElb,OAAS,KAAMH,EAC1DL,KAAK4oD,IAAIvoD,KAAOqoD,GAAc7W,SAChC7xC,KAAK4oD,IAAIvoD,GAAK21B,EACdh2B,KAAK6oD,OAAOxoD,GAAK8qD,EAAOnY,MAG9B,CACF,CAEAiY,WAAAA,CAAYH,EAAQtE,EAAMwE,EAAQvE,GAChC,IAAIh7B,EAASu8B,GAAWE,UAExB,MAAM/xC,EAAI20C,EAAOtE,EAAO,GAAGp+B,OACrBzN,EAAImwC,EAAOtE,GAAMp+B,OACjBtY,EAAIg7C,EAAOtE,EAAO,GAAGp+B,OACrBzO,EAAIqxC,EAAOvE,EAAK,GAAGr+B,OACnBvP,EAAImyC,EAAOvE,GAAIr+B,OACftR,EAAIk0C,EAAOvE,EAAK,GAAGr+B,OAEnBm+B,EAASvmD,KAAKomD,QAAQG,OAAO9+B,KAAKznB,KAAKomD,SAM7C,OALKG,EAAOz2C,EAAG+I,IAAM0tC,EAAO1tC,EAAG1C,IAAQowC,EAAOzvC,EAAG6D,IAAM4rC,EAAO5rC,EAAGhB,GAC/D8R,EAASu8B,GAAWG,UACV5B,EAAOz2C,EAAG6J,IAAM4sC,EAAOzvC,EAAGX,IAAQowC,EAAO1tC,EAAG8B,IAAM4rC,EAAO5rC,EAAG9B,MACtE4S,EAASu8B,GAAWI,eAEf38B,CACT,CAGA8gC,iBAAAA,CAAkBp2C,EAAGwE,GACnB,MAAMgyC,EAAK,IAAIT,IAAI/1C,EAAE7N,GACfskD,EAAK,IAAIV,IAAI/1C,EAAEuF,GAErB,IAAK,MAAMpT,KAAKqS,EAAErS,EAChB,GAAIqkD,EAAGE,IAAIvkD,IAAMskD,EAAGC,IAAIvkD,GACtB,OAAO,EAIX,IAAK,MAAMA,KAAKqS,EAAEe,EAChB,GAAIixC,EAAGE,IAAIvkD,IAAMskD,EAAGC,IAAIvkD,GACtB,OAAO,EAIX,OAAO,CACT,CAEAyjD,cAAAA,CAAevF,EAAMC,GACnB,IAAK,IAAIn+C,EAAIk+C,EAAO,EAAGl+C,GAAKm+C,IAAMn+C,EAChC,GAAItI,KAAKyvC,SAASC,UAAUpnC,GAAG06B,YAAchjC,KAAKyvC,SAASC,UAAUpnC,EAAI,GAAG06B,UAAY,EACtF,OAAO,EAGX,OAAO,CACT,EAGF2lB,GAAsBD,cAAgBA,GC1dtC,MAEQA,cAAaA,IAAKC,GACpBhW,GAAwB1B,GAAkBW,KAG1Ckb,GAAgB,CACpB,CAACpE,GAAc1W,aAAc,EAC7B,CAAC0W,GAAczW,UAAW,EAC1B,CAACyW,GAAc3W,WAAY,GAGvBgb,GAAU,CACd,CAACrE,GAAc5W,QAASa,GAAsBb,OAC9C,CAAC4W,GAAcpW,MAAOK,GAAsBL,KAC5C,CAACoW,GAAcnW,MAAOI,GAAsBJ,KAC5C,CAACmW,GAAchW,MAAOC,GAAsBH,MAS9C,MAAMwa,GACJ15C,WAAAA,GACEtT,KAAKkpD,QAAU,GACflpD,KAAKitD,YAAc,GACnBjtD,KAAKktD,SAAW,GAChBltD,KAAKmtD,QAAU,GACfntD,KAAKotD,WAAa,GAElBptD,KAAKqtD,cAAgBljD,OAAOC,OAAO+hC,GAAYkD,eAC/CrvC,KAAKooC,OAAS,GACdpoC,KAAK0vC,UAAY,GACjB1vC,KAAKk5C,OAAS,GACdl5C,KAAKstD,SAAW,GAChBttD,KAAKutD,WAAa,GAClBvtD,KAAKwtD,kBAAmB,EAExBxtD,KAAKytD,SAAW,CAAC,EAEjBztD,KAAK0tD,SAAW,GAChB1tD,KAAK2tD,MAAQ,CAAC,IAAIhW,GAAe33C,OACjCA,KAAK4tD,aAAe,CACtB,CAEAtkB,OAAAA,CAAQ1V,GACN,MAAMxjB,EAAQpQ,KAAKooC,OAAO5nC,OAE1B,OADAR,KAAKooC,OAAO57B,KAAKonB,GACVxjB,CACT,CAEAy9C,QAAAA,CAAS7a,GACP,MAAM5iC,EAAQpQ,KAAKmtD,QAAQ3sD,OAE3B,OADAR,KAAKmtD,QAAQ3gD,KAAKwmC,GACX5iC,CACT,CAEA09C,QAAAA,CAAS73B,GACP,MAAM7lB,EAAQpQ,KAAKktD,SAAS1sD,OAE5B,OADAR,KAAKktD,SAAS1gD,KAAKypB,GACZ7lB,CACT,CAEAqrC,QAAAA,GACE,OAAOz7C,KAAKooC,MACd,CAEA2lB,QAAAA,GACE,OAAO/tD,KAAKk5C,MACd,CAEAxP,YAAAA,GACE,OAAO1pC,KAAKooC,OAAO5nC,MACrB,CAEAmwC,UAAAA,CAAWlP,GACT,MAAMrxB,EAAQpQ,KAAK0vC,UAAUlvC,OAE7B,OADAR,KAAK0vC,UAAUljC,KAAKi1B,GACbrxB,CACT,CAEAkgC,aAAAA,CAAcC,GACZvwC,KAAKguD,cAAclmB,IACjBA,EAAMwI,cAAcC,EAAU,GAElC,CAEAM,cAAAA,CAAeod,GAEb,OADWjuD,KAAKqtD,cAAcY,GAAW,IAAI9hB,GAAY8hB,EAAS,UAAW,GAE/E,CAEAld,eAAAA,GACE,OAAO/wC,KAAK0vC,UAAUlvC,MACxB,CAEAuvC,WAAAA,GACE,OAAO/vC,KAAK0vC,SACd,CAEAwe,cAAAA,GACE,OAAOluD,KAAKstD,SAAS9sD,MACvB,CAEA2tD,UAAAA,GACE,OAAOnuD,KAAKstD,QACd,CAKAc,iBAAAA,CAAkBhrB,GAChB,MAAM5V,EAAQ4V,EAASn0B,MAAM,KAC7B,GAAqB,IAAjBue,EAAMhtB,OACR,OAAO,KAGT,MAAMye,EAAYuO,EAAM,GAClB6gC,EAAQ3jD,SAAS8iB,EAAM,GAAI,IACjC,GAAIzlB,OAAOoP,MAAMk3C,GACf,OAAO,KAET,MAAMnuC,EAAWsN,EAAM,GAAGvlB,cAE1B,IAAIw9B,EAAW,KAwBf,OAvBAzlC,KAAKguD,cAAclmB,IACbrC,GAGyC,IAAzCqC,EAAMmC,MAAMqkB,cAAcrvC,IAC5B6oB,EAAMkJ,gBAAgBvP,IAChBgE,GAGAhE,EAAQuB,YAAcqrB,GACxB5sB,EAAQkI,aAAa/V,IACf6R,GAGsC,IAAtCvlB,EAASouC,cAAc16B,EAAKrH,QAC9BkZ,EAAW7R,EACb,GAEJ,GAEJ,IAGK6R,CACT,CAQA2S,QAAAA,CAAS7rB,GACP,MAAMd,EAAS,IAAI8iC,GAAMvuD,KAAMusB,GAE/B,OADAvsB,KAAKkpD,QAAQ18C,KAAKif,GACXA,CACT,CAEAwd,QAAAA,CAAS1c,GACP,IAAK,IAAIjkB,EAAI,EAAGC,EAAIvI,KAAKkpD,QAAQ1oD,OAAQ8H,EAAIC,IAAKD,EAAG,CACnD,MAAMw/B,EAAQ9nC,KAAKkpD,QAAQ5gD,GAC3B,GAAIw/B,EAAM/E,YAAcxW,EACtB,OAAOub,CAEX,CACA,OAAO,IACT,CAEA0mB,aAAAA,GACE,OAAOxuD,KAAKkpD,QAAQ1oD,MACtB,CAEAiuD,YAAAA,GACE,OAAOzuD,KAAKutD,UACd,CAEAmB,gBAAAA,GACE,OAAO1uD,KAAKutD,WAAW/sD,MACzB,CAEAmpC,WAAAA,CAAY/G,GACV,MAAMiF,EAAQ7nC,KAAKooC,OACnB,IAAK,IAAI9/B,EAAI,EAAGC,EAAIs/B,EAAMrnC,OAAQ8H,EAAIC,IAAKD,EACzCs6B,EAAQiF,EAAMv/B,GAElB,CAEAq6B,WAAAA,CAAYC,GACV,MAAMT,EAAQniC,KAAKk5C,OACnB,IAAK,IAAI5wC,EAAI,EAAGC,EAAI45B,EAAM3hC,OAAQ8H,EAAIC,IAAKD,EACzCs6B,EAAQT,EAAM75B,GAElB,CAEA0oC,cAAAA,CAAepO,GACb,MAAMqN,EAAWjwC,KAAK0vC,UACtB,IAAK,IAAIpnC,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAC5Cs6B,EAAQqN,EAAS3nC,GAErB,CAEA0lD,YAAAA,CAAaprB,GACX,MAAMgV,EAAS53C,KAAKkpD,QACpB,IAAK,IAAI5gD,EAAI,EAAGC,EAAIqvC,EAAOp3C,OAAQ8H,EAAIC,IAAKD,EAC1Cs6B,EAAQgV,EAAOtvC,GAEnB,CAEAqmD,eAAAA,CAAgB/rB,GACd,MAAMgsB,EAAY5uD,KAAKutD,WACjBhlD,EAAIqmD,EAAUpuD,OACpB,IAAK,IAAI8H,EAAI,EAAGA,EAAIC,IAAKD,EACvBs6B,EAAQgsB,EAAUtmD,GAEtB,CAEAumD,aAAAA,CAAcjsB,GACZ,MAAMksB,EAAS9uD,KAAKstD,SACpB,IAAK,IAAIhlD,EAAI,EAAGC,EAAIumD,EAAOtuD,OAAQ8H,EAAIC,IAAKD,EAC1Cs6B,EAAQksB,EAAOxmD,GAEnB,CAEAi5C,gBAAAA,CAAiB3e,GACf,MAAMmsB,EAAa/uD,KAAKitD,YACxB,IAAK,IAAI3kD,EAAI,EAAGC,EAAIwmD,EAAWvuD,OAAQ8H,EAAIC,IAAKD,EAC9Cs6B,EAAQmsB,EAAWzmD,GAEvB,CAEA0mD,uBAAAA,CAAwBpsB,GACtB,MAAMmsB,EAAa/uD,KAAKitD,YACxB,IAAK,IAAI3kD,EAAI,EAAGC,EAAIwmD,EAAWvuD,OAAQ8H,EAAIC,IAAKD,EAC9Cs6B,EAAQmsB,EAAWzmD,GAEvB,CAEAg1C,OAAAA,CAAQr5B,EAAM0gB,EAAOC,EAAO97B,EAAM+7B,GAChC,MAAMhR,EAAO,IAAI6Q,GAAKzgB,EAAM0gB,EAAOC,EAAO97B,EAAM+7B,GAEhD,OADA7kC,KAAKk5C,OAAO1sC,KAAKqnB,GACVA,CACT,CAEAo7B,YAAAA,GACE,OAAOjvD,KAAKk5C,OAAO14C,MACrB,CAEAowC,cAAAA,CAAerkB,GACb,OAAOvsB,KAAKqtD,cAAc9gC,IAAS,IACrC,CAEAolB,gBAAAA,CAAiB7J,EAAOlG,EAAQwO,GAK9B,OAAOxO,EAHW,MAGFwO,EAFG8e,SAEiBpnB,CACtC,CAEA0J,kBAAAA,CAAmB2d,GAEjB,MAAMD,EAAY,MACZE,EAAaF,SAEblwC,EAAUvW,KAAKmN,MAAMu5C,EAAYC,GACjCC,EAAUF,EAAYnwC,EAAUowC,EAChCxvC,EAAUnX,KAAKmN,MAAMy5C,EAAUH,GAErC,MAAO,CAAEpnB,MAAO9oB,EAAS4iB,OADbytB,EAAUzvC,EAAUsvC,EACM9e,MAAOxwB,EAC/C,CAEA0vC,YAAAA,GACE,MAAM/jD,EAAOvL,KACP+uD,EAAa/uD,KAAKitD,YAExB,SAASsC,IACP,MAAMC,EAAO,IAAIC,GAAUlkD,GAG3B,OAFAikD,EAAKpnC,OAAS2mC,EAAWvuD,OACzBuuD,EAAWS,EAAKpnC,QAAUonC,EACnBA,CACT,CAEAxvD,KAAKguD,cAAclmB,IACjB,MAAMmI,EAAWnI,EAAM4H,UACjBggB,EAAWzf,EAASzvC,OAC1B,GAAIkvD,EAAW,EACb,OAEF,IAAIF,EAAOD,IACPI,EAAY1f,EAAS,GAAG7nB,OAE5B,IAAK,IAAI9f,EAAI,EAAGA,EAAIonD,IAAYpnD,EAAG,CACjC,MAAMoxC,EAAUzJ,EAAS3nC,GACzBoxC,EAAQzR,WAAaunB,EAErB,MAAMlkB,EAAUhjC,IAAMonD,EAAW,EAAI,KAAOzf,EAAS3nC,EAAI,GACpDgjC,GACCoO,EAAQ5N,YAAYR,IACrBoO,EAAQtxB,SAAWkjB,EAAQljB,OAAS,IAGvConC,EAAKzW,WAAW,CAAC,CACf7xB,MAAOyoC,EACPnqC,IAAKk0B,EAAQtxB,UAEXkjB,IACFqkB,EAAYrkB,EAAQljB,OACpBonC,EAAOD,KAGb,IAEJ,CAIAK,cAAAA,GACE,MAAMJ,EAAO,IAAIC,GAAUzvD,MAC3BwvD,EAAKpnC,OAAS,EAEd,MAAM6nB,EAAWjwC,KAAK0vC,UAChBggB,EAAWzf,EAASzvC,OAC1B,GAAiB,IAAbkvD,EACF,OAGF,MAAMG,EAAc,GACpB,IAAIF,EAAY,EAChB,IAAK,IAAIrnD,EAAI,EAAGA,EAAIonD,IAAYpnD,EAAG,CACjC,MAAMoxC,EAAUzJ,EAAS3nC,GACzBoxC,EAAQzR,WAAaunB,EAErB,MAAMlkB,EAAUhjC,IAAMonD,EAAW,EAAI,KAAOzf,EAAS3nC,EAAI,GACpDgjC,GACCoO,EAAQ5N,YAAYR,KAExBukB,EAAYA,EAAYrvD,QAAU,CAChC0mB,MAAOyoC,EACPnqC,IAAKld,GAEHgjC,IACFqkB,EAAYrnD,EAAI,GAGtB,CAEAknD,EAAKzW,WAAW8W,GAChB7vD,KAAKitD,YAAYuC,EAAKpnC,QAAUonC,CAClC,CAMAM,eAAAA,CAAgBC,GACVA,EACF/vD,KAAKsvD,eAELtvD,KAAK4vD,gBAET,CAEAI,cAAAA,GACE,OAAOhwD,KAAK4tD,YACd,CAEAxS,oBAAAA,GACE,OAAOp7C,KAAK2tD,MAAM,GAAGlW,eACvB,CAEAA,aAAAA,GACE,OAAOz3C,KAAK2tD,MAAM3tD,KAAK4tD,cAAcnW,eACvC,CAEAF,aAAAA,GACE,OAAOv3C,KAAK2tD,MAAM3tD,KAAK4tD,cAAcrW,eACvC,CAEAC,WAAAA,GACE,OAAOx3C,KAAK2tD,MAAM3tD,KAAK4tD,cAAcpW,aACvC,CAEAyY,gBAAAA,GACEjwD,KAAK4tD,aAAe,EACpB5tD,KAAKkwD,eAAe,EACtB,CAEAA,cAAAA,CAAeC,GACb,OAAIA,SACCA,IAAYnwD,KAAK4tD,cACjBuC,GAAW,GACXA,EAAUnwD,KAAK2tD,MAAMntD,SACxBR,KAAK4tD,aAAeuC,GACb,EAGX,CAEAC,cAAAA,GACE,MAAM,MAAEzC,GAAU3tD,KAClB,IAAK,IAAIsI,EAAI,EAAGC,EAAIolD,EAAMntD,OAAQ8H,EAAIC,IAAKD,EACzCqlD,EAAMrlD,GAAGsuC,mBAEb,CAEAyZ,qBAAAA,GACErwD,KAAKguD,cAAc73C,IACjBA,EAAE61B,WAAW,IAEfhsC,KAAKuhD,kBAAkBzxC,IACrBA,EAAEuX,QAAQ,IAGZrnB,KAAKowD,iBACLpwD,KAAKswD,iBACLtwD,KAAK6uD,eAAev3C,IAClBA,EAAE88B,4BAA4B,GAElC,CAEA/sB,MAAAA,GACMrnB,KAAKwtD,mBACPxtD,KAAKuwD,uBACLvwD,KAAKwtD,kBAAmB,EAE5B,CAEA8C,cAAAA,GACE,MAAMnuB,EAAQniC,KAAK+tD,WACbxlD,EAAI45B,EAAM3hC,OAChB,IAAK,IAAI8H,EAAI,EAAGA,EAAIC,IAAKD,EACvB65B,EAAM75B,GAAG8f,OAAS9f,CAEtB,CAUAovC,QAAAA,CAAS1uC,GACPA,EAAOA,GAAQ,CAAC,EAEhB,MAAMm5B,EAAQniC,KAAKk5C,OACnB,IAAI5wC,EACAC,EAEJ,IAAKD,EAAI65B,EAAM3hC,OAAS,EAAG8H,GAAK,EAAGA,IAAK,CACtC,MAAMurB,EAAOsO,EAAM75B,GACA,OAAfurB,EAAKiR,OAAkC,OAAhBjR,EAAKkR,OAC9B5C,EAAMyS,OAAOtsC,EAAG,IAEhBurB,EAAKiR,MAAM3C,MAAM31B,KAAKqnB,GACtBA,EAAKkR,OAAO5C,MAAM31B,KAAKqnB,GAE3B,CAEA,MAAMoc,EAAWjwC,KAAK0vC,UACtB,IAAKpnC,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EACxC2nC,EAAS3nC,GAAG0jC,YAGdhsC,KAAKguD,cAAc73C,IACjBA,EAAE61B,WAAW,IAIf,MAAM,MAAE2hB,GAAU3tD,KAClB,IAAKsI,EAAI,EAAGC,EAAIolD,EAAMntD,OAAQ8H,EAAIC,IAAKD,EACrCqlD,EAAMrlD,GAAGovC,WAGX13C,KAAKkwD,eAAe,GAEpB,MAAM3e,EAAc,CAAC,EACrB,IAAKjpC,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAAG,CAC3C,MAAMgnB,EAAM2gB,EAAS3nC,GAErBipC,EAAYvxC,KAAK2xC,iBACfriB,EAAI2Z,WAAWlG,UAAUhqB,WAAW,GACpCuW,EAAI6Z,cACJ7Z,EAAI+Z,WAAWtwB,WAAW,KACvBuW,CACP,CAEA,MAAM,WAAE89B,GAAeptD,KACvB,IAAKsI,EAAI,EAAGC,EAAI6kD,EAAW5sD,OAAQ8H,EAAIC,IAAKD,EAC1C8kD,EAAW9kD,GAAG0jC,UAAUhjC,EAAKsoC,cAAeC,EAAavxC,MAG3D,MAAMwwD,EAAUxwD,KAAKktD,SACrB,IAAK5kD,EAAI,EAAGC,EAAIioD,EAAQhwD,OAAQ8H,EAAIC,IAAKD,EACvCkoD,EAAQloD,GAAG0jC,UAAUhjC,EAAKsoC,cAAeC,EAAavxC,MAGxD,MAAMywD,EAASzwD,KAAKmtD,QACpB,IAAK7kD,EAAI,EAAGC,EAAIkoD,EAAOjwD,OAAQ8H,EAAIC,IAAKD,EACtCmoD,EAAOnoD,GAAG0jC,UAAUhjC,EAAKsoC,cAAeC,EAAavxC,MAIvDA,KAAKowD,iBAEL,MAAMvoB,EAAQ7nC,KAAKooC,OACnB,IAAK9/B,EAAI,EAAGC,EAAIs/B,EAAMrnC,OAAQ8H,EAAIC,IAAKD,EAAG,CACvBu/B,EAAMv/B,GACd8H,MAAQ9H,CACnB,CAEA,GAAIU,EAAK0nD,gBAAiB,CACxB,MAAMC,EAAgB,IAAIC,GAAS5wD,MACnC2wD,EAAcpT,QACdoT,EAAclW,SAChB,CAEA,MAAM7C,EAAS53C,KAAKkpD,QACpB,IAAK5gD,EAAI,EAAGC,EAAIqvC,EAAOp3C,OAAQ8H,EAAIC,IAAKD,EACtCsvC,EAAOtvC,GAAG8f,OAAS9f,EAGrB,IAAKA,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EACxC2nC,EAAS3nC,GAAG8f,OAAS9f,EAIvB,IAAKA,EAAI,EAAGC,EAAIs/B,EAAMrnC,OAAQ8H,EAAIC,IAAKD,EAAG,CACxC,MAAMsrB,EAAOiU,EAAMv/B,GACnB,GAAIsrB,EAAKwO,MAAQZ,GAAKa,MAAMC,UAAkC,IAAtB1O,EAAKuO,MAAM3hC,OAAc,CAC/D,MAAMqzB,EAAOD,EAAKuO,MAAM,IACTtO,EAAKiR,QAAUlR,GAAQC,EAAKiR,OAAUjR,EAAKkR,QAChD3C,MAAQZ,GAAKa,MAAME,SAC3B3O,EAAKwO,OAASZ,GAAKa,MAAMa,UAE7B,CACF,CAEAljC,KAAKswD,iBACLtwD,KAAK8vD,gBAAgB9mD,EAAK+mD,eAE1B,MAAMc,EAAS,IAAIC,GAAoB9wD,MACvC6wD,EAAOnP,aACH14C,EAAK+nD,qBACPF,EAAOlP,eAGT3hD,KAAKgxD,oBACP,CAEAA,kBAAAA,GAEE,IAAK,IAAI1oD,EAAI,EAAGA,EAAItI,KAAKutD,WAAW/sD,OAAQ8H,IAAK,CAC/C,MAAM2oD,EAAWjxD,KAAKutD,WAAWjlD,GAC3B+P,EAAQ44C,EAAShhB,SAASzvC,OAChC,IAAK,IAAIkb,EAAI,EAAGA,EAAIrD,EAAOqD,IAAK,CACdu1C,EAAShhB,SAASv0B,GAC1BstB,UAAYioB,CACtB,CACF,CACF,CAEAV,oBAAAA,GACE,MAAMW,EAAWC,GAAcA,EAAUpnB,cACzC/pC,KAAKgxC,eAAekgB,GACpBlxD,KAAKguD,aAAakD,GAClBlxD,KAAK2uD,gBAAgBuC,EACvB,CAEAE,gBAAAA,CAAiBrvB,GACf,IAAI1pB,EAAQ,EAQZ,OANArY,KAAK2pC,aAAa/V,IACW,IAAtBA,EAAKmO,KAAOA,IACf1pB,GACF,IAGKA,CACT,CAEAg5C,qBAAAA,CAAsBxpD,GACpB,IAAIwQ,EAAQ,EAQZ,OANArY,KAAK2pC,aAAa/V,IACZ/rB,EAAS2tC,aAAa5hB,IACxBvb,GACF,IAGKA,CACT,CAEAi5C,aAAAA,CAAcvvB,GACZ/hC,KAAK2pC,aAAa/V,IAChBA,EAAKmO,KAAOA,CAAI,GAEpB,CAEAwvB,SAAAA,CAAU1pD,EAAUk6B,GAClB,MAAMyvB,EAAUzvB,EACV0vB,GAAaD,EACnB,IAAIn5C,EAAQ,EACZ,MAAMq5C,EAAgBnb,GAAUllC,QAAQ,MAAlBklC,CAAyB1uC,EAAU7H,KAAKw3C,eAY9D,OAVAx3C,KAAK2pC,aAAa/V,IACZ89B,EAAclc,aAAa5hB,IAC7BA,EAAKmO,MAAQyvB,EACbn5C,KAEAub,EAAKmO,MAAQ0vB,CACf,IAEFzxD,KAAKwtD,kBAAmB,EAEjBn1C,CACT,CAEAs5C,qBAAAA,CAAsB9pD,EAAUk6B,GAC9B,MAAMyvB,EAAUzvB,EAChB,IAAI1pB,EAAQ,EASZ,OAPArY,KAAK2pC,aAAa/V,IACZ/rB,EAAS2tC,aAAa5hB,KAAUA,EAAKmO,KAAOA,KAAUA,IACxDnO,EAAKmO,MAAQyvB,EACbn5C,IACF,IAGKA,CACT,CAEAu5C,aAAAA,CAAc7vB,GACZ,MAAM0vB,GAAa1vB,EACnB/hC,KAAK2pC,aAAa/V,IAChBA,EAAKmO,MAAQ0vB,CAAS,IAExB,MAAMI,EAAW17C,IACfA,EAAEgyB,OAASspB,CAAS,EAEtBzxD,KAAK2pC,YAAYkoB,GACjB7xD,KAAKgxC,eAAe6gB,GACpB7xD,KAAKguD,aAAa6D,GAClB7xD,KAAK2uD,gBAAgBkD,EACvB,CAEAC,YAAAA,GACE,GAAI9xD,KAAKoM,eAAe,cACtB,OAAOpM,KAAK+xD,WAGd,MAAMC,EAAO,CAAC,EAMd,OALAhyD,KAAK2pC,aAAa/V,IAChBo+B,EAAKp+B,EAAKrH,MAAQ,CAAC,IAErBvsB,KAAK+xD,WAAa5nD,OAAOyP,KAAKo4C,GAEvBhyD,KAAK+xD,UACd,CAEAE,WAAAA,GACE,GAAIjyD,KAAKoM,eAAe,aACtB,OAAOpM,KAAKkyD,UAGd,MAAMF,EAAO,CAAC,EAMd,OALAhyD,KAAK2pC,aAAa/V,IAChBo+B,EAAKp+B,EAAK5T,QAAQuM,MAAQ,CAAC,IAE7BvsB,KAAKkyD,UAAY/nD,OAAOyP,KAAKo4C,GAEtBhyD,KAAKkyD,SACd,CAEAC,eAAAA,GACE,GAAInyD,KAAKoM,eAAe,iBACtB,OAAOpM,KAAKoyD,cAGd,MAAMJ,EAAO,CAAC,EAMd,OALAhyD,KAAKgxC,gBAAgB1hB,IACnB0iC,EAAK1iC,EAAI4V,MAAM+E,OAAS,CAAC,IAE3BjqC,KAAKoyD,cAAgBjoD,OAAOyP,KAAKo4C,GAE1BhyD,KAAKoyD,aACd,CAEAC,aAAAA,GACE,GAAIryD,KAAKoM,eAAe,eACtB,OAAOpM,KAAKsyD,YAGd,MAAMN,EAAO,CAAC,EAMd,OALAhyD,KAAKguD,cAAclmB,IACjBkqB,EAAKlqB,EAAMmC,OAAS,CAAC,IAEvBjqC,KAAKsyD,YAAcnoD,OAAOyP,KAAKo4C,GAExBhyD,KAAKsyD,WACd,CAEAC,cAAAA,GACE,GAAIvyD,KAAKoM,eAAe,gBACtB,OAAOpM,KAAKwyD,aAGd,MAAMR,EAAO,CAAC,EAMd,OALAhyD,KAAK2pC,aAAa/V,IAChBo+B,EAAKnnD,OAAOyS,aAAasW,EAAKtI,WAAa,CAAC,IAE9CtrB,KAAKwyD,aAAeroD,OAAOyP,KAAKo4C,GAEzBhyD,KAAKwyD,YACd,CAEAvW,aAAAA,GACE,IAAKj8C,KAAKoM,eAAe,eACvB,IACEpM,KAAKyyD,YAAc,IAAI7P,GACrB5iD,KAAKo7C,uBAAuB1E,YAC5B,IAAIhL,EAAAA,QA1tBK,QA4tBX1rC,KAAKyyD,YAAYjP,SAASxjD,KAC5B,CAAE,MAAO6Y,GACPwT,EAAOnC,KAAK,gCACZlqB,KAAKyyD,YAAc,IACrB,CAGF,OAAOzyD,KAAKyyD,WACd,CASAC,UAAAA,CAAWC,EAAUC,EAAU5pC,EAAO6pC,GACpC,MAAM,OAAEryD,GAAWmyD,EACnB,IAAK,IAAIrqD,EAAI,EAAGA,EAAI9H,IAAU8H,EAAG,CAC/B,MAAMwqD,EAAOH,EAASrqD,GACtBuqD,EAAQC,EAAM9pC,GACd4pC,EAASpmD,KAAKsmD,EAChB,CACF,CAIAC,aAAAA,CAAcC,GAEZhzD,KAAKkpD,QAAU,GACflpD,KAAKitD,YAAc,GACnBjtD,KAAKktD,SAAW,GAChBltD,KAAKmtD,QAAU,GACfntD,KAAKotD,WAAa,GAClBptD,KAAKooC,OAAS,GACdpoC,KAAK0vC,UAAY,GACjB1vC,KAAKk5C,OAAS,GACdl5C,KAAKstD,SAAW,GAEhB,MAAM/hD,EAAOvL,KACb,IAAIizD,EAAW,EACXC,EAAW,EACXC,EAAc,EACdC,EAAY,EACZC,EAAgB,EAEpB,SAAS7W,EAAY5oB,EAAM0/B,GACzB1/B,EAAKgO,QAAU0xB,EACf1/B,EAAKxjB,OAASkjD,CAChB,CAEA,SAASC,EAAY1/B,EAAMy/B,GACzBz/B,EAAKzL,QAAUkrC,CACjB,CAEA,SAASE,EAAe/xB,EAAS6xB,GAC/B7xB,EAAQrZ,QAAUkrC,CACpB,CAEA,SAASG,EAAa3rB,EAAOwrB,GAC3BxrB,EAAM2H,SAAWlkC,EACjBu8B,EAAM1f,QAAUkrC,CAClB,CAEA,SAASI,EAAiBlS,EAAW8R,GACnC9R,EAAU/R,SAAWlkC,EACrBi2C,EAAUp5B,QAAUkrC,CACtB,CAKA,SAASK,IACT,CAEA,IAAK,IAAIrrD,EAAI,EAAGA,EAAI0qD,EAAUxyD,SAAU8H,EAAG,CACzC,MAAMwH,EAAIkjD,EAAU1qD,GACpBtI,KAAK0yD,WAAW5iD,EAAEs4B,OAAQpoC,KAAKooC,OAAQ6qB,EAAUzW,GACjDx8C,KAAK0yD,WAAW5iD,EAAEopC,OAAQl5C,KAAKk5C,OAAQga,EAAUK,GACjDvzD,KAAK0yD,WAAW5iD,EAAE4/B,UAAW1vC,KAAK0vC,UAAWyjB,EAAaK,GAC1DxzD,KAAK0yD,WAAW5iD,EAAEo5C,QAASlpD,KAAKkpD,QAASkK,EAAWK,GACpDzzD,KAAK0yD,WAAW5iD,EAAEq9C,QAASntD,KAAKmtD,QAAS,EAAGwG,GAC5C3zD,KAAK0yD,WAAW5iD,EAAEo9C,SAAUltD,KAAKktD,SAAU,EAAGyG,GAC9C3zD,KAAK0yD,WAAW5iD,EAAEw9C,SAAUttD,KAAKstD,SAAU,EAAGqG,GAC9C3zD,KAAK0yD,WAAW5iD,EAAEm9C,YAAajtD,KAAKitD,YAAaoG,EAAeK,GAChE1zD,KAAK0yD,WAAW5iD,EAAEs9C,WAAYptD,KAAKotD,WAAY,EAAGuG,GAElD,IAAK,MAAMC,KAAM9jD,EAAEu9C,cACbv9C,EAAEu9C,cAAcjhD,eAAewnD,KACjC5zD,KAAKqtD,cAAcuG,GAAM9jD,EAAEu9C,cAAcuG,IAI7CX,GAAYnjD,EAAEs4B,OAAO5nC,OACrB0yD,GAAYpjD,EAAEopC,OAAO14C,OACrB2yD,GAAerjD,EAAE4/B,UAAUlvC,OAC3B4yD,GAAatjD,EAAEo5C,QAAQ1oD,OACvB6yD,GAAiBvjD,EAAEm9C,YAAYzsD,MACjC,CAEAR,KAAKowD,gBACP,CAUAhoD,IAAAA,GACE,MAAMyrD,EAAQ,IAAIlL,GAAsB3oD,MAElCotD,EAAaptD,KAAKotD,WAAa,GAC/BoD,EAAUxwD,KAAKktD,SAAW,GAC1BuD,EAASzwD,KAAKmtD,QAAU,GAExB2G,EAAY1jD,IAChB,IAAI2jD,EAAOtD,EAAOrgD,GAIlB,OAHK2jD,IACHA,EAAOtD,EAAOrgD,GAAS,IAAI4jD,GAAMnpD,OAAOuF,GAAQ,IAE3C2jD,CAAI,EAGb,IAAIE,EACAC,EACAC,EAAiB,EACjBC,EAAe,KACnB,IAAK,IAAI9rD,EAAI,EAAGC,EAAIvI,KAAK0vC,UAAUlvC,OAAQ8H,EAAIC,IAAKD,EAAG,CACrD,MAAM+rD,EAAUR,EAAMjL,IAAItgD,GACpBgsD,EAAat0D,KAAK0vC,UAAUpnC,GAC5BisD,EAAgBV,EAAMhL,OAAOvgD,GAGnC,GAAI+rD,IAAYJ,GAAYM,IAAkBL,EAAgB,CAC5DI,EAAWjsB,WAAa+rB,EACpBA,IACFA,EAAajjB,KAAOmjB,GAElBF,aAAwBI,IAC1BJ,EAAa5zD,SAEf,QACF,CAGA,MAAMsyC,EAAaga,GAAcuH,GAC3BI,EAAW1H,GAAQsH,GACzB,GAAIA,IAAY3L,GAAc7W,OAAQ,CACpC,MAAM6iB,EAAWZ,EAASS,GAC1BH,EAAe,IAAI1gB,GAAOghB,EAAUJ,EAAYA,EAAY,EAAG,KAAM,MACrEI,EAASlhB,UAAU4gB,EACrB,WAA0BxxC,IAAfkwB,GACTqhB,IACAC,EAAe,IAAII,GAAM1hB,EAAYwhB,EAAYA,EAAYH,EAAgBtpD,OAAOspD,GAAiB,GAAI,GACzG3D,EAAQhkD,KAAK4nD,IAEbA,OADsBxxC,IAAb6xC,EACM,IAAIxjB,GAAkBwjB,EAAUH,EAAYA,GAE5C,KAGbF,GACFhH,EAAW5gD,KAAK4nD,GAGlBE,EAAWjsB,WAAa+rB,EAExBH,EAAWI,EACXH,EAAiBK,CACnB,CAEAv0D,KAAKmtD,QAAUsD,EAAOkE,QAAQ9L,IAAW,GAC3C,EAGFmE,GAAQ7gD,UAAUyb,GAAK,UACvBolC,GAAQ7gD,UAAUogB,KAAO,GAEzB,YCj6BA,SAASqoC,GAASt0D,GAChB,IAAI2M,EAAI,EAER,IADA3M,EAAKA,EAAI,GAAM,EACRA,GACL2M,IAAM,EACN3M,IAAM,EAER,OAAO2M,CACT,CAiBA,MAAM4nD,GACJvhD,WAAAA,CAAYxK,EAAMgsD,EAAYjS,EAAKkS,EAASpiC,EAAMqiC,GAuBhD,OAtBAh1D,KAAK+iD,KAAOF,EAAIzc,QAChBpmC,KAAKi1D,QAAUxsD,KAAKgM,IAAIhM,KAAKmN,MAAMm/C,GAAW,GAAI,GAClD/0D,KAAKk1D,YAAcF,EAEfF,aAAsBlrD,OACvB5J,KAAKm1D,MAAOn1D,KAAKo1D,MAAOp1D,KAAKq1D,OAASP,GAEvC90D,KAAKm1D,MAAQL,EAAW5+C,EACxBlW,KAAKo1D,MAAQN,EAAWr6C,EACxBza,KAAKq1D,MAAQP,EAAWh5C,GAE1B9b,KAAKm1D,MAAQ1sD,KAAKgM,IAAIhM,KAAKmN,MAAM5V,KAAKm1D,OAAQ,GAC9Cn1D,KAAKo1D,MAAQ3sD,KAAKgM,IAAIhM,KAAKmN,MAAM5V,KAAKo1D,OAAQ,GAC9Cp1D,KAAKq1D,MAAQ5sD,KAAKgM,IAAIhM,KAAKmN,MAAM5V,KAAKq1D,OAAQ,GAE9Cr1D,KAAKs1D,aAAet1D,KAAKi1D,QAAUj1D,KAAKm1D,MACxCn1D,KAAKu1D,eAAiBv1D,KAAKs1D,aAAet1D,KAAKo1D,MAC/Cp1D,KAAKw1D,eAAiBx1D,KAAKu1D,eAAiBv1D,KAAKq1D,MAEjDr1D,KAAKy1D,MAAQ9iC,GAAQtsB,EAAMmpB,cAAc1mB,EAAM9I,KAAKw1D,gBAG5Cx1D,KAAKi1D,SACX,KAAK,EACH,MAEF,KAAK,EACHj1D,KAAK01D,SAAW,SAAUx/C,EAAGuE,EAAGqB,GAC9B,MAAMwK,EAAMpQ,EAAIlW,KAAKi1D,QAAUx6C,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,eAChE,MAAO,CAACv1D,KAAKy1D,MAAMnvC,GAAMtmB,KAAKy1D,MAAMnvC,EAAM,GAC5C,EAEAtmB,KAAK21D,SAAW,SAAUz/C,EAAGuE,EAAGqB,EAAG3F,EAAGwE,GACpC,MAAM2L,EAAMpQ,EAAIlW,KAAKi1D,QAAUx6C,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,eAChEv1D,KAAKy1D,MAAMnvC,GAAOnQ,EAClBnW,KAAKy1D,MAAMnvC,EAAM,GAAK3L,CACxB,EAEA3a,KAAK41D,SAAW,SAAU1/C,EAAGuE,EAAGqB,EAAG3F,EAAGwE,GACpC,MAAM2L,EAAMpQ,EAAIlW,KAAKi1D,QAAUx6C,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,eAChEv1D,KAAKy1D,MAAMnvC,IAAQnQ,EACnBnW,KAAKy1D,MAAMnvC,EAAM,IAAM3L,CACzB,EACA,MAEF,KAAK,EACH3a,KAAK01D,SAAW,SAAUx/C,EAAGuE,EAAGqB,GAC9B,MAAMwK,EAAMpQ,EAAIlW,KAAKi1D,QAAUx6C,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,eAChE,MAAO,CAACv1D,KAAKy1D,MAAMnvC,GAAMtmB,KAAKy1D,MAAMnvC,EAAM,GAAItmB,KAAKy1D,MAAMnvC,EAAM,GACjE,EAEAtmB,KAAK21D,SAAW,SAAUz/C,EAAGuE,EAAGqB,EAAG3F,EAAGwE,EAAG7K,GACvC,MAAMwW,EAAMpQ,EAAIlW,KAAKi1D,QAAUx6C,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,eAChEv1D,KAAKy1D,MAAMnvC,GAAOnQ,EAClBnW,KAAKy1D,MAAMnvC,EAAM,GAAK3L,EACtB3a,KAAKy1D,MAAMnvC,EAAM,GAAKxW,CACxB,EAEA9P,KAAK41D,SAAW,SAAU1/C,EAAGuE,EAAGqB,EAAG3F,EAAGwE,EAAG7K,GACvC,MAAMwW,EAAMpQ,EAAIlW,KAAKi1D,QAAUx6C,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,eAChEv1D,KAAKy1D,MAAMnvC,IAAQnQ,EACnBnW,KAAKy1D,MAAMnvC,EAAM,IAAM3L,EACvB3a,KAAKy1D,MAAMnvC,EAAM,IAAMxW,CACzB,EACA,MAEF,QACE,MAAM,IAAIzE,MAAM,oCAEtB,CAGAqqD,QAAAA,CAASx/C,EAAGuE,EAAGqB,GACb,OAAO9b,KAAKy1D,MAAMv/C,EAAIuE,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,eACzD,CAGAI,QAAAA,CAASz/C,EAAGuE,EAAGqB,EAAG5R,GAChBlK,KAAKy1D,MAAMv/C,EAAIuE,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,gBAAkBrrD,CACpE,CAGA0rD,QAAAA,CAAS1/C,EAAGuE,EAAGqB,EAAG5R,GAChBlK,KAAKy1D,MAAMv/C,EAAIuE,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,iBAAmBrrD,CACrE,CAEA2rD,aAAAA,GACE,MAAO,CAAC71D,KAAKm1D,MAAOn1D,KAAKo1D,MAAOp1D,KAAKq1D,MACvC,CAEAS,MAAAA,GACE,OAAO91D,KAAK+iD,IACd,CAEAgT,aAAAA,GACE,OAAO/1D,KAAKk1D,WACd,CAEAc,WAAAA,GACE,MAAMC,EAAU,IAAIvqB,EAAAA,QACpB1rC,KAAK+iD,KAAKC,QAAQiT,GAClB,MAAM3mC,EAAM,IAAIoc,EAAAA,QAIhB,OAHApc,EAAIpZ,EAAIlW,KAAKm1D,MAAQ,EAAIc,EAAQ//C,GAAKlW,KAAKm1D,MAAQ,GAAK,EACxD7lC,EAAI7U,EAAIza,KAAKo1D,MAAQ,EAAIa,EAAQx7C,GAAKza,KAAKo1D,MAAQ,GAAK,EACxD9lC,EAAIxT,EAAI9b,KAAKq1D,MAAQ,EAAIY,EAAQn6C,GAAK9b,KAAKq1D,MAAQ,GAAK,EACjD/lC,CACT,CAEA4mC,eAAAA,GACE,GAAqB,IAAjBl2D,KAAKi1D,QAEP,OAAO,KAIT,MAAMp9B,EAAW,IAAIg9B,GAAO36C,aAAc,CAACla,KAAKm1D,MAAOn1D,KAAKo1D,MAAOp1D,KAAKq1D,OAAQr1D,KAAK+iD,KAAM,GAGrFoT,EAAKn2D,KAAKg2D,cAIVI,EAAK,IAAI1qB,EAAAA,SAAe,GAAMyqB,EAAGjgD,GAAI,GAAMigD,EAAG17C,GAAI,GAAM07C,EAAGr6C,GAGjE,SAAS/G,EAAM7K,EAAKwK,EAAKD,GACvB,OAAOhM,KAAKiM,IAAID,EAAKhM,KAAKgM,IAAIC,EAAKxK,GACrC,CAEA,MAAMmsD,EAAQr2D,KAAKm1D,MACbmB,EAAQt2D,KAAKo1D,MACbmB,EAAQv2D,KAAKq1D,MACbmB,EAASx2D,KAAKy1D,MAEpB,SAASgB,EAAYvgD,EAAGuE,EAAGqB,GACzB,OAAO06C,EAAO16C,EAAIu6C,EAAQC,EAAQ77C,EAAI47C,EAAQngD,EAChD,CAEA,IAAK,IAAIwgD,EAAK,EAAGA,EAAKH,IAASG,EAAI,CACjC,MAAMC,EAAK5hD,EAAM2hD,EAAK,EAAG,EAAGH,EAAQ,GAC9BK,EAAK7hD,EAAM2hD,EAAK,EAAG,EAAGH,EAAQ,GAEpC,IAAK,IAAIM,EAAK,EAAGA,EAAKP,IAASO,EAAI,CACjC,MAAMC,EAAK/hD,EAAM8hD,EAAK,EAAG,EAAGP,EAAQ,GAC9BS,EAAKhiD,EAAM8hD,EAAK,EAAG,EAAGP,EAAQ,GAEpC,IAAK,IAAIU,EAAK,EAAGA,EAAKX,IAASW,EAAI,CACjC,MAAMC,EAAKliD,EAAMiiD,EAAK,EAAG,EAAGX,EAAQ,GAC9Ba,EAAKniD,EAAMiiD,EAAK,EAAG,EAAGX,EAAQ,GAYpCx+B,EAAS89B,SACPqB,EACAH,EACAH,GACCD,EAAYS,EAAIL,EAAIH,GAAMD,EAAYQ,EAAIJ,EAAIH,IAAON,EAAGlgD,GACxDugD,EAAYO,EAAID,EAAIL,GAAMD,EAAYO,EAAIF,EAAIJ,IAAON,EAAG37C,GACxDg8C,EAAYO,EAAIH,EAAID,GAAMH,EAAYO,EAAIH,EAAIF,IAAOP,EAAGt6C,EAE7D,CACF,CACF,CAEA,OAAO+b,CACT,CAEAwP,SAAAA,GACE,MAAM1U,EAAO3yB,KAAKy1D,MAGlB,IAAI/gD,EAAMie,EAAK,GACXle,EAAMke,EAAK,GACf,IAAK,IAAIrqB,EAAI,EAAGA,EAAIqqB,EAAKnyB,SAAU8H,EACjCoM,EAAMjM,KAAKiM,IAAIA,EAAKie,EAAKrqB,IACzBmM,EAAMhM,KAAKgM,IAAIA,EAAKke,EAAKrqB,IAG3B,MAAMqR,EAAI,GAAOlF,EAAMC,GACvB,GAAU,IAANiF,EAKJ,IAAK,IAAIrR,EAAI,EAAGA,EAAIqqB,EAAKnyB,SAAU8H,EACjCqqB,EAAKrqB,GAAKqR,GAAKgZ,EAAKrqB,GAAKoM,EAE7B,CAEAyiD,qBAAAA,GACE,MAAO,CAACn3D,KAAKm1D,MAAQ,EAAGn1D,KAAKo1D,MAAQ,EACvC,CAEAgC,iBAAAA,GACE,IAAIC,EAAS5uD,KAAKsS,KAAKtS,KAAK6uC,KAAKt3C,KAAKq1D,MAAQr1D,KAAKo1D,MAAQp1D,KAAKm1D,QAE5D7xC,EAAQ+zC,GAAUr3D,KAAKm1D,MAAQ,GAAK,EACxC7xC,EAAQsxC,GAAStxC,GACjB+zC,EAAS5uD,KAAKmN,MAAM0N,GAAStjB,KAAKm1D,MAAQ,IAE1C,MAAMmC,EAAS7uD,KAAKsS,KAAK/a,KAAKq1D,MAAQgC,GACtC,IAAIzxC,EAAS0xC,GAAUt3D,KAAKo1D,MAAQ,GAAK,EACzCxvC,EAASgvC,GAAShvC,GAElB,MAAM+M,EAAO,IAAIvZ,WAAWkK,EAAQsC,GAEpC,IAAIuK,EACAC,EACJ,IAAK,IAAImnC,EAAU,EAAGA,EAAUD,IAAUC,EAExC,IAAK,IAAI7gD,EAAM,EAAGA,EAAM1W,KAAKo1D,QAAS1+C,EAAK,CACzCyZ,EAAMonC,EAAUF,EAASr3D,KAAKu1D,eAAiB7+C,EAAM1W,KAAKs1D,aAC1DllC,EAAM9M,GAASi0C,GAAWv3D,KAAKo1D,MAAQ,GAAK1+C,GAE5C,IAAK,IAAIjB,EAAI,EAAGA,EAAI4hD,IAAU5hD,EAAG,CAE/B,IAAK,IAAIS,EAAI,EAAGA,EAAIlW,KAAKm1D,QAASj/C,EAChCyc,EAAKvC,KAAS,IAAQpwB,KAAKy1D,MAAMtlC,KAInCwC,EAAKvC,KAAS,IAAQpwB,KAAKy1D,MAAMtlC,EAAM,GAEnC1a,EAAI4hD,EAAS,IAEflnC,GAAOnwB,KAAKu1D,eAAiBv1D,KAAKs1D,aAElC3iC,EAAKvC,KAAS,IAAQpwB,KAAKy1D,MAAMtlC,GAErC,CACF,CAIF,IAAK,IAAIonC,EAAU,EAAGA,EAAUD,IAAUC,EAAS,CAEjDpnC,EAAM7M,GAASi0C,GAAWv3D,KAAKo1D,MAAQ,GAAKp1D,KAAKo1D,MAAQ,GACzDhlC,EAAMD,EAAM7M,EACZ,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,IAASpN,EAC3Byc,EAAKvC,KAASuC,EAAKxC,KAErB,GAAIonC,EAAUD,EAAS,EAAG,CAExBnnC,EAAM7M,GAASi0C,EAAU,IAAMv3D,KAAKo1D,MAAQ,GAC5ChlC,EAAMD,EAAM7M,EACZ,IAAK,IAAIpN,EAAI,EAAGA,EAAIoN,IAASpN,EAC3Byc,EAAKvC,KAASuC,EAAKxC,IAEvB,CACF,CAEA,MAAMqnC,EAAU,IAAI9rB,EAAAA,YAClB/Y,EACArP,EACAsC,EACA8lB,EAAAA,gBACAA,EAAAA,iBACAA,EAAAA,UACAA,EAAAA,oBACAA,EAAAA,oBACAA,EAAAA,aACAA,EAAAA,cAGF,OADA8rB,EAAQC,aAAc,EACfD,CACT,CAQAE,OAAAA,GACE,OAAO13D,KAAKy1D,KACd,CAEAkC,YAAAA,CAAazhD,EAAGuE,EAAGqB,GACjB,OAAO5F,EAAIlW,KAAKi1D,QAAUx6C,EAAIza,KAAKs1D,aAAex5C,EAAI9b,KAAKu1D,cAC7D,CAEAqC,UAAAA,GACE,OAAO53D,KAAKi1D,OACd,CAEA4C,UAAAA,GACE,OAAO73D,KAAKs1D,YACd,CAEAwC,UAAAA,GACE,OAAO93D,KAAKu1D,cACd,EAGFV,GAAO1oD,UAAUyb,GAAK,SAEtB,YC1SA,MCnBA,IACE4Z,KAAI,GACJ2B,QAAO,GACPuB,KAAI,GACJoM,QAAO,GACP3E,YAAW,GACXoiB,MAAK,GACLiG,MAAK,GACL9gB,OAAM,GACNsgB,MAAK,GACL+D,OAAM,GACNC,SAAQ,GACRhL,QAAO,GACP6H,OAAM,GACNjS,WAAU,GACVrM,UAAS,GACT0hB,SDvBF,MACE3kD,WAAAA,CAAYk8B,EAASjjB,EAAMnc,GACzBpQ,KAAKwvC,QAAUA,EACfxvC,KAAKusB,KAAOA,GAAQ,GACpBvsB,KAAKiwC,SAAW,GAChBjwC,KAAK+hC,KAAO,EACZ/hC,KAAKoQ,MAAQA,IAAU,CACzB,CAEA4gC,cAAAA,CAAepO,GACb,MAAM,SAAEqN,GAAajwC,KACrB,IAAK,IAAIsI,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAC5Cs6B,EAAQqN,EAAS3nC,GAErB,CAEAyhC,WAAAA,GACE,IAAIhI,EAAO,WACX,MAAM,SAAEkO,GAAajwC,KACrB,IAAK,IAAIsI,EAAI,EAAGC,EAAI0nC,EAASzvC,OAAQ8H,EAAIC,IAAKD,EAC5Cy5B,GAAQkO,EAAS3nC,GAAG6/B,MAEtBnoC,KAAK+hC,KAAOA,CACd,IE3BF,MAAMm2B,WAAoBxsB,EAAAA,SACxBp4B,WAAAA,CAAY0M,GACV0M,QACA,MAAMnhB,EAAOvL,KACbA,KAAKm4D,SAAWn4C,EAChBhgB,KAAKm4D,SAASvzC,MAAMT,SAAW,WAC/BnkB,KAAKmhB,iBAAiB,WAAW,KACE,OAA7B5V,EAAK4sD,SAAS/xC,YAChB7a,EAAK4sD,SAAS/xC,WAAWC,YAAY9a,EAAK4sD,SAC5C,GAEJ,CAEAC,UAAAA,GACE,OAAOp4D,KAAKm4D,QACd,CAOAE,eAAAA,CAAgBC,GACd,MAAM9zC,EAAKxkB,KAAKo4D,aAChB,GAAW,OAAP5zC,EACF,OAEF,GAAe,IAAX8zC,EAEF,YADA9zC,EAAGI,MAAMkE,QAAU,QAGrBtE,EAAGI,MAAMkE,QAAU,SACnB,MAAMyvC,EAAK,EAAMD,EACXt0C,EAAMu0C,EAAGhyD,WACTiyD,EAAa,IAALD,EACd/zC,EAAGI,MAAM6zC,QAAUz0C,EACnBQ,EAAGI,MAAM+vC,OAAS,iBAAiB6D,IACrC,CAEApyB,KAAAA,GACE,MAAM5uB,EAAM,IAAI0gD,GAAYl4D,KAAKm4D,UAEjC,OADA3gD,EAAIC,KAAKzX,MACFwX,CACT,EAGF,YClDA,MAAMkhD,WAAgBhtB,EAAAA,MACpBitB,OAAAA,CAAQC,EAAWC,GACjB,IAAK74D,KAAK84D,QACR,OAGF,MAAM,SAAEC,GAAa/4D,KACrB,IAAK,IAAIsI,EAAI,EAAGC,EAAIwwD,EAASv4D,OAAQ8H,EAAIC,IAAKD,EAC5CywD,EAASzwD,GAAGqwD,QAAQC,EAAWC,EAEnC,CAEAG,YAAAA,CAAaj3B,EAAMk3B,GACjB,MAAM,SAAEF,GAAa/4D,KACrB,IAAK,IAAIsI,EAAI,EAAGC,EAAIwwD,EAASv4D,OAAQ8H,EAAIC,IAAKD,EACxCywD,EAASzwD,GAAG0wD,cACdD,EAASzwD,GAAG0wD,aAAaj3B,EAAMk3B,EAGrC,CAEAC,aAAAA,CAAcn3B,EAAMk3B,GAClB,MAAM,SAAEF,GAAa/4D,KACrB,IAAK,IAAIsI,EAAI,EAAGC,EAAIwwD,EAASv4D,OAAQ8H,EAAIC,IAAKD,EACxCywD,EAASzwD,GAAG4wD,eACdH,EAASzwD,GAAG4wD,cAAcn3B,EAAMk3B,EAGtC,CAEAE,OAAAA,GACE,OAAgC,IAAzBn5D,KAAK+4D,SAASv4D,MACvB,CAEA8vC,aAAAA,CAAcC,GACZ,MAAM,SAAEwoB,GAAa/4D,KACrB,IAAK,IAAIsI,EAAI,EAAGC,EAAIwwD,EAASv4D,OAAQ8H,EAAIC,IAAKD,EACxCywD,EAASzwD,GAAGgoC,eACdyoB,EAASzwD,GAAGgoC,cAAcC,EAGhC,CAEA6oB,SAAAA,CAAUr3B,EAAMk3B,GACd,MAAMI,EAAc,IACd,SAAEN,GAAa/4D,KACrB,IAAK,IAAIsI,EAAI,EAAGC,EAAIwwD,EAASv4D,OAAQ8H,EAAIC,IAAKD,EACxCywD,EAASzwD,GAAG8wD,WACdxvD,MAAMuC,UAAUK,KAAK6B,MAAMgrD,EAAaN,EAASzwD,GAAG8wD,UAAUr3B,EAAMk3B,IAGxE,OAAOI,CACT,EAGF,Y,gRChDMC,GAAS,CACbvuC,QAAS,EAAGwuC,OAAQ,EAAGC,YAAa,EAAGC,oBAAqB,EAAGC,eAAgB,EAAGC,oBAAqB,EAAGC,UAAW,GAGjHC,GAAmB,CACvBP,GAAOvuC,QAASuuC,GAAOE,aAGzB9tB,EAAAA,SAAev/B,UAAU2tD,eAAiB,WACxC95D,KAAKmkB,SAASxd,IAAI,EAAG,EAAG,GACxB3G,KAAK+5D,WAAWpzD,IAAI,EAAG,EAAG,EAAG,GAC7B3G,KAAKqI,MAAM1B,IAAI,EAAG,EAAG,EACvB,EAGA+kC,EAAAA,SAAev/B,UAAU6tD,2BAA6B,WACjC,MAAfh6D,KAAKoT,QACPpT,KAAKoT,OAAO4mD,6BAEdh6D,KAAKi6D,mBACP,EAEAvuB,EAAAA,SAAev/B,UAAU+tD,wBAA2B,WAClD,MAAMC,EAAsB,IAAIzuB,EAAAA,QAEhC,OAAO,SAAUhb,GACXA,aAAkBgb,EAAAA,WACpByuB,EAAoB1iD,KAAKzX,KAAKo6D,aAAaC,SAC3CF,EAAoBG,SAAS5pC,EAAO0pC,aACpC1pC,EAAO4nB,OAAO7gC,KAAK0iD,GACnBzpC,EAAO4nB,OAAOiiB,UAAU7pC,EAAOvM,SAAUuM,EAAOqpC,WAAYrpC,EAAOroB,OACnErI,KAAKyJ,IAAIinB,GAEb,CACF,CAZoD,GAepDgb,EAAAA,cAAoBv/B,UAAUquD,gBAAmB,WAC/C,MAAMC,EAAY,IAAI/uB,EAAAA,kBAAwB,CAAE/R,aAAa,EAAM8+B,QAAS,EAAKiC,YAAY,IAEvFC,EAAS,IAAIjvB,EAAAA,MACbkvB,EAAQ,IAAIlvB,EAAAA,KAAW,IAAIA,EAAAA,cAAoB,IAAM,KAAO+uB,GAClEE,EAAOlxD,IAAImxD,GAEX,MAAMC,EAAU,IAAInvB,EAAAA,oBAA0B,GAAK,GAAK,IAAM,IAAM,IAAO,KAG3E,OAFAmvB,EAAQ12C,SAASrI,EAAI,IAEd,WACL9b,KAAK86D,OAAOH,EAAQE,EACtB,CACF,CAbiD,GAejDnvB,EAAAA,cAAoBv/B,UAAU4uD,iBAAoB,WAChD,MAAMJ,EAAS,IAAIjvB,EAAAA,MACbkvB,EAAQ,IAAIlvB,EAAAA,KAAW,IAAIA,EAAAA,cAAoB,EAAK,IAC1DivB,EAAOlxD,IAAImxD,GAEX,MAAMC,EAAU,IAAInvB,EAAAA,oBAA0B,GAAK,GAAK,IAAM,IAAM,IAAO,KAG3E,OAFAmvB,EAAQ12C,SAASrI,EAAI,IAEd,SAAU9T,GACf4yD,EAAM5yD,SAAWA,EACjBhI,KAAK86D,OAAOH,EAAQE,EACtB,CACF,CAZkD,GAclDnvB,EAAAA,QAAcv/B,UAAU6uD,WAAc,WACpC,MAAMC,EAAW,IAAIvvB,EAAAA,QACrB,OAAO,WACL,OAAOuvB,EAASC,OAAOl7D,KACzB,CACF,CALsC,GAOtC0rC,EAAAA,QAAcv/B,UAAUgvD,mBAAqB,SAAUvmD,EAAO40C,EAAQ3uC,GACpE,IAAKjG,IAAU40C,GAAUA,EAAS,EAChC,OAAO50C,EAETiG,EAAIA,GAAK,EACT,MAAMhC,EAAI7Y,KAAKo7D,SACf,IAAK,IAAI9yD,EAAI,EAAGA,EAAIsM,EAAMpU,OAAQ8H,GAAKkhD,EAAQ,CAC7C,MAAMtzC,EAAItB,EAAMtM,GACVmS,EAAI7F,EAAMtM,EAAI,GACdwT,EAAIlH,EAAMtM,EAAI,GAEd+yD,EAAQ,GAAKxiD,EAAE,GAAK3C,EAAI2C,EAAE,GAAK4B,EAAI5B,EAAE,IAAMiD,EAAIjD,EAAE,KAEvDjE,EAAMtM,IAAMuQ,EAAE,GAAK3C,EAAI2C,EAAE,GAAK4B,EAAI5B,EAAE,GAAKiD,EAAIjD,EAAE,IAAMgC,GAAKwgD,EAC1DzmD,EAAMtM,EAAI,IAAMuQ,EAAE,GAAK3C,EAAI2C,EAAE,GAAK4B,EAAI5B,EAAE,GAAKiD,EAAIjD,EAAE,IAAMgC,GAAKwgD,EAC9DzmD,EAAMtM,EAAI,IAAMuQ,EAAE,GAAK3C,EAAI2C,EAAE,GAAK4B,EAAI5B,EAAE,IAAMiD,EAAIjD,EAAE,IAAMgC,GAAKwgD,CACjE,CACA,OAAOzmD,CACT,EAEA,MAAM0mD,WAA2B5vB,EAAAA,kBAC/Bp4B,WAAAA,CAAYvK,QACc6Z,IAApB7Z,EAAOwyD,WACTxyD,EAAOwyD,SAAW,CAAC,GAErBxyD,EAAOwyD,SAASC,OAAS,CAAE1yD,KAAM,IAAKmgB,MAAO,MAC7ClgB,EAAO0yD,aAAeC,GACtB3yD,EAAO4wB,aAAc,EACrB5wB,EAAO4yD,WAAY,EACnB5yD,EAAO2xD,YAAa,EACpBhuC,MAAM3jB,EACR,EA4OF,SAAS6yD,GAAUlrC,GACjBA,EAAO5O,UAAUtK,KACXA,aAAek0B,EAAAA,MAAcl0B,aAAek0B,EAAAA,cAAsBl0B,aAAek0B,EAAAA,OACnFl0B,EAAIqkD,SAASC,SACf,IAdJ,SAAwBprC,GACtB,MAAM,SAAEqoC,GAAaroC,EACrB,IAAK,IAAIpoB,EAAI,EAAGC,EAAIwwD,EAASv4D,OAAQ8H,EAAIC,IAAKD,EAAG,CAC/C,MAAM6K,EAAQ4lD,EAASzwD,GACvB6K,EAAMC,OAAS,KACfD,EAAMyW,cAAc,CAAE9gB,KAAM,WAC9B,CACA4nB,EAAOqoC,SAAW,EACpB,CAQEgD,CAAerrC,EACjB,CAhPAgb,EAAAA,cAAoBv/B,UAAU6vD,wBAA2B,WACvD,MAAMvB,EAAY,IAAIa,GAAmB,CACvCC,SAAU,CAAE9C,QAAS,CAAE3vD,KAAM,IAAKmgB,MAAO,IACzCgzC,e,yOACAtiC,aAAa,IAGf,OAAO,SAAU6hC,EAAQ/C,GACvBgC,EAAUc,SAASC,OAAOvyC,MAAQuyC,EAClCf,EAAU9gC,YAAe8+B,EAAU,EACnCgC,EAAUc,SAAS9C,QAAQxvC,MAAQwvC,EACnCz4D,KAAK+6D,iBAAiBN,EACxB,CACF,CAbyD,GAezD/uB,EAAAA,cAAoBv/B,UAAU+vD,sCAAyC,WACrE,MAAMzB,EAAY,IAAIa,GAAmB,CACvCC,SAAU,CAAEY,KAAM,CAAErzD,KAAM,IAAKmgB,MAAO,IACtCgzC,e,8WAGF,OAAO,SAAUT,EAAQW,GACvB1B,EAAUc,SAASC,OAAOvyC,MAAQuyC,EAClCf,EAAUc,SAASY,KAAKlzC,MAAQkzC,EAChCn8D,KAAK+6D,iBAAiBN,EACxB,CACF,CAXuE,GAgBvE/uB,EAAAA,kBAAwBv/B,UAAUiwD,cAAgB,SAAUC,GACtDr8D,KAAKs8D,QAAU,EACjBt8D,KAAKu8D,IAAMF,EAEXr8D,KAAKu8D,IAAM7wB,EAAAA,UAAgB8wB,SAAS,EAAI/zD,KAAKg0D,KAAKh0D,KAAKi0D,IAAsC,GAAlChxB,EAAAA,UAAgBixB,SAASN,IAAgBr8D,KAAKs8D,QAE7G,EAMA5wB,EAAAA,aAAmBv/B,UAAUywD,gBAAkB,SAAUC,EAAQR,GAC/D,MAAMS,EAAiBD,EAAOP,OACxBS,EAAcF,EAAON,IAE3BM,EAAOP,OAASQ,EAAiB,EACjCD,EAAOT,cAAcC,GACrBQ,EAAOG,yBAEPh9D,KAAKqnB,OAAOw1C,GAEZA,EAAOP,OAASQ,EAChBD,EAAON,IAAMQ,EACbF,EAAOG,wBACT,EAMAtxB,EAAAA,kBAAwBv/B,UAAU8wD,iBAAmB,SAAU15C,EAAQ84C,GACrEr8D,KAAKmkB,SAASrI,EAAIyH,EAAS9a,KAAKoK,IAAI,GAAM64B,EAAAA,UAAgBixB,SAASN,GACrE,EAQA3wB,EAAAA,UAAgBv/B,UAAU+wD,uBAAyB,SAAUC,EAAQN,EAAQhjC,EAAWujC,GACtF,MAAMvE,EAAa74D,KAAKq9D,gBAAgBF,GAAQ,GAChD,GAA0B,IAAtBtE,EAAWr4D,OACb,OAAO,KAIT,MAAM88D,EAAY70D,KAAKiM,IAAImoD,EAAOU,KAAM1jC,GACxC,IAAIvxB,EACA2E,EAAI4rD,EAAW,GACnB,MAAMv4D,EAAI,IAAIorC,EAAAA,QACd,IAAKpjC,EAAI,EAAGA,EAAIuwD,EAAWr4D,SACzByM,EAAI4rD,EAAWvwD,GACfhI,EAAEmX,KAAKxK,EAAE02C,OACTrjD,EAAE03C,aAAa6kB,EAAOW,sBAClBl9D,EAAEwb,IAAMwhD,MAJuBh1D,GAQrC,GAAIA,IAAMuwD,EAAWr4D,OACnB,OAAO,KAIT,MAAMi9D,EAAWh1D,KAAKiM,IAAImoD,EAAOa,IAAKN,GAGtC,OAFA98D,EAAEmX,KAAKxK,EAAE02C,OACTrjD,EAAE03C,aAAa6kB,EAAOW,oBAClBl9D,EAAEwb,IAAM2hD,EACH,KAEFxwD,CACT,EAEAy+B,EAAAA,QAAcv/B,UAAUwxD,aAAgB,WACtC,MAAMC,EAAK,IAAIlyB,EAAAA,QAEf,OAAO,SAAUrjC,QACDua,IAAVva,IACFgkB,EAAOtC,MAAM,sEACb1hB,EAAQu1D,EAAGx3B,SAGb,MAAMy3B,EAAK79D,KAAKo7D,SAChB/yD,EAAM6N,EAAI0nD,EAAGj3D,IAAIk3D,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAIr9D,SACtC6H,EAAMoS,EAAImjD,EAAGj3D,IAAIk3D,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAIr9D,SACtC6H,EAAMyT,EAAI8hD,EAAGj3D,IAAIk3D,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAAKr9D,SAOvC,OAJYR,KAAK89D,cACP,IACRz1D,EAAM6N,GAAK7N,EAAM6N,GAEZ7N,CACT,CACF,CArBwC,GA+FxCqjC,EAAAA,gBAAsBv/B,UAAU4xD,WAAa,SAAUC,EAAWC,GAKhE,MAAM,SAAEhsC,GAAajyB,KACrB,IAAK,IAAIsI,EAAI,EAAGC,EAAI01D,EAAUz9D,OAAQ8H,EAAIC,IAAKD,EAC7C,IAAK,IAAIoT,EAAI,EAAGA,EAAIuW,IAAYvW,EAC9B1b,KAAK4U,MAAMtM,EAAI2pB,EAAWvW,GAAKsiD,EAAUppD,MAAMqpD,EAAU31D,GAAK2pB,EAAWvW,GAG7E,OAAO1b,IACT,EAuFA,MAAMk+D,GAAkCxyB,EAAAA,wBAA8Bv/B,UAAUsL,KAEhFi0B,EAAAA,wBAA8Bv/B,UAAUsL,KAAO,SAAU0mD,GACvDD,GAAgCnyD,KAAK/L,KAAMm+D,QAChBv7C,IAAvB5iB,KAAKo+D,gBACPp+D,KAAKo+D,cAAgB9wC,IAEzB,EAEA,UACE+wC,mBArLF,SAA6BC,EAAUC,EAAQh7C,GAC7C,MAAMi7C,EAAYF,EAASl4B,QAAQuF,KAAK4yB,EAAQ,IAC1CE,EAAW,IAAI/yB,EAAAA,QACrB+yB,EAASC,UAAUn7C,EAAQ+6C,EAAS/4B,WAAWg5B,GAASh7C,GAExD,MAAMo7C,EAAa,IAAIjzB,EAAAA,QACvBizB,EAAWC,cAAcn2D,KAAKC,GAAK,GAEnC,MAAMm2D,EAAa,IAAInzB,EAAAA,QACjBozB,EAAM,IAAIpzB,EAAAA,QAAc,EAAG,EAAG,GAMpC,OALAmzB,EAAWE,OAAOP,EAAWD,EAAQO,GAErCD,EAAWvE,SAASqE,GACpBE,EAAWvE,SAASmE,GACpBI,EAAWG,YAAYR,GAChBK,CACT,EAsKEI,gBApKF,SAA0BC,EAAK56C,EAAQ66C,EAAIC,GACzC,MAAMX,EAAW,IAAI/yB,EAAAA,QACrB+yB,EAASC,UAAUU,EAAIlpD,EAAGkpD,EAAI3kD,EAAG,GAEjC,MAAMokD,EAAa,IAAInzB,EAAAA,QAKvB,OAJAmzB,EAAWE,OAAOG,EAAK56C,EAAQ66C,GAC/BN,EAAWvE,SAASmE,GACpBI,EAAWG,YAAYE,GAEhBL,CACT,EA2JEQ,yBAzJF,SAAmCC,GACjC,IAAIC,GAAW,EAMf,OALAD,EAAMx9C,UAAUqQ,KACVA,EAAK/lB,eAAe,aAAe+lB,aAAgB+lC,MACrDqH,GAAW,EACb,IAEKA,CACT,EAkJEC,mBAhJF,SAA6BC,EAAeC,EAAiBvD,GAK3D,SAASwD,EAAkBpa,GAEzB,IAAIqa,EAAS,EACTC,EAAQta,EACRua,EAAK,EACT,KAAOr3D,KAAKoI,IAAIgvD,EAAQD,GAJR,MAKdE,EAAK,EAAM3D,EAAO0D,EAClBD,EAASC,EACTA,EAAQta,GAAMua,EAAKA,GAGrB,OAAO,EAAMA,CACf,CAEA,MAAMC,EAAM,IAAIr0B,EAAAA,cAAoB,EAAK,EAAK+zB,EAAeC,GAEvDvoB,EAAM4oB,EAAIC,aAAa,YAC7B,IAAK,IAAI13D,EAAI,EAAGA,EAAI6uC,EAAI9+B,QAAS/P,EAAG,CAClC,MAAM4N,EAAIihC,EAAIviC,MAAM,EAAItM,GAClBmS,EAAI08B,EAAIviC,MAAM,EAAItM,EAAI,GACtBwH,EAAI6vD,EAAkBzpD,EAAIA,EAAIuE,EAAIA,GACxC08B,EAAI8oB,MAAM33D,EAAGwH,EAAIoG,EAAGpG,EAAI2K,EAC1B,CAEA,OAAOslD,CACT,EAmHErH,QAAO,GACPwH,UApGF,SAAmBtrD,EAAOqU,EAAOk3C,EAAYC,GAC3CD,OAAoC,IAAfA,EAA8BA,EAAa,EAChEC,OAAgC,IAAbA,EAA4BA,EAAWxrD,EAAMpU,OAChE,IAAK,IAAI8H,EAAI63D,EAAY73D,EAAI83D,IAAY93D,EACvCsM,EAAMtM,GAAK2gB,CAEf,EA+FE2yC,aACAyE,cA1EF,SAAuB3vC,GACrBkrC,GAAUlrC,GACNA,EAAOtd,OACTsd,EAAOtd,OAAOlM,OAAOwpB,GAErBA,EAAO9G,cAAc,CAAE9gB,KAAM,WAEjC,EAoEEw3D,qBAlEF,SAA8B5vC,GAC5B,IAAK,IAAIpoB,EAAI,EAAGA,EAAIuxD,GAAiBr5D,OAAQ8H,IAC3C,GAA0D,IAApDooB,EAAO6vC,OAAOx+B,MAAQ83B,GAAiBvxD,GAAM,GACjD,OAAO,EAGX,OAAO,CACT,EA4DEk4D,sBA1DF,SAA+B/gE,EAAMghE,GAEnC,MAAMC,IAA+B,OAAfD,GACtBhhE,EAAKqiB,UAAU4O,IACTA,EAAOiwC,UACTjwC,EAAOgwC,YAAcA,EACvB,GAEJ,EAmDEE,uBAjDF,SAAgCb,GAC9BA,EAAIj+C,UAAUqQ,IACR,aAAcA,IAChBA,EAAKnqB,SAAWmqB,EAAKnqB,SAASo+B,OAAM,GAEpCjU,EAAKnqB,SAAS64D,UAAU,CACtBC,UAAWp1B,EAAAA,eACXq1B,eAAe,EACf7mC,KAAK,EACL8mC,QAAQ,EACRC,WAAW,IAEb9uC,EAAKnqB,SAASk5D,eAAe,CAAEC,WAAY,IAAIz1B,EAAAA,MAAY,UAAW01B,SAAU,OAClF,GAEJ,EAmCEC,eAjCF,SAAwBC,EAAQC,EAAQC,GACtC,MAAM/1C,EAAS+1C,GAAkB,IAAI91B,EAAAA,QAMrC,OAJAjgB,EAAO9kB,IAAI,EAAG,EAAG,GACjB8kB,EAAOg2C,gBAAgBH,EAAQ,IAC/B71C,EAAOg2C,gBAAgBF,EAAQ,IAExB91C,CACT,EA0BE6tC,WClbIoI,GAAqB,CACzBhrB,YAAa,IAAIhL,EAAAA,KAAW,IAAIA,EAAAA,SAAe,GAAI,GAAI,GAAI,IAAIA,EAAAA,QAAc,EAAG,EAAG,IACnFiL,eAAgB,IAAIjL,EAAAA,OAAa,IAAIA,EAAAA,QAAc,EAAG,EAAG,GAAI,IAG/D,MAAMi2B,WAAeC,GAASlJ,QAC5BplD,WAAAA,CAAYiZ,EAAMs1C,GAChBn1C,MAAMH,EAAMs1C,GACZ7hE,KAAKusB,KAAOA,EACZvsB,KAAK8hE,YAAcD,CACrB,CAEAE,OAAAA,GACM/hE,KAAKoT,QACPpT,KAAKoT,OAAOlM,OAAOlH,KAEvB,CAEAgiE,aAAAA,GACE,OAAOhiE,KAAK8hE,WACd,CAEArqB,aAAAA,GACE,OAAOiqB,EACT,EAGF,YC9BA,SAASO,GAAa/rD,GACpB,OAAIA,SAAiCtM,MAAM8P,QAAQxD,GAC1CA,EAEF,CAACA,EACV,CAGA,MAAMgsD,GAUJ5uD,WAAAA,GAA6C,IAAjC6uD,EAAQn2D,UAAAxL,OAAA,QAAAoiB,IAAA5W,UAAA,GAAAA,UAAA,GAAG,GAAIgmB,EAAOhmB,UAAAxL,OAAA,QAAAoiB,IAAA5W,UAAA,GAAAA,UAAA,GAAG,CAAC,MACpChM,KAAKoiE,MAAQ,GACbpiE,KAAKqiE,MAAQ,CAAC,EACdriE,KAAKsiE,SAAW,IAAItwC,GACpBhyB,KAAKsiE,SAASlmD,SAAShM,IACrBpQ,KAAKqiE,MAAMjyD,GAAS,CAAC,CAAC,IAGxB+xD,EAAS/lD,SAASmmD,GAAWviE,KAAKwiE,SAASD,IAC7C,CAWA,qBAAOE,CAAep7D,EAAM4hB,GACrB5hB,EAAKytC,SAAS7rB,IACjB5hB,EAAKmF,KAAKyc,EAEd,CASA,yBAAOy5C,CAAmBr7D,EAAM4hB,GAC9B,MAAMkuB,EAAM9vC,EAAK4W,QAAQgL,IACZ,IAATkuB,GACF9vC,EAAKutC,OAAOuC,EAAK,EAErB,CAaA,qBAAOwrB,CAAe3Q,EAAMp4C,EAAMqP,GAChCrP,EAAKwC,SAASnS,IACZA,EAAMA,EAAIvC,cACV,MAAML,EAAO2qD,EAAK/nD,GAAO+nD,EAAK/nD,IAAQ,GACjC5C,EAAKytC,SAAS7rB,IACjB5hB,EAAKmF,KAAKyc,EACZ,GAEJ,CAYA,yBAAO25C,CAAmB5Q,EAAMp4C,EAAMqP,GACpCrP,EAAKwC,SAASnS,IACZA,EAAMA,EAAIvC,cACV,MAAML,EAAO2qD,EAAK/nD,GAClB,GAAI5C,EAAM,CACR,MAAM8vC,EAAM9vC,EAAK4W,QAAQgL,IACZ,IAATkuB,GACF9vC,EAAKutC,OAAOuC,EAAK,GAEC,IAAhB9vC,EAAK7G,eACAwxD,EAAK/nD,EAEhB,IAEJ,CASAu4D,QAAAA,CAASD,GACPL,GAAWO,eAAeziE,KAAKoiE,MAAOG,GACtCviE,KAAKsiE,SAASlmD,SAAShM,IACrB8xD,GAAWS,eAAe3iE,KAAKqiE,MAAMjyD,GAAQ6xD,GAAaM,EAAOnyD,IAASmyD,EAAO,GAErF,CAUAM,UAAAA,CAAWN,GACTL,GAAWQ,mBAAmB1iE,KAAKoiE,MAAOG,GAC1CviE,KAAKsiE,SAASlmD,SAAShM,IACrB8xD,GAAWU,mBAAmB5iE,KAAKqiE,MAAMjyD,GAAQ6xD,GAAaM,EAAOnyD,IAASmyD,EAAO,GAEzF,CASA,OAAIO,GACF,MAAO,IAAI9iE,KAAKoiE,MAClB,CAQA,SAAItvC,GACF,OAAO9yB,KAAKoiE,MAAM,EACpB,CAUAxoD,IAAAA,CAAKxJ,GACH,OAAOjG,OAAOyP,KAAK5Z,KAAKqiE,MAAMjyD,GAASpQ,KAAKsiE,SAAS,IACvD,CAWA57D,GAAAA,CAAIuD,EAAKmG,GACP,MAAM4hD,EAAOhyD,KAAKqiE,MAAMjyD,GAASpQ,KAAKsiE,SAAS,IAC/C,GAAItQ,EAAM,CACR,MAAMroC,EAASqoC,EAAK/nD,GAAOA,EAAIvC,eAC/B,OAAOiiB,GAAUA,EAAOnpB,OAAS,EAAImpB,EAAO,QAAK/G,CACnD,CAEF,EAGF,YCxKA,SAfA,SAA8BzW,GAC5BhC,OAAO44D,iBAAiB52D,EAAW,CACjCkgB,OAAQ,CACN3lB,GAAAA,GACE,OAAO1G,KAAKqpB,SAAWrpB,KAAKqpB,QAAQgD,OAASrsB,KAAKqpB,QAAQgD,OAASA,CACrE,GAEFhjB,SAAU,CACR3C,GAAAA,GACE,OAAO1G,KAAKqpB,SAAWrpB,KAAKqpB,QAAQhgB,SAAWrJ,KAAKqpB,QAAQhgB,SAAWA,CACzE,IAGN,ECdA,MAAM25D,GACJ1vD,WAAAA,CAAY6Q,EAAUZ,GACpBvjB,KAAK6zC,UAAY1vB,EACjBnkB,KAAKijE,QAAU1/C,CACjB,CAEA0f,eAAiB,SAAIyI,EAAAA,OAAJ,GAEjBitB,OAAAA,CAAQC,GACN,MAAMsK,EAASF,GAAgBG,QAC/BD,EAAOv8D,IAAI3G,KAAK6zC,UAAW7zC,KAAKijE,SAEhC,MAAMh2D,EAAI,IAAIy+B,EAAAA,QACd,OAAIktB,EAAUwK,IAAIC,gBAAgBH,EAAQj2D,GACjC,CACLq2D,SAAU1K,EAAUwK,IAAIG,OAAOh+B,WAAWt4B,GAC1C02C,MAAO12C,GAGJ,IACT,EAGF,MAwDA,GAxD4BgiB,GAAS,cAAcA,EACjD3b,WAAAA,CAAY+E,GAAgB,QAAAzB,EAAA5K,UAAAxL,OAANqL,EAAI,IAAAjC,MAAAgN,EAAA,EAAAA,EAAA,KAAA0V,EAAA,EAAAA,EAAA1V,EAAA0V,IAAJzgB,EAAIygB,EAAA,GAAAtgB,UAAAsgB,GACxBI,SAAS7gB,GACT7L,KAAKg/B,SAAW,IAAIp1B,MAAMyO,GAC1BrY,KAAK22C,eAAiB,KACtB32C,KAAK02C,YAAc,IACrB,CAEA8sB,SAAAA,CAAUl9C,EAAKnC,EAAUZ,GACvBvjB,KAAKg/B,SAAS1Y,GAAO,IAAI08C,GAAgB7+C,EAAUZ,EACrD,CAEAo1C,OAAAA,CAAQC,EAAWC,GAEjB,IAAK,IAAIvwD,EAAI,EAAGC,EAAIvI,KAAKg/B,SAASx+B,OAAQ8H,EAAIC,IAAKD,EAAG,CACpD,MAAMm7D,EAASzjE,KAAKg/B,SAAS12B,GAAGqwD,QAAQC,GACpC6K,IACFA,EAAOC,SAAWp7D,EAClBuwD,EAAWrsD,KAAKi3D,GAEpB,CACF,CAEAE,kBAAAA,GACE,MAAMnqC,EAAUx5B,KAAKg/B,SACrB,IAAI,YAAE0X,GAAgB12C,KACF,OAAhB02C,IACF12C,KAAK02C,YAAcA,EAAc,IAAIhL,EAAAA,MAEvCgL,EAAYG,YACZ,IAAK,IAAIvuC,EAAI,EAAGC,EAAIixB,EAAQh5B,OAAQ8H,EAAIC,IAAKD,EAC3CouC,EAAYI,cAActd,EAAQlxB,GAAGurC,UAEzC,CAEA+vB,qBAAAA,GACE5jE,KAAK2jE,qBACL,MAAMnqC,EAAUx5B,KAAKg/B,UACf,YAAE0X,GAAgB12C,KAExB,IAAIk3C,EAAgB,EACpB,MAAMtuC,EAAS,IAAI8iC,EAAAA,QACnBgL,EAAYM,UAAUpuC,GACtB,IAAK,IAAIN,EAAI,EAAGC,EAAIixB,EAAQh5B,OAAQ8H,EAAIC,IAAKD,EAAG,CAC9C,MAAM6uC,EAAM3d,EAAQlxB,GAAGurC,UACjBuD,EAAgBxuC,EAAOyuC,kBAAkBF,GAC3CD,EAAgBE,IAClBF,EAAgBE,EAEpB,CAC4B,OAAxBp3C,KAAK22C,iBACP32C,KAAK22C,eAAiB,IAAIjL,EAAAA,QAE5B1rC,KAAK22C,eAAehwC,IAAIiC,EAAQH,KAAK6uC,KAAKJ,GAC5C,GC1EI2sB,GAAW,IAAIn4B,EAAAA,OAIb3Z,cAAaA,IAAK1rB,EAc1B,MAAMy9D,WAAiCC,GAAmBr4B,EAAAA,0BACxDp4B,WAAAA,CAAY0wD,EAAcC,EAAkBC,GAC1Cx3C,MAAMs3C,GACNhkE,KAAKmkE,aAAeD,EAAc,IAAIx4B,EAAAA,cAAoB,EAAG,EAAG,EAAG,GAC/D,IAAIA,EAAAA,qBAA2B,EAAsB,EAAnBu4B,EAAsBA,EAAkB,EAAa,EAAVx7D,KAAKC,GAAQ,EAAGD,KAAKC,IACtG1I,KAAKokE,MAAMJ,EAAchkE,KAAKmkE,aAChC,CAEAE,OAAAA,CAAQC,EAASC,EAASC,GAd5B,IAAsB/tD,EAAK6P,EAAKpQ,EAAGuE,EAAGqB,EAAGjB,EAAnBpE,EAeLzW,KAAKykE,SAfKn+C,EAVP,EAyBYg+C,EAfApuD,EAeuBquD,EAAQruD,EAf5BuE,EAe+B8pD,EAAQ9pD,EAfpCqB,EAeuCyoD,EAAQzoD,EAf5CjB,EAe+C2pD,EAdtF/tD,EAAI6P,GAAOpQ,EACXO,EAAI6P,EAAM,GAAK7L,EACfhE,EAAI6P,EAAM,GAAKxK,EACfrF,EAAI6P,EAAM,GAAKzL,EAYb7a,KAAKwjE,UAAUc,EAASC,EAASC,EACnC,CAEAE,QAAAA,CAASJ,EAASK,GAzBpB,IAAqBluD,EAAK6P,EAAKpQ,EAAGuE,EAAGqB,EA0BjC+nD,GAASl9D,IAAIg+D,GA1BIluD,EA2BLzW,KAAK4kE,QA3BKt+C,EAHP,EA8BWg+C,EA3BCpuD,EA2BqB2tD,GAAS72D,EA3B3ByN,EA2B8BopD,GAASzpD,EA3BpC0B,EA2BuC+nD,GAASlpD,EA1BnFlE,EAAI6P,GAAOpQ,EACXO,EAAI6P,EAAM,GAAK7L,EACfhE,EAAI6P,EAAM,GAAKxK,CAyBf,CAEA+oD,WAAAA,GACE,OAAO,CACT,CAEAC,YAAAA,GACE9kE,KAAKggE,aAAa,UAAUvI,aAAc,EAC1Cz3D,KAAKggE,aAAa,SAASvI,aAAc,CAC3C,CAEA/f,QAAAA,GACE13C,KAAK8kE,eACL9kE,KAAK4jE,uBACP,CAEAmB,UAAAA,CAAWC,EAAc/7C,GACvB,MAAMg8C,EAAWjlE,KAAKklE,OACtB,IAAK,IAAI58D,EAAI,EAAGC,EAAIy8D,EAAaxkE,OAAQ8H,EAAIC,IAAKD,EAChD28D,EAASD,EAAa18D,IAAM2gB,EAE9BjpB,KAAKggE,aAAa,cAAcvI,aAAc,CAChD,CAEA2B,SAAAA,CAAU4L,GACR,MAAM5G,EAAgB4G,EAAaxkE,OAC7B2kE,EAAO,IAAIz5B,EAAAA,wBAOjB,OANA1rC,KAAKokE,MAAMr4D,KAAKo5D,EAAM/G,EAAep+D,KAAKmkE,cAE1CpyC,GAAc/xB,KAAKykE,SAAUU,EAAKV,SAAUO,EA7D5B,GA8DhBjzC,GAAc/xB,KAAK4kE,QAASO,EAAKP,QAASI,EA7D3B,GA8DfG,EAAKxuB,eAAiB32C,KAAK22C,eAC3BwuB,EAAKzuB,YAAc12C,KAAK02C,YACjB,CAACyuB,EACV,CAEAf,KAAAA,CAAMJ,EAAcoB,GAClBplE,KAAKyX,KAAK2tD,GAEVplE,KAAKykE,SAAWp+D,EAAMmpB,cAActV,aAvEpB,EAuEkC8pD,GAClDhkE,KAAK4kE,QAAUv+D,EAAMmpB,cAActV,aAvEpB,EAuEkC8pD,GACjD,MAAMqB,EAAQrlE,KAAKklE,OAAS7+D,EAAMmpB,cAActV,aAAc8pD,GAC9Dl6D,IAAAA,KAAOu7D,EAAO,GAEdrlE,KAAK2kB,aAAa,SAAU,IAAI+mB,EAAAA,yBAA+B1rC,KAAKykE,SA5EpD,GA4E2E,EAAO,IAClGzkE,KAAK2kB,aAAa,QAAS,IAAI+mB,EAAAA,yBAA+B1rC,KAAK4kE,QA5EpD,GA4EyE,EAAO,IAC/F5kE,KAAK2kB,aAAa,aAAc,IAAI+mB,EAAAA,yBAA+B25B,EAAO,GAAG,EAAO,GACtF,EAEF,YClFMxB,GAAW,IAAIn4B,EAAAA,MASrB,MAAM45B,WAA+B55B,EAAAA,eACnCp4B,WAAAA,CAAYiyD,EAAUC,GAGpB,GAFA94C,QAEI1sB,KAAKsT,cAAgBgyD,GACvB,MAAM,IAAIj6D,MAAM,uCAGlBrL,KAAKylE,UAAYF,EAEjBvlE,KAAKokE,MAAMmB,EAAUC,EACvB,CAEAX,WAAAA,GACE,OAAO,CACT,CAEAC,YAAAA,GACE9kE,KAAKggE,aAAa,YAAYvI,aAAc,EAC5Cz3D,KAAKggE,aAAa,UAAUvI,aAAc,EAC1Cz3D,KAAKggE,aAAa,SAASvI,aAAc,CAC3C,CAEAiN,QAAAA,CAAShB,EAAUiB,GACjBd,GAASl9D,IAAIg+D,GACb,MAAMe,EAAS1lE,KAAK4kE,QACde,EAAY3lE,KAAK4lE,WACvB,IAAK,IAAIt9D,EAAIo7D,EAAWiC,EAAWngD,EAAMld,EAAIq9D,EAAWr9D,EAAIkd,IAAOld,EAAG,CACpE,MAAMge,EAtCK,EAsCChe,EACZo9D,EAAOp/C,GAAOu9C,GAAS72D,EACvB04D,EAAOp/C,EAAM,GAAKu9C,GAASzpD,EAC3BsrD,EAAOp/C,EAAM,GAAKu9C,GAASlpD,CAC7B,CACF,CAEA+8B,QAAAA,GACE13C,KAAK8kE,eACL9kE,KAAK4jE,uBACP,CAEAmB,UAAAA,CAAWC,EAAc/7C,GACvB,MAAMg8C,EAAWjlE,KAAKklE,OAChBS,EAAY3lE,KAAK4lE,WACvB,IAAK,IAAIt9D,EAAI,EAAGC,EAAIy8D,EAAaxkE,OAAQ8H,EAAIC,IAAKD,EAAG,CACnD,MAAM2b,EAAO+gD,EAAa18D,GAAKq9D,EAC/B77D,IAAAA,KAAOm7D,EAAUh8C,EAAOhF,EAAMA,EAAO0hD,EACvC,CACA3lE,KAAKggE,aAAa,cAAcvI,aAAc,CAChD,CAEAkB,OAAAA,CAAQC,EAAWC,GACjB,MAAM4K,EAAS,GAGToC,EAAO,IAAIn6B,EAAAA,KACjBm6B,EAAKhK,SAAW77D,KAChB6lE,EAAKlN,QAAQC,EAAW6K,GAExB,MAAMqC,EAAgB9lE,KAAKylE,UAAUr1D,MAAMiI,MAAQ,EACnD,IAAK,IAAI/P,EAAI,EAAGC,EAAIk7D,EAAOjjE,OAAQ8H,EAAIC,IAAKD,EACrCm7D,EAAOn7D,GAAG8D,eAAe,eAG9Bq3D,EAAOn7D,GAAGo7D,SAAWj7D,KAAKmN,MAAM6tD,EAAOn7D,GAAGy9D,UAAYD,GACtDjN,EAAWrsD,KAAKi3D,EAAOn7D,IAE3B,CAEA8wD,SAAAA,CAAU4L,GACR,MAAM5G,EAAgB4G,EAAaxkE,OAC7B2kE,EAAO,IAAIz5B,EAAAA,eACjB1rC,KAAKokE,MAAMr4D,KAAKo5D,EAAMnlE,KAAKylE,UAAWrH,GAEtC,MAAM4H,EAAShmE,KAAKimE,WACdC,EAAUlmE,KAAKmmE,SACfC,EAAWpmE,KAAK4kE,QAEhByB,EAASlB,EAAKc,WACdK,EAAUnB,EAAKgB,SACfI,EAAWpB,EAAKP,QAEhBe,EA3FO,EA2FK3lE,KAAK4lE,WAEvB,IAAK,IAAIt9D,EAAI,EAAGC,EAAIy8D,EAAaxkE,OAAQ8H,EAAIC,IAAKD,EAAG,CACnD,MAAMk+D,EAAcl+D,EAAIq9D,EAClBc,EAAazB,EAAa18D,GAAKq9D,EAC/Be,EAAWD,EAAad,EAC9BU,EAAO1/D,IAAIq/D,EAAOvqD,SAASgrD,EAAYC,GAAWF,GAClDF,EAAQ3/D,IAAIu/D,EAAQzqD,SAASgrD,EAAYC,GAAWF,GACpDD,EAAS5/D,IAAIy/D,EAAS3qD,SAASgrD,EAAYC,GAAWF,EACxD,CAIA,OAFArB,EAAKxuB,eAAiB32C,KAAK22C,eAC3BwuB,EAAKzuB,YAAc12C,KAAK02C,YACjB,CAACyuB,EACV,CAEAf,KAAAA,CAAMmB,EAAUC,GACd,MAAMG,EAAY3lE,KAAK4lE,WAAaL,EAASoB,WAAWxiD,SAAS9L,MAC3DuuD,EAAarB,EAASn1D,MAAMwE,MAC5BiyD,EAAiBD,EAAWpmE,OAC5BsmE,EAAc9mE,KAAK4lE,WAAaJ,EAChCuB,EAAgBD,EAjHJ,MAkHZE,EAAYH,EAAiBrB,EAC7Bp1D,EAAQpQ,KAAKooB,OAAS/hB,EAAMmpB,cAAcu3C,EAAgBE,YAAcC,YAAaF,GAC3FhnE,KAAKimE,WAAa5/D,EAAMmpB,cAActV,aAnHzB,EAmHuC4sD,GACpD9mE,KAAKmmE,SAAW9/D,EAAMmpB,cAActV,aApHvB,EAoHqC4sD,GAClD9mE,KAAK4kE,QAAUv+D,EAAMmpB,cAActV,aArHtB,EAqHoC4sD,GACjD,MAAMzB,EAAQrlE,KAAKklE,OAAS7+D,EAAMmpB,cAActV,aAAc4sD,GAC9Dh9D,IAAAA,KAAOu7D,EAAO,GAEd,IAAK,IAAI/8D,EAAI,EAAGA,EAAIk9D,IAAel9D,EAAG,CACpC,MAAMuG,EAASvG,EAAIu+D,EACbM,EAAY7+D,EAAIq9D,EACtBv1D,EAAMzJ,IAAIigE,EAAY/3D,GACtB,IAAK,IAAI6M,EAAI,EAAGA,EAAImrD,IAAkBnrD,EACpCtL,EAAMvB,EAAS6M,IAAMyrD,CAEzB,CAEAnnE,KAAKonE,SAAS,IAAI17B,EAAAA,gBAAsB1rC,KAAKooB,OAAQ,IACrDpoB,KAAK2kB,aAAa,WAAY,IAAI+mB,EAAAA,gBAAsB1rC,KAAKimE,WAnIhD,IAoIbjmE,KAAK2kB,aAAa,SAAU,IAAI+mB,EAAAA,gBAAsB1rC,KAAKmmE,SApI9C,IAqIbnmE,KAAK2kB,aAAa,QAAS,IAAI+mB,EAAAA,gBAAsB1rC,KAAK4kE,QArI7C,IAsIb5kE,KAAK2kB,aAAa,aAAc,IAAI+mB,EAAAA,gBAAsB25B,EAAO,GACnE,EAEF,YCvIA,MAAMgC,WAA8BtD,GAAmBuB,KACrDhyD,WAAAA,CAAY0wD,EAAcC,GACxB,MAAMqD,EAAc,IAAI57B,EAAAA,qBACtB,EACmB,EAAnBu4B,EACAA,EACA,EACU,EAAVx7D,KAAKC,GACL,EACAD,KAAKC,IAEPgkB,MAAMs3C,EAAcsD,EAAatD,GAEjC,MAAMuD,EAAUvnE,KAAKmmE,SACfqB,EAAaF,EAAYX,WAAWc,OAAO7yD,MAC3C+wD,EAAY3lE,KAAK4lE,WACvB5lE,KAAK0nE,UAAY1nE,KAAKylE,UAAUkB,WAAWxiD,SAASvP,MACpD5U,KAAK2nE,cAAgBthE,EAAMmpB,cAActV,aAnB5B,EAmB0CyrD,GACvD,IAAK,IAAIr9D,EAAI,EAAGA,EAAI07D,IAAgB17D,EAClCi/D,EAAQ5gE,IAAI6gE,EArBD,EAqBa7B,EAAuBr9D,EAEnD,CAEA+7D,OAAAA,CAAQC,EAASC,EAASC,GACxB,MAAMoD,EAAS5nE,KAAK2nE,cACdhC,EAAY3lE,KAAK4lE,WACjBiC,EAAS7nE,KAAK0nE,UAEpB,IAAK,IAAIp/D,EAAI,EAAGA,EAAIq9D,IAAar9D,EAAG,CAClC,MAAMge,EAAU,EAAJhe,EACZs/D,EAAOthD,GAAOi+C,EAAQruD,EAAI2xD,EAAOvhD,GAAOk+C,EACxCoD,EAAOthD,EAAM,GAAKi+C,EAAQ9pD,EAAIotD,EAAOvhD,EAAM,GAAKk+C,EAChDoD,EAAOthD,EAAM,GAAKi+C,EAAQzoD,EAAI+rD,EAAOvhD,EAAM,GAAKk+C,CAClD,CAEAxkE,KAAKimE,WAAWt/D,IAAIihE,EAAQjC,EAAYrB,EArC3B,GAsCbtkE,KAAKwjE,UAAUc,EAASC,EAASC,EACnC,EAEF,YCxCMsD,GAAY,IAAIp8B,EAAAA,QAChBq8B,GAAY,IAAIr8B,EAAAA,QAChBs8B,GAAU,IAAIt8B,EAAAA,QAgEpB,SA9DA,cAAwC45B,GACtChyD,WAAAA,CAAY8qD,EAAelqC,GAEzBxH,MADoB,IAAIgf,EAAAA,iBAAuB,EAAG,EAAG,EAAKjjC,KAAKgM,IAAI,EAAGyf,GAAiB,GAAG,GACvE,EAAIkqC,GAEvB,MAAMuH,EAAY3lE,KAAK4lE,WACvB5lE,KAAK0nE,UAAY1nE,KAAKylE,UAAUkB,WAAWxiD,SAASvP,MACpD5U,KAAKioE,YAAcjoE,KAAKylE,UAAUkB,WAAWc,OAAO7yD,MACpD5U,KAAKkoE,WAAa7hE,EAAMmpB,cAActV,aAbzB,EAauCyrD,EACtD,CAEAtB,OAAAA,CAAQC,EAAS6D,EAAQC,EAAQ5D,GAC/B,MAAMmB,EAAY3lE,KAAK4lE,WACjByC,EAA0B,EAAZ1C,EAAgBrB,EAlBvB,EAmBPgE,EAAeD,EAnBR,EAmBsB1C,EAE7B4C,EAAWvoE,KAAKkoE,WAChBL,EAAS7nE,KAAK0nE,UACdc,EAAUxoE,KAAKioE,YAErBH,GAAUW,YAAYN,EAAQC,EAAQ,IACtC,MAAMM,EAAO9G,GAASvD,mBAAmB8J,EAAQL,GAAWtD,GAG5D,IAAIl+C,EAFJ0hD,GAAQW,gBAAgBD,GAGxB,IAAK,IAAIpgE,EAAI,EAAGA,EAAIq9D,IAAar9D,EAC/Bge,EA/BW,EA+BLhe,EACNy/D,GAAUa,UAAUf,EAAQvhD,GAC5ByhD,GAAU/vB,aAAa0wB,GACvBX,GAAUc,QAAQN,EAAUjiD,GAE9BtmB,KAAKimE,WAAWt/D,IAAI4hE,EAAUF,GAG9BP,GAAUxhC,IAAI6hC,GACd,IAAK,IAAI7/D,EAAI,EAAGA,EAAIq9D,IAAar9D,EAC/Bge,EAzCW,EAyCLhe,EACNigE,EAASjiD,IAAQwhD,GAAU5xD,EAC3BqyD,EAASjiD,EAAM,IAAMwhD,GAAUrtD,EAC/B8tD,EAASjiD,EAAM,IAAMwhD,GAAUhsD,EAEjC9b,KAAKimE,WAAWt/D,IAAI4hE,EAAUD,GAE9B,IAAK,IAAIhgE,EAAI,EAAGA,EAAIq9D,IAAar9D,EAC/Bge,EAjDW,EAiDLhe,EACNy/D,GAAUa,UAAUJ,EAASliD,GAC7ByhD,GAAUe,aAAad,IACvBD,GAAUc,QAAQN,EAAUjiD,GAE9BtmB,KAAKmmE,SAASx/D,IAAI4hE,EAAUF,GAC5BroE,KAAKmmE,SAASx/D,IAAI4hE,EAAUD,EAC9B,CAEA5D,QAAAA,CAASJ,EAASyE,EAAWC,GAC3B,MAAMl2C,EAAQ,EAAIwxC,EAClB53C,MAAMg4C,SAAS5xC,EAAOi2C,GAEtB,MAAMh2C,EAASD,EAAQ,EACvBpG,MAAMg4C,SAAS3xC,EAAQi2C,EACzB,GC/DF,MAAMC,WAA+Bv9B,EAAAA,eACnCp4B,WAAAA,CACE41D,EACAC,EACAvjD,EACAwjD,EACAC,EACAC,GAEA58C,QAEA,MACM68C,EAAc,EAAI9gE,KAAKC,GAE7B1I,KAAK8I,KAAO,yBAEZ9I,KAAKwpE,WAAa,CAChBN,YACAC,eACAvjD,SACAwjD,iBACAC,iBACAC,aAGF,MAAMG,GAAuB,IAAdH,GAAuBJ,EAAY,EAC5CQ,GAA0B,IAAdJ,GAAuBH,EAAe,EAClDQ,GAAeN,EAAiB,GAAKD,EACvCK,GAAUL,EAAiB,GAC3BM,GAAaN,EAAiB,GAC5BQ,GAAc,EAAIP,EAAiBI,EAASC,GAAaN,EAEzDS,EAAajkD,EAAS,EAGtBkkD,EAAY,IAAIp+B,EAAAA,gBAAsBrlC,EAAMmpB,cAActV,aAA4B,EAAdyvD,GAAkB,GAC1FpC,EAAU,IAAI77B,EAAAA,gBAAsBrlC,EAAMmpB,cAActV,aAA4B,EAAdyvD,GAAkB,GACxF33C,EAAU,IAAI0Z,EAAAA,sBAA4BrlC,EAAMmpB,cAAc03C,YAvC/C,EAuC4D0C,GAAgC,GAG3GG,EAAM,IAAIr+B,EAAAA,gBAAsBrlC,EAAMmpB,cAActV,aAA4B,EAAdyvD,GAAkB,GAG1F,IAAIK,EAAa,EACbC,EAAc,EAClB,MAAMC,IAAaf,EAAeD,GAAatjD,EAG/C,IAAK,IAAInL,EAAI,EAAGA,GAAK4uD,EAAgB5uD,IAAK,CAExC,GAAIA,IAAM4uD,EACR,IAAK,IAAI/gE,EAAI,EAAGA,EAAI8gE,EAAgB9gE,IAAK,CACvC,MAAM61C,EAAK6rB,EAAa1hE,EAClB81C,EAAK4rB,EAAaZ,EAAiB9gE,EACnC6hE,EAAKH,EAAaZ,GAAmB9gE,EAAI,GAAK8gE,EAC9CgB,EAAKJ,GAAe1hE,EAAI,GAAK8gE,EAEnCp3C,EAAQq4C,OA3DO,EA2DAJ,EAAgC9rB,EAAIisB,EAAIhsB,GACvD6rB,IACAj4C,EAAQq4C,OA7DO,EA6DAJ,EAAgC7rB,EAAIgsB,EAAID,GACvDF,GACF,CAIF,MAAM3pE,EAAIma,EAAI4uD,EACR9lD,EAASjjB,GAAK6oE,EAAeD,GAAaA,EAEhD,IAAK,IAAIhzD,EAAI,EAAGA,EAAIkzD,EAAgBlzD,IAAK,CACvC,MAAM+C,EAAI/C,EAAIkzD,EAERkB,EAAK/mD,EAAS9a,KAAKoK,IAAIoG,EAAIswD,EA5DlB,GA6DTgB,EAAKjqE,EAAIslB,EAASikD,EAClBW,EAAKjnD,EAAS9a,KAAKme,IAAI3N,EAAIswD,EA9DlB,GAgET9B,EAAS,IAAI/7B,EAAAA,QACjB4+B,EACA7hE,KAAK6uC,KAAKgzB,EAAKA,EAAKE,EAAKA,GAAMN,EAC/BM,GACAnjC,YAEFyiC,EAAUO,OAAOL,EAAYM,EAAIC,EAAIC,GACrCjD,EAAQ8C,OAAOL,EAAYvC,EAAOvxD,EAAGuxD,EAAOhtD,EAAGgtD,EAAO3rD,GACtDiuD,EAAI9J,MAAM+J,EAAY/wD,EAAG3Y,KACvB0pE,CACJ,CACF,CAGA,GAAIP,EAAQ,CACV,MAAMgB,EAAYT,EACZU,EAAUV,EAAaZ,EAC7B,IAAK,IAAIuB,EAAQ,EAAGA,EAAQvB,IAAkBuB,EAAO,CACnD,MAAMC,EAAaZ,EAAaZ,EAChCU,EAAUO,OACRL,EACAF,EAAUe,KAAKD,GACfd,EAAUgB,KAAKF,GACfd,EAAUiB,KAAKH,IAEjBrD,EAAQ8C,OAAOL,EAAY,EAAG,EAAG,GACjCD,EAAI9J,MAAM+J,EAAY,EAAG,GAEzB,MAAMgB,EAAWP,GAAcE,EAAQ,GAAKvB,EAC5Cp3C,EAAQq4C,OA1GS,EA0GFJ,EAAgCD,EAAYgB,EAAUN,GACrET,IACAD,GACF,CAEAF,EAAUO,OAAOL,EAAY,EAAGH,EAAY,GAC5CtC,EAAQ8C,OAAOL,EAAY,EAAG,EAAG,GACjCD,EAAI9J,MAAM+J,EAAY,EAAG,KACvBA,CACJ,CAGA,GAAIN,EAAW,CACb,MAAMuB,EAAYjB,EACZkB,EAAWlB,EAAaZ,EAC9B,IAAK,IAAI+B,EAAQ,EAAGA,EAAQ/B,IAAkB+B,EAAO,CACnD,MAAMC,EAAcD,EACpBrB,EAAUO,OACRL,EACAF,EAAUe,KAAKO,GACftB,EAAUgB,KAAKM,GACftB,EAAUiB,KAAKK,IAEjB7D,EAAQ8C,OAAOL,EAAY,GAAI,EAAG,GAClCD,EAAI9J,MAAM+J,EAAY,EAAG,GAEzB,MAAMqB,EAAWJ,GAAcE,EAAQ,GAAK/B,EAC5Cp3C,EAAQq4C,OArIS,EAqIFJ,EAAgCoB,EAAUrB,EAAYkB,GACrEjB,IACAD,GACF,CAEAF,EAAUO,OAAOL,EAAY,GAAIH,EAAY,GAC7CtC,EAAQ8C,OAAOL,EAAY,GAAI,EAAG,GAClCD,EAAI9J,MAAM+J,EAAY,EAAG,EAC3B,CAEAhqE,KAAKonE,SAASp1C,GACdhyB,KAAK2kB,aAAa,WAAYmlD,GAC9B9pE,KAAK2kB,aAAa,SAAU4iD,GAC5BvnE,KAAK2kB,aAAa,KAAMolD,EAC1B,CAEA3jC,KAAAA,GACE,MAAM,WAAEojC,GAAexpE,KAEvB,OAAO,IAAIipE,GACTO,EAAWN,UACXM,EAAWL,aACXK,EAAW5jD,OACX4jD,EAAWJ,eACXI,EAAWH,eACXG,EAAWF,UAEf,EAGF,YChKMzF,GAAW,IAAIn4B,EAAAA,MACf4/B,GAAY,IAAI5/B,EAAAA,SAId3Z,cAAaA,IAAK1rB,EAE1B,SAASklE,GAAY90D,EAAK6P,EAAKpQ,EAAGuE,EAAGqB,GACnCrF,EAAI6P,GAAOpQ,EACXO,EAAI6P,EAAM,GAAK7L,EACfhE,EAAI6P,EAAM,GAAKxK,CACjB,CAEA,SAAS0vD,GAAa/0D,EAAK6P,EAAKpQ,EAAGuE,EAAGqB,EAAGjB,GACvCpE,EAAI6P,GAAOpQ,EACXO,EAAI6P,EAAM,GAAK7L,EACfhE,EAAI6P,EAAM,GAAKxK,EACfrF,EAAI6P,EAAM,GAAKzL,CACjB,CAEA,SAAS4wD,GAAWt1D,EAAGwE,GACrB,OAAOxE,EAAIwE,CACb,CAuCA,MAAM+wD,WAAqChgC,EAAAA,wBACzCp4B,WAAAA,CAAY8qD,EAAelqC,EAAgBgwC,EAAaoF,GACtD58C,QACA1sB,KAAK2rE,aAAezH,EACpBlkE,KAAK4rE,aAAe1H,EAAc,IAAIx4B,EAAAA,cAAoB,EAAG,EAAG,EAAG,GAC/D,IAAIu9B,GAAuB,EAAG,EAAG,EAAKxgE,KAAKgM,IAAI,EAAGyf,GAAiB,EAAGo1C,GAC1EtpE,KAAKokE,MAAMhG,EAAep+D,KAAK4rE,aAAc5rE,KAAK2rE,cAElD3rE,KAAK6rE,cAAgB,IAAIC,GAA0B1N,EAAe,EACpE,CAEAiG,OAAAA,CAAQC,EAAS6D,EAAQC,EAAQ5D,GAC/B,MAAMlsB,EAASspB,GAASvD,mBAAmB8J,EAAQC,EAAQ5D,GAC3D,IAAIuH,EAAKzzB,EAAO8iB,SAChB,MAAM4Q,EAxEU,EAwEE1H,EAElBtkE,KAAK6rE,cAAcxH,QAAQC,EAAS6D,EAAQC,EAAQ5D,GACpDgH,GAAaxrE,KAAKisE,YAAaD,EAAWD,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAClEP,GAAaxrE,KAAKksE,YAAaF,EAAWD,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAClEP,GAAaxrE,KAAKmsE,YAAaH,EAAWD,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKA,EAAG,KAE/D/rE,KAAK2rE,eACPL,GAAU7zD,KAAK6gC,GAAQ+hB,SACvB0R,EAAKT,GAAUlQ,SACfoQ,GAAaxrE,KAAKosE,eAAgBJ,EAAWD,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,KACrEP,GAAaxrE,KAAKqsE,eAAgBL,EAAWD,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,KACrEP,GAAaxrE,KAAKssE,eAAgBN,EAAWD,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKA,EAAG,KAE1E,CAEArH,QAAAA,CAASJ,EAASyE,EAAWC,GAC3B,MAAMuD,EAxFS,EAwFEjI,EACjBT,GAASl9D,IAAIoiE,GACbwC,GAAYvrE,KAAKwsE,QAASD,EAAU1I,GAAS72D,EAAG62D,GAASzpD,EAAGypD,GAASlpD,GACrEkpD,GAASl9D,IAAIqiE,GACbuC,GAAYvrE,KAAKysE,QAASF,EAAU1I,GAAS72D,EAAG62D,GAASzpD,EAAGypD,GAASlpD,EACvE,CAEAipD,qBAAAA,GACE5jE,KAAK6rE,cAAcjI,wBACnB5jE,KAAK22C,eAAiB32C,KAAK6rE,cAAcl1B,cAC3C,CAEAgtB,kBAAAA,GACE3jE,KAAK6rE,cAAclI,qBACnB3jE,KAAK02C,YAAc12C,KAAK6rE,cAAcn1B,WACxC,CAEAiiB,OAAAA,CAAQC,EAAWC,GACjB74D,KAAK6rE,cAAclT,QAAQC,EAAWC,EACxC,CAEAgM,WAAAA,GACE,OAAO,CACT,CAEAC,YAAAA,GACE9kE,KAAKggE,aAAa,cAAcvI,aAAc,EAC9Cz3D,KAAKggE,aAAa,cAAcvI,aAAc,EAC9Cz3D,KAAKggE,aAAa,cAAcvI,aAAc,EAC9Cz3D,KAAKggE,aAAa,SAASvI,aAAc,EACzCz3D,KAAKggE,aAAa,UAAUvI,aAAc,EAC1Cz3D,KAAKggE,aAAa,cAAcvI,aAAc,EAC1Cz3D,KAAK2rE,eACP3rE,KAAKggE,aAAa,iBAAiBvI,aAAc,EACjDz3D,KAAKggE,aAAa,iBAAiBvI,aAAc,EACjDz3D,KAAKggE,aAAa,iBAAiBvI,aAAc,GAGnDz3D,KAAK6rE,cAAc/G,cACrB,CAEAptB,QAAAA,GACE13C,KAAK8kE,eACL9kE,KAAK4jE,uBACP,CAEAmB,UAAAA,CAAWC,EAAc/7C,GACvB,MAAMg8C,EAAWjlE,KAAKklE,OACtB,IAAK,IAAI58D,EAAI,EAAGC,EAAIy8D,EAAaxkE,OAAQ8H,EAAIC,IAAKD,EAChD28D,EAASx8D,KAAKmN,MAAMovD,EAAa18D,GAAK,IAAM2gB,EAE9CjpB,KAAKggE,aAAa,cAAcvI,aAAc,CAChD,CAEA2B,SAAAA,CAAU4L,GACR,MAAMh7C,EA3HV,SAA8Bg7C,GAC5BA,EAAapsD,KAAK6yD,IAClB,MAAMiB,EAAY,GACZC,EAAe,GACrB,IAAK,IAAIrkE,EAAI,EAAGC,EAAIy8D,EAAaxkE,OAAQ8H,EAAIC,IAAKD,EAAG,CACnD,MAAM4B,EAAM86D,EAAa18D,GAEnBskE,EAAS,CACb95C,OAAO,EACPC,QAAQ,IAHU,EAAN7oB,GAAW,GAAM,GAM7B0iE,EAAO95C,OAAQ,EACf85C,EAAO75C,OAASzqB,EAAI,EAAIC,GAAKy8D,EAAa18D,EAAI,KAAO08D,EAAa18D,GAAK,EACnEskE,EAAO75C,UACPzqB,GAGJskE,EAAO75C,QAAS,EAElB25C,EAAUlgE,KAAK/D,KAAKmN,MAAM1L,EAAM,IAChCyiE,EAAangE,KAAKogE,EACpB,CACA,MAAO,CAAE56C,QAAS06C,EAAWC,eAC/B,CAmGiBE,CAAqB7H,GAC5B8H,EAAkB9iD,EAAKgI,QACvBosC,EAAgB0O,EAAgBtsE,OAChC2kE,EAAO,IAAIz5B,EAAAA,wBAkBjB,OAjBA1rC,KAAKokE,MAAMr4D,KAAKo5D,EAAM/G,EAAep+D,KAAK4rE,aAAc5rE,KAAK2rE,cAE7D55C,GAAc/xB,KAAKisE,YAAa9G,EAAK8G,YAAaa,EAtJlC,GAuJhB/6C,GAAc/xB,KAAKksE,YAAa/G,EAAK+G,YAAaY,EAvJlC,GAwJhB/6C,GAAc/xB,KAAKmsE,YAAahH,EAAKgH,YAAaW,EAxJlC,GA0JZ9sE,KAAK2rE,eACP55C,GAAc/xB,KAAKosE,eAAgBjH,EAAKiH,eAAgBU,EA3J1C,GA4Jd/6C,GAAc/xB,KAAKqsE,eAAgBlH,EAAKkH,eAAgBS,EA5J1C,GA6Jd/6C,GAAc/xB,KAAKssE,eAAgBnH,EAAKmH,eAAgBQ,EA7J1C,IAgKhB/6C,GAAc/xB,KAAKwsE,QAASrH,EAAKqH,QAASM,EA/J3B,GAgKf/6C,GAAc/xB,KAAKysE,QAAStH,EAAKsH,QAASK,EAhK3B,GA8CnB,SAAwBH,EAAcI,EAAQC,GAC5C,IAAK,IAAI1kE,EAAI,EAAGC,EAAIokE,EAAansE,OAAQ8H,EAAIC,IAAKD,EAAG,CACnD,MAAM0hB,EAAO2iD,EAAarkE,GACrB0hB,EAAK8I,QACRi6C,EAlDa,EAkDOzkE,IAAM,IAEvB0hB,EAAK+I,SACRi6C,EArDa,EAqDO1kE,IAAM,GAE9B,CACF,CAyGI2kE,CAAejjD,EAAK2iD,aAAcxH,EAAKqH,QAASrH,EAAKsH,SACrDtH,EAAKxuB,eAAiB32C,KAAK22C,eAC3BwuB,EAAKzuB,YAAc12C,KAAK02C,YACjB,CAACyuB,EACV,CAEA+H,YAAAA,GACE,OAAOltE,KAAK4rE,aAAapC,UAC3B,CAEApF,KAAAA,CAAMhG,EAAe+O,EAAajJ,GAChClkE,KAAKyX,KAAK01D,GACVntE,KAAKisE,YAAc5lE,EAAMmpB,cAActV,aA9KvB,EA8KqCkkD,GACrDp+D,KAAKksE,YAAc7lE,EAAMmpB,cAActV,aA/KvB,EA+KqCkkD,GACrDp+D,KAAKmsE,YAAc9lE,EAAMmpB,cAActV,aAhLvB,EAgLqCkkD,GACrDp+D,KAAKwsE,QAAUnmE,EAAMmpB,cAActV,aAhLpB,EAgLkCkkD,GACjDp+D,KAAKysE,QAAUpmE,EAAMmpB,cAActV,aAjLpB,EAiLkCkkD,GACjD,MAAMiH,EAAQrlE,KAAKklE,OAAS7+D,EAAMmpB,cAActV,aAAckkD,GAC9Dt0D,IAAAA,KAAOu7D,EAAO,GAEdrlE,KAAK2kB,aAAa,aAAc,IAAI+mB,EAAAA,yBAA+B1rC,KAAKisE,YAtLxD,GAsLkF,EAAO,IACzGjsE,KAAK2kB,aAAa,aAAc,IAAI+mB,EAAAA,yBAA+B1rC,KAAKksE,YAvLxD,GAuLkF,EAAO,IACzGlsE,KAAK2kB,aAAa,aAAc,IAAI+mB,EAAAA,yBAA+B1rC,KAAKmsE,YAxLxD,GAwLkF,EAAO,IACzGnsE,KAAK2kB,aAAa,QAAS,IAAI+mB,EAAAA,yBAA+B1rC,KAAKwsE,QAxLpD,GAwLyE,EAAO,IAC/FxsE,KAAK2kB,aAAa,SAAU,IAAI+mB,EAAAA,yBAA+B1rC,KAAKysE,QAzLrD,GAyL0E,EAAO,IAEhGzsE,KAAK2kB,aAAa,aAAc,IAAI+mB,EAAAA,yBAA+B1rC,KAAKklE,OAAQ,GAAG,EAAO,IAEtFhB,IACFlkE,KAAKosE,eAAiB/lE,EAAMmpB,cAActV,aA/L5B,EA+L0CkkD,GACxDp+D,KAAKqsE,eAAiBhmE,EAAMmpB,cAActV,aAhM5B,EAgM0CkkD,GACxDp+D,KAAKssE,eAAiBjmE,EAAMmpB,cAActV,aAjM5B,EAiM0CkkD,GAExDp+D,KAAK2kB,aACH,gBACA,IAAI+mB,EAAAA,yBAA+B1rC,KAAKosE,eArM5B,GAqMyD,EAAO,IAE9EpsE,KAAK2kB,aACH,gBACA,IAAI+mB,EAAAA,yBAA+B1rC,KAAKqsE,eAzM5B,GAyMyD,EAAO,IAE9ErsE,KAAK2kB,aACH,gBACA,IAAI+mB,EAAAA,yBAA+B1rC,KAAKssE,eA7M5B,GA6MyD,EAAO,IAGlF,EAGF,YCvNMc,GAAU,IAAI1hC,EAAAA,QACd2hC,GAAU,IAAI3hC,EAAAA,QACd4hC,GAAS,IAAI5hC,EAAAA,QACb6hC,GAAe,IAAI7hC,EAAAA,QAAc,EAAK,EAAK,GAC3C8hC,GAAc,IAAI9hC,EAAAA,QAClB+hC,GAAa,IAAI/hC,EAAAA,QA2LvB,SAnJA,cAAsC45B,GACpChyD,WAAAA,CAAYo6D,EAAOC,EAAYnI,GAC7B,MAAMD,EAxCV,SAAsCmI,EAAOC,GAC3C,MAAM5N,EAAM,IAAIr0B,EAAAA,eACVkiC,EAAWF,EAAMltE,OACjBqtE,EAAWD,EAAWD,EACtB7kE,EAAO+kE,GAAY,MAAQ3G,YAAcD,YACzCnB,GAAiB6H,EAAa,GAAKC,EAAW,EAC9C57C,EAAU,IAAI0Z,EAAAA,gBAAsBrlC,EAAMmpB,cAAc1mB,EAd/C,EAcqDg9D,GAA2B,GAE/F,IAAIkE,EAAa,EACbC,EAAc,EAClB,IAAK,IAAIxvD,EAAI,EAAGA,EAAIkzD,EAAYlzD,IAAK,CAEnC,GAAIA,IAAMkzD,EAAa,EACrB,IAAK,IAAIrlE,EAAI,EAAGA,EAAIslE,EAAUtlE,IAAK,CACjC,MAAM61C,EAAK6rB,EAAa1hE,EAClB81C,EAAK4rB,EAAa4D,EAAWtlE,EAC7B6hE,EAAKH,EAAa4D,GAAatlE,EAAI,GAAKslE,EACxCxD,EAAKJ,GAAe1hE,EAAI,GAAKslE,EAEnC57C,EAAQq4C,OA3BC,EA2BMJ,EAAwB9rB,EAAIisB,EAAIhsB,GAC/C6rB,IACAj4C,EAAQq4C,OA7BC,EA6BMJ,EAAwB7rB,EAAIgsB,EAAID,GAC/CF,GACF,CAGFD,GAAc4D,CAChB,CAEA7N,EAAIqH,SAASp1C,GACb,MAAMmlB,EAAM9wC,EAAMmpB,cAActV,aAvCjB,EAuC+B2zD,GAK9C,OAJA9N,EAAIp7C,aAAa,WAAY,IAAI+mB,EAAAA,gBAAsByL,EAxCxC,IA0Cf4oB,EAAIkG,WAAayH,EAEV3N,CACT,CAIqB+N,CAA6BJ,EAAOC,GACrDjhD,MAAM64C,EAAUC,GAChBxlE,KAAK+tE,YAAcJ,EAEnB,MAAMK,EAAWhuE,KAAKiuE,UAAY,GAClC,IAAK,IAAI3lE,EAAI,EAAGA,EAAIolE,EAAMltE,SAAU8H,EAClC0lE,EAAS1lE,GAAK,IAAIojC,EAAAA,OAEtB,CAEA24B,OAAAA,CAAQC,EAASzsB,GAA4C,IAAlCq2B,EAAQliE,UAAAxL,OAAA,QAAAoiB,IAAA5W,UAAA,IAAAA,UAAA,GAAUmiE,EAAMniE,UAAAxL,OAAA,QAAAoiB,IAAA5W,UAAA,IAAAA,UAAA,GACjD,MAAM4hE,EAAW5tE,KAAKylE,UAAUQ,WAAWzlE,OACrCmtE,EAAa3tE,KAAK+tE,YAClBK,EAAgBR,EAAW5tE,KAAK+tE,YAAczJ,EA9DvC,EAgEbtkE,KAAKquE,WAAWx2B,EAAU+1B,EAAUD,EAAYS,GAE5CF,EACFluE,KAAKsuE,iBAAiBV,EAAUD,EAAYS,GAE5CpuE,KAAKuuE,gBAAgBX,EAAUD,EAAYS,GAGzCD,GACFnuE,KAAKwuE,QAAQZ,EAAUD,EAAYS,EAEvC,CAEAC,UAAAA,CAAWx2B,EAAU+1B,EAAUD,EAAYS,GACzC,MAAMJ,EAAWhuE,KAAKiuE,UAChBnE,EAAY9pE,KAAKimE,WACjByH,EAAQ1tE,KAAKylE,UAAUQ,WAE7B,IAAK,IAAI39D,EAAI,EAAGmmE,EAASL,EAAe9lE,EAAIqlE,IAAcrlE,EAAG,CAC3D,MAAMomE,EAAM72B,EAASvvC,GAErB,IAAK,IAAIoT,EAAI,EAAGA,EAAIkyD,IAAYlyD,EAAG+yD,GArFxB,EAsFTT,EAAStyD,GAAGjE,KAAKi2D,EAAMhyD,IAAIs8B,aAAa02B,GAAK7F,QAAQiB,EAAW2E,EAEpE,CACF,CAEAF,eAAAA,CAAgBX,EAAUD,EAAYS,GACpC,MAAMO,EA5FO,EA4FMf,EAEnB,IAAK,IAAItlE,EAAI,EAAGmmE,EAASL,EAAe9lE,EAAIqlE,IAAcrlE,EAAGmmE,GAAUE,EACrE3uE,KAAK4uE,oBAAoBhB,EAAUa,GAAQ,EAE/C,CAEAH,gBAAAA,CAAiBV,EAAUD,EAAYS,GACrC,MAAM7G,EAAUvnE,KAAKmmE,SACfwI,EArGO,EAqGMf,EAEnB,IAAIa,EAASL,EAIb,IAAK,IAAI1yD,EAAI,EAAGA,EAAIkyD,IAAYlyD,EAAG+yD,GA3GtB,EA4GXlB,GAAa1E,QAAQtB,EAASkH,GAKhC,GAAIA,EAAS,EAAIE,EAAa,EAC5B,IAAK,IAAIjzD,EAAI,EAAGA,EAAIkyD,IAAYlyD,EAAG+yD,GAlHxB,EAmHTnB,GAAO1E,UAAUrB,EAASkH,EAAS,EAAIE,GAAY9F,QAAQtB,EAASkH,QAGtEzuE,KAAK4uE,oBAAoBhB,EAAUa,GAAQ,GAAOE,GAClDF,GAAUE,EAIZ,IAAK,IAAIrmE,EAAI,EAAGA,EAAIqlE,IAAcrlE,EAAGmmE,GAAUE,EAC7C3uE,KAAK4uE,oBAAoBhB,EAAUa,GAAQ,GAAOE,EAEtD,CASAC,mBAAAA,CAAoBhB,EAAUa,EAAQI,EAASC,GAC7C,MAAMd,EAAWhuE,KAAKiuE,UAChB1G,EAAUvnE,KAAKmmE,SAErB6H,EAAS,GAAGpF,UAAU5oE,KAAKimE,WAAYwI,GACvCT,EAASJ,EAAW,GAAGhF,UAAU5oE,KAAKimE,WAAYwI,EA5IrC,GA4I+Cb,EAAW,IAEvE,IAAK,IAAIlyD,EAAI,EAAGA,EAAIkyD,IAAYlyD,EAAG+yD,GA9ItB,EA+IP/yD,EAAIkyD,EAAW,GACjBI,EAAStyD,EAAI,GAAGktD,UAAU5oE,KAAKimE,WAAYwI,EAhJlC,GAmJPI,GACFpB,GAAW7E,UAAU5oE,KAAKimE,WAAYwI,EAASK,GAE/C1B,GAAQ2B,WAAWf,GAAUtyD,EAAIkyD,EAAW,GAAKA,GAAWI,GAAUtyD,EAAI,GAAKkyD,IAAWvmC,YAC1FgmC,GAAQ0B,WAAWf,EAAStyD,GAAI+xD,IAAYpmC,YAC5CimC,GAAOnmC,aAAakmC,GAASD,IAAS/lC,YAAYwhC,QAAQtB,EAASkH,KAEnErB,GAAQ2B,WAAWf,EAAStyD,GAAIsyD,GAAUtyD,EAAIkyD,EAAW,GAAKA,IAAWvmC,YACzEgmC,GAAQ0B,WAAWf,EAAStyD,GAAIsyD,GAAUtyD,EAAI,GAAKkyD,IAAWvmC,YAC9DimC,GAAO74B,WAAW24B,GAASC,IAAShmC,YAAYwhC,QAAQtB,EAASkH,GAGvE,CAEAD,OAAAA,CAAQZ,EAAUD,EAAYS,GAE5B,GAAIR,EAAW,GAAKD,EAAa,EAC/B,OAEF,MAAM7D,EAAY9pE,KAAKimE,WACjBsB,EAAUvnE,KAAKmmE,SACf6H,EAAWhuE,KAAKiuE,UAChBU,EAzKO,EAyKMf,EAGnBI,EAAS,GAAGpF,UAAUkB,EAAWsE,GACjCJ,EAAS,GAAGpF,UAAUkB,EAAWsE,EA7KpB,GA8KbJ,EAAS,GAAGpF,UAAUkB,EAAWsE,EAAgB,GAEjDhB,GAAQ2B,WAAWf,EAAS,GAAIA,EAAS,IAAI3mC,YAC7CgmC,GAAQ0B,WAAWf,EAAS,GAAIA,EAAS,IAAI3mC,YAC7CmmC,GAAYrmC,aAAaimC,GAASC,IAAShmC,YAE3C,IAAIonC,EAASL,EAEb,IAAK,IAAI1yD,EAAI,EAAGA,EAAe,EAAXkyD,IAAgBlyD,EAAG+yD,GAtL1B,EAuLXjB,GAAY3E,QAAQtB,EAASkH,GAE/B,GAAId,EAAa,EAEf,IAAK,IAAIjyD,EAAI,EAAGA,EAAIkyD,IAAYlyD,EAAG+yD,GA3LxB,EA4LTnB,GAAO1E,UAAUkB,EAAW2E,EAASE,GAAY9F,QAAQiB,EAAW2E,EAG1E,GC1LI5K,GAAW,IAAIn4B,EAAAA,MACf9nB,GAAY,IAAI8nB,EAAAA,QAEtB,SAAS6/B,GAAY90D,EAAK6P,EAAKpQ,EAAGuE,EAAGqB,GACnCrF,EAAI6P,GAAOpQ,EACXO,EAAI6P,EAAM,GAAK7L,EACfhE,EAAI6P,EAAM,GAAKxK,CACjB,CAEA,SAAS0vD,GAAa/0D,EAAK6P,EAAKpQ,EAAGuE,EAAGqB,EAAGjB,GACvCpE,EAAI6P,GAAOpQ,EACXO,EAAI6P,EAAM,GAAK7L,EACfhE,EAAI6P,EAAM,GAAKxK,EACfrF,EAAI6P,EAAM,GAAKzL,CACjB,CAEA,SAASu+C,GAAU3iD,EAAKu4D,EAAiBC,EAAeC,GACtD,MAAMhoD,EArBmB,EAqBX8nD,EACRxpD,EAAM0B,EAtBa,EAsBL+nD,EACpB,OAAOx4D,EAAIgF,SAASyL,EAAQgoD,EAAU1pD,EAAM0pD,EAC9C,CAWA,MAAMC,WAA2BzjC,EAAAA,eAC/Bp4B,WAAAA,CAAY27D,GACVviD,QACA1sB,KAAKovE,cAAcH,EACrB,CAEApK,WAAAA,GACE,OAAO,CACT,CAEAC,YAAAA,GACE9kE,KAAKggE,aAAa,YAAYvI,aAAc,EAC5Cz3D,KAAKggE,aAAa,SAASvI,aAAc,EACzCz3D,KAAKggE,aAAa,cAAcvI,aAAc,EAC9Cz3D,KAAKggE,aAAa,aAAavI,aAAc,CAC/C,CAEAiN,QAAAA,CAAS2K,EAAY1K,GACnBd,GAASl9D,IAAIg+D,GACb,IAAIr+C,EAtDmB,EAsDb+oD,EAnDG,EAoDb9D,GAAYvrE,KAAK4kE,QAASt+C,EAAKu9C,GAAS72D,EAAG62D,GAASzpD,EAAGypD,GAASlpD,GAChE2L,GArDa,EAsDbilD,GAAYvrE,KAAK4kE,QAASt+C,EAAKu9C,GAAS72D,EAAG62D,GAASzpD,EAAGypD,GAASlpD,GAChE2L,GAvDa,EAwDbilD,GAAYvrE,KAAK4kE,QAASt+C,EAAKu9C,GAAS72D,EAAG62D,GAASzpD,EAAGypD,GAASlpD,GAChE2L,GAzDa,EA0DbilD,GAAYvrE,KAAK4kE,QAASt+C,EAAKu9C,GAAS72D,EAAG62D,GAASzpD,EAAGypD,GAASlpD,EAClE,CAEA20D,UAAAA,CAAWD,EAAYE,EAAMC,GAC3B5rD,GAAUmrD,WAAWQ,EAAMC,GAC3B5rD,GAAUyjB,YACV,MAAMyiC,EAAY9pE,KAAKimE,WACjBwJ,EAAazvE,KAAK0vE,YACxB,IAAIppD,EArEmB,EAqEb+oD,EApEG,EAqETM,EAtEmB,EAsEVN,EApEA,EAqEb7D,GAAa1B,EAAWxjD,EAAKipD,EAAKr5D,EAAGq5D,EAAK90D,EAAG80D,EAAKzzD,EAAG,IACrDyvD,GAAYkE,EAAYE,EAAQ/rD,GAAU1N,EAAG0N,GAAUnJ,EAAGmJ,GAAU9H,GACpEwK,GAxEa,EAyEbqpD,GAxEa,EAyEbnE,GAAa1B,EAAWxjD,EAAKipD,EAAKr5D,EAAGq5D,EAAK90D,EAAG80D,EAAKzzD,GAAI,IACtDyvD,GAAYkE,EAAYE,EAAQ/rD,GAAU1N,EAAG0N,GAAUnJ,EAAGmJ,GAAU9H,GACpEwK,GA5Ea,EA6EbqpD,GA5Ea,EA6EbnE,GAAa1B,EAAWxjD,EAAKkpD,EAAKt5D,EAAGs5D,EAAK/0D,EAAG+0D,EAAK1zD,EAAG,IACrDyvD,GAAYkE,EAAYE,EAAQ/rD,GAAU1N,EAAG0N,GAAUnJ,EAAGmJ,GAAU9H,GACpEwK,GAhFa,EAiFbqpD,GAhFa,EAiFbnE,GAAa1B,EAAWxjD,EAAKkpD,EAAKt5D,EAAGs5D,EAAK/0D,EAAG+0D,EAAK1zD,GAAI,IACtDyvD,GAAYkE,EAAYE,EAAQ/rD,GAAU1N,EAAG0N,GAAUnJ,EAAGmJ,GAAU9H,EACtE,CAEAipD,UAAAA,CAAW6K,EAAaC,EAAW5mD,GACjC,MAAM/B,EAxFiB,EAwFT0oD,EACRpqD,EAzFiB,EAyFXqqD,EACZ/lE,IAAAA,KAAO9J,KAAKqlE,MAAOp8C,EAAOzD,EAAK0B,GAC/BlnB,KAAKggE,aAAa,cAAcvI,aAAc,CAChD,CAEAqY,iBAAAA,CAAkBd,EAAiBC,GACjC,MAAO,CACL7V,GAAUp5D,KAAKimE,WAAY+I,EAAiBC,EA/FjC,GAgGX7V,GAAUp5D,KAAK0vE,YAAaV,EAAiBC,EA/FlC,GAiGf,CAEAc,eAAAA,CAAgBf,EAAiBC,GAC/B,OAAO7V,GAAUp5D,KAAK4kE,QAASoK,EAAiBC,EAnGnC,EAoGf,CAEAe,kBAAAA,CAAmBhB,EAAiBC,GAClC,OAAO7V,GAAUp5D,KAAKklE,OAAQ8J,EAAiBC,EAAe,EAChE,CAEAgB,sBAAAA,GACE,OA9GuB,CA+GzB,CAEAC,eAAAA,GACE,OAjHa,CAkHf,CAEAC,WAAAA,CAAYnB,EAAiBlF,GAC3B,MAAMsG,EAtHiB,EAsHNpB,EArHJ,EAsHb,GAAIlF,aAAqBlgE,OAA8B,IAArBkgE,EAAUtpE,OAAc,CACxDR,KAAKimE,WAAWt/D,IAAImjE,EAAU,GAAIsG,GAClC,MAAMC,EAzHe,EAyHJrB,EAvHN,EAwHXhvE,KAAK0vE,YAAY/oE,IAAImjE,EAAU,GAAIuG,EACrC,MACErwE,KAAKimE,WAAWt/D,IAAImjE,EAAWsG,EAEnC,CAEAE,SAAAA,CAAUtB,EAAiBtJ,GACzB,MAAMx+C,EAjIiB,EAiIT8nD,EA9HD,EA+HbhvE,KAAK4kE,QAAQj+D,IAAI++D,EAAQx+C,EAC3B,CAEAkoD,aAAAA,CAAcH,GACZjvE,KAAKuwE,aAtIkB,EAsIHtB,EACpB,MAAMnI,EAAc9mE,KAAKuwE,aACnBxJ,EAAgBD,EAzIJ,MA0IlB9mE,KAAKooB,OAAS/hB,EAAMmpB,cAAcu3C,EAAgBE,YAAcC,YAA6B,EAAhB+H,GAC7EjvE,KAAKimE,WAAa5/D,EAAMmpB,cAActV,aAzIzB,EAyIuC4sD,GACpD9mE,KAAK4kE,QAAUv+D,EAAMmpB,cAActV,aAxItB,EAwIoC4sD,GACjD9mE,KAAK0vE,YAAcrpE,EAAMmpB,cAActV,aA1I1B,EA0IwC4sD,GACrD,MAAMzB,EAAQrlE,KAAKklE,OAAS7+D,EAAMmpB,cAActV,aAAc4sD,GAC9Dh9D,IAAAA,KAAOu7D,EAAO,GAEd,MAAMj1D,EAAQpQ,KAAKooB,OACnB,IAAIooD,EAAc,EACdC,EAAc,EAClB,IAAK,IAAI/0D,EAAI,EAAGA,EAAIuzD,EAAevzD,IAAK80D,GAAe,EAAGC,GAnJnC,EAoJrBrgE,EAAMogE,GAAeC,EACrBrgE,EAAMogE,EAAc,GAAKC,EAAc,EACvCrgE,EAAMogE,EAAc,GAAKC,EAAc,EACvCrgE,EAAMogE,EAAc,GAAKC,EACzBrgE,EAAMogE,EAAc,GAAKC,EAAc,EACvCrgE,EAAMogE,EAAc,GAAKC,EAAc,EAEzCzwE,KAAKonE,SAAS,IAAI17B,EAAAA,gBAAsB1rC,KAAKooB,OAAQ,IAErDpoB,KAAK2kB,aAAa,WAAY,IAAI+mB,EAAAA,gBAAsB1rC,KAAKimE,WA5JhD,IA6JbjmE,KAAK2kB,aAAa,QAAS,IAAI+mB,EAAAA,gBAAsB1rC,KAAK4kE,QA3J7C,IA4Jb5kE,KAAK2kB,aAAa,aAAc,IAAI+mB,EAAAA,gBAAsB25B,EAAO,IACjErlE,KAAK2kB,aAAa,YAAa,IAAI+mB,EAAAA,gBAAsB1rC,KAAK0vE,YA9JjD,GA+Jf,EAGF,YChHA,SAhDA,cAA4BgB,GAC1B7L,WAAAA,GACE,OAAO,CACT,CAEAjB,qBAAAA,GACE,MAAM,YAAEltB,GAAgB12C,KAExB,IAAIk3C,EAAgB,EACpB,MAAMtuC,EAAS,IAAI8iC,EAAAA,QACfgL,GACFA,EAAYM,UAAUpuC,GAExB,MAAMkhE,EAAY9pE,KAAKimE,WACjB/C,EAASljE,KAAK22C,gBAAkB,IAAIjL,EAAAA,OACpChc,EAAO1vB,KAAKimE,WAAWzlE,OACvB22C,EAAM,IAAIzL,EAAAA,QACVilC,EAAU3wE,KAAKkwE,kBACrB,IAAK,IAAI5nE,EAAI,EAAGA,EAAIonB,EAAMpnB,GAAKqoE,EAAS,CACtCx5B,EAAIxwC,IAAImjE,EAAUxhE,GAAIwhE,EAAUxhE,EAAI,GAAIwhE,EAAUxhE,EAAI,IACtD,MAAM8uC,EAAgBxuC,EAAOyuC,kBAAkBF,GAC3CD,EAAgBE,IAClBF,EAAgBE,EAEpB,CACA8rB,EAAOv8D,IAAIiC,EAAQH,KAAK6uC,KAAKJ,IAC7Bl3C,KAAK22C,eAAiBusB,CACxB,CAEAS,kBAAAA,GACE,MAAMmG,EAAY9pE,KAAKimE,WACjBpjB,EAAM,IAAInX,EAAAA,KACVhc,EAAO1vB,KAAKimE,WAAWzlE,OACvB2lC,EAAS,IAAIuF,EAAAA,QACbilC,EAAU3wE,KAAKkwE,kBACrB,IAAK,IAAI5nE,EAAI,EAAGA,EAAIonB,EAAMpnB,GAAKqoE,EAC7BxqC,EAAOx/B,IAAImjE,EAAUxhE,GAAIwhE,EAAUxhE,EAAI,GAAIwhE,EAAUxhE,EAAI,IACzDu6C,EAAI/L,cAAc3Q,GAEpBnmC,KAAK02C,YAAcmM,CACrB,CAEAnL,QAAAA,GACE13C,KAAK8kE,eACL9kE,KAAK4jE,uBACP,GChDImE,GAAY,IAAIr8B,EAAAA,QAChBs8B,GAAU,IAAIt8B,EAAAA,QAyCpB,SAvCA,cAAmC45B,GACjChyD,WAAAA,CAAY8qD,EAAelqC,GAEzBxH,MADoB,IAAIgf,EAAAA,iBAAuB,EAAG,EAAG,EAAKjjC,KAAKgM,IAAI,EAAGyf,GAAiB,GAAG,GACvEkqC,GAEnB,MAAMuH,EAAY3lE,KAAK4lE,WACvB5lE,KAAK0nE,UAAY1nE,KAAKylE,UAAUkB,WAAWxiD,SAASvP,MACpD5U,KAAKioE,YAAcjoE,KAAKylE,UAAUkB,WAAWc,OAAO7yD,MACpD5U,KAAKkoE,WAAa7hE,EAAMmpB,cAActV,aAZzB,EAYuCyrD,EACtD,CAEAtB,OAAAA,CAAQC,EAAS6D,EAAQC,EAAQ5D,GAC/B,MAAMmB,EAAY3lE,KAAK4lE,WACjBgL,EAAajL,EAAYrB,EAjBlB,EAmBPiE,EAAWvoE,KAAKkoE,WAChBL,EAAS7nE,KAAK0nE,UACdc,EAAUxoE,KAAKioE,YAEfS,EAAO9G,GAASvD,mBAAmB8J,EAAQC,EAAQ5D,GAEzD,IAAIl+C,EADJ0hD,GAAQW,gBAAgBD,GAExB,IAAK,IAAIpgE,EAAI,EAAGA,EAAIq9D,IAAar9D,EAC/Bge,EA3BW,EA2BLhe,EACNy/D,GAAUa,UAAUf,EAAQvhD,GAC5ByhD,GAAU/vB,aAAa0wB,GACvBX,GAAUc,QAAQN,EAAUjiD,GAE9BtmB,KAAKimE,WAAWt/D,IAAI4hE,EAAUqI,GAE9B,IAAK,IAAItoE,EAAI,EAAGA,EAAIq9D,IAAar9D,EAC/Bge,EAnCW,EAmCLhe,EACNy/D,GAAUa,UAAUJ,EAASliD,GAC7ByhD,GAAUe,aAAad,IACvBD,GAAUc,QAAQN,EAAUjiD,GAE9BtmB,KAAKmmE,SAASx/D,IAAI4hE,EAAUqI,EAC9B,GC7BF,MAAMC,WAA6BC,GACjCx9D,WAAAA,CAAYkyD,EAAayJ,EAAe8B,GACtCrkD,MAAM84C,EAAcyJ,GACpBjvE,KAAKokE,MAAM6K,GACXjvE,KAAK6rE,cAAgBkF,EAAkB,IAAIC,GAAqBxL,EAAcyJ,EAAe,GAAK,IACpG,CAEApK,WAAAA,GACE,OAAO,CACT,CAEAjB,qBAAAA,GACE,MAAMqN,EAAejxE,KAAK6rE,cAC1B,GAAIoF,EAGF,OAFAA,EAAarN,6BACb5jE,KAAK22C,eAAiBs6B,EAAat6B,gBAGrCjqB,MAAMk3C,uBACR,CAEAD,kBAAAA,GACE,MAAMsN,EAAejxE,KAAK6rE,cAC1B,GAAIoF,EAGF,OAFAA,EAAatN,0BACb3jE,KAAK02C,YAAcu6B,EAAav6B,aAGlChqB,MAAMi3C,oBACR,CAEAhL,OAAAA,CAAQC,EAAWC,GAEjB,IADqB74D,KAAK6rE,cAExB,OAEF,MAAMqF,EAAWlxE,KAAK4lE,WACtB5lE,KAAK6rE,cAAclT,QAAQC,EAAWC,GACtC,IAAK,IAAIvwD,EAAI,EAAGC,EAAIswD,EAAWr4D,OAAQ8H,EAAIC,IAAKD,EAAG,CACjD,IAAI,SAAEo7D,GAAa7K,EAAWvwD,QACbsa,IAAb8gD,IAGJA,EAAYA,EAAWwN,EAAY,EACnCrY,EAAWvwD,GAAGo7D,SAAWA,EAC3B,CACF,CAEAgB,QAAAA,CAAShB,EAAUiB,GACjB,MAAMgB,EAAY3lE,KAAK4lE,WACvB,IAAK,IAAIt9D,EAAIo7D,EAAWiC,EAAWngD,EAAMld,EAAIq9D,EAAWr9D,EAAIkd,IAAOld,EACjEokB,MAAMg4C,SAASp8D,EAAGq8D,EAEtB,CAEA2K,UAAAA,CAAW5L,EAAUyN,EAAQ5B,EAAMC,GACjC,MAAM7J,EAAY3lE,KAAK4lE,WACjBt/C,EAAMo9C,EAAWiC,EAAYwL,EACnCzkD,MAAM4iD,WAAWhpD,EAAKipD,EAAMC,GACxBxvE,KAAK6rE,eACP7rE,KAAK6rE,cAAcxH,QAAQX,EAAWiC,EAAYwL,EAAQ5B,EAAMC,EA1EhD,GA4EpB,CAEA93B,QAAAA,GACE13C,KAAK8kE,eACL9kE,KAAK4jE,uBACP,CAEAmB,UAAAA,CAAWC,EAAc/7C,GACvB,MAAM08C,EAAY3lE,KAAK4lE,WACvB,IAAK,IAAIt9D,EAAI,EAAGC,EAAIy8D,EAAaxkE,OAAQ8H,EAAIC,IAAKD,EAAG,CACnD,MAAM2b,EAAO+gD,EAAa18D,GAAKq9D,EAC/Bj5C,MAAMq4C,WAAW9gD,EAAMA,EAAO0hD,EAAY,EAAG18C,EAC/C,CACF,CAEAmwC,SAAAA,CAAU4L,GACR,MAAM5G,EAAgB4G,EAAaxkE,OAC7BmlE,EAAY3lE,KAAK4lE,WACjB3wC,EAAS,IAAI47C,GAAqBzS,EAAeuH,GAAW,GAClE,IAAK,IAAIr9D,EAAI,EAAGC,EAAIy8D,EAAaxkE,OAAQ8H,EAAIC,IAAKD,EAAG,CACnD,MAAMk+D,EAAcl+D,EAAIq9D,EAClBiK,EAAc5K,EAAa18D,GAAKq9D,EACtC1wC,EAAOk7C,YAAY3J,EAAaxmE,KAAK8vE,kBAAkBF,EAAajK,IACpE1wC,EAAOq7C,UAAU9J,EAAaxmE,KAAK+vE,gBAAgBH,EAAajK,GAClE,CAIA,OAFA1wC,EAAO0hB,eAAiB32C,KAAK22C,eAC7B1hB,EAAOyhB,YAAc12C,KAAK02C,YACnB,CAACzhB,EACV,CAEAmvC,KAAAA,CAAMuB,GACJ3lE,KAAK4lE,WAAaD,CACpB,EAGF,YC9GMoC,GAAY,IAAIr8B,EAAAA,QAEtB,MAAM0lC,WAA8BN,GAClCx9D,WAAAA,CAAY27D,GACVviD,MAAsB,EAAhBuiD,GACNjvE,KAAKokE,MAAM6K,GACXjvE,KAAK6rE,cAAgB,IAAIC,GAA0BmD,EAAe,EACpE,CAEA5K,OAAAA,CAAQC,EAAS6D,EAAQC,GACvBpoE,KAAK6rE,cAAcxH,QAAQC,EAAS6D,EAAQC,EAX1B,IAYlB,MAAMv5D,EAAS,EAAIy1D,EACnByD,GAAUU,YAAYN,EAAQC,EAAQ,IACtC17C,MAAM4iD,WAAWzgE,EAAQs5D,EAAQJ,IACjCr7C,MAAM4iD,WAAWzgE,EAAS,EAAGk5D,GAAWK,EAC1C,CAEA1D,QAAAA,CAASJ,EAASyE,EAAWC,GAC3B,MAAMn6D,EAAS,EAAIy1D,EACnB53C,MAAMg4C,SAAS71D,EAAQk6D,GACvBr8C,MAAMg4C,SAAS71D,EAAS,EAAGm6D,EAC7B,CAEArQ,OAAAA,CAAQC,EAAWC,GACb74D,KAAK6rE,eACP7rE,KAAK6rE,cAAclT,QAAQC,EAAWC,EAE1C,CAEAO,SAAAA,CAAUiY,GACR,MAAMjT,EAAgBiT,EAAe7wE,OAC/By0B,EAAS,IAAIm8C,GAAsBhT,GAAe,GACxD,IAAK,IAAI91D,EAAI,EAAGC,EAAI61D,EAAe91D,EAAIC,IAAKD,EAAG,CAC7C,MAAMsnE,EAAcyB,EAAe/oE,GACnC2sB,EAAOk7C,YAAY7nE,EAAGtI,KAAK8vE,kBAAkBF,EAAa,IAC1D36C,EAAOq7C,UAAUhoE,EAAGtI,KAAK+vE,gBAAgBH,EAAa,GACxD,CAIA,OAFA36C,EAAO0hB,eAAiB32C,KAAK22C,eAC7B1hB,EAAOyhB,YAAc12C,KAAK02C,YACnB,CAACzhB,EACV,CAEAmvC,KAAAA,CAAM6K,GACJjvE,KAAKsxE,WAA6B,EAAhBrC,CACpB,EAIF,YClDMsC,GAAU,CACd,IAAI7lC,EAAAA,QAAc,EAAG,EAAG,GACxB,IAAIA,EAAAA,SAAe,EAAG,EAAG,GACzB,IAAIA,EAAAA,QAAc,EAAG,EAAG,GACxB,IAAIA,EAAAA,QAAc,GAAI,EAAG,GACzB,IAAIA,EAAAA,QAAc,EAAG,EAAG,GACxB,IAAIA,EAAAA,QAAc,EAAG,GAAI,IAErB8lC,GAAWD,GAAQ/wE,OACnBixE,GAAW,IAAI/lC,EAAAA,QACfgmC,GAAW,IAAIhmC,EAAAA,QAErB,MAAMimC,WAAsB5N,GAAmB8M,KAC7Cv9D,WAAAA,CAAYkyD,GACV94C,MAAM84C,EAAaA,EAAcgM,GAAW,EAAK,GAAG,EACtD,CAEAnN,OAAAA,CAAQC,EAASC,EAASC,GACxBxkE,KAAKwjE,UAAUc,EAASC,EAASC,GAEjC,IAAK,IAAIl8D,EAAI,EAAGA,EAAIkpE,GAAW,IAAKlpE,EAAG,CACrC,MAAMwqB,EAAY,EAAJxqB,EACdmpE,GAASv7D,EAAIquD,EAAQruD,EAAIq7D,GAAQz+C,GAAO5c,EAAIsuD,EAC5CiN,GAASh3D,EAAI8pD,EAAQ9pD,EAAI82D,GAAQz+C,GAAOrY,EAAI+pD,EAC5CiN,GAAS31D,EAAIyoD,EAAQzoD,EAAIy1D,GAAQz+C,GAAOhX,EAAI0oD,EAC5C,MAAMzxC,EAASD,EAAQ,EACvB4+C,GAASx7D,EAAIquD,EAAQruD,EAAIq7D,GAAQx+C,GAAQ7c,EAAIsuD,EAC7CkN,GAASj3D,EAAI8pD,EAAQ9pD,EAAI82D,GAAQx+C,GAAQtY,EAAI+pD,EAC7CkN,GAAS51D,EAAIyoD,EAAQzoD,EAAIy1D,GAAQx+C,GAAQjX,EAAI0oD,EAC7CxkE,KAAKsvE,WAAWhL,EAASh8D,EAAGmpE,GAAUC,GACxC,CACF,EAEF,YChCM7N,GAAW,IAAIn4B,EAAAA,MAQrB,MAAMkmC,WAA2BlmC,EAAAA,eAC/Bp4B,WAAAA,CAAY0wD,EAAch7D,GACxB0jB,QAEA1sB,KAAK6xE,MAAQ7oE,EACbhJ,KAAK+0B,MAAQ/0B,KAAK6xE,MAAM98C,MACxB/0B,KAAK8xE,QAAUzrE,EAAMmpB,cAActV,aAhBlB,EAgBgC8pD,GACjDhkE,KAAK4kE,QAAUv+D,EAAMmpB,cAActV,aAhBpB,EAgBkC8pD,EACnD,CAEAK,OAAAA,CAAQX,EAAUvsB,EAAK5zB,GACrB,MAAMwuD,EAAS/xE,KAAK8xE,QACpB,IAAIxrD,EAtBa,EAsBQo9C,EACzBqO,EAAOzrD,KAAS6wB,EAAIjhC,EACpB67D,EAAOzrD,KAAS6wB,EAAI18B,EACpBs3D,EAAOzrD,KAAS6wB,EAAIr7B,EACpBi2D,EAAOzrD,GAAO/C,CAChB,CAEAmhD,QAAAA,CAAShB,EAAUiB,GACjBd,GAASl9D,IAAIg+D,GACb,MAAMe,EAAS1lE,KAAK4kE,QACpB,IAAIt+C,EA/BW,EA+BQo9C,EACvBgC,EAAOp/C,KAASu9C,GAAS72D,EACzB04D,EAAOp/C,KAASu9C,GAASzpD,EACzBsrD,EAAOp/C,GAAOu9C,GAASlpD,CACzB,CAEA+8B,QAAAA,GACE13C,KAAK8kE,eACL9kE,KAAK4jE,uBACP,CAEAkB,YAAAA,GACE9kE,KAAKsmD,QACP,CAEAye,UAAAA,GACE,CAGFpM,OAAAA,GACA,CAEAS,SAAAA,GACE,MAAO,EACT,EAEF,YCpDA,MAAM4Y,GACJ1+D,WAAAA,GACEtT,KAAKiyE,mBAAqB,KAC1BjyE,KAAKkyE,gBAAkB,KACvBlyE,KAAKmyE,WAAa,IACpB,CAEA/nE,MAAAA,CAAOgoE,GACL,MACMC,EAAKD,EAAkBA,EAAkBA,EAC/C,GAAIC,EAFc,UAGhB,MAAM,IAAIhnE,MAAM,uDAKlB,OAHArL,KAAKiyE,mBAAqB5rE,EAAMmpB,cAActV,aAAc,GAAiBm4D,GAC7EryE,KAAKkyE,gBAAkB7rE,EAAMmpB,cAAcvV,WAAYo4D,GACvDryE,KAAKmyE,WAAa9rE,EAAMmpB,cAAcvV,WAAYo4D,GAC3C,CACT,CAEA53B,OAAAA,GACEz6C,KAAKmyE,WAAa,KAClBnyE,KAAKkyE,gBAAkB,KACvBlyE,KAAKiyE,mBAAqB,IAC5B,EAIFD,GAAoB7lE,UAAUmmE,qBAAuB,EAClD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC7D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAClD,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1D,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC9C,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAC/C,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAChD,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,EACpD,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACnD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAC9C,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EACjD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAC/C,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC3D,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACzD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACxD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAClD,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACtD,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACvD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACjD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EACpD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAClD,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,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AAE,GACFvrI,MAAK,GACL0D,SAAQ,GACRgI,UAAS,GACT63E,SAAQ,GACRvqG,QAAO,GACPrD,SAAQ,EACRhD,MAAK,EACLooJ,IAAK,CACH1vC,eAAcA,IAehBwpD,WAAY,CACVC,OAAQ1+J,IACR2+J,MAAO/8H,KAIX,Y,aCnqIA,MAAMg9H,GAAa,CACjBC,MAAO,CACL,0BACA,iCACA,sBACA,yBACA,8BACA,sBACA,qBACA,wBACA,2BACA,8BACA,iCACA,sBAEFh1I,GAAI,CACFg1I,MAAO,CACL,sBACA,4CACA,wCACA,wCACA,0CACA,0CACA,4CAGJ7yI,GAAI,CACF6yI,MAAO,CACL,aACA,uCACA,6CACA,uCACA,wCACA,6BACA,+CAGJl0I,GAAI,CACFk0I,MAAO,CACL,WACA,wCACA,6BACA,0CACA,0CACA,gCAGJ9zI,GAAI,CACF8zI,MAAO,CACL,cACA,4CACA,wCACA,0CACA,0CACA,4CAGJn0I,GAAI,CACFm0I,MAAO,CACL,mBACA,oBAGJjzI,GAAI,CACFizI,MAAO,CACL,WACA,4CAGJhzI,GAAI,CACFgzI,MAAO,CACL,UACA,uCACA,wCACA,gCAGJ7zI,GAAI,CACF6zI,MAAO,CACL,aACA,yCAGJvzI,GAAI,CACFuzI,MAAO,CACL,mBACA,4BACA,yBACA,2BACA,yCAGJxzI,GAAI,CACFwzI,MAAO,CACL,8BACA,yCAGJvyI,GAAI,CACFuyI,MAAO,CACL,eACA,sEACA,iEACA,0EACA,+DACA,6DACA,sCACA,sCACA,sCACA,8CACA,kDACA,8CACA,kDACA,gDACA,iCAKAC,GAAY,CAChBD,MAAO,CACL,yBACA,4BACA,0BACA,6BACA,iCACA,wCACA,oBAEFpxI,GAAI,CACFoxI,MAAO,CACL,6CACA,aACA,iDAEFllJ,MAAO,CACLklJ,MAAOx+J,OAAOyP,KAAKq9F,GAASvwG,IAAI2C,EAAS8d,IAAI0R,SAAS23E,aAAa53F,OAAOjL,KAAK,SAK/Ek7J,GAAe,CACnBF,MAAO,CACL,oBACA,mBACA,uBACA,wBACA,0BACA,iBACA,mBAIEG,GAAa,CACjBH,MAAO,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","sources":["webpack://Miew/webpack/universalModuleDefinition","webpack://Miew/./src/utils/MiewCLIParser.js","webpack://Miew/./src/utils/SelectionParser.js","webpack://Miew/./vendor/js/Smooth.js","webpack://Miew/./vendor/js/mmtf.js","webpack://Miew/external umd {\"module\":\"lodash\",\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}","webpack://Miew/external umd {\"module\":\"three\",\"commonjs\":\"three\",\"commonjs2\":\"three\",\"amd\":\"three\",\"root\":\"THREE\"}","webpack://Miew/webpack/bootstrap","webpack://Miew/webpack/runtime/compat get default export","webpack://Miew/webpack/runtime/define property getters","webpack://Miew/webpack/runtime/hasOwnProperty shorthand","webpack://Miew/../../node_modules/spin.js/spin.js","webpack://Miew/./src/Timer.js","webpack://Miew/./src/gfx/Stats.js","webpack://Miew/./src/utils/EventDispatcher.js","webpack://Miew/./src/utils/logger.js","webpack://Miew/./src/utils.js","webpack://Miew/./src/utils/JobHandle.js","webpack://Miew/./src/settings.js","webpack://Miew/./src/options.js","webpack://Miew/./src/chem/Atom.js","webpack://Miew/./src/chem/Element.js","webpack://Miew/./src/chem/Bond.js","webpack://Miew/./src/chem/Residue.js","webpack://Miew/./src/chem/ResidueType.js","webpack://Miew/./src/chem/Chain.js","webpack://Miew/./src/chem/StructuralElement.js","webpack://Miew/./src/chem/Helix.js","webpack://Miew/./src/chem/Strand.js","webpack://Miew/./src/chem/Sheet.js","webpack://Miew/./src/chem/SGroup.js","webpack://Miew/./src/chem/selectors/selectArgs.js","webpack://Miew/./src/chem/selectors/selectorsBase.js","webpack://Miew/./src/chem/selectors/selectOps.js","webpack://Miew/./src/chem/selectors.js","webpack://Miew/./src/chem/BiologicalUnit.js","webpack://Miew/./src/chem/Assembly.js","webpack://Miew/./src/chem/Component.js","webpack://Miew/./src/chem/AtomPairs.js","webpack://Miew/./src/chem/AutoBond.js","webpack://Miew/./src/chem/AromaticLoopsMarker.js","webpack://Miew/./src/chem/VoxelWorld.js","webpack://Miew/./src/chem/HBondInfo.js","webpack://Miew/./src/chem/SecondaryStructureMap.js","webpack://Miew/./src/chem/Complex.js","webpack://Miew/./src/chem/Volume.js","webpack://Miew/./src/chem/Molecule.js","webpack://Miew/./src/chem.js","webpack://Miew/./src/gfx/CSS2DObject.js","webpack://Miew/./src/gfx/RCGroup.js","webpack://Miew/./src/gfx/gfxutils.js","webpack://Miew/./src/Visual.js","webpack://Miew/./src/utils/EntityList.js","webpack://Miew/./src/utils/makeContextDependent.js","webpack://Miew/./src/gfx/geometries/SphereCollisionGeo.js","webpack://Miew/./src/gfx/geometries/InstancedSpheresGeometry.js","webpack://Miew/./src/gfx/geometries/ChunkedObjectsGeometry.js","webpack://Miew/./src/gfx/geometries/SimpleSpheresGeometry.js","webpack://Miew/./src/gfx/geometries/Simple2CCylindersGeometry.js","webpack://Miew/./src/gfx/geometries/CylinderBufferGeometry.js","webpack://Miew/./src/gfx/geometries/Instanced2CCylindersGeometry.js","webpack://Miew/./src/gfx/geometries/ExtrudedObjectsGeometry.js","webpack://Miew/./src/gfx/geometries/ThickLinesGeometry.js","webpack://Miew/./src/gfx/geometries/LinesGeometry.js","webpack://Miew/./src/gfx/geometries/CylinderCollisionGeo.js","webpack://Miew/./src/gfx/geometries/ChunkedLinesGeometry.js","webpack://Miew/./src/gfx/geometries/TwoColorLinesGeometry.js","webpack://Miew/./src/gfx/geometries/CrossGeometry.js","webpack://Miew/./src/gfx/geometries/IsoSurfaceGeometry.js","webpack://Miew/./src/gfx/geometries/IsoSurfaceMarchCube.js","webpack://Miew/./src/gfx/geometries/IsoSurface.js","webpack://Miew/./src/gfx/geometries/VolumeSurfaceGeometry.js","webpack://Miew/./src/gfx/geometries/QuickSurfGeometry.js","webpack://Miew/./src/gfx/geometries/ContactSurface.js","webpack://Miew/./src/gfx/geometries/ContactSurfaceGeometry.js","webpack://Miew/./src/gfx/geometries/IsoSurfaceAtomColored.js","webpack://Miew/./src/gfx/geometries/IsosurfaceBuildNormals.js","webpack://Miew/./src/gfx/geometries/IsoSurfaceGeo.js","webpack://Miew/./src/gfx/geometries/SSIsosurfaceGeometry.js","webpack://Miew/./src/gfx/geometries/LabelsGeometry.js","webpack://Miew/./src/gfx/geometries/geometries.js","webpack://Miew/./src/gfx/capabilities.js","webpack://Miew/./src/gfx/noiseTexture.js","webpack://Miew/./src/gfx/shaders/UberMaterial.js","webpack://Miew/./src/gfx/meshes/UberObject.js","webpack://Miew/./src/gfx/meshes/ZSpriteMesh.js","webpack://Miew/./src/gfx/meshes/ZClippedMesh.js","webpack://Miew/./src/gfx/meshes/TextMesh.js","webpack://Miew/./src/gfx/meshes/SimpleMesh.js","webpack://Miew/./src/gfx/meshes/ThickLineMesh.js","webpack://Miew/./src/gfx/meshes/InstancedMesh.js","webpack://Miew/./src/gfx/meshes/meshes.js","webpack://Miew/./src/gfx/meshes/MeshCreator.js","webpack://Miew/./src/gfx/meshes/TransformGroup.js","webpack://Miew/./src/gfx/modes/groups/ChemGroup.js","webpack://Miew/./src/gfx/modes/groups/AtomsGroup.js","webpack://Miew/./src/gfx/modes/groups/AtomsSphereGroup.js","webpack://Miew/./src/gfx/modes/groups/AtomsSurfaceGroup.js","webpack://Miew/./src/gfx/modes/groups/AtomsSASSESGroupStub.js","webpack://Miew/./src/gfx/modes/groups/AtomsTextGroup.js","webpack://Miew/./src/gfx/modes/groups/AromaticGroup.js","webpack://Miew/./src/gfx/modes/groups/AromaticTorusGroup.js","webpack://Miew/./src/gfx/modes/groups/AromaticLinesGroup.js","webpack://Miew/./src/gfx/modes/groups/ResiduesGroup.js","webpack://Miew/./src/gfx/modes/groups/NucleicItemGroup.js","webpack://Miew/./src/gfx/modes/groups/NucleicCylindersGroup.js","webpack://Miew/./src/gfx/modes/groups/NucleicSpheresGroup.js","webpack://Miew/./src/gfx/modes/groups/CartoonHelper.js","webpack://Miew/./src/gfx/modes/groups/ResiduesSubseqGroup.js","webpack://Miew/./src/gfx/modes/groups/ResiduesTraceGroup.js","webpack://Miew/./src/gfx/modes/groups/BondsGroup.js","webpack://Miew/./src/gfx/modes/groups/BondsCylinderGroup.js","webpack://Miew/./src/gfx/modes/groups/BondsLinesGroup.js","webpack://Miew/./src/gfx/modes/groups/groups.js","webpack://Miew/./src/gfx/modes/processors/AtomsProcessor.js","webpack://Miew/./src/gfx/modes/processors/OrphanAtomsProcessor.js","webpack://Miew/./src/gfx/modes/processors/ResiduesProcessor.js","webpack://Miew/./src/gfx/modes/processors/NucleicProcessor.js","webpack://Miew/./src/gfx/modes/processors/SubseqsProcessor.js","webpack://Miew/./src/gfx/modes/processors/BondsProcessor.js","webpack://Miew/./src/gfx/modes/processors/AromaticProcessor.js","webpack://Miew/./src/gfx/modes/processors/processors.js","webpack://Miew/./src/gfx/modes/groups/GroupsFactory.js","webpack://Miew/./src/gfx/modes/Mode.js","webpack://Miew/./src/gfx/modes/LinesMode.js","webpack://Miew/./src/gfx/modes/LicoriceMode.js","webpack://Miew/./src/gfx/modes/BallsAndSticksMode.js","webpack://Miew/./src/gfx/modes/VanDerWaalsMode.js","webpack://Miew/./src/gfx/modes/TraceMode.js","webpack://Miew/./src/gfx/modes/TubeMode.js","webpack://Miew/./src/gfx/modes/CartoonMode.js","webpack://Miew/./src/gfx/modes/SurfaceMode.js","webpack://Miew/./src/gfx/modes/QuickSurfaceMode.js","webpack://Miew/./src/gfx/modes/IsoSurfaceMode.js","webpack://Miew/./src/gfx/modes/IsoSurfaceSASMode.js","webpack://Miew/./src/gfx/modes/IsoSurfaceSESMode.js","webpack://Miew/./src/gfx/modes/ContactSurfaceMode.js","webpack://Miew/./src/gfx/modes/TextMode.js","webpack://Miew/./src/gfx/modes.js","webpack://Miew/./src/gfx/palettes/Palette.js","webpack://Miew/./src/gfx/palettes/cpkPalette.js","webpack://Miew/./src/gfx/palettes/jmolPalette.js","webpack://Miew/./src/gfx/palettes/vmdPalette.js","webpack://Miew/./src/gfx/palettes.js","webpack://Miew/./src/gfx/colorers/Colorer.js","webpack://Miew/./src/gfx/colorers/ElementColorer.js","webpack://Miew/./src/gfx/colorers/ResidueTypeColorer.js","webpack://Miew/./src/gfx/colorers/SequenceColorer.js","webpack://Miew/./src/gfx/colorers/ChainColorer.js","webpack://Miew/./src/gfx/colorers/SecondaryStructureColorer.js","webpack://Miew/./src/gfx/colorers/UniformColorer.js","webpack://Miew/./src/gfx/colorers/ConditionalColorer.js","webpack://Miew/./src/gfx/colorers/ConformationColorer.js","webpack://Miew/./src/gfx/colorers/TemperatureColorer.js","webpack://Miew/./src/gfx/colorers/OccupancyColorer.js","webpack://Miew/./src/gfx/colorers/HydrophobicityColorer.js","webpack://Miew/./src/gfx/colorers/MoleculeColorer.js","webpack://Miew/./src/gfx/colorers/CarbonColorer.js","webpack://Miew/./src/gfx/colorers.js","webpack://Miew/./src/gfx/materials.js","webpack://Miew/./src/gfx/meshutils.js","webpack://Miew/./src/gfx/Representation.js","webpack://Miew/./src/ComplexVisualEdit.js","webpack://Miew/./src/ComplexVisual.js","webpack://Miew/./src/gfx/shaders/VolumeMaterial.js","webpack://Miew/./src/gfx/VolumeMesh.js","webpack://Miew/./src/gfx/VolumeBounds.js","webpack://Miew/./src/gfx/VolumeFarPlane.js","webpack://Miew/./src/VolumeVisual.js","webpack://Miew/./src/io/loaders/LoaderList.js","webpack://Miew/./src/io/loaders/Loader.js","webpack://Miew/./src/io/loaders/FileLoader.js","webpack://Miew/./src/io/loaders/XHRLoader.js","webpack://Miew/./src/io/loaders/ImmediateLoader.js","webpack://Miew/./src/io/loaders.js","webpack://Miew/./src/io/parsers/ParserList.js","webpack://Miew/./src/io/parsers/Parser.js","webpack://Miew/./src/io/parsers/pdb/Remark290.js","webpack://Miew/./src/io/parsers/pdb/Remark350.js","webpack://Miew/./src/io/parsers/PDBStream.js","webpack://Miew/./src/io/parsers/PDBParser.js","webpack://Miew/./src/io/parsers/CMLParser.js","webpack://Miew/./src/io/parsers/MMTFParser.js","webpack://Miew/./src/io/parsers/ParsingError.js","webpack://Miew/./src/io/parsers/readCIF.js","webpack://Miew/./src/io/parsers/CIFParser.js","webpack://Miew/./src/io/parsers/VolumeModel.js","webpack://Miew/./src/io/parsers/CCP4Parser.js","webpack://Miew/./src/io/parsers/XYZParser.js","webpack://Miew/./src/io/parsers/PubChemParser.js","webpack://Miew/./src/io/parsers/SDFStream.js","webpack://Miew/./src/io/parsers/SDFParser.js","webpack://Miew/./src/io/parsers/DSN6Parser.js","webpack://Miew/./src/io/parsers/GROReader.js","webpack://Miew/./src/io/parsers/GROParser.js","webpack://Miew/./src/io/parsers/MOL2Parser.js","webpack://Miew/./src/io/parsers.js","webpack://Miew/./src/io/exporters/ExporterList.js","webpack://Miew/./src/io/exporters/Exporter.js","webpack://Miew/./src/io/exporters/PDBResult.js","webpack://Miew/./src/io/exporters/PDBExporter.js","webpack://Miew/./src/io/exporters/fbx/FBXModel.js","webpack://Miew/./src/io/exporters/fbx/FBXGeometry.js","webpack://Miew/./src/io/exporters/fbx/FBX1CGeometry.js","webpack://Miew/./src/io/exporters/fbx/FBX2CCylinder.js","webpack://Miew/./src/io/exporters/fbx/FBXInfoExtractor.js","webpack://Miew/./src/io/exporters/fbx/FBXResult.js","webpack://Miew/./src/io/exporters/FBXExporter.js","webpack://Miew/./src/io/exporters.js","webpack://Miew/./src/io/io.js","webpack://Miew/./src/gfx/CSS2DRenderer.js","webpack://Miew/./src/utils/getTopWindow.js","webpack://Miew/./src/ui/ObjectControls.js","webpack://Miew/./src/ui/Picker.js","webpack://Miew/./src/gfx/Axes.js","webpack://Miew/./src/gfx/FrameInfo.js","webpack://Miew/./src/gfx/objects/SceneObject.js","webpack://Miew/./src/gfx/objects/LinesObj.js","webpack://Miew/./src/gfx/shaders/OutlineMaterial.js","webpack://Miew/./src/gfx/shaders/FXAAMaterial.js","webpack://Miew/./src/gfx/shaders/AOMaterial.js","webpack://Miew/./src/gfx/shaders/AOHorBlurMaterial.js","webpack://Miew/./src/gfx/shaders/AOVertBlurWithBlendMaterial.js","webpack://Miew/./src/gfx/shaders/AnaglyphMaterial.js","webpack://Miew/./src/gfx/ViewInterpolator.js","webpack://Miew/./src/utils/Cookies.js","webpack://Miew/./src/gfx/vr/createWebVRButton.js","webpack://Miew/./src/gfx/vr/WebVRPoC.js","webpack://Miew/./src/Miew.js","webpack://Miew/./src/utils/MiewCLIHelp.js","webpack://Miew/./src/Miew-cli.js","webpack://Miew/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"three\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"lodash\", \"three\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Miew\"] = factory(require(\"lodash\"), require(\"three\"));\n\telse\n\t\troot[\"Miew\"] = factory(root[\"_\"], root[\"THREE\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__535__, __WEBPACK_EXTERNAL_MODULE__698__) => {\nreturn ","/* eslint-disable */\r\n// DO NOT EDIT! Automatically generated from .jison\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar parser = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,60],$V1=[1,62],$V2=[1,63],$V3=[1,65],$V4=[1,66],$V5=[1,67],$V6=[1,68],$V7=[1,69],$V8=[1,80],$V9=[1,72],$Va=[1,73],$Vb=[1,74],$Vc=[1,75],$Vd=[1,99],$Ve=[1,76],$Vf=[1,100],$Vg=[1,79],$Vh=[1,51],$Vi=[1,81],$Vj=[1,82],$Vk=[1,84],$Vl=[1,83],$Vm=[1,85],$Vn=[1,96],$Vo=[1,97],$Vp=[1,98],$Vq=[1,86],$Vr=[1,87],$Vs=[1,64],$Vt=[1,70],$Vu=[1,71],$Vv=[1,77],$Vw=[1,78],$Vx=[1,53],$Vy=[1,54],$Vz=[1,55],$VA=[1,61],$VB=[1,88],$VC=[1,89],$VD=[1,90],$VE=[1,91],$VF=[1,92],$VG=[1,93],$VH=[1,94],$VI=[1,95],$VJ=[1,101],$VK=[1,102],$VL=[1,103],$VM=[1,104],$VN=[1,105],$VO=[1,56],$VP=[1,57],$VQ=[1,58],$VR=[1,59],$VS=[1,115],$VT=[1,111],$VU=[1,114],$VV=[1,112],$VW=[1,113],$VX=[1,118],$VY=[1,117],$VZ=[1,134],$V_=[1,149],$V$=[1,150],$V01=[1,157],$V11=[5,6,7,9,13,14,15,17,18,19,20,23,25,26,27,30,33,34,35,37,38,41,43,45,46,49,52,54,55,56,58,59,62,64,65,66,70,72,74,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101],$V21=[5,6,7,9,13,14,15,17,18,19,20,23,25,26,27,30,33,34,35,37,38,41,43,45,46,49,52,54,55,56,58,59,62,64,65,66,70,71,72,74,77,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101],$V31=[5,6,7,9,13,15,17,18,19,20,23,25,26,27,30,33,34,37,38,41,43,45,46,49,52,54,55,56,58,59,62,64,65,66,70,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95],$V41=[5,70,72],$V51=[5,74],$V61=[71,101];\r\nvar parser = {trace: function trace () { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"Program\":3,\"Command\":4,\"EOF\":5,\"RESET\":6,\"BUILD\":7,\"ALL\":8,\"HELP\":9,\"Path\":10,\"MOTM\":11,\"OneArgCommand\":12,\"GET\":13,\"STRING\":14,\"SET\":15,\"Value\":16,\"SET_SAVE\":17,\"SET_RESTORE\":18,\"SET_RESET\":19,\"PRESET\":20,\"AddRepresentation\":21,\"EditRepresentation\":22,\"REMOVE\":23,\"RepresentationReference\":24,\"HIDE\":25,\"SHOW\":26,\"LIST\":27,\"EXPAND_KEY\":28,\"SELECTOR_KEY\":29,\"SELECT\":30,\"AS\":31,\"WordAll\":32,\"SELECTOR\":33,\"WITHIN\":34,\"NUMBER\":35,\"OF\":36,\"MATERIAL\":37,\"IDENTIFIER\":38,\"ModeCMD\":39,\"ColorCMD\":40,\"VIEW\":41,\"BASE_64\":42,\"UNIT\":43,\"DSSP\":44,\"SCALE\":45,\"ROTATE\":46,\"AxesList\":47,\"TRANSLATE\":48,\"CENTER\":49,\"GetURLBranch\":50,\"Screenshot\":51,\"LINE\":52,\"ArgList\":53,\"LISTOBJ\":54,\"REMOVEOBJ\":55,\"URL\":56,\"VIEW_KEY\":57,\"SCREENSHOT\":58,\"LOAD\":59,\"Url\":60,\"FILE_KEY\":61,\"ADD\":62,\"Description\":63,\"REP\":64,\"MODE\":65,\"COLOR\":66,\"Descriptor\":67,\"RepresentationOwnProperty\":68,\"RepresentationOwnPropertyOpts\":69,\"DESC_KEY\":70,\"=\":71,\"DESC_KEY_OPTS\":72,\"AxesArg\":73,\"DESC_KEY_AXES\":74,\"Arg\":75,\"PathWoDescKey\":76,\"HEX\":77,\"BOOL\":78,\"Word\":79,\"CommandSetWoDESC_KEY\":80,\"DescKeys\":81,\"CLEAR\":82,\"FILE_LIST\":83,\"FILE_REGISTER\":84,\"FILE_DELETE\":85,\"PRESET_ADD\":86,\"PRESET_DELETE\":87,\"PRESET_UPDATE\":88,\"PRESET_RENAME\":89,\"PRESET_OPEN\":90,\"CREATE_SCENARIO\":91,\"RESET_SCENARIO\":92,\"DELETE_SCENARIO\":93,\"ADD_SCENARIO_ITEM\":94,\"LIST_SCENARIO\":95,\"PDB_KEY\":96,\"DELAY_KEY\":97,\"PRST_KEY\":98,\"DESCRIPTION_KEY\":99,\"CommandSet\":100,\".\":101,\"PresetPath\":102,\"/\":103,\"HexOrNumber\":104,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",6:\"RESET\",7:\"BUILD\",8:\"ALL\",9:\"HELP\",11:\"MOTM\",13:\"GET\",14:\"STRING\",15:\"SET\",17:\"SET_SAVE\",18:\"SET_RESTORE\",19:\"SET_RESET\",20:\"PRESET\",23:\"REMOVE\",25:\"HIDE\",26:\"SHOW\",27:\"LIST\",28:\"EXPAND_KEY\",29:\"SELECTOR_KEY\",30:\"SELECT\",31:\"AS\",33:\"SELECTOR\",34:\"WITHIN\",35:\"NUMBER\",36:\"OF\",37:\"MATERIAL\",38:\"IDENTIFIER\",41:\"VIEW\",42:\"BASE_64\",43:\"UNIT\",44:\"DSSP\",45:\"SCALE\",46:\"ROTATE\",48:\"TRANSLATE\",49:\"CENTER\",52:\"LINE\",54:\"LISTOBJ\",55:\"REMOVEOBJ\",56:\"URL\",57:\"VIEW_KEY\",58:\"SCREENSHOT\",59:\"LOAD\",61:\"FILE_KEY\",62:\"ADD\",64:\"REP\",65:\"MODE\",66:\"COLOR\",70:\"DESC_KEY\",71:\"=\",72:\"DESC_KEY_OPTS\",74:\"DESC_KEY_AXES\",77:\"HEX\",78:\"BOOL\",82:\"CLEAR\",83:\"FILE_LIST\",84:\"FILE_REGISTER\",85:\"FILE_DELETE\",86:\"PRESET_ADD\",87:\"PRESET_DELETE\",88:\"PRESET_UPDATE\",89:\"PRESET_RENAME\",90:\"PRESET_OPEN\",91:\"CREATE_SCENARIO\",92:\"RESET_SCENARIO\",93:\"DELETE_SCENARIO\",94:\"ADD_SCENARIO_ITEM\",95:\"LIST_SCENARIO\",96:\"PDB_KEY\",97:\"DELAY_KEY\",98:\"PRST_KEY\",99:\"DESCRIPTION_KEY\",101:\".\",103:\"/\"},\r\nproductions_: [0,[3,2],[3,1],[4,1],[4,1],[4,2],[4,1],[4,2],[4,1],[4,1],[4,2],[4,2],[4,3],[4,3],[4,1],[4,1],[4,1],[4,1],[4,2],[4,1],[4,1],[4,2],[4,2],[4,2],[4,2],[4,1],[4,2],[4,2],[4,2],[4,4],[4,2],[4,6],[4,2],[4,1],[4,1],[4,1],[4,2],[4,2],[4,1],[4,2],[4,1],[4,2],[4,2],[4,2],[4,1],[4,2],[4,1],[4,1],[4,3],[4,3],[4,4],[4,4],[4,1],[4,2],[50,1],[50,2],[50,2],[50,3],[50,3],[51,1],[51,2],[51,3],[12,2],[12,2],[12,2],[21,1],[21,2],[21,2],[21,3],[22,2],[22,3],[39,2],[39,3],[40,2],[40,3],[24,1],[24,1],[63,1],[63,2],[63,3],[63,4],[67,1],[67,1],[67,2],[68,3],[69,3],[47,1],[47,2],[73,2],[53,1],[53,2],[75,3],[16,1],[16,1],[16,1],[16,1],[16,1],[79,1],[79,1],[32,1],[32,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[80,1],[81,1],[81,1],[81,1],[81,1],[81,1],[81,1],[81,1],[100,1],[100,1],[76,1],[76,3],[76,3],[10,1],[10,1],[10,3],[10,3],[10,3],[60,1],[102,1],[102,3],[104,1],[104,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n return $$[$0-1]; \r\nbreak;\r\ncase 3:\r\nthis.$ = yy.miew.reset(false); yy.ClearContext(); yy.miew.resetReps(\"empty\");\r\nbreak;\r\ncase 4:\r\nthis.$ = yy.miew.rebuild();\r\nbreak;\r\ncase 5:\r\nthis.$ = yy.miew.rebuildAll(); yy.miew.rebuild();\r\nbreak;\r\ncase 6:\r\nthis.$ = yy.echo(yy.utils.help().toString());\r\nbreak;\r\ncase 7:\r\nthis.$ = yy.echo(yy.utils.help($$[$0]).toString());\r\nbreak;\r\ncase 8:\r\nthis.$ = yy.miew.motm();\r\nbreak;\r\ncase 10: case 11:\r\nthis.$ = yy.utils.propagateProp($$[$0]); yy.echo(yy.miew.get($$[$0]).toString());\r\nbreak;\r\ncase 12: case 13:\r\nthis.$ = yy.miew.set($$[$0-1], yy.utils.propagateProp($$[$0-1], $$[$0]));;\r\nbreak;\r\ncase 14:\r\nthis.$ = yy.miew.saveSettings();;\r\nbreak;\r\ncase 15:\r\nthis.$ = yy.miew.restoreSettings();;\r\nbreak;\r\ncase 16:\r\nthis.$ = yy.miew.resetSettings();;\r\nbreak;\r\ncase 17:\r\nthis.$ = yy.miew.resetReps();\r\nbreak;\r\ncase 18:\r\nthis.$ = yy.miew.applyPreset($$[$0]);\r\nbreak;\r\ncase 21:\r\nthis.$ = yy.miew.repRemove($$[$0]); yy.representations.remove($$[$0]);\r\nbreak;\r\ncase 22:\r\nthis.$ = yy.miew.repHide($$[$0]);\r\nbreak;\r\ncase 23:\r\nthis.$ = yy.miew.repHide($$[$0], false);\r\nbreak;\r\ncase 24:\r\nthis.$ = yy.echo(yy.utils.listRep(yy.miew, yy.representations, $$[$0], '-e'));\r\nbreak;\r\ncase 25:\r\nthis.$ = yy.echo(yy.utils.list(yy.miew, yy.representations));\r\nbreak;\r\ncase 26:\r\nthis.$ = yy.echo(yy.utils.list(yy.miew, yy.representations, $$[$0]));\r\nbreak;\r\ncase 27:\r\nthis.$ = yy.echo(yy.utils.listSelector(yy.miew, yy.Context));\r\nbreak;\r\ncase 28:\r\nthis.$ = yy.miew.select(yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0], true));\r\nbreak;\r\ncase 29:\r\nthis.$ = yy.Context[$$[$0].toLowerCase()] = yy.utils.checkArg($$[$0-3].toLowerCase(), $$[$0-2], true); yy.miew.select(yy.Context[$$[$0].toLowerCase()]);\r\nbreak;\r\ncase 30:\r\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {selector : yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0])});\r\nbreak;\r\ncase 31:\r\nthis.$ = yy.Context[$$[$0].toLowerCase()] = yy.miew.within(yy.utils.checkArg(\"select\", $$[$0-2], true), Number($$[$0-4]));\r\nbreak;\r\ncase 32:\r\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {material : yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0].toUpperCase())});\r\nbreak;\r\ncase 35:\r\nthis.$ = yy.echo(yy.miew.view());\r\nbreak;\r\ncase 36: case 37:\r\nthis.$ = yy.miew.view($$[$0]);\r\nbreak;\r\ncase 38:\r\nthis.$ = yy.echo(yy.miew.changeUnit());\r\nbreak;\r\ncase 39:\r\nthis.$ = yy.echo(yy.miew.changeUnit($$[$0]));\r\nbreak;\r\ncase 40:\r\nthis.$ = yy.miew.dssp();\r\nbreak;\r\ncase 41:\r\nthis.$ = yy.miew.scale($$[$0]);\r\nbreak;\r\ncase 42:\r\n for (var i = 0, n = $$[$0].length; i < n; i++) {yy.miew.rotate($$[$0][i]['x'] * Math.PI / 180.0, $$[$0][i]['y'] * Math.PI / 180.0, $$[$0][i]['z'] * Math.PI / 180.0)} \r\nbreak;\r\ncase 43:\r\n for (var i = 0, n = $$[$0].length; i < n; i++) {yy.miew.translate($$[$0][i]['x'] || 0, $$[$0][i]['y'] || 0, $$[$0][i]['z'] || 0)} \r\nbreak;\r\ncase 44:\r\nthis.$ = yy.miew.center();\r\nbreak;\r\ncase 45:\r\nthis.$ = yy.miew.center($$[$0]);\r\nbreak;\r\ncase 48: case 49:\r\nthis.$ = yy.miew.addObject({type: 'line', params: [$$[$0-1], $$[$0]]}, true);\r\nbreak;\r\ncase 50: case 51:\r\nthis.$ = yy.miew.addObject({type: 'line', params: [$$[$0-2], $$[$0-1]], opts:$$[$0].toJSO(yy.utils, 'objects', 'line')}, true);\r\nbreak;\r\ncase 52:\r\nthis.$ = yy.echo(yy.utils.listObjs(yy.miew));\r\nbreak;\r\ncase 53:\r\nthis.$ = yy.miew.removeObject($$[$0]);\r\nbreak;\r\ncase 54:\r\nthis.$ = yy.echo(yy.miew.getURL({view: false, settings: false}));\r\nbreak;\r\ncase 55:\r\nthis.$ = yy.echo(yy.miew.getURL({view: false, settings: true}));\r\nbreak;\r\ncase 56:\r\nthis.$ = yy.echo(yy.miew.getURL({view: true,  settings: false}));\r\nbreak;\r\ncase 57: case 58:\r\nthis.$ = yy.echo(yy.miew.getURL({view: true,  settings: true}));\r\nbreak;\r\ncase 59:\r\nthis.$ = yy.miew.screenshotSave();\r\nbreak;\r\ncase 60:\r\nthis.$ = yy.miew.screenshotSave('', Number($$[$0]));\r\nbreak;\r\ncase 61:\r\nthis.$ = yy.miew.screenshotSave('', Number($$[$0-1]), Number($$[$0]));\r\nbreak;\r\ncase 62: case 63: case 64:\r\nthis.$ = yy.utils.load(yy.miew, $$[$0]); yy.representations.clear();\r\nbreak;\r\ncase 65:\r\nthis.$ = yy.echo(yy.representations.add(yy.miew.repAdd()));\r\nbreak;\r\ncase 66:\r\nthis.$ = yy.echo(yy.representations.add($$[$0], yy.miew.repAdd()));\r\nbreak;\r\ncase 67:\r\nthis.$ = yy.echo(yy.representations.add(yy.miew.repAdd($$[$0])));\r\nbreak;\r\ncase 68:\r\nthis.$ = yy.echo(yy.representations.add($$[$0-1], yy.miew.repAdd($$[$0])));\r\nbreak;\r\ncase 69:\r\nthis.$ = yy.miew.rep($$[$0]); yy.miew.repCurrent($$[$0]);\r\nbreak;\r\ncase 70:\r\nthis.$ = yy.miew.rep($$[$0-1], $$[$0]); yy.miew.repCurrent($$[$0-1]);\r\nbreak;\r\ncase 71:\r\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {mode : yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0].toUpperCase())});\r\nbreak;\r\ncase 72:\r\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {mode : new Array(yy.utils.checkArg($$[$0-2].toLowerCase(), $$[$0-1].toUpperCase()), $$[$0].toJSO(yy.utils, $$[$0-2], $$[$0-1].toUpperCase()))});\r\nbreak;\r\ncase 73:\r\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {colorer : yy.utils.checkArg($$[$0-1].toLowerCase(), $$[$0].toUpperCase())});\r\nbreak;\r\ncase 74:\r\nthis.$ = yy.miew.rep(yy.miew.repCurrent(), {colorer : new Array(yy.utils.checkArg($$[$0-2].toLowerCase(), $$[$0-1].toUpperCase()), $$[$0].toJSO(yy.utils, $$[$0-2], $$[$0-1].toUpperCase()))});\r\nbreak;\r\ncase 75:\r\nthis.$ = Number(yy.representations.get($$[$0]));\r\nbreak;\r\ncase 76: case 92:\r\nthis.$ = Number($$[$0]);\r\nbreak;\r\ncase 77:\r\nthis.$ = $$[$0];\r\nbreak;\r\ncase 78:\r\nthis.$ = yy._.assign($$[$0-1], $$[$0]);\r\nbreak;\r\ncase 79:\r\nthis.$ = yy._.assign($$[$0-2], $$[$0-1], $$[$0]);\r\nbreak;\r\ncase 80:\r\nthis.$ = yy._.assign($$[$0-3], $$[$0-2], $$[$0-1], $$[$0]);\r\nbreak;\r\ncase 81: case 82:\r\nthis.$ = yy.CreateObjectPair($$[$0].key, $$[$0].val);\r\nbreak;\r\ncase 83:\r\nthis.$ = yy.CreateObjectPair($$[$0-1].key, new Array($$[$0-1].val, $$[$0].toJSO(yy.utils, $$[$0-1].key, $$[$0-1].val)));\r\nbreak;\r\ncase 84: case 85:\r\nthis.$ = Object.create({'key': yy.keyRemap($$[$0-2]), 'val': yy.utils.checkArg($$[$0-2], $$[$0])});\r\nbreak;\r\ncase 86:\r\nthis.$ = [$$[$0]];\r\nbreak;\r\ncase 87:\r\nthis.$ = $$[$0-1].concat($$[$0]);\r\nbreak;\r\ncase 88:\r\nthis.$ = yy.CreateObjectPair($$[$0-1].toLowerCase(), Number($$[$0]));\r\nbreak;\r\ncase 89:\r\nthis.$ = new yy.ArgList($$[$0]);\r\nbreak;\r\ncase 90:\r\nthis.$ = $$[$0-1].append($$[$0]);\r\nbreak;\r\ncase 91:\r\nthis.$ = new yy.Arg($$[$0-2], $$[$0]);\r\nbreak;\r\ncase 93:\r\nthis.$ = parseInt($$[$0]);\r\nbreak;\r\ncase 94:\r\nthis.$ = JSON.parse($$[$0]);\r\nbreak;\r\ncase 95: case 96:\r\nthis.$ = String($$[$0]);\r\nbreak;\r\ncase 157: case 158: case 161: case 162: case 163:\r\nthis.$ = $$[$0-2] + $$[$0-1] + $$[$0] //cause of could be color word in path;\r\nbreak;\r\ncase 166:\r\nthis.$ = $$[$0-2] = $$[$0-2] + $$[$0-1] + $$[$0];\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,5:[1,3],6:[1,4],7:[1,5],9:[1,6],11:[1,7],12:8,13:[1,9],15:[1,10],17:[1,11],18:[1,12],19:[1,13],20:[1,14],21:15,22:16,23:[1,17],25:[1,18],26:[1,19],27:[1,20],30:[1,21],33:[1,22],34:[1,23],37:[1,24],39:25,40:26,41:[1,27],43:[1,28],44:[1,29],45:[1,30],46:[1,31],48:[1,32],49:[1,33],50:34,51:35,52:[1,36],54:[1,37],55:[1,38],56:[1,44],58:[1,45],59:[1,39],62:[1,40],64:[1,41],65:[1,42],66:[1,43]},{1:[3]},{5:[1,46]},{1:[2,2]},{5:[2,3]},{5:[2,4],8:[1,47]},{5:[2,6],6:$V0,7:$V1,9:$V2,10:48,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,8]},{5:[2,9]},{6:$V0,7:$V1,9:$V2,10:106,13:$V3,14:[1,107],15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{6:$V0,7:$V1,9:$V2,10:108,13:$V3,14:[1,109],15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,14]},{5:[2,15]},{5:[2,16]},{5:[2,17],14:$VS,16:110,35:$VT,38:$VU,77:$VV,78:$VW},{5:[2,19]},{5:[2,20]},{24:116,35:$VX,38:$VY},{24:119,35:$VX,38:$VY},{24:120,35:$VX,38:$VY},{5:[2,25],24:121,28:[1,122],29:[1,123],35:$VX,38:$VY},{14:[1,124]},{14:[1,125]},{35:[1,126]},{38:[1,127]},{5:[2,33]},{5:[2,34]},{5:[2,35],14:[1,128],42:[1,129]},{5:[2,38],35:[1,130]},{5:[2,40]},{35:[1,131]},{47:132,73:133,74:$VZ},{47:135,73:133,74:$VZ},{5:[2,44],14:[1,136]},{5:[2,46]},{5:[2,47]},{6:$V0,7:$V1,9:$V2,10:138,13:$V3,14:[1,137],15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,52]},{35:[1,139]},{14:[1,143],38:[1,141],60:140,61:[1,142]},{5:[2,65],38:[1,144],63:145,67:146,68:147,69:148,70:$V_,72:$V$},{24:151,35:$VX,38:$VY},{38:[1,152]},{38:[1,153]},{5:[2,54],29:[1,154],57:[1,155]},{5:[2,59],35:[1,156]},{1:[2,1]},{5:[2,5]},{5:[2,7],101:$V01},o($V11,[2,159]),o($V11,[2,160]),o($V21,[2,97]),o($V21,[2,98]),o($V11,[2,147]),o($V11,[2,148]),o($V11,[2,149]),o($V11,[2,150]),o($V11,[2,151]),o($V11,[2,152]),o($V11,[2,153]),o($V21,[2,101]),o($V21,[2,102]),o($V21,[2,103]),o($V21,[2,104]),o($V21,[2,105]),o($V21,[2,106]),o($V21,[2,107]),o($V21,[2,108]),o($V21,[2,109]),o($V21,[2,110]),o($V21,[2,111]),o($V21,[2,112]),o($V21,[2,113]),o($V21,[2,114]),o($V21,[2,115]),o($V21,[2,116]),o($V21,[2,117]),o($V21,[2,118]),o($V21,[2,119]),o($V21,[2,120]),o($V21,[2,121]),o($V21,[2,122]),o($V21,[2,123]),o($V21,[2,124]),o($V21,[2,125]),o($V21,[2,126]),o($V21,[2,127]),o($V21,[2,128]),o($V21,[2,129]),o($V21,[2,130]),o($V21,[2,131]),o($V21,[2,132]),o($V21,[2,133]),o($V21,[2,134]),o($V21,[2,135]),o($V21,[2,136]),o($V21,[2,137]),o($V21,[2,138]),o($V21,[2,139]),o($V21,[2,140]),o($V21,[2,141]),o($V21,[2,142]),o($V21,[2,143]),o($V21,[2,144]),o($V21,[2,145]),o($V21,[2,146]),{5:[2,10],101:$V01},{5:[2,11]},{14:$VS,16:158,35:$VT,38:$VU,77:$VV,78:$VW,101:$V01},{14:$VS,16:159,35:$VT,38:$VU,77:$VV,78:$VW},{5:[2,18]},o($V31,[2,92]),o($V31,[2,93]),o($V31,[2,94]),o($V31,[2,95]),o($V31,[2,96]),{5:[2,21]},o($V41,[2,75]),o($V41,[2,76]),{5:[2,22]},{5:[2,23]},{5:[2,24]},{5:[2,26]},{5:[2,27]},{5:[2,28],31:[1,160]},{5:[2,30]},{36:[1,161]},{5:[2,32]},{5:[2,36]},{5:[2,37]},{5:[2,39]},{5:[2,41]},{5:[2,42],73:162,74:$VZ},o($V51,[2,86]),{35:[1,163]},{5:[2,43],73:162,74:$VZ},{5:[2,45]},{14:[1,164]},{6:$V0,7:$V1,9:$V2,10:165,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:49,80:52,81:50,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR,101:$V01},{5:[2,53]},{5:[2,62]},{5:[2,63]},{5:[2,64]},{5:[2,164]},{5:[2,66],63:166,67:146,68:147,69:148,70:$V_,72:$V$},{5:[2,67]},{5:[2,77],67:167,68:147,69:148,70:$V_,72:$V$},o($V41,[2,81]),o($V41,[2,82],{80:52,53:168,75:169,76:170,79:171,6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN}),{71:[1,172]},{71:[1,173]},{5:[2,69],63:174,67:146,68:147,69:148,70:$V_,72:$V$},{5:[2,71],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,53:175,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:169,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,73],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,53:176,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:169,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,55],57:[1,177]},{5:[2,56],29:[1,178]},{5:[2,60],35:[1,179]},{6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,35:[1,181],37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:180,80:52,81:182,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,12]},{5:[2,13]},{6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,32:183,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:184,80:52,81:185,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{14:[1,186]},o($V51,[2,87]),o($V51,[2,88]),{5:[2,48],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,53:187,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:169,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,49],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,53:188,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:169,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,101:$V01},{5:[2,68]},{5:[2,78],67:189,68:147,69:148,70:$V_,72:$V$},o($V41,[2,83],{80:52,76:170,79:171,75:190,6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN}),o($V31,[2,89]),{71:[1,191],101:[1,192]},o($V61,[2,156]),{14:$VS,16:193,35:$VT,38:$VU,77:$VV,78:$VW},{14:$VS,16:194,35:$VT,38:$VU,77:$VV,78:$VW},{5:[2,70]},{5:[2,72],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:190,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,74],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:190,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,57]},{5:[2,58]},{5:[2,61]},o($V11,[2,161]),o($V11,[2,162]),o($V11,[2,163]),{5:[2,29]},{5:[2,99]},{5:[2,100]},{31:[1,195]},{5:[2,50],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:190,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,51],6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,75:190,76:170,79:171,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},{5:[2,79],67:196,68:147,69:148,70:$V_,72:$V$},o($V31,[2,90]),{14:$VS,16:197,35:$VT,38:$VU,77:$VV,78:$VW},{6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,33:$Ve,34:$Vf,35:[1,199],37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,79:198,80:52,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN},o($V41,[2,84]),o($V31,[2,85]),{6:$V0,7:$V1,9:$V2,13:$V3,15:$V4,17:$V5,18:$V6,19:$V7,20:$V8,23:$V9,25:$Va,26:$Vb,27:$Vc,30:$Vd,32:200,33:$Ve,34:$Vf,37:$Vg,38:$Vh,41:$Vi,43:$Vj,45:$Vk,46:$Vl,49:$Vm,52:$Vn,54:$Vo,55:$Vp,56:$Vq,58:$Vr,59:$Vs,62:$Vt,64:$Vu,65:$Vv,66:$Vw,70:$Vx,72:$Vy,74:$Vz,79:184,80:52,81:185,82:$VA,83:$VB,84:$VC,85:$VD,86:$VE,87:$VF,88:$VG,89:$VH,90:$VI,91:$VJ,92:$VK,93:$VL,94:$VM,95:$VN,96:$VO,97:$VP,98:$VQ,99:$VR},{5:[2,80]},o($V31,[2,91]),o($V61,[2,157]),o($V61,[2,158]),{5:[2,31]}],\r\ndefaultActions: {3:[2,2],4:[2,3],7:[2,8],8:[2,9],11:[2,14],12:[2,15],13:[2,16],15:[2,19],16:[2,20],25:[2,33],26:[2,34],29:[2,40],34:[2,46],35:[2,47],37:[2,52],46:[2,1],47:[2,5],107:[2,11],110:[2,18],116:[2,21],119:[2,22],120:[2,23],121:[2,24],122:[2,26],123:[2,27],125:[2,30],127:[2,32],128:[2,36],129:[2,37],130:[2,39],131:[2,41],136:[2,45],139:[2,53],140:[2,62],141:[2,63],142:[2,64],143:[2,164],145:[2,67],158:[2,12],159:[2,13],166:[2,68],174:[2,70],177:[2,57],178:[2,58],179:[2,61],183:[2,29],184:[2,99],185:[2,100],196:[2,80],200:[2,31]},\r\nparseError: function parseError (str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n            function lex() {\r\n            var token;\r\n            token = tstack.pop() || lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                if (token instanceof Array) {\r\n                    tstack = token;\r\n                    token = tstack.pop();\r\n                }\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        }\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var errStr = '';\r\n            expected = [];\r\n            for (p in table[state]) {\r\n                if (this.terminals_[p] && p > TERROR) {\r\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                }\r\n            }\r\n            if (lexer.showPosition) {\r\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n            } else {\r\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n            }\r\n            this.parseError(errStr, {\r\n                text: lexer.match,\r\n                token: this.terminals_[symbol] || symbol,\r\n                line: lexer.yylineno,\r\n                loc: yyloc,\r\n                expected: expected\r\n            });\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function(match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex () {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin (condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState () {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules () {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState (n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState (condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* ignore whitespace */\r\nbreak;\r\ncase 1:return '';\r\nbreak;\r\ncase 2:return '';\r\nbreak;\r\ncase 3:return 42;\r\nbreak;\r\ncase 4:return 35;\r\nbreak;\r\ncase 5:return 77;\r\nbreak;\r\ncase 6:return 78;\r\nbreak;\r\ncase 7:return 78;\r\nbreak;\r\ncase 8:return 8;\r\nbreak;\r\ncase 9:return 6;\r\nbreak;\r\ncase 10:return 82;\r\nbreak;\r\ncase 11:return 7;\r\nbreak;\r\ncase 12:return 9;\r\nbreak;\r\ncase 13:return 59;\r\nbreak;\r\ncase 14:return 13\r\nbreak;\r\ncase 15:return 15\r\nbreak;\r\ncase 16:return 17\r\nbreak;\r\ncase 17:return 18\r\nbreak;\r\ncase 18:return 19\r\nbreak;\r\ncase 19:return 20\r\nbreak;\r\ncase 20:return 11\r\nbreak;\r\ncase 21:return 62\r\nbreak;\r\ncase 22:return 64\r\nbreak;\r\ncase 23:return 23\r\nbreak;\r\ncase 24:return 25\r\nbreak;\r\ncase 25:return 26\r\nbreak;\r\ncase 26:return 27\r\nbreak;\r\ncase 27:return 30\r\nbreak;\r\ncase 28:return 34\r\nbreak;\r\ncase 29:return 33\r\nbreak;\r\ncase 30:return 65\r\nbreak;\r\ncase 31:return 66\r\nbreak;\r\ncase 32:return 37\r\nbreak;\r\ncase 33:return 41\r\nbreak;\r\ncase 34:return 43\r\nbreak;\r\ncase 35:return 52\r\nbreak;\r\ncase 36:return 54\r\nbreak;\r\ncase 37:return 55\r\nbreak;\r\ncase 38:return 46\r\nbreak;\r\ncase 39:return 48\r\nbreak;\r\ncase 40:return 45\r\nbreak;\r\ncase 41:return 49\r\nbreak;\r\ncase 42:return 56\r\nbreak;\r\ncase 43:return 58;\r\nbreak;\r\ncase 44:return 44\r\nbreak;\r\ncase 45:return 83\r\nbreak;\r\ncase 46:return 84\r\nbreak;\r\ncase 47:return 85\r\nbreak;\r\ncase 48:return 86\r\nbreak;\r\ncase 49:return 87\r\nbreak;\r\ncase 50:return 88\r\nbreak;\r\ncase 51:return 89\r\nbreak;\r\ncase 52:return 90\r\nbreak;\r\ncase 53:return 91\r\nbreak;\r\ncase 54:return 92\r\nbreak;\r\ncase 55:return 93\r\nbreak;\r\ncase 56:return 94\r\nbreak;\r\ncase 57:return 95\r\nbreak;\r\ncase 58:return 70\r\nbreak;\r\ncase 59:return 70\r\nbreak;\r\ncase 60:return 72\r\nbreak;\r\ncase 61:return 72\r\nbreak;\r\ncase 62:return 74\r\nbreak;\r\ncase 63:return 74\r\nbreak;\r\ncase 64:return 74\r\nbreak;\r\ncase 65:return 31\r\nbreak;\r\ncase 66:return 36\r\nbreak;\r\ncase 67:return 96\r\nbreak;\r\ncase 68:return 97\r\nbreak;\r\ncase 69:return 98\r\nbreak;\r\ncase 70:return 99\r\nbreak;\r\ncase 71:yy_.yytext = yy.utils.unquoteString(yy_.yytext); return 14;\r\nbreak;\r\ncase 72:return 38;\r\nbreak;\r\ncase 73:return 5;\r\nbreak;\r\ncase 74:return 101;\r\nbreak;\r\ncase 75:return 103;\r\nbreak;\r\ncase 76:return '\\\\';\r\nbreak;\r\ncase 77:return 28\r\nbreak;\r\ncase 78:return 61\r\nbreak;\r\ncase 79:return 29\r\nbreak;\r\ncase 80:return 57\r\nbreak;\r\ncase 81:return 71\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:[#].*)/i,/^(?:\\/\\/.*)/i,/^(?:([_A-Z0-9\\/\\+]+==))/i,/^(?:-?[0-9]+(\\.[0-9]+)?\\b)/i,/^(?:0[xX][0-9A-F]+\\b)/i,/^(?:false\\b)/i,/^(?:true\\b)/i,/^(?:all\\b)/i,/^(?:reset\\b)/i,/^(?:clear\\b)/i,/^(?:build\\b)/i,/^(?:help\\b)/i,/^(?:load\\b)/i,/^(?:get\\b)/i,/^(?:set\\b)/i,/^(?:set_save\\b)/i,/^(?:set_restore\\b)/i,/^(?:set_reset\\b)/i,/^(?:preset\\b)/i,/^(?:motm\\b)/i,/^(?:add\\b)/i,/^(?:rep\\b)/i,/^(?:remove\\b)/i,/^(?:hide\\b)/i,/^(?:show\\b)/i,/^(?:list\\b)/i,/^(?:select\\b)/i,/^(?:within\\b)/i,/^(?:selector\\b)/i,/^(?:mode\\b)/i,/^(?:color\\b)/i,/^(?:material\\b)/i,/^(?:view\\b)/i,/^(?:unit\\b)/i,/^(?:line\\b)/i,/^(?:listobj\\b)/i,/^(?:removeobj\\b)/i,/^(?:rotate\\b)/i,/^(?:translate\\b)/i,/^(?:scale\\b)/i,/^(?:center\\b)/i,/^(?:url\\b)/i,/^(?:screenshot\\b)/i,/^(?:dssp\\b)/i,/^(?:file_list\\b)/i,/^(?:file_register\\b)/i,/^(?:file_delete\\b)/i,/^(?:preset_add\\b)/i,/^(?:preset_delete\\b)/i,/^(?:preset_update\\b)/i,/^(?:preset_rename\\b)/i,/^(?:preset_open\\b)/i,/^(?:create_scenario\\b)/i,/^(?:reset_scenario\\b)/i,/^(?:delete_scenario\\b)/i,/^(?:add_scenario_item\\b)/i,/^(?:list_scenario\\b)/i,/^(?:s\\b)/i,/^(?:mt\\b)/i,/^(?:m\\b)/i,/^(?:c\\b)/i,/^(?:x\\b)/i,/^(?:y\\b)/i,/^(?:z\\b)/i,/^(?:as\\b)/i,/^(?:of\\b)/i,/^(?:pdb\\b)/i,/^(?:delay\\b)/i,/^(?:prst\\b)/i,/^(?:desc\\b)/i,/^(?:((?:\"(?:\\\\.|[^\\\\\"])*\"|'(?:\\\\.|[^\\\\'])*')))/i,/^(?:([_A-Z0-9]+))/i,/^(?:$)/i,/^(?:\\.)/i,/^(?:\\/)/i,/^(?:\\\\)/i,/^(?:-e\\b)/i,/^(?:-f\\b)/i,/^(?:-s\\b)/i,/^(?:-v\\b)/i,/^(?:=)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\nmodule.exports = {parser: parser};\r\n","/* eslint-disable */\r\n// DO NOT EDIT! Automatically generated from .jison\r\n/* parser generated by jison 0.4.18 */\r\n/*\r\n  Returns a Parser object of the following structure:\r\n\r\n  Parser: {\r\n    yy: {}\r\n  }\r\n\r\n  Parser.prototype: {\r\n    yy: {},\r\n    trace: function(),\r\n    symbols_: {associative list: name ==> number},\r\n    terminals_: {associative list: number ==> name},\r\n    productions_: [...],\r\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\r\n    table: [...],\r\n    defaultActions: {...},\r\n    parseError: function(str, hash),\r\n    parse: function(input),\r\n\r\n    lexer: {\r\n        EOF: 1,\r\n        parseError: function(str, hash),\r\n        setInput: function(input),\r\n        input: function(),\r\n        unput: function(str),\r\n        more: function(),\r\n        less: function(n),\r\n        pastInput: function(),\r\n        upcomingInput: function(),\r\n        showPosition: function(),\r\n        test_match: function(regex_match_array, rule_index),\r\n        next: function(),\r\n        lex: function(),\r\n        begin: function(condition),\r\n        popState: function(),\r\n        _currentRules: function(),\r\n        topState: function(),\r\n        pushState: function(condition),\r\n\r\n        options: {\r\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\r\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\r\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\r\n        },\r\n\r\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\r\n        rules: [...],\r\n        conditions: {associative list: name ==> set},\r\n    }\r\n  }\r\n\r\n\r\n  token location info (@$, _$, etc.): {\r\n    first_line: n,\r\n    last_line: n,\r\n    first_column: n,\r\n    last_column: n,\r\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\r\n  }\r\n\r\n\r\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\r\n    text:        (matched text)\r\n    token:       (the produced terminal token, if any)\r\n    line:        (yylineno)\r\n  }\r\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\r\n    loc:         (yylloc)\r\n    expected:    (string describing the set of expected tokens)\r\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\r\n  }\r\n*/\r\nvar parser = (function(){\r\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[1,6],$V3=[1,7],$V4=[1,8],$V5=[1,9],$V6=[1,11],$V7=[1,12],$V8=[5,7,8,11],$V9=[1,17],$Va=[1,22],$Vb=[1,20],$Vc=[1,21],$Vd=[5,7,8,11,19];\r\nvar parser = {trace: function trace() { },\r\nyy: {},\r\nsymbols_: {\"error\":2,\"Program\":3,\"Expression\":4,\"EOF\":5,\"Selector\":6,\"OR\":7,\"AND\":8,\"NOT\":9,\"(\":10,\")\":11,\"SELECTOR\":12,\"NAMED_SELECTOR\":13,\"SELECTOR_RANGED\":14,\"RangeList\":15,\"SELECTOR_NAMED\":16,\"NameList\":17,\"Range\":18,\",\":19,\"NUMBER\":20,\":\":21,\"Name\":22,\"IDENTIFIER\":23,\"STRING\":24,\"$accept\":0,\"$end\":1},\r\nterminals_: {2:\"error\",5:\"EOF\",7:\"OR\",8:\"AND\",9:\"NOT\",10:\"(\",11:\")\",12:\"SELECTOR\",13:\"NAMED_SELECTOR\",14:\"SELECTOR_RANGED\",16:\"SELECTOR_NAMED\",19:\",\",20:\"NUMBER\",21:\":\",23:\"IDENTIFIER\",24:\"STRING\"},\r\nproductions_: [0,[3,2],[4,1],[4,3],[4,3],[4,2],[4,3],[6,1],[6,1],[6,2],[6,2],[15,1],[15,3],[18,1],[18,3],[17,1],[17,3],[22,1],[22,1],[22,1]],\r\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\r\n/* this == yyval */\r\n\r\nvar $0 = $$.length - 1;\r\nswitch (yystate) {\r\ncase 1:\r\n return $$[$0-1]; \r\nbreak;\r\ncase 3:\r\nthis.$ = yy.keyword('or')($$[$0-2], $$[$0]);\r\nbreak;\r\ncase 4:\r\nthis.$ = yy.keyword('and')($$[$0-2], $$[$0]);\r\nbreak;\r\ncase 5:\r\nthis.$ = yy.keyword('not')($$[$0]);\r\nbreak;\r\ncase 6:\r\nthis.$ = $$[$0-1];\r\nbreak;\r\ncase 7:\r\nthis.$ = yy.keyword($$[$0])();\r\nbreak;\r\ncase 8:\r\nthis.$ = yy.GetSelector($$[$0].toLowerCase().slice(1, $$[$0].length));\r\nbreak;\r\ncase 9: case 10:\r\nthis.$ = yy.keyword($$[$0-1])($$[$0]);\r\nbreak;\r\ncase 11:\r\nthis.$ = new yy.RangeList($$[$0]);\r\nbreak;\r\ncase 12: case 16:\r\nthis.$ = $$[$0-2].append($$[$0]);\r\nbreak;\r\ncase 13:\r\nthis.$ = new yy.Range(Number($$[$0]));\r\nbreak;\r\ncase 14:\r\nthis.$ = new yy.Range(Number($$[$0-2]), Number($$[$0]));\r\nbreak;\r\ncase 15:\r\nthis.$ = new yy.ValueList($$[$0]);\r\nbreak;\r\n}\r\n},\r\ntable: [{3:1,4:2,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},{1:[3]},{5:[1,10],7:$V6,8:$V7},o($V8,[2,2]),{4:13,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},{4:14,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},o($V8,[2,7]),o($V8,[2,8]),{15:15,18:16,20:$V9},{17:18,20:$Va,22:19,23:$Vb,24:$Vc},{1:[2,1]},{4:23,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},{4:24,6:3,9:$V0,10:$V1,12:$V2,13:$V3,14:$V4,16:$V5},o($V8,[2,5]),{7:$V6,8:$V7,11:[1,25]},o($V8,[2,9],{19:[1,26]}),o($Vd,[2,11]),o($Vd,[2,13],{21:[1,27]}),o($V8,[2,10],{19:[1,28]}),o($Vd,[2,15]),o($Vd,[2,17]),o($Vd,[2,18]),o($Vd,[2,19]),o([5,7,11],[2,3],{8:$V7}),o($V8,[2,4]),o($V8,[2,6]),{18:29,20:$V9},{20:[1,30]},{20:$Va,22:31,23:$Vb,24:$Vc},o($Vd,[2,12]),o($Vd,[2,14]),o($Vd,[2,16])],\r\ndefaultActions: {10:[2,1]},\r\nparseError: function parseError(str, hash) {\r\n    if (hash.recoverable) {\r\n        this.trace(str);\r\n    } else {\r\n        var error = new Error(str);\r\n        error.hash = hash;\r\n        throw error;\r\n    }\r\n},\r\nparse: function parse(input) {\r\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\r\n    var args = lstack.slice.call(arguments, 1);\r\n    var lexer = Object.create(this.lexer);\r\n    var sharedState = { yy: {} };\r\n    for (var k in this.yy) {\r\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\r\n            sharedState.yy[k] = this.yy[k];\r\n        }\r\n    }\r\n    lexer.setInput(input, sharedState.yy);\r\n    sharedState.yy.lexer = lexer;\r\n    sharedState.yy.parser = this;\r\n    if (typeof lexer.yylloc == 'undefined') {\r\n        lexer.yylloc = {};\r\n    }\r\n    var yyloc = lexer.yylloc;\r\n    lstack.push(yyloc);\r\n    var ranges = lexer.options && lexer.options.ranges;\r\n    if (typeof sharedState.yy.parseError === 'function') {\r\n        this.parseError = sharedState.yy.parseError;\r\n    } else {\r\n        this.parseError = Object.getPrototypeOf(this).parseError;\r\n    }\r\n    function popStack(n) {\r\n        stack.length = stack.length - 2 * n;\r\n        vstack.length = vstack.length - n;\r\n        lstack.length = lstack.length - n;\r\n    }\r\n            function lex() {\r\n            var token;\r\n            token = tstack.pop() || lexer.lex() || EOF;\r\n            if (typeof token !== 'number') {\r\n                if (token instanceof Array) {\r\n                    tstack = token;\r\n                    token = tstack.pop();\r\n                }\r\n                token = self.symbols_[token] || token;\r\n            }\r\n            return token;\r\n        }\r\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\r\n    while (true) {\r\n        state = stack[stack.length - 1];\r\n        if (this.defaultActions[state]) {\r\n            action = this.defaultActions[state];\r\n        } else {\r\n            if (symbol === null || typeof symbol == 'undefined') {\r\n                symbol = lex();\r\n            }\r\n            action = table[state] && table[state][symbol];\r\n        }\r\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\r\n            var errStr = '';\r\n            expected = [];\r\n            for (p in table[state]) {\r\n                if (this.terminals_[p] && p > TERROR) {\r\n                    expected.push('\\'' + this.terminals_[p] + '\\'');\r\n                }\r\n            }\r\n            if (lexer.showPosition) {\r\n                errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\r\n            } else {\r\n                errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\r\n            }\r\n            this.parseError(errStr, {\r\n                text: lexer.match,\r\n                token: this.terminals_[symbol] || symbol,\r\n                line: lexer.yylineno,\r\n                loc: yyloc,\r\n                expected: expected\r\n            });\r\n        }\r\n        if (action[0] instanceof Array && action.length > 1) {\r\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\r\n        }\r\n        switch (action[0]) {\r\n        case 1:\r\n            stack.push(symbol);\r\n            vstack.push(lexer.yytext);\r\n            lstack.push(lexer.yylloc);\r\n            stack.push(action[1]);\r\n            symbol = null;\r\n            if (!preErrorSymbol) {\r\n                yyleng = lexer.yyleng;\r\n                yytext = lexer.yytext;\r\n                yylineno = lexer.yylineno;\r\n                yyloc = lexer.yylloc;\r\n                if (recovering > 0) {\r\n                    recovering--;\r\n                }\r\n            } else {\r\n                symbol = preErrorSymbol;\r\n                preErrorSymbol = null;\r\n            }\r\n            break;\r\n        case 2:\r\n            len = this.productions_[action[1]][1];\r\n            yyval.$ = vstack[vstack.length - len];\r\n            yyval._$ = {\r\n                first_line: lstack[lstack.length - (len || 1)].first_line,\r\n                last_line: lstack[lstack.length - 1].last_line,\r\n                first_column: lstack[lstack.length - (len || 1)].first_column,\r\n                last_column: lstack[lstack.length - 1].last_column\r\n            };\r\n            if (ranges) {\r\n                yyval._$.range = [\r\n                    lstack[lstack.length - (len || 1)].range[0],\r\n                    lstack[lstack.length - 1].range[1]\r\n                ];\r\n            }\r\n            r = this.performAction.apply(yyval, [\r\n                yytext,\r\n                yyleng,\r\n                yylineno,\r\n                sharedState.yy,\r\n                action[1],\r\n                vstack,\r\n                lstack\r\n            ].concat(args));\r\n            if (typeof r !== 'undefined') {\r\n                return r;\r\n            }\r\n            if (len) {\r\n                stack = stack.slice(0, -1 * len * 2);\r\n                vstack = vstack.slice(0, -1 * len);\r\n                lstack = lstack.slice(0, -1 * len);\r\n            }\r\n            stack.push(this.productions_[action[1]][0]);\r\n            vstack.push(yyval.$);\r\n            lstack.push(yyval._$);\r\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\r\n            stack.push(newState);\r\n            break;\r\n        case 3:\r\n            return true;\r\n        }\r\n    }\r\n    return true;\r\n}};\r\n\r\n\r\n/* generated by jison-lex 0.3.4 */\r\nvar lexer = (function(){\r\nvar lexer = ({\r\n\r\nEOF:1,\r\n\r\nparseError:function parseError(str, hash) {\r\n        if (this.yy.parser) {\r\n            this.yy.parser.parseError(str, hash);\r\n        } else {\r\n            throw new Error(str);\r\n        }\r\n    },\r\n\r\n// resets the lexer, sets new input\r\nsetInput:function (input, yy) {\r\n        this.yy = yy || this.yy || {};\r\n        this._input = input;\r\n        this._more = this._backtrack = this.done = false;\r\n        this.yylineno = this.yyleng = 0;\r\n        this.yytext = this.matched = this.match = '';\r\n        this.conditionStack = ['INITIAL'];\r\n        this.yylloc = {\r\n            first_line: 1,\r\n            first_column: 0,\r\n            last_line: 1,\r\n            last_column: 0\r\n        };\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [0,0];\r\n        }\r\n        this.offset = 0;\r\n        return this;\r\n    },\r\n\r\n// consumes and returns one char from the input\r\ninput:function () {\r\n        var ch = this._input[0];\r\n        this.yytext += ch;\r\n        this.yyleng++;\r\n        this.offset++;\r\n        this.match += ch;\r\n        this.matched += ch;\r\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno++;\r\n            this.yylloc.last_line++;\r\n        } else {\r\n            this.yylloc.last_column++;\r\n        }\r\n        if (this.options.ranges) {\r\n            this.yylloc.range[1]++;\r\n        }\r\n\r\n        this._input = this._input.slice(1);\r\n        return ch;\r\n    },\r\n\r\n// unshifts one char (or a string) into the input\r\nunput:function (ch) {\r\n        var len = ch.length;\r\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\r\n\r\n        this._input = ch + this._input;\r\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\r\n        //this.yyleng -= len;\r\n        this.offset -= len;\r\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\r\n        this.match = this.match.substr(0, this.match.length - 1);\r\n        this.matched = this.matched.substr(0, this.matched.length - 1);\r\n\r\n        if (lines.length - 1) {\r\n            this.yylineno -= lines.length - 1;\r\n        }\r\n        var r = this.yylloc.range;\r\n\r\n        this.yylloc = {\r\n            first_line: this.yylloc.first_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.first_column,\r\n            last_column: lines ?\r\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\r\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\r\n              this.yylloc.first_column - len\r\n        };\r\n\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\r\n        }\r\n        this.yyleng = this.yytext.length;\r\n        return this;\r\n    },\r\n\r\n// When called from action, caches matched text and appends it on next action\r\nmore:function () {\r\n        this._more = true;\r\n        return this;\r\n    },\r\n\r\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\r\nreject:function () {\r\n        if (this.options.backtrack_lexer) {\r\n            this._backtrack = true;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n\r\n        }\r\n        return this;\r\n    },\r\n\r\n// retain first n characters of the match\r\nless:function (n) {\r\n        this.unput(this.match.slice(n));\r\n    },\r\n\r\n// displays already matched input, i.e. for error messages\r\npastInput:function () {\r\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\r\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays upcoming input, i.e. for error messages\r\nupcomingInput:function () {\r\n        var next = this.match;\r\n        if (next.length < 20) {\r\n            next += this._input.substr(0, 20-next.length);\r\n        }\r\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\r\n    },\r\n\r\n// displays the character position where the lexing error occurred, i.e. for error messages\r\nshowPosition:function () {\r\n        var pre = this.pastInput();\r\n        var c = new Array(pre.length + 1).join(\"-\");\r\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\r\n    },\r\n\r\n// test the lexed token: return FALSE when not a match, otherwise return token\r\ntest_match:function (match, indexed_rule) {\r\n        var token,\r\n            lines,\r\n            backup;\r\n\r\n        if (this.options.backtrack_lexer) {\r\n            // save context\r\n            backup = {\r\n                yylineno: this.yylineno,\r\n                yylloc: {\r\n                    first_line: this.yylloc.first_line,\r\n                    last_line: this.last_line,\r\n                    first_column: this.yylloc.first_column,\r\n                    last_column: this.yylloc.last_column\r\n                },\r\n                yytext: this.yytext,\r\n                match: this.match,\r\n                matches: this.matches,\r\n                matched: this.matched,\r\n                yyleng: this.yyleng,\r\n                offset: this.offset,\r\n                _more: this._more,\r\n                _input: this._input,\r\n                yy: this.yy,\r\n                conditionStack: this.conditionStack.slice(0),\r\n                done: this.done\r\n            };\r\n            if (this.options.ranges) {\r\n                backup.yylloc.range = this.yylloc.range.slice(0);\r\n            }\r\n        }\r\n\r\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\r\n        if (lines) {\r\n            this.yylineno += lines.length;\r\n        }\r\n        this.yylloc = {\r\n            first_line: this.yylloc.last_line,\r\n            last_line: this.yylineno + 1,\r\n            first_column: this.yylloc.last_column,\r\n            last_column: lines ?\r\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\r\n                         this.yylloc.last_column + match[0].length\r\n        };\r\n        this.yytext += match[0];\r\n        this.match += match[0];\r\n        this.matches = match;\r\n        this.yyleng = this.yytext.length;\r\n        if (this.options.ranges) {\r\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\r\n        }\r\n        this._more = false;\r\n        this._backtrack = false;\r\n        this._input = this._input.slice(match[0].length);\r\n        this.matched += match[0];\r\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\r\n        if (this.done && this._input) {\r\n            this.done = false;\r\n        }\r\n        if (token) {\r\n            return token;\r\n        } else if (this._backtrack) {\r\n            // recover context\r\n            for (var k in backup) {\r\n                this[k] = backup[k];\r\n            }\r\n            return false; // rule action called reject() implying the next rule should be tested instead.\r\n        }\r\n        return false;\r\n    },\r\n\r\n// return next match in input\r\nnext:function () {\r\n        if (this.done) {\r\n            return this.EOF;\r\n        }\r\n        if (!this._input) {\r\n            this.done = true;\r\n        }\r\n\r\n        var token,\r\n            match,\r\n            tempMatch,\r\n            index;\r\n        if (!this._more) {\r\n            this.yytext = '';\r\n            this.match = '';\r\n        }\r\n        var rules = this._currentRules();\r\n        for (var i = 0; i < rules.length; i++) {\r\n            tempMatch = this._input.match(this.rules[rules[i]]);\r\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\r\n                match = tempMatch;\r\n                index = i;\r\n                if (this.options.backtrack_lexer) {\r\n                    token = this.test_match(tempMatch, rules[i]);\r\n                    if (token !== false) {\r\n                        return token;\r\n                    } else if (this._backtrack) {\r\n                        match = false;\r\n                        continue; // rule action called reject() implying a rule MISmatch.\r\n                    } else {\r\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n                        return false;\r\n                    }\r\n                } else if (!this.options.flex) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (match) {\r\n            token = this.test_match(match, rules[index]);\r\n            if (token !== false) {\r\n                return token;\r\n            }\r\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\r\n            return false;\r\n        }\r\n        if (this._input === \"\") {\r\n            return this.EOF;\r\n        } else {\r\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\r\n                text: \"\",\r\n                token: null,\r\n                line: this.yylineno\r\n            });\r\n        }\r\n    },\r\n\r\n// return next match that has a token\r\nlex:function lex() {\r\n        var r = this.next();\r\n        if (r) {\r\n            return r;\r\n        } else {\r\n            return this.lex();\r\n        }\r\n    },\r\n\r\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\r\nbegin:function begin(condition) {\r\n        this.conditionStack.push(condition);\r\n    },\r\n\r\n// pop the previously active lexer condition state off the condition stack\r\npopState:function popState() {\r\n        var n = this.conditionStack.length - 1;\r\n        if (n > 0) {\r\n            return this.conditionStack.pop();\r\n        } else {\r\n            return this.conditionStack[0];\r\n        }\r\n    },\r\n\r\n// produce the lexer rule set which is active for the currently active lexer condition state\r\n_currentRules:function _currentRules() {\r\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\r\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\r\n        } else {\r\n            return this.conditions[\"INITIAL\"].rules;\r\n        }\r\n    },\r\n\r\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\r\ntopState:function topState(n) {\r\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\r\n        if (n >= 0) {\r\n            return this.conditionStack[n];\r\n        } else {\r\n            return \"INITIAL\";\r\n        }\r\n    },\r\n\r\n// alias for begin(condition)\r\npushState:function pushState(condition) {\r\n        this.begin(condition);\r\n    },\r\n\r\n// return the number of states currently on the stack\r\nstateStackSize:function stateStackSize() {\r\n        return this.conditionStack.length;\r\n    },\r\noptions: {\"case-insensitive\":true},\r\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\r\nvar YYSTATE=YY_START;\r\nswitch($avoiding_name_collisions) {\r\ncase 0:/* skip whitespace */\r\nbreak;\r\ncase 1:return 20;\r\nbreak;\r\ncase 2:return 7;\r\nbreak;\r\ncase 3:return 8;\r\nbreak;\r\ncase 4:return 9;\r\nbreak;\r\ncase 5:return 12;\r\nbreak;\r\ncase 6:return 16;\r\nbreak;\r\ncase 7:return 14;\r\nbreak;\r\ncase 8:return 10;\r\nbreak;\r\ncase 9:return 11;\r\nbreak;\r\ncase 10:return 19;\r\nbreak;\r\ncase 11:return 21;\r\nbreak;\r\ncase 12:return '<=';\r\nbreak;\r\ncase 13:return '>=';\r\nbreak;\r\ncase 14:return '<';\r\nbreak;\r\ncase 15:return '>';\r\nbreak;\r\ncase 16:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 24;\r\nbreak;\r\ncase 17:return 13;\r\nbreak;\r\ncase 18:return 23;\r\nbreak;\r\ncase 19:return 5;\r\nbreak;\r\ncase 20:return 'INVALID';\r\nbreak;\r\n}\r\n},\r\nrules: [/^(?:\\s+)/i,/^(?:(-?(?:[1-9][0-9]+|[0-9]))\\b)/i,/^(?:OR\\b)/i,/^(?:AND\\b)/i,/^(?:NOT\\b)/i,/^(?:((ALL|NONE|HETATM|PROTEIN|BASIC|ACIDIC|CHARGED|POLAR|NONPOLAR|AROMATIC|NUCLEIC|PURINE|PYRIMIDINE|WATER|POLARH|NONPOLARH))\\b)/i,/^(?:((NAME|ELEM|TYPE|RESIDUE|ICODE|CHAIN|ALTLOC))\\b)/i,/^(?:((SERIAL|SEQUENCE|RESIDX))\\b)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:,)/i,/^(?::)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:((?:\"(?:\\\\.|[^\\\\\"])*\"|'(?:\\\\.|[^\\\\'])*')))/i,/^(?:(@[_A-Z0-9]+))/i,/^(?:([_A-Z0-9]+))/i,/^(?:$)/i,/^(?:.)/i],\r\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],\"inclusive\":true}}\r\n});\r\nreturn lexer;\r\n})();\r\nparser.lexer = lexer;\r\nfunction Parser () {\r\n  this.yy = {};\r\n}\r\nParser.prototype = parser;parser.Parser = Parser;\r\nreturn new Parser;\r\n})();\r\n\r\nmodule.exports = {parser: parser};\r\n","\r\n/*\r\nSmooth.js version 0.1.7\r\n\r\nTurn arrays into smooth functions.\r\n\r\nCopyright 2012 Spencer Cohen\r\nLicensed under MIT license (see \"Smooth.js MIT license.txt\")\r\n*/\r\n\r\n/*Constants (these are accessible by Smooth.WHATEVER in user space)\r\n*/\r\n\r\n(function() {\r\n  var AbstractInterpolator, CubicInterpolator, Enum, LinearInterpolator, NearestInterpolator, PI, SincFilterInterpolator, Smooth, clipClamp, clipMirror, clipPeriodic, defaultConfig, getColumn, getType, isValidNumber, k, makeLanczosWindow, makeScaledFunction, makeSincKernel, normalizeScaleTo, shallowCopy, sin, sinc, v, validateNumber, validateVector,\r\n    __hasProp = Object.prototype.hasOwnProperty,\r\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };\r\n\r\n  Enum = {\r\n    /*Interpolation methods\r\n    */\r\n    METHOD_NEAREST: 'nearest',\r\n    METHOD_LINEAR: 'linear',\r\n    METHOD_CUBIC: 'cubic',\r\n    METHOD_LANCZOS: 'lanczos',\r\n    METHOD_SINC: 'sinc',\r\n    /*Input clipping modes\r\n    */\r\n    CLIP_CLAMP: 'clamp',\r\n    CLIP_ZERO: 'zero',\r\n    CLIP_PERIODIC: 'periodic',\r\n    CLIP_MIRROR: 'mirror',\r\n    /* Constants for control over the cubic interpolation tension\r\n    */\r\n    CUBIC_TENSION_DEFAULT: 0,\r\n    CUBIC_TENSION_CATMULL_ROM: 0\r\n  };\r\n\r\n  defaultConfig = {\r\n    method: Enum.METHOD_CUBIC,\r\n    cubicTension: Enum.CUBIC_TENSION_DEFAULT,\r\n    clip: Enum.CLIP_CLAMP,\r\n    scaleTo: 0,\r\n    sincFilterSize: 2,\r\n    sincWindow: void 0\r\n  };\r\n\r\n  /*Index clipping functions\r\n  */\r\n\r\n  clipClamp = function(i, n) {\r\n    return Math.max(0, Math.min(i, n - 1));\r\n  };\r\n\r\n  clipPeriodic = function(i, n) {\r\n    i = i % n;\r\n    if (i < 0) i += n;\r\n    return i;\r\n  };\r\n\r\n  clipMirror = function(i, n) {\r\n    var period;\r\n    period = 2 * (n - 1);\r\n    i = clipPeriodic(i, period);\r\n    if (i > n - 1) i = period - i;\r\n    return i;\r\n  };\r\n\r\n  /*\r\n  Abstract scalar interpolation class which provides common functionality for all interpolators\r\n  \r\n  Subclasses must override interpolate().\r\n  */\r\n\r\n  AbstractInterpolator = (function() {\r\n\r\n    function AbstractInterpolator(array, config) {\r\n      this.array = array.slice(0);\r\n      this.length = this.array.length;\r\n      if (!(this.clipHelper = {\r\n        clamp: this.clipHelperClamp,\r\n        zero: this.clipHelperZero,\r\n        periodic: this.clipHelperPeriodic,\r\n        mirror: this.clipHelperMirror\r\n      }[config.clip])) {\r\n        throw \"Invalid clip: \" + config.clip;\r\n      }\r\n    }\r\n\r\n    AbstractInterpolator.prototype.getClippedInput = function(i) {\r\n      if ((0 <= i && i < this.length)) {\r\n        return this.array[i];\r\n      } else {\r\n        return this.clipHelper(i);\r\n      }\r\n    };\r\n\r\n    AbstractInterpolator.prototype.clipHelperClamp = function(i) {\r\n      return this.array[clipClamp(i, this.length)];\r\n    };\r\n\r\n    AbstractInterpolator.prototype.clipHelperZero = function(i) {\r\n      return 0;\r\n    };\r\n\r\n    AbstractInterpolator.prototype.clipHelperPeriodic = function(i) {\r\n      return this.array[clipPeriodic(i, this.length)];\r\n    };\r\n\r\n    AbstractInterpolator.prototype.clipHelperMirror = function(i) {\r\n      return this.array[clipMirror(i, this.length)];\r\n    };\r\n\r\n    AbstractInterpolator.prototype.interpolate = function(t) {\r\n      throw 'Subclasses of AbstractInterpolator must override the interpolate() method.';\r\n    };\r\n\r\n    return AbstractInterpolator;\r\n\r\n  })();\r\n\r\n  NearestInterpolator = (function(_super) {\r\n\r\n    __extends(NearestInterpolator, _super);\r\n\r\n    function NearestInterpolator() {\r\n      NearestInterpolator.__super__.constructor.apply(this, arguments);\r\n    }\r\n\r\n    NearestInterpolator.prototype.interpolate = function(t) {\r\n      return this.getClippedInput(Math.round(t));\r\n    };\r\n\r\n    return NearestInterpolator;\r\n\r\n  })(AbstractInterpolator);\r\n\r\n  LinearInterpolator = (function(_super) {\r\n\r\n    __extends(LinearInterpolator, _super);\r\n\r\n    function LinearInterpolator() {\r\n      LinearInterpolator.__super__.constructor.apply(this, arguments);\r\n    }\r\n\r\n    LinearInterpolator.prototype.interpolate = function(t) {\r\n      var k;\r\n      k = Math.floor(t);\r\n      t -= k;\r\n      return (1 - t) * this.getClippedInput(k) + t * this.getClippedInput(k + 1);\r\n    };\r\n\r\n    return LinearInterpolator;\r\n\r\n  })(AbstractInterpolator);\r\n\r\n  CubicInterpolator = (function(_super) {\r\n\r\n    __extends(CubicInterpolator, _super);\r\n\r\n    function CubicInterpolator(array, config) {\r\n      this.tangentFactor = 1 - Math.max(-1, Math.min(1, config.cubicTension));\r\n      CubicInterpolator.__super__.constructor.apply(this, arguments);\r\n    }\r\n\r\n    CubicInterpolator.prototype.getTangent = function(k) {\r\n      return this.tangentFactor * (this.getClippedInput(k + 1) - this.getClippedInput(k - 1)) / 2;\r\n    };\r\n\r\n    CubicInterpolator.prototype.interpolate = function(t) {\r\n      var k, m, p, t2, t3;\r\n      k = Math.floor(t);\r\n      m = [this.getTangent(k), this.getTangent(k + 1)];\r\n      p = [this.getClippedInput(k), this.getClippedInput(k + 1)];\r\n      t -= k;\r\n      t2 = t * t;\r\n      t3 = t * t2;\r\n      return (2 * t3 - 3 * t2 + 1) * p[0] + (t3 - 2 * t2 + t) * m[0] + (-2 * t3 + 3 * t2) * p[1] + (t3 - t2) * m[1];\r\n    };\r\n\r\n    return CubicInterpolator;\r\n\r\n  })(AbstractInterpolator);\r\n\r\n  sin = Math.sin, PI = Math.PI;\r\n\r\n  sinc = function(x) {\r\n    if (x === 0) {\r\n      return 1;\r\n    } else {\r\n      return sin(PI * x) / (PI * x);\r\n    }\r\n  };\r\n\r\n  makeLanczosWindow = function(a) {\r\n    return function(x) {\r\n      return sinc(x / a);\r\n    };\r\n  };\r\n\r\n  makeSincKernel = function(window) {\r\n    return function(x) {\r\n      return sinc(x) * window(x);\r\n    };\r\n  };\r\n\r\n  SincFilterInterpolator = (function(_super) {\r\n\r\n    __extends(SincFilterInterpolator, _super);\r\n\r\n    function SincFilterInterpolator(array, config) {\r\n      SincFilterInterpolator.__super__.constructor.apply(this, arguments);\r\n      this.a = config.sincFilterSize;\r\n      if (!config.sincWindow) throw 'No sincWindow provided';\r\n      this.kernel = makeSincKernel(config.sincWindow);\r\n    }\r\n\r\n    SincFilterInterpolator.prototype.interpolate = function(t) {\r\n      var k, n, sum, _ref, _ref2;\r\n      k = Math.floor(t);\r\n      sum = 0;\r\n      for (n = _ref = k - this.a + 1, _ref2 = k + this.a; _ref <= _ref2 ? n <= _ref2 : n >= _ref2; _ref <= _ref2 ? n++ : n--) {\r\n        sum += this.kernel(t - n) * this.getClippedInput(n);\r\n      }\r\n      return sum;\r\n    };\r\n\r\n    return SincFilterInterpolator;\r\n\r\n  })(AbstractInterpolator);\r\n\r\n  getColumn = function(arr, i) {\r\n    var row, _i, _len, _results;\r\n    _results = [];\r\n    for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n      row = arr[_i];\r\n      _results.push(row[i]);\r\n    }\r\n    return _results;\r\n  };\r\n\r\n  makeScaledFunction = function(f, baseScale, scaleRange) {\r\n    var scaleFactor, translation;\r\n    if (scaleRange.join === '0,1') {\r\n      return f;\r\n    } else {\r\n      scaleFactor = baseScale / (scaleRange[1] - scaleRange[0]);\r\n      translation = scaleRange[0];\r\n      return function(t) {\r\n        return f(scaleFactor * (t - translation));\r\n      };\r\n    }\r\n  };\r\n\r\n  getType = function(x) {\r\n    return Object.prototype.toString.call(x).slice('[object '.length, -1);\r\n  };\r\n\r\n  validateNumber = function(n) {\r\n    if (isNaN(n)) throw 'NaN in Smooth() input';\r\n    if (getType(n) !== 'Number') throw 'Non-number in Smooth() input';\r\n    if (!isFinite(n)) throw 'Infinity in Smooth() input';\r\n  };\r\n\r\n  validateVector = function(v, dimension) {\r\n    var n, _i, _len;\r\n    if (getType(v) !== 'Array') throw 'Non-vector in Smooth() input';\r\n    if (v.length !== dimension) throw 'Inconsistent dimension in Smooth() input';\r\n    for (_i = 0, _len = v.length; _i < _len; _i++) {\r\n      n = v[_i];\r\n      validateNumber(n);\r\n    }\r\n  };\r\n\r\n  isValidNumber = function(n) {\r\n    return (getType(n) === 'Number') && isFinite(n) && !isNaN(n);\r\n  };\r\n\r\n  normalizeScaleTo = function(s) {\r\n    var invalidErr;\r\n    invalidErr = \"scaleTo param must be number or array of two numbers\";\r\n    switch (getType(s)) {\r\n      case 'Number':\r\n        if (!isValidNumber(s)) throw invalidErr;\r\n        s = [0, s];\r\n        break;\r\n      case 'Array':\r\n        if (s.length !== 2) throw invalidErr;\r\n        if (!(isValidNumber(s[0]) && isValidNumber(s[1]))) throw invalidErr;\r\n        break;\r\n      default:\r\n        throw invalidErr;\r\n    }\r\n    return s;\r\n  };\r\n\r\n  shallowCopy = function(obj) {\r\n    var copy, k, v;\r\n    copy = {};\r\n    for (k in obj) {\r\n      if (!__hasProp.call(obj, k)) continue;\r\n      v = obj[k];\r\n      copy[k] = v;\r\n    }\r\n    return copy;\r\n  };\r\n\r\n  Smooth = function(arr, config) {\r\n    var baseDomainEnd, dimension, i, interpolator, interpolatorClass, interpolators, k, n, properties, smoothFunc, v;\r\n    if (config == null) config = {};\r\n    properties = {};\r\n    config = shallowCopy(config);\r\n    properties.config = shallowCopy(config);\r\n    if (config.scaleTo == null) config.scaleTo = config.period;\r\n    if (config.sincFilterSize == null) {\r\n      config.sincFilterSize = config.lanczosFilterSize;\r\n    }\r\n    for (k in defaultConfig) {\r\n      if (!__hasProp.call(defaultConfig, k)) continue;\r\n      v = defaultConfig[k];\r\n      if (config[k] == null) config[k] = v;\r\n    }\r\n    if (!(interpolatorClass = {\r\n      nearest: NearestInterpolator,\r\n      linear: LinearInterpolator,\r\n      cubic: CubicInterpolator,\r\n      lanczos: SincFilterInterpolator,\r\n      sinc: SincFilterInterpolator\r\n    }[config.method])) {\r\n      throw \"Invalid method: \" + config.method;\r\n    }\r\n    if (config.method === 'lanczos') {\r\n      config.sincWindow = makeLanczosWindow(config.sincFilterSize);\r\n    }\r\n    if (arr.length < 2) throw 'Array must have at least two elements';\r\n    properties.count = arr.length;\r\n    smoothFunc = (function() {\r\n      var _i, _j, _len, _len2;\r\n      switch (getType(arr[0])) {\r\n        case 'Number':\r\n          properties.dimension = 'scalar';\r\n          if (Smooth.deepValidation) {\r\n            for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n              n = arr[_i];\r\n              validateNumber(n);\r\n            }\r\n          }\r\n          interpolator = new interpolatorClass(arr, config);\r\n          return function(t) {\r\n            return interpolator.interpolate(t);\r\n          };\r\n        case 'Array':\r\n          properties.dimension = dimension = arr[0].length;\r\n          if (!dimension) throw 'Vectors must be non-empty';\r\n          if (Smooth.deepValidation) {\r\n            for (_j = 0, _len2 = arr.length; _j < _len2; _j++) {\r\n              v = arr[_j];\r\n              validateVector(v, dimension);\r\n            }\r\n          }\r\n          interpolators = (function() {\r\n            var _results;\r\n            _results = [];\r\n            for (i = 0; 0 <= dimension ? i < dimension : i > dimension; 0 <= dimension ? i++ : i--) {\r\n              _results.push(new interpolatorClass(getColumn(arr, i), config));\r\n            }\r\n            return _results;\r\n          })();\r\n          return function(t) {\r\n            var interpolator, _k, _len3, _results;\r\n            _results = [];\r\n            for (_k = 0, _len3 = interpolators.length; _k < _len3; _k++) {\r\n              interpolator = interpolators[_k];\r\n              _results.push(interpolator.interpolate(t));\r\n            }\r\n            return _results;\r\n          };\r\n        default:\r\n          throw \"Invalid element type: \" + (getType(arr[0]));\r\n      }\r\n    })();\r\n    if (config.clip === 'periodic') {\r\n      baseDomainEnd = arr.length;\r\n    } else {\r\n      baseDomainEnd = arr.length - 1;\r\n    }\r\n    config.scaleTo || (config.scaleTo = baseDomainEnd);\r\n    properties.domain = normalizeScaleTo(config.scaleTo);\r\n    smoothFunc = makeScaledFunction(smoothFunc, baseDomainEnd, properties.domain);\r\n    properties.domain.sort();\r\n    /*copy properties\r\n    */\r\n    for (k in properties) {\r\n      if (!__hasProp.call(properties, k)) continue;\r\n      v = properties[k];\r\n      smoothFunc[k] = v;\r\n    }\r\n    return smoothFunc;\r\n  };\r\n\r\n  for (k in Enum) {\r\n    if (!__hasProp.call(Enum, k)) continue;\r\n    v = Enum[k];\r\n    Smooth[k] = v;\r\n  }\r\n\r\n  Smooth.deepValidation = true;\r\n\r\n  (typeof exports !== \"undefined\" && exports !== null ? exports : window).Smooth = Smooth;\r\n\r\n}).call(this);\r\n","!function(r,t){if(\"function\"==typeof define&&define.amd)define([\"exports\"],t);else if(\"object\"==typeof exports&&\"undefined\"!=typeof module)t(exports);else t(r.MMTF=r.MMTF||{})}(this,function(r){\"use strict\";function t(r,t,n){for(var e=(r.byteLength,0),i=n.length;i>e;e++){var o=n.charCodeAt(e);if(128>o)r.setUint8(t++,o>>>0&127|0);else if(2048>o)r.setUint8(t++,o>>>6&31|192),r.setUint8(t++,o>>>0&63|128);else if(65536>o)r.setUint8(t++,o>>>12&15|224),r.setUint8(t++,o>>>6&63|128),r.setUint8(t++,o>>>0&63|128);else{if(!(1114112>o))throw new Error(\"bad codepoint \"+o);r.setUint8(t++,o>>>18&7|240),r.setUint8(t++,o>>>12&63|128),r.setUint8(t++,o>>>6&63|128),r.setUint8(t++,o>>>0&63|128)}}}function n(r){for(var t=0,n=0,e=r.length;e>n;n++){var i=r.charCodeAt(n);if(128>i)t+=1;else if(2048>i)t+=2;else if(65536>i)t+=3;else{if(!(1114112>i))throw new Error(\"bad codepoint \"+i);t+=4}}return t}function e(r,i,o){var a=typeof r;if(\"string\"===a){var u=n(r);if(32>u)return i.setUint8(o,160|u),t(i,o+1,r),1+u;if(256>u)return i.setUint8(o,217),i.setUint8(o+1,u),t(i,o+2,r),2+u;if(65536>u)return i.setUint8(o,218),i.setUint16(o+1,u),t(i,o+3,r),3+u;if(4294967296>u)return i.setUint8(o,219),i.setUint32(o+1,u),t(i,o+5,r),5+u}if(r instanceof Uint8Array){var u=r.byteLength,s=new Uint8Array(i.buffer);if(256>u)return i.setUint8(o,196),i.setUint8(o+1,u),s.set(r,o+2),2+u;if(65536>u)return i.setUint8(o,197),i.setUint16(o+1,u),s.set(r,o+3),3+u;if(4294967296>u)return i.setUint8(o,198),i.setUint32(o+1,u),s.set(r,o+5),5+u}if(\"number\"===a){if(!isFinite(r))throw new Error(\"Number not finite: \"+r);if(Math.floor(r)!==r)return i.setUint8(o,203),i.setFloat64(o+1,r),9;if(r>=0){if(128>r)return i.setUint8(o,r),1;if(256>r)return i.setUint8(o,204),i.setUint8(o+1,r),2;if(65536>r)return i.setUint8(o,205),i.setUint16(o+1,r),3;if(4294967296>r)return i.setUint8(o,206),i.setUint32(o+1,r),5;throw new Error(\"Number too big 0x\"+r.toString(16))}if(r>=-32)return i.setInt8(o,r),1;if(r>=-128)return i.setUint8(o,208),i.setInt8(o+1,r),2;if(r>=-32768)return i.setUint8(o,209),i.setInt16(o+1,r),3;if(r>=-2147483648)return i.setUint8(o,210),i.setInt32(o+1,r),5;throw new Error(\"Number too small -0x\"+(-r).toString(16).substr(1))}if(null===r)return i.setUint8(o,192),1;if(\"boolean\"===a)return i.setUint8(o,r?195:194),1;if(\"object\"===a){var u,f=0,c=Array.isArray(r);if(c)u=r.length;else{var d=Object.keys(r);u=d.length}var f;if(16>u?(i.setUint8(o,u|(c?144:128)),f=1):65536>u?(i.setUint8(o,c?220:222),i.setUint16(o+1,u),f=3):4294967296>u&&(i.setUint8(o,c?221:223),i.setUint32(o+1,u),f=5),c)for(var l=0;u>l;l++)f+=e(r[l],i,o+f);else for(var l=0;u>l;l++){var v=d[l];f+=e(v,i,o+f),f+=e(r[v],i,o+f)}return f}throw new Error(\"Unknown type \"+a)}function i(r){var t=typeof r;if(\"string\"===t){var e=n(r);if(32>e)return 1+e;if(256>e)return 2+e;if(65536>e)return 3+e;if(4294967296>e)return 5+e}if(r instanceof Uint8Array){var e=r.byteLength;if(256>e)return 2+e;if(65536>e)return 3+e;if(4294967296>e)return 5+e}if(\"number\"===t){if(Math.floor(r)!==r)return 9;if(r>=0){if(128>r)return 1;if(256>r)return 2;if(65536>r)return 3;if(4294967296>r)return 5;throw new Error(\"Number too big 0x\"+r.toString(16))}if(r>=-32)return 1;if(r>=-128)return 2;if(r>=-32768)return 3;if(r>=-2147483648)return 5;throw new Error(\"Number too small -0x\"+r.toString(16).substr(1))}if(\"boolean\"===t||null===r)return 1;if(\"object\"===t){var e,o=0;if(Array.isArray(r)){e=r.length;for(var a=0;e>a;a++)o+=i(r[a])}else{var u=Object.keys(r);e=u.length;for(var a=0;e>a;a++){var s=u[a];o+=i(s)+i(r[s])}}if(16>e)return 1+o;if(65536>e)return 3+o;if(4294967296>e)return 5+o;throw new Error(\"Array or object too long 0x\"+e.toString(16))}throw new Error(\"Unknown type \"+t)}function o(r){var t=new ArrayBuffer(i(r)),n=new DataView(t);return e(r,n,0),new Uint8Array(t)}function a(r,t,n){return t?new r(t.buffer,t.byteOffset,t.byteLength/(n||1)):void 0}function u(r){return a(DataView,r)}function s(r){return a(Uint8Array,r)}function f(r){return a(Int8Array,r)}function c(r){return a(Int32Array,r,4)}function d(r){return a(Float32Array,r,4)}function l(r,t){var n=r.length/2;t||(t=new Int16Array(n));for(var e=0,i=0;n>e;++e,i+=2)t[e]=r[i]<<8^r[i+1]<<0;return t}function v(r,t){var n=r.length;t||(t=new Uint8Array(2*n));for(var e=u(t),i=0;n>i;++i)e.setInt16(2*i,r[i]);return s(t)}function g(r,t){var n=r.length/4;t||(t=new Int32Array(n));for(var e=0,i=0;n>e;++e,i+=4)t[e]=r[i]<<24^r[i+1]<<16^r[i+2]<<8^r[i+3]<<0;return t}function L(r,t){var n=r.length;t||(t=new Uint8Array(4*n));for(var e=u(t),i=0;n>i;++i)e.setInt32(4*i,r[i]);return s(t)}function h(r,t){var n=r.length;t||(t=new Float32Array(n/4));for(var e=u(t),i=u(r),o=0,a=0,s=n/4;s>o;++o,a+=4)e.setFloat32(a,i.getFloat32(a),!0);return t}function y(r,t,n){var e=r.length,i=1/t;n||(n=new Float32Array(e));for(var o=0;e>o;++o)n[o]=r[o]*i;return n}function m(r,t,n){var e=r.length;n||(n=new Int32Array(e));for(var i=0;e>i;++i)n[i]=Math.round(r[i]*t);return n}function p(r,t){var n,e;if(!t){var i=0;for(n=0,e=r.length;e>n;n+=2)i+=r[n+1];t=new r.constructor(i)}var o=0;for(n=0,e=r.length;e>n;n+=2)for(var a=r[n],u=r[n+1],s=0;u>s;++s)t[o]=a,++o;return t}function U(r){if(0===r.length)return new Int32Array;var t,n,e=2;for(t=1,n=r.length;n>t;++t)r[t-1]!==r[t]&&(e+=2);var i=new Int32Array(e),o=0,a=1;for(t=1,n=r.length;n>t;++t)r[t-1]!==r[t]?(i[o]=r[t-1],i[o+1]=a,a=1,o+=2):++a;return i[o]=r[r.length-1],i[o+1]=a,i}function b(r,t){var n=r.length;t||(t=new r.constructor(n)),n&&(t[0]=r[0]);for(var e=1;n>e;++e)t[e]=r[e]+t[e-1];return t}function I(r,t){var n=r.length;t||(t=new r.constructor(n)),t[0]=r[0];for(var e=1;n>e;++e)t[e]=r[e]-r[e-1];return t}function w(r,t){var n,e,i=r instanceof Int8Array?127:32767,o=-i-1,a=r.length;if(!t){var u=0;for(n=0;a>n;++n)r[n]<i&&r[n]>o&&++u;t=new Int32Array(u)}for(n=0,e=0;a>n;){for(var s=0;r[n]===i||r[n]===o;)s+=r[n],++n;s+=r[n],++n,t[e]=s,++e}return t}function C(r,t){var n,e=t?127:32767,i=-e-1,o=r.length,a=0;for(n=0;o>n;++n){var u=r[n];0===u?++a:a+=u===e||u===i?2:u>0?Math.ceil(u/e):Math.ceil(u/i)}var s=t?new Int8Array(a):new Int16Array(a),f=0;for(n=0;o>n;++n){var u=r[n];if(u>=0)for(;u>=e;)s[f]=e,++f,u-=e;else for(;i>=u;)s[f]=i,++f,u-=i;s[f]=u,++f}return s}function A(r,t){return b(p(r),t)}function x(r){return U(I(r))}function M(r,t,n){return y(p(r,c(n)),t,n)}function F(r,t){return U(m(r,t))}function S(r,t,n){return y(b(r,c(n)),t,n)}function E(r,t,n){return I(m(r,t),n)}function N(r,t,n){return y(w(r,c(n)),t,n)}function O(r,t,n){var e=w(r,c(n));return S(e,t,d(e))}function T(r,t,n){return C(E(r,t),n)}function k(r){var t=u(r),n=t.getInt32(0),e=t.getInt32(4),i=r.subarray(8,12),r=r.subarray(12);return[n,r,e,i]}function j(r,t,n,e){var i=new ArrayBuffer(12+e.byteLength),o=new Uint8Array(i),a=new DataView(i);return a.setInt32(0,r),a.setInt32(4,t),n&&o.set(n,8),o.set(e,12),o}function q(r){var t=r.length,n=s(r);return j(2,t,void 0,n)}function D(r){var t=r.length,n=L(r);return j(4,t,void 0,n)}function P(r,t){var n=r.length/t,e=L([t]),i=s(r);return j(5,n,e,i)}function z(r){var t=r.length,n=L(U(r));return j(6,t,void 0,n)}function B(r){var t=r.length,n=L(x(r));return j(8,t,void 0,n)}function V(r,t){var n=r.length,e=L([t]),i=L(F(r,t));return j(9,n,e,i)}function G(r,t){var n=r.length,e=L([t]),i=v(T(r,t));return j(10,n,e,i)}function R(r){var t={};return rr.forEach(function(n){void 0!==r[n]&&(t[n]=r[n])}),r.bondAtomList&&(t.bondAtomList=D(r.bondAtomList)),r.bondOrderList&&(t.bondOrderList=q(r.bondOrderList)),t.xCoordList=G(r.xCoordList,1e3),t.yCoordList=G(r.yCoordList,1e3),t.zCoordList=G(r.zCoordList,1e3),r.bFactorList&&(t.bFactorList=G(r.bFactorList,100)),r.atomIdList&&(t.atomIdList=B(r.atomIdList)),r.altLocList&&(t.altLocList=z(r.altLocList)),r.occupancyList&&(t.occupancyList=V(r.occupancyList,100)),t.groupIdList=B(r.groupIdList),t.groupTypeList=D(r.groupTypeList),r.secStructList&&(t.secStructList=q(r.secStructList,1)),r.insCodeList&&(t.insCodeList=z(r.insCodeList)),r.sequenceIndexList&&(t.sequenceIndexList=B(r.sequenceIndexList)),t.chainIdList=P(r.chainIdList,4),r.chainNameList&&(t.chainNameList=P(r.chainNameList,4)),t}function H(r){function t(r){for(var t={},n=0;r>n;n++){var e=o();t[e]=o()}return t}function n(t){var n=r.subarray(a,a+t);return a+=t,n}function e(t){var n=r.subarray(a,a+t);a+=t;var e=65535;if(t>e){for(var i=[],o=0;o<n.length;o+=e)i.push(String.fromCharCode.apply(null,n.subarray(o,o+e)));return i.join(\"\")}return String.fromCharCode.apply(null,n)}function i(r){for(var t=new Array(r),n=0;r>n;n++)t[n]=o();return t}function o(){var o,s,f=r[a];if(0===(128&f))return a++,f;if(128===(240&f))return s=15&f,a++,t(s);if(144===(240&f))return s=15&f,a++,i(s);if(160===(224&f))return s=31&f,a++,e(s);if(224===(224&f))return o=u.getInt8(a),a++,o;switch(f){case 192:return a++,null;case 194:return a++,!1;case 195:return a++,!0;case 196:return s=u.getUint8(a+1),a+=2,n(s);case 197:return s=u.getUint16(a+1),a+=3,n(s);case 198:return s=u.getUint32(a+1),a+=5,n(s);case 202:return o=u.getFloat32(a+1),a+=5,o;case 203:return o=u.getFloat64(a+1),a+=9,o;case 204:return o=r[a+1],a+=2,o;case 205:return o=u.getUint16(a+1),a+=3,o;case 206:return o=u.getUint32(a+1),a+=5,o;case 208:return o=u.getInt8(a+1),a+=2,o;case 209:return o=u.getInt16(a+1),a+=3,o;case 210:return o=u.getInt32(a+1),a+=5,o;case 217:return s=u.getUint8(a+1),a+=2,e(s);case 218:return s=u.getUint16(a+1),a+=3,e(s);case 219:return s=u.getUint32(a+1),a+=5,e(s);case 220:return s=u.getUint16(a+1),a+=3,i(s);case 221:return s=u.getUint32(a+1),a+=5,i(s);case 222:return s=u.getUint16(a+1),a+=3,t(s);case 223:return s=u.getUint32(a+1),a+=5,t(s)}throw new Error(\"Unknown type 0x\"+f.toString(16))}var a=0,u=new DataView(r.buffer);return o()}function W(r,t,n,e){switch(r){case 1:return h(t);case 2:return f(t);case 3:return l(t);case 4:return g(t);case 5:return s(t);case 6:return p(g(t),new Uint8Array(n));case 7:return p(g(t));case 8:return A(g(t));case 9:return M(g(t),g(e)[0]);case 10:return O(l(t),g(e)[0]);case 11:return y(l(t),g(e)[0]);case 12:return N(l(t),g(e)[0]);case 13:return N(f(t),g(e)[0]);case 14:return w(l(t));case 15:return w(f(t))}}function X(r,t){t=t||{};var n=t.ignoreFields,e={};return nr.forEach(function(t){var i=n?-1!==n.indexOf(t):!1,o=r[t];i||void 0===o||(o instanceof Uint8Array?e[t]=W.apply(null,k(o)):e[t]=o)}),e}function J(r){return String.fromCharCode.apply(null,r).replace(/\\0/g,\"\")}function K(r,t,n){n=n||{};var e,i,o,a,u,s,f=n.firstModelOnly,c=t.onModel,d=t.onChain,l=t.onGroup,v=t.onAtom,g=t.onBond,L=0,h=0,y=0,m=0,p=0,U=-1,b=r.chainNameList,I=r.secStructList,w=r.insCodeList,C=r.sequenceIndexList,A=r.atomIdList,x=r.bFactorList,M=r.altLocList,F=r.occupancyList,S=r.bondAtomList,E=r.bondOrderList;for(e=0,i=r.chainsPerModel.length;i>e&&!(f&&L>0);++e){var N=r.chainsPerModel[L];for(c&&c({chainCount:N,modelIndex:L}),o=0;N>o;++o){var O=r.groupsPerChain[h];if(d){var T=J(r.chainIdList.subarray(4*h,4*h+4)),k=null;b&&(k=J(b.subarray(4*h,4*h+4))),d({groupCount:O,chainIndex:h,modelIndex:L,chainId:T,chainName:k})}for(a=0;O>a;++a){var j=r.groupList[r.groupTypeList[y]],q=j.atomNameList.length;if(l){var D=null;I&&(D=I[y]);var P=null;r.insCodeList&&(P=String.fromCharCode(w[y]));var z=null;C&&(z=C[y]),l({atomCount:q,groupIndex:y,chainIndex:h,modelIndex:L,groupId:r.groupIdList[y],groupType:r.groupTypeList[y],groupName:j.groupName,singleLetterCode:j.singleLetterCode,chemCompType:j.chemCompType,secStruct:D,insCode:P,sequenceIndex:z})}for(u=0;q>u;++u){if(v){var B=null;A&&(B=A[m]);var V=null;x&&(V=x[m]);var G=null;M&&(G=String.fromCharCode(M[m]));var R=null;F&&(R=F[m]),v({atomIndex:m,groupIndex:y,chainIndex:h,modelIndex:L,atomId:B,element:j.elementList[u],atomName:j.atomNameList[u],formalCharge:j.formalChargeList[u],xCoord:r.xCoordList[m],yCoord:r.yCoordList[m],zCoord:r.zCoordList[m],bFactor:V,altLoc:G,occupancy:R})}m+=1}if(g){var H=j.bondAtomList;for(u=0,s=j.bondOrderList.length;s>u;++u)g({atomIndex1:m-q+H[2*u],atomIndex2:m-q+H[2*u+1],bondOrder:j.bondOrderList[u]})}y+=1}h+=1}if(p=U+1,U=m-1,g&&S)for(u=0,s=S.length;s>u;u+=2){var W=S[u],X=S[u+1];(W>=p&&U>=W||X>=p&&U>=X)&&g({atomIndex1:W,atomIndex2:X,bondOrder:E?E[u/2]:null})}L+=1}}function Q(r){return o(R(r))}function Y(r,t){r instanceof ArrayBuffer&&(r=new Uint8Array(r));var n;return n=r instanceof Uint8Array?H(r):r,X(n,t)}function Z(r,t,n,e){function i(){try{var r=Y(o.response);n(r)}catch(t){e(t)}}var o=new XMLHttpRequest;o.addEventListener(\"load\",i,!0),o.addEventListener(\"error\",e,!0),o.responseType=\"arraybuffer\",o.open(\"GET\",t+r.toUpperCase()),o.send()}function $(r,t,n){Z(r,or,t,n)}function _(r,t,n){Z(r,ar,t,n)}var rr=[\"mmtfVersion\",\"mmtfProducer\",\"unitCell\",\"spaceGroup\",\"structureId\",\"title\",\"depositionDate\",\"releaseDate\",\"experimentalMethods\",\"resolution\",\"rFree\",\"rWork\",\"bioAssemblyList\",\"ncsOperatorList\",\"entityList\",\"groupList\",\"numBonds\",\"numAtoms\",\"numGroups\",\"numChains\",\"numModels\",\"groupsPerChain\",\"chainsPerModel\"],tr=[\"xCoordList\",\"yCoordList\",\"zCoordList\",\"groupIdList\",\"groupTypeList\",\"chainIdList\",\"bFactorList\",\"atomIdList\",\"altLocList\",\"occupancyList\",\"secStructList\",\"insCodeList\",\"sequenceIndexList\",\"chainNameList\",\"bondAtomList\",\"bondOrderList\"],nr=rr.concat(tr),er=\"v1.1.0dev\",ir=\"//mmtf.rcsb.org/v1.0/\",or=ir+\"full/\",ar=ir+\"reduced/\";r.encode=Q,r.decode=Y,r.traverse=K,r.fetch=$,r.fetchReduced=_,r.version=er,r.fetchUrl=or,r.fetchReducedUrl=ar,r.encodeMsgpack=o,r.encodeMmtf=R,r.decodeMsgpack=H,r.decodeMmtf=X});","module.exports = __WEBPACK_EXTERNAL_MODULE__535__;","module.exports = __WEBPACK_EXTERNAL_MODULE__698__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar defaults = {\n    lines: 12,\n    length: 7,\n    width: 5,\n    radius: 10,\n    scale: 1.0,\n    corners: 1,\n    color: '#000',\n    fadeColor: 'transparent',\n    animation: 'spinner-line-fade-default',\n    rotate: 0,\n    direction: 1,\n    speed: 1,\n    zIndex: 2e9,\n    className: 'spinner',\n    top: '50%',\n    left: '50%',\n    shadow: '0 0 1px transparent', // prevent aliased lines\n    position: 'absolute',\n};\nvar Spinner = /** @class */ (function () {\n    function Spinner(opts) {\n        if (opts === void 0) { opts = {}; }\n        this.opts = __assign(__assign({}, defaults), opts);\n    }\n    /**\n     * Adds the spinner to the given target element. If this instance is already\n     * spinning, it is automatically removed from its previous target by calling\n     * stop() internally.\n     */\n    Spinner.prototype.spin = function (target) {\n        this.stop();\n        this.el = document.createElement('div');\n        this.el.className = this.opts.className;\n        this.el.setAttribute('role', 'progressbar');\n        this.el.style.position = this.opts.position;\n        this.el.style.width = \"0\";\n        this.el.style.zIndex = this.opts.zIndex.toString();\n        this.el.style.left = this.opts.left;\n        this.el.style.top = this.opts.top;\n        this.el.style.transform = \"scale(\".concat(this.opts.scale, \")\");\n        if (target) {\n            target.insertBefore(this.el, target.firstChild || null);\n        }\n        drawLines(this.el, this.opts);\n        return this;\n    };\n    /**\n     * Stops and removes the Spinner.\n     * Stopped spinners may be reused by calling spin() again.\n     */\n    Spinner.prototype.stop = function () {\n        if (this.el) {\n            if (this.el.parentNode) {\n                this.el.parentNode.removeChild(this.el);\n            }\n            this.el = undefined;\n        }\n        return this;\n    };\n    return Spinner;\n}());\nexport { Spinner };\n/**\n * Returns the line color from the given string or array.\n */\nfunction getColor(color, idx) {\n    return typeof color == 'string' ? color : color[idx % color.length];\n}\n/**\n * Internal method that draws the individual lines.\n */\nfunction drawLines(el, opts) {\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\n    var shadow = 'none';\n    if (opts.shadow === true) {\n        shadow = '0 2px 4px #000'; // default shadow\n    }\n    else if (typeof opts.shadow === 'string') {\n        shadow = opts.shadow;\n    }\n    var shadows = parseBoxShadow(shadow);\n    for (var i = 0; i < opts.lines; i++) {\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\n        var backgroundLine = document.createElement('div');\n        backgroundLine.style.position = 'absolute';\n        backgroundLine.style.top = \"\".concat(-opts.width / 2, \"px\");\n        backgroundLine.style.width = (opts.length + opts.width) + 'px';\n        backgroundLine.style.height = opts.width + 'px';\n        backgroundLine.style.background = getColor(opts.fadeColor, i);\n        backgroundLine.style.borderRadius = borderRadius;\n        backgroundLine.style.transformOrigin = 'left';\n        backgroundLine.style.transform = \"rotate(\".concat(degrees, \"deg) translateX(\").concat(opts.radius, \"px)\");\n        var delay = i * opts.direction / opts.lines / opts.speed;\n        delay -= 1 / opts.speed; // so initial animation state will include trail\n        var line = document.createElement('div');\n        line.style.width = '100%';\n        line.style.height = '100%';\n        line.style.background = getColor(opts.color, i);\n        line.style.borderRadius = borderRadius;\n        line.style.boxShadow = normalizeShadow(shadows, degrees);\n        line.style.animation = \"\".concat(1 / opts.speed, \"s linear \").concat(delay, \"s infinite \").concat(opts.animation);\n        backgroundLine.appendChild(line);\n        el.appendChild(backgroundLine);\n    }\n}\nfunction parseBoxShadow(boxShadow) {\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\n    var shadows = [];\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\n        var shadow = _a[_i];\n        var matches = shadow.match(regex);\n        if (matches === null) {\n            continue; // invalid syntax\n        }\n        var x = +matches[2];\n        var y = +matches[5];\n        var xUnits = matches[4];\n        var yUnits = matches[7];\n        if (x === 0 && !xUnits) {\n            xUnits = yUnits;\n        }\n        if (y === 0 && !yUnits) {\n            yUnits = xUnits;\n        }\n        if (xUnits !== yUnits) {\n            continue; // units must match to use as coordinates\n        }\n        shadows.push({\n            prefix: matches[1] || '', // could have value of 'inset' or undefined\n            x: x,\n            y: y,\n            xUnits: xUnits,\n            yUnits: yUnits,\n            end: matches[8],\n        });\n    }\n    return shadows;\n}\n/**\n * Modify box-shadow x/y offsets to counteract rotation\n */\nfunction normalizeShadow(shadows, degrees) {\n    var normalized = [];\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\n        var shadow = shadows_1[_i];\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\n    }\n    return normalized.join(', ');\n}\nfunction convertOffset(x, y, degrees) {\n    var radians = degrees * Math.PI / 180;\n    var sin = Math.sin(radians);\n    var cos = Math.cos(radians);\n    return [\n        Math.round((x * cos + y * sin) * 1000) / 1000,\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\n    ];\n}\n","//----------------------------------------------------------------------------\r\n// Timer\r\n\r\nexport default class Timer {\r\n  constructor() {\r\n    this.startTime = 0;\r\n    this.oldTime = 0;\r\n    this.elapsedTime = 0;\r\n    this.running = false;\r\n  }\r\n\r\n  start() {\r\n    this.startTime = Timer.now();\r\n    this.oldTime = this.startTime;\r\n    this.running = true;\r\n  }\r\n\r\n  stop() {\r\n    this.getElapsedTime();\r\n    this.running = false;\r\n  }\r\n\r\n  getElapsedTime() {\r\n    this.update();\r\n    return this.elapsedTime;\r\n  }\r\n\r\n  update() {\r\n    let delta = 0;\r\n    if (this.running) {\r\n      const newTime = Timer.now();\r\n      delta = 0.001 * (newTime - this.oldTime);\r\n      this.oldTime = newTime;\r\n      this.elapsedTime += delta;\r\n    }\r\n\r\n    return delta;\r\n  }\r\n}\r\n\r\nTimer.now = (function () {\r\n  const p = typeof window !== 'undefined' && window.performance;\r\n  return (p && p.now) ? p.now.bind(p) : Date.now;\r\n}());\r\n","import Timer from '../Timer';\r\n\r\nconst { now } = Timer;\r\n\r\nfunction createElement(tag, id, css) {\r\n  const element = document.createElement(tag);\r\n  element.id = id;\r\n  element.style.cssText = css;\r\n  return element;\r\n}\r\n\r\nclass Stats {\r\n  constructor() {\r\n    this.domElement = createElement('div', 'stats', 'padding:8px');\r\n    this._text = createElement('p', 'fps', 'margin:0;color:silver;font-size:large');\r\n    this.domElement.appendChild(this._text);\r\n\r\n    this._startTime = now();\r\n    this._prevTime = this._startTime;\r\n\r\n    this._deltas = new Array(20);\r\n    this._index = 0;\r\n    this._total = 0.0;\r\n    this._count = 0;\r\n  }\r\n\r\n  end() {\r\n    const time = now();\r\n    const delta = time - this._startTime;\r\n\r\n    if (this._count < this._deltas.length) {\r\n      this._count++;\r\n    } else {\r\n      this._total -= this._deltas[this._index];\r\n    }\r\n    this._total += delta;\r\n    this._deltas[this._index] = delta;\r\n    this._index = (this._index + 1) % this._deltas.length;\r\n\r\n    this.ms = this._total / this._count;\r\n    this.fps = 1000 / this.ms;\r\n\r\n    if (time > this._prevTime + 1000) {\r\n      this._text.textContent = this.fps.toPrecision(2);\r\n      this._prevTime = time;\r\n    }\r\n\r\n    return time;\r\n  }\r\n\r\n  update() {\r\n    this._startTime = this.end();\r\n  }\r\n\r\n  show(on) {\r\n    if (on === undefined) {\r\n      on = true;\r\n    }\r\n    this.domElement.style.display = on ? 'block' : 'none';\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","/**\r\n * This class introduces the simplest event system.\r\n */\r\n\r\nimport _ from 'lodash';\r\n\r\nfunction isUndefOrEqual(param, value) {\r\n  return !param || param === value;\r\n}\r\n\r\n/**\r\n * Creates empty dispatcher.\r\n *\r\n * @exports EventDispatcher\r\n * @constructor\r\n */\r\nfunction EventDispatcher() {\r\n  this._handlers = {};\r\n}\r\n\r\n/**\r\n * Binds callback on specific event type. Optional `context` parameter\r\n * could be used as 'this' for the `callback`.\r\n * @param {string}   type       Event name.\r\n * @param {function} callback   Callback function.\r\n * @param {Object}   [context] 'This' object for the callback.\r\n */\r\nEventDispatcher.prototype.addEventListener = function (type, callback, context) {\r\n  let handlers = this._handlers[type];\r\n\r\n  if (!handlers) {\r\n    this._handlers[type] = [];\r\n    handlers = this._handlers[type];\r\n  }\r\n\r\n  const params = [callback, context];\r\n  function _checkPar(par) {\r\n    return par[0] === params[0] && par[1] === params[1];\r\n  }\r\n\r\n  if (_.find(handlers, _checkPar) === undefined) {\r\n    handlers.push(params);\r\n  }\r\n};\r\n\r\n/**\r\n * Removes a previously-bound callback function from an object.\r\n * If no `context` is specified, all versions of the `callback` with different\r\n * contexts will be removed.\r\n * If no `callback` is specified, all callbacks of the `type` will be removed.\r\n * If no `type` is specified, callbacks for all events will be removed.\r\n * @param {?string}  [type]      Event type.\r\n * @param {function} [callback]  Callback function.\r\n * @param {Object}   [context]  'This' object for the callback.\r\n */\r\nEventDispatcher.prototype.removeEventListener = function (type, callback, context) {\r\n  const self = this;\r\n  _.forEach(self._handlers, (handler, ev) => {\r\n    _.remove(handler, (values) => isUndefOrEqual(type, ev)\r\n          && isUndefOrEqual(callback, values[0])\r\n          && isUndefOrEqual(context, values[1] || self));\r\n  });\r\n\r\n  this._handlers = _.omitBy(self._handlers, (handler) => handler.length === 0);\r\n};\r\n\r\n/**\r\n * Makes all the callbacks for the specific `event` to trigger.\r\n * @param {Object} event      Event.\r\n * @param {string} event.type Type of the event.\r\n */\r\nEventDispatcher.prototype.dispatchEvent = function (event) {\r\n  const self = this;\r\n\r\n  _.forEach(this._handlers[event.type], (callback) => {\r\n    const context = callback[1] || self;\r\n    callback[0].apply(context, [event]);\r\n  });\r\n};\r\n\r\nexport default EventDispatcher;\r\n","/**\r\n * This module contains class for logging.\r\n * Returns an instance of a logger that have already been created.\r\n * Allows users to log messages for five different levels,\r\n * enable console output and catch signal on each message.\r\n */\r\nimport _ from 'lodash';\r\nimport EventDispatcher from './EventDispatcher';\r\n\r\nconst priorities = {\r\n  debug: 0,\r\n  info: 1,\r\n  report: 2,\r\n  warn: 3,\r\n  error: 4,\r\n};\r\n\r\n/**\r\n * Create new Logger.\r\n *\r\n * @exports Logger\r\n * @extends EventDispatcher\r\n * @constructor\r\n */\r\nfunction Logger() {\r\n  EventDispatcher.call(this);\r\n  /** Boolean flag that toggles output to browser console.\r\n   * @type {boolean}\r\n   */\r\n  this.console = false;\r\n  this._priority = priorities.warn;\r\n}\r\n\r\nLogger.prototype = Object.create(EventDispatcher.prototype);\r\nLogger.prototype.constructor = Logger;\r\n\r\n/**\r\n * Create new clean instance of the logger.\r\n * @returns {Logger}\r\n */\r\nLogger.prototype.instantiate = function () {\r\n  return new Logger();\r\n};\r\n\r\nfunction verify(number) {\r\n  if (!_.isNumber(number)) {\r\n    throw new Error('Wrong log level specified!');\r\n  }\r\n  return number;\r\n}\r\n\r\n/**\r\n * @property {string} current threshold for signals and console output.\r\n * @name Logger#level\r\n */\r\nObject.defineProperty(Logger.prototype, 'level', {\r\n  get() {\r\n    return _.findKey(priorities, (value) => value === this._priority);\r\n  },\r\n  set(level) {\r\n    this._priority = verify(priorities[level]);\r\n  },\r\n});\r\n\r\n/**\r\n * Returns the list of all possible level values.\r\n * @returns {Array}\r\n */\r\nLogger.prototype.levels = function () {\r\n  return Object.keys(priorities);\r\n};\r\n\r\n/**\r\n * Add new message with specified level.\r\n * @param {string} level - level of the message, must be one of the\r\n * {'debug' | 'info' | 'report' | 'warn' | 'error'}\r\n * @param {string} message\r\n */\r\nLogger.prototype.message = function (level, message) {\r\n  const priority = verify(priorities[level]);\r\n  this._message(priority, message);\r\n};\r\n\r\n/**\r\n * Shortcut for message('debug', ...);\r\n * @param message\r\n */\r\nLogger.prototype.debug = function (message) {\r\n  this._message(priorities.debug, message);\r\n};\r\n\r\n/**\r\n * Shortcut for message('info', ...);\r\n * @param message\r\n */\r\nLogger.prototype.info = function (message) {\r\n  this._message(priorities.info, message);\r\n};\r\n\r\n/**\r\n * Shortcut for message('report', ...);\r\n * @param message\r\n */\r\nLogger.prototype.report = function (message) {\r\n  this._message(priorities.report, message);\r\n};\r\n\r\n/**\r\n * Shortcut for message('warn', ...);\r\n * @param message\r\n */\r\nLogger.prototype.warn = function (message) {\r\n  this._message(priorities.warn, message);\r\n};\r\n\r\n/**\r\n * Shortcut for message('error', ...);\r\n * @param message\r\n */\r\nLogger.prototype.error = function (message) {\r\n  this._message(priorities.error, message);\r\n};\r\n\r\n/**\r\n * Add new message with specified priority.\r\n * @param {number} priority - priority of the message\r\n * @param {string} message\r\n * @private\r\n */\r\nLogger.prototype._message = function (priority, message) {\r\n  if (priority < this._priority) {\r\n    return;\r\n  }\r\n  const level = _.findKey(priorities, (value) => value === priority);\r\n  message = String(message);\r\n  if (this.console) {\r\n    const output = `miew:${level}: ${message}`;\r\n    if (level === 'error') {\r\n      console.error(output); // NOSONAR\r\n    } else if (level === 'warn') {\r\n      console.warn(output); // NOSONAR\r\n    } else {\r\n      console.log(output); // NOSONAR\r\n    }\r\n  }\r\n  this.dispatchEvent({ type: 'message', level, message });\r\n};\r\n\r\nexport default new Logger();\r\n","import _ from 'lodash';\r\nimport logger from './utils/logger';\r\n\r\nconst browserType = {\r\n  DEFAULT: 0,\r\n  SAFARI: 1,\r\n};\r\n//----------------------------------------------------------------------------\r\n// Query string\r\n\r\n/**\r\n * Escape only dangerous chars in a query string component, use a plus instead of a space.\r\n *\r\n * [RFC 3986](https://tools.ietf.org/html/rfc3986) allows the following chars in the query (see 3.4):\r\n *\r\n *       A-Z a-z 0-9 - _ . ~ ! $ & ' ( ) * + , ; = : @ / ?\r\n *\r\n * For query string elements we need to escape ampersand, equal sign, and plus,\r\n * but encodeURIComponent() function encodes anything except for the following:\r\n *\r\n *       A-Z a-z 0-9 - _ . ~ ! ' ( ) *\r\n *\r\n * @param {string} text - key or value to encode\r\n * @param {string} excludeExp - regexp for symbols to exclude from encoding\r\n * @returns {string} encoded string\r\n */\r\nfunction encodeQueryComponent(text, excludeExp) {\r\n  const encode = (code) => String.fromCharCode(parseInt(code.substr(1), 16));\r\n  return encodeURIComponent(text).replace(excludeExp, encode).replace(/%20/g, '+');\r\n}\r\n\r\n/**\r\n * Unescape dangerous chars in a query string component.\r\n *\r\n * @param {string} text - encoded key or value\r\n * @returns {string} decoded string\r\n * @see {@link encodeQueryComponent}\r\n */\r\nfunction decodeQueryComponent(text) {\r\n  return decodeURIComponent(text.replace(/\\+/g, ' '));\r\n}\r\n\r\n/**\r\n * Parse URL and extract an array of parameters.\r\n * @param {string?} url - URL or query string to parse\r\n * @returns {Array} array of (key, value) pairs.\r\n */\r\nfunction getUrlParameters(url) {\r\n  url = url || window.location.search;\r\n\r\n  const query = url.substring(url.indexOf('?') + 1);\r\n  const search = /([^&=]+)=?([^&]*)/g;\r\n  const result = [];\r\n  let match;\r\n\r\n  while ((match = search.exec(query)) !== null) { // eslint-disable-line no-cond-assign\r\n    result.push([decodeQueryComponent(match[1]), decodeQueryComponent(match[2])]);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Parse URL and extract an array of parameters as a hash.\r\n * @param {string?} url - URL or query string to parse\r\n * @returns {Object}\r\n */\r\nfunction getUrlParametersAsDict(url) {\r\n  const result = {};\r\n  const a = getUrlParameters(url);\r\n  for (let i = 0; i < a.length; ++i) {\r\n    const [key, value] = a[i];\r\n    result[key] = value;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction resolveURL(str) {\r\n  if (typeof URL !== 'undefined') {\r\n    try {\r\n      if (typeof window !== 'undefined') {\r\n        return new URL(str, window.location).href;\r\n      }\r\n      return new URL(str).href;\r\n    } catch (error) {\r\n      // IE 11 has a URL object with no constructor available so just try a different approach instead\r\n    }\r\n  }\r\n  if (typeof document !== 'undefined') {\r\n    const anchor = document.createElement('a');\r\n    anchor.href = str;\r\n    return anchor.href;\r\n  }\r\n  return str;\r\n}\r\n\r\n/**\r\n * Generates regular expression object that includes all symbols\r\n * listed in the argument\r\n * @param symbolStr {string} - String containing characters list.\r\n * @returns {RegExp} - Regular expression.\r\n */\r\nfunction generateRegExp(symbolStr) {\r\n  const symbolList = [];\r\n\r\n  for (let i = 0, n = symbolStr.length; i < n; ++i) {\r\n    symbolList[symbolList.length] = symbolStr[i].charCodeAt(0).toString(16);\r\n  }\r\n\r\n  const listStr = symbolList.join('|');\r\n\r\n  return new RegExp(`%(?:${listStr})`, 'gi');\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// Create HTML element\r\n\r\nfunction createElement(tag, attrs, content) {\r\n  const element = document.createElement(tag);\r\n  let i;\r\n  let n;\r\n  if (attrs) {\r\n    const keys = Object.keys(attrs);\r\n    for (i = 0, n = keys.length; i < n; ++i) {\r\n      const key = keys[i];\r\n      element.setAttribute(key, attrs[key]);\r\n    }\r\n  }\r\n  if (content) {\r\n    if (!(content instanceof Array)) {\r\n      content = [content];\r\n    }\r\n    for (i = 0, n = content.length; i < n; ++i) {\r\n      const child = content[i];\r\n      if (typeof child === 'string') {\r\n        element.appendChild(document.createTextNode(child));\r\n      } else if (child instanceof HTMLElement) {\r\n        element.appendChild(child);\r\n      }\r\n    }\r\n  }\r\n  return element;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// Easy inheritance\r\n\r\n/**\r\n * Derive the class from the base.\r\n * @param cls {function} - Class (constructor) to derive.\r\n * @param base {function} - Class (constructor) to derive from.\r\n * @param members {object=} - Optional instance members to add.\r\n * @param statics {object=} - Optional static class members to add.\r\n * @returns {function} Original class.\r\n */\r\nfunction deriveClass(cls, base, members, statics) {\r\n  cls.prototype = _.assign(Object.create(base.prototype), { constructor: cls }, members);\r\n  if (statics) {\r\n    _.assign(cls, statics);\r\n  }\r\n  return cls;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// Deep prototyping\r\n\r\nfunction deriveDeep(obj, needZeroOwnProperties) {\r\n  let res = obj;\r\n  let i;\r\n  let n;\r\n  if (obj instanceof Array) {\r\n    res = new Array(obj.length);\r\n    for (i = 0, n = obj.length; i < n; ++i) {\r\n      res[i] = deriveDeep(obj[i]);\r\n    }\r\n  } else if (obj instanceof Object) {\r\n    res = Object.create(obj);\r\n    const keys = Object.keys(obj);\r\n    for (i = 0, n = keys.length; i < n; ++i) {\r\n      const key = keys[i];\r\n      const value = obj[key];\r\n      const copy = deriveDeep(value);\r\n      if (copy !== value) {\r\n        res[key] = copy;\r\n      }\r\n    }\r\n    if (needZeroOwnProperties && Object.keys(res).length > 0) {\r\n      res = Object.create(res);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// Colors\r\n\r\nfunction hexColor(color) {\r\n  const hex = (`0000000${color.toString(16)}`).substr(-6);\r\n  return `#${hex}`;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// Debug tracing\r\n\r\nfunction DebugTracer(namespace) {\r\n  let enabled = false;\r\n\r\n  this.enable = function (on) {\r\n    enabled = on;\r\n  };\r\n\r\n  let indent = 0;\r\n  const methods = Object.keys(namespace);\r\n\r\n  function wrap(method_, name_) {\r\n    return function (...args) {\r\n      const spaces = DebugTracer.spaces.substr(0, indent * 2);\r\n      if (enabled) {\r\n        logger.debug(`${spaces + name_} {`);\r\n      }\r\n      indent++;\r\n      const result = method_.apply(this, args); // eslint-disable-line no-invalid-this\r\n      indent--;\r\n      if (enabled) {\r\n        logger.debug(`${spaces}} // ${name_}`);\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n\r\n  for (let i = 0, n = methods.length; i < n; ++i) {\r\n    const name = methods[i];\r\n    const method = namespace[name];\r\n    if (method instanceof Function && name !== 'constructor') {\r\n      namespace[name] = wrap(method, name);\r\n    }\r\n  }\r\n}\r\n\r\nDebugTracer.spaces = '                                                                                          ';\r\n\r\nclass OutOfMemoryError extends Error {\r\n  constructor(message) {\r\n    super();\r\n    this.name = 'OutOfMemoryError';\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nfunction allocateTyped(TypedArrayName, size) {\r\n  let result = null;\r\n  try {\r\n    result = new TypedArrayName(size);\r\n  } catch (e) {\r\n    if (e instanceof RangeError) {\r\n      throw new OutOfMemoryError(e.message);\r\n    } else {\r\n      throw e;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// Float array conversion\r\n\r\nfunction bytesToBase64(/** ArrayBuffer */ buffer) {\r\n  const bytes = new Uint8Array(buffer);\r\n  let binary = '';\r\n  for (let i = 0; i < bytes.byteLength; i++) {\r\n    binary += String.fromCharCode(bytes[i]);\r\n  }\r\n  return window.btoa(binary);\r\n}\r\n\r\nfunction bytesFromBase64(/** string */ str) {\r\n  const binary = window.atob(str);\r\n  const bytes = new Uint8Array(binary.length);\r\n  for (let i = 0; i < bytes.length; ++i) {\r\n    bytes[i] = binary[i].charCodeAt(0);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\nfunction arrayToBase64(/** number[] */ array, /** function */ TypedArrayClass) {\r\n  return bytesToBase64(new TypedArrayClass(array).buffer);\r\n}\r\n\r\nfunction arrayFromBase64(/** string */ str, /** function */ TypedArrayClass) {\r\n  return Array.prototype.slice.call(new TypedArrayClass(bytesFromBase64(str)));\r\n}\r\n\r\n// NOTE: this is 1-level comparison\r\nfunction compareOptionsWithDefaults(opts, defOpts) {\r\n  const optsStr = [];\r\n  if (defOpts && opts) {\r\n    const keys = Object.keys(opts);\r\n    for (let p = 0; p < keys.length; ++p) {\r\n      const key = keys[p];\r\n      const value = opts[key];\r\n      // TODO add processing for tree structure\r\n      if (!(value instanceof Object) && typeof defOpts[key] !== 'undefined' && defOpts[key] !== value) {\r\n        optsStr.push(`${key}:${value}`);\r\n      }\r\n    }\r\n    if (optsStr.length > 0) {\r\n      return `!${optsStr.join()}`;\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction isAlmostPlainObject(o) {\r\n  if (_.isPlainObject(o)) {\r\n    return true;\r\n  }\r\n  const proto = o && Object.getPrototypeOf(o);\r\n  return !!proto && !proto.hasOwnProperty('constructor') && isAlmostPlainObject(proto);\r\n}\r\n\r\n/**\r\n * Build an object that contains properties (and subproperties) of `src` different from those\r\n * in `dst`. Objects are parsed recursively, other values (including arrays) are compared for\r\n * equality using `_.isEqual()`.\r\n * @param {!object} src - a new object to compare, may contain changed or new properties\r\n * @param {!object} dst - an old reference object\r\n */\r\nfunction objectsDiff(src, dst) {\r\n  const diff = {};\r\n  _.forIn(src, (srcValue, key) => {\r\n    const dstValue = dst[key];\r\n    if (isAlmostPlainObject(srcValue) && isAlmostPlainObject(dstValue)) {\r\n      const deepDiff = objectsDiff(srcValue, dstValue);\r\n      if (!_.isEmpty(deepDiff)) {\r\n        diff[key] = deepDiff;\r\n      }\r\n    } else if (!_.isEqual(srcValue, dstValue)) {\r\n      diff[key] = srcValue;\r\n    }\r\n  });\r\n  return diff;\r\n}\r\n\r\nfunction forInRecursive(object, callback) {\r\n  function iterateThrough(obj, prefix) {\r\n    _.forIn(obj, (value, key) => {\r\n      const newPref = prefix + (prefix.length > 0 ? '.' : '');\r\n      if (value instanceof Object) {\r\n        iterateThrough(value, newPref + key);\r\n      } else if (value !== undefined) {\r\n        callback(value, newPref + key);\r\n      }\r\n    });\r\n  }\r\n  iterateThrough(object, '');\r\n}\r\n\r\nfunction enquoteString(value) {\r\n  if (_.isString(value)) {\r\n    return `\"${value.replace(/\"/g, '\\\\\"')}\"`;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction unquoteString(value) {\r\n  if (!_.isString(value)) {\r\n    return value;\r\n  }\r\n  if (value[0] === '\"' && value[value.length - 1] === '\"') {\r\n    value = value.slice(1, value.length - 1);\r\n    return value.replace(/\\\\\"/g, '\"');\r\n  }\r\n  if (value[0] === \"'\" && value[value.length - 1] === \"'\") {\r\n    value = value.slice(1, value.length - 1);\r\n    return value.replace(/\\\\'/g, \"'\");\r\n  }\r\n  throw new SyntaxError('Incorrect string format, can\\'t unqute it');\r\n}\r\n\r\nfunction getFileExtension(fileName) {\r\n  return fileName.slice((Math.max(0, fileName.lastIndexOf('.')) || Infinity));\r\n}\r\n\r\nfunction splitFileName(fileName) {\r\n  const ext = getFileExtension(fileName);\r\n  const name = fileName.slice(0, fileName.length - ext.length);\r\n  return [name, ext];\r\n}\r\n\r\nfunction dataUrlToBlob(url) {\r\n  const parts = url.split(/[:;,]/);\r\n  const partsCount = parts.length;\r\n  if (partsCount >= 3 && parts[partsCount - 2] === 'base64') {\r\n    return new Blob([bytesFromBase64(parts[partsCount - 1])]);\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction getBrowser() {\r\n  if (navigator.vendor && navigator.vendor.indexOf('Apple') > -1\r\n    && navigator.userAgent\r\n    && navigator.userAgent.indexOf('CriOS') === -1\r\n    && navigator.userAgent.indexOf('FxiOS') === -1) {\r\n    return browserType.SAFARI;\r\n  }\r\n  return browserType.DEFAULT;\r\n}\r\n\r\nfunction shotOpen(url) {\r\n  if (typeof window !== 'undefined') {\r\n    window.open().document.write(`<body style=\"margin:0\"><img src=\"${url}\" /></body>`);\r\n  }\r\n}\r\n\r\nfunction shotDownload(dataUrl, filename) {\r\n  if (!dataUrl || dataUrl.substr(0, 5) !== 'data:') {\r\n    return;\r\n  }\r\n  if (!filename) {\r\n    filename = ['screenshot-', +new Date(), '.png'].join('');\r\n  }\r\n  if (typeof window !== 'undefined' && window.navigator && window.navigator.msSaveBlob) {\r\n    window.navigator.msSaveBlob(dataUrlToBlob(dataUrl), filename);\r\n  } else if (typeof document !== 'undefined') {\r\n    const link = document.createElement('a');\r\n    link.download = filename;\r\n    link.innerHTML = 'download';\r\n    link.href = window.URL.createObjectURL(dataUrlToBlob(dataUrl));\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n}\r\n\r\nfunction download(data, filename, type) {\r\n  const blobData = new Blob([data]);\r\n\r\n  if (!filename) {\r\n    filename = ['data', +new Date()].join('');\r\n  }\r\n\r\n  if (!type) {\r\n    filename += blobData.type || '.bin';\r\n  } else {\r\n    filename += `.${type}`;\r\n  }\r\n\r\n  if (typeof window !== 'undefined' && window.navigator && window.navigator.msSaveBlob) {\r\n    window.navigator.msSaveBlob(blobData, filename);\r\n  } else if (typeof document !== 'undefined') {\r\n    const link = document.createElement('a');\r\n    link.download = filename;\r\n    link.innerHTML = 'download';\r\n    link.href = window.URL.createObjectURL(blobData);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n}\r\n\r\nfunction copySubArrays(src, dst, indices, itemSize) {\r\n  for (let i = 0, n = indices.length; i < n; ++i) {\r\n    for (let j = 0; j < itemSize; ++j) {\r\n      dst[i * itemSize + j] = src[indices[i] * itemSize + j];\r\n    }\r\n  }\r\n}\r\n\r\nfunction shallowCloneNode(node) {\r\n  const newNode = node.cloneNode(true);\r\n  newNode.worldPos = node.worldPos;\r\n  // .style property is readonly, so \"newNode.style = node.style;\" won't work (and we don't need it, right?)\r\n  return newNode;\r\n}\r\n\r\nconst unquotedStringRE = /^[a-zA-Z0-9_]*$/;\r\nconst enquoteHelper = ['\"', '', '\"'];\r\n\r\n// verify and correct if needed selctor identifier\r\nfunction correctSelectorIdentifier(value) {\r\n  if (unquotedStringRE.test(value)) {\r\n    return value;\r\n  }\r\n  // quote incorrect identifier\r\n  enquoteHelper[1] = value;\r\n  return enquoteHelper.join('');\r\n}\r\n\r\n/**\r\n * Concatenates two TypedArray. Doesn't check null refs o type equality\r\n * Attention! It must be use very rarely because requires memory reallocation every time. Use MergeTypedArraysUnsafe to\r\n * unite array of subarrays.\r\n * @param{TypedArray} first  - destination array\r\n * @param{TypedArray} second - source array\r\n * @returns{TypedArray} resulting concatenated array\r\n */\r\nfunction concatTypedArraysUnsafe(first, second) {\r\n  const result = new first.constructor(first.length + second.length);\r\n  result.set(first);\r\n  result.set(second, first.length);\r\n  return result;\r\n}\r\n\r\n/**\r\n * Merges array of TypedArray into TypedArray. Doesn't check null refs o type equality\r\n * @param{array} array  - source array of subarrays\r\n * @returns{TypedArray} resulting merged array\r\n */\r\nfunction mergeTypedArraysUnsafe(array) {\r\n  if (array.length <= 0) {\r\n    return null;\r\n  }\r\n  // count the size\r\n  const size = array.reduce((acc, cur) => acc + cur.length, 0);\r\n  // create combined array\r\n  const result = new array[0].constructor(size);\r\n  for (let i = 0, start = 0; i < array.length; i++) {\r\n    const count = array[i].length;\r\n    result.set(array[i], start);\r\n    start += count;\r\n  }\r\n  return result;\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n// Exports\r\n\r\nexport default {\r\n  browserType,\r\n  encodeQueryComponent,\r\n  decodeQueryComponent,\r\n  getUrlParameters,\r\n  getUrlParametersAsDict,\r\n  resolveURL,\r\n  generateRegExp,\r\n  createElement,\r\n  deriveClass,\r\n  deriveDeep,\r\n  hexColor,\r\n  DebugTracer,\r\n  OutOfMemoryError,\r\n  allocateTyped,\r\n  bytesFromBase64,\r\n  bytesToBase64,\r\n  arrayFromBase64,\r\n  arrayToBase64,\r\n  compareOptionsWithDefaults,\r\n  objectsDiff,\r\n  forInRecursive,\r\n  enquoteString,\r\n  unquoteString,\r\n  getBrowser,\r\n  shotOpen,\r\n  shotDownload,\r\n  copySubArrays,\r\n  shallowCloneNode,\r\n  correctSelectorIdentifier,\r\n  getFileExtension,\r\n  splitFileName,\r\n  download,\r\n  concatTypedArraysUnsafe,\r\n  mergeTypedArraysUnsafe,\r\n};\r\n","import EventDispatcher from './EventDispatcher';\r\n\r\nexport default class JobHandle extends EventDispatcher {\r\n  constructor() {\r\n    super();\r\n    this._shouldCancel = false;\r\n  }\r\n\r\n  cancel() {\r\n    this._shouldCancel = true;\r\n    this.dispatchEvent({ type: 'cancel' });\r\n  }\r\n\r\n  shouldCancel() {\r\n    return this._shouldCancel;\r\n  }\r\n\r\n  // slaves use this to notify master about their events\r\n  // master routes these notifications to a single event slot\r\n  notify(event) {\r\n    this.dispatchEvent({ type: 'notification', slaveEvent: event });\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport utils from './utils';\r\nimport EventDispatcher from './utils/EventDispatcher';\r\n\r\nconst VERSION = 0;\r\n\r\n//----------------------------------------------------------------------------\r\n// DEFAULT SETTINGS\r\n//----------------------------------------------------------------------------\r\n\r\n/**\r\n * Polygonal complexity settings.\r\n *\r\n * @typedef PolyComplexity\r\n * @property {number} poor\r\n * @property {number} low\r\n * @property {number} medium\r\n * @property {number} high\r\n * @property {number} ultra\r\n */\r\n\r\n/**\r\n * @alias SettingsObject\r\n * @namespace\r\n */\r\nconst defaults = {\r\n  /**\r\n   * Default options for all available modes.\r\n   * Use {@link Mode.id} as a dictionary key to access mode options.\r\n   *\r\n   * Usually you don't need to override these settings. You may specify mode options as a parameter during\r\n   * {@link Mode} construction.\r\n   *\r\n   * @memberof SettingsObject#\r\n   * @type {Object.<string, object>}\r\n   *\r\n   * @property {LinesModeOptions} LN - Lines mode options.\r\n   * @property {LicoriceModeOptions} LC - Licorice mode options.\r\n   * @property {BallsAndSticksModeOptions} BS - Balls and Sticks mode options.\r\n   * @property {VanDerWaalsModeOptions} VW - Van der Waals mode options.\r\n   * @property {TraceModeOptions} TR - Trace mode options.\r\n   * @property {TubeModeOptions} TU - Tube mode options.\r\n   * @property {CartoonModeOptions} CA - Cartoon mode options.\r\n   * @property {QuickSurfaceModeOptions} QS - Contact Surface mode options.\r\n   * @property {IsoSurfaceSASModeOptions} SA - Solvent Accessible Surface mode options.\r\n   * @property {IsoSurfaceSESModeOptions} SE - Solvent Excluded Surface mode options.\r\n   * @property {ContactSurfaceModeOptions} CS - Contact Surface mode options.\r\n   * @property {TextModeOptions} TX - Text mode options.\r\n   * @property {VolumeDensityModeOptions} VD - Volume Density mode options.\r\n   */\r\n  modes: {\r\n    //----------------------------------------------------------------------------\r\n    // BALLS AND STICKS\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Balls and Sticks mode options.\r\n     *\r\n     * @typedef BallsAndSticksModeOptions\r\n     *\r\n     * @property {number} atom - Sphere radius as a fraction of Van der Waals atom radius.\r\n     * @property {number} bond - Cylinder radius in angstroms.\r\n     * @property {number} space - Fraction of the space around one cylinder. Zero means that cylinder fills all\r\n     *   available space.\r\n     * @property {boolean} multibond - Toggles rendering of multiple ordered bonds.\r\n     * @property {number} aromrad - Minor radius of a torus for aromatic loops.\r\n     * @property {boolean} showarom - Toggles rendering of aromatic loops.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    BS: {\r\n      atom: 0.23,\r\n      bond: 0.15,\r\n      space: 0.5,\r\n      multibond: true,\r\n      aromrad: 0.1,\r\n      showarom: true,\r\n      polyComplexity: {\r\n        poor: 3,\r\n        low: 4,\r\n        medium: 6,\r\n        high: 12,\r\n        ultra: 32,\r\n      },\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // VAN DER WAALS\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Van der Waals mode options.\r\n     *\r\n     * @typedef VanDerWaalsModeOptions\r\n     *\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    VW: {\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 8,\r\n        high: 16,\r\n        ultra: 32,\r\n      },\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // LINES\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Lines mode options.\r\n     *\r\n     * @typedef LinesModeOptions\r\n     *\r\n     * @property {boolean} multibond - Flag, that toggles rendering of multiple ordered bonds.\r\n     * @property {boolean} showarom - Flag, that toggles rendering of aromatic loops.\r\n     * @property {number} offsarom - Offset between bonds and aromatic cycle.\r\n     * @property {number} chunkarom - Number of pieces in a-loop arc, corresponding to atom.\r\n     * @property {number} atom - Collision radius for atoms picking.\r\n     * @property {number} lineWidth - Line width in pixels (not used in thin lines).\r\n     */\r\n    LN: {\r\n      multibond: true,\r\n      showarom: true,\r\n      offsarom: 0.2,\r\n      chunkarom: 10,\r\n      atom: 0.23,\r\n      lineWidth: 2,\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // LICORICE\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Licorice mode options.\r\n     *\r\n     * @typedef LicoriceModeOptions\r\n     *\r\n     * @property {number} bond - Bond cylinder radius.\r\n     * @property {number} space - Fraction of the space around one cylinder. Zero means that cylinder fills all\r\n     *   available space.\r\n     * @property {boolean} multibond - Flag, that toggles rendering of multiple ordered bonds.\r\n     * @property {number} aromrad - Minor radius of a torus for aromatic loops.\r\n     * @property {boolean} showarom - Flag, that toggles rendering of aromatic loops.\r\n     * @property {PolyComplexity} polyComplexity - Poly complexity values for render modes.\r\n     */\r\n    LC: {\r\n      bond: 0.20,\r\n      space: 0.0,\r\n      multibond: true,\r\n      aromrad: 0.1,\r\n      showarom: true,\r\n      polyComplexity: {\r\n        poor: 3,\r\n        low: 4,\r\n        medium: 6,\r\n        high: 12,\r\n        ultra: 32,\r\n      },\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // SURFACE SAS\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Solvent Accessible Surface mode options.\r\n     *\r\n     * @typedef IsoSurfaceSASModeOptions\r\n     *\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {number} probeRadius - Radius of the probe.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    SA: {\r\n      zClip: false,\r\n      probeRadius: 1.5,\r\n      subset: '',\r\n      wireframe: false,\r\n      polyComplexity: {\r\n        poor: 6,\r\n        low: 8,\r\n        medium: 16,\r\n        high: 30,\r\n        ultra: 60,\r\n      },\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // SURFACE SES\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Solvent Excluded Surface mode options.\r\n     *\r\n     * @typedef IsoSurfaceSESModeOptions\r\n     *\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {number} probeRadius - Radius of the probe.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    SE: {\r\n      zClip: false,\r\n      probeRadius: 1.5,\r\n      subset: '',\r\n      wireframe: false,\r\n      polyComplexity: {\r\n        poor: 6,\r\n        low: 8,\r\n        medium: 16,\r\n        high: 30,\r\n        ultra: 60,\r\n      },\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // QUICK SURFACE\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Quick Surface mode options.\r\n     *\r\n     * @typedef QuickSurfaceModeOptions\r\n     *\r\n     * @property {number} isoValue - Isovalue of the surface to extract.\r\n     * @property {number} scale - Radius scale for the surface being built.\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} gaussLim - Gauss lim for coloring the bigger the value, the smoother our colors are.\r\n     * @property {PolyComplexity} gridSpacing - Poly complexity values for render modes. In this case the value\r\n     *   corresponds to the grid density.\r\n     */\r\n    QS: {\r\n      isoValue: 0.5,\r\n      gaussLim: {\r\n        poor: 1.5,\r\n        low: 2.0,\r\n        medium: 2.5,\r\n        high: 3.0,\r\n        ultra: 4.0,\r\n      },\r\n      scale: 1.0,\r\n      wireframe: false,\r\n      gridSpacing: {\r\n        poor: 2,\r\n        low: 1.5,\r\n        medium: 1,\r\n        high: 0.5,\r\n        ultra: 0.25,\r\n      },\r\n      subset: '',\r\n      zClip: false,\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // CONTACT SURFACE\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Contact Surface mode options.\r\n     *\r\n     * @typedef ContactSurfaceModeOptions\r\n     *\r\n     * @property {number} isoValue - Isovalue of the surface to extract.\r\n     * @property {number} probeRadius - Probe radius.\r\n     * @property {number} probePositions\r\n     * @property {boolean} zClip - Flag, that toggles z-clipping.\r\n     * @property {string} subset - Only parts of surface close to selected atoms will be visible.\r\n     *   Empty string means whole surface is visible.\r\n     * @property {boolean} wireframe - Flag that specifies whether or not surface rendered in wireframe mode.\r\n     * @property {PolyComplexity} polyComplexity - Radius scale for the surface being built.\r\n     *   Poly complexity values for render modes. In this case the value corresponds to the grid density.\r\n     */\r\n    CS: {\r\n      probeRadius: 1.4,\r\n      isoValue: 1.5,\r\n      wireframe: false,\r\n      probePositions: 30,\r\n      polyComplexity: {\r\n        poor: 0.5,\r\n        low: 1.0,\r\n        medium: 1.5,\r\n        high: 1.75,\r\n        ultra: 2.0,\r\n      },\r\n      subset: '',\r\n      zClip: false,\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // TRACE\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Trace mode options.\r\n     *\r\n     * @typedef TraceModeOptions\r\n     *\r\n     * @property {number} radius - Cylinder radius.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    TR: {\r\n      radius: 0.30,\r\n      polyComplexity: {\r\n        poor: 12,\r\n        low: 16,\r\n        medium: 32,\r\n        high: 64,\r\n        ultra: 64,\r\n      },\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // TUBE\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Tube mode options.\r\n     *\r\n     * @typedef TubeModeOptions\r\n     *\r\n     * @property {number} radius - Cylinder radius.\r\n     * @property {number} tension - Tension for interpolation.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     * @property {number} heightSegmentsRatio - Poly complexity multiplier for height segments.\r\n     */\r\n    TU: {\r\n      radius: 0.30,\r\n      heightSegmentsRatio: 1.5,\r\n      tension: -0.7,\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 10,\r\n        high: 18,\r\n        ultra: 34,\r\n      },\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // CARTOON\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Cartoon mode options.\r\n     *\r\n     * @typedef CartoonModeOptions\r\n     *\r\n     * @property {number} radius - Standard tube radius.\r\n     * @property {number} depth - Height of the secondary structure ribbon.\r\n     * @property {number} tension - Tension for interpolation.\r\n     * @proprety {object} ss - Secondary structure parameters.\r\n     * @proprety {object} ss.helix - Options for helices render.\r\n     * @proprety {number} ss.helix.width - Width of the secondary structure ribbon.\r\n     * @proprety {number} ss.helix.arrow - Secondary structure's arrow width.\r\n     * @proprety {object} ss.strand - Options for strands render.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     * polyComplexity must be even for producing symmetric arrows.\r\n     * @property {number} heightSegmentsRatio - Poly complexity multiplier for height segments.\r\n     */\r\n    CA: {\r\n      radius: 0.30,\r\n      depth: 0.25,\r\n      ss: {\r\n        helix: {\r\n          width: 1.0,\r\n          arrow: 2.0,\r\n        },\r\n        strand: {\r\n          width: 1.0,\r\n          arrow: 2.0,\r\n        },\r\n      },\r\n      heightSegmentsRatio: 1.5,\r\n      tension: -0.7,\r\n      polyComplexity: {\r\n        poor: 4,\r\n        low: 6,\r\n        medium: 10,\r\n        high: 18,\r\n        ultra: 34,\r\n      },\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // TEXT\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Text mode options.\r\n     *\r\n     * @typedef TextModeOptions\r\n     *\r\n     * @property {string} template - Format string for building output text.\r\n     * @property {string} horizontalAlign - Text alignment ('left', 'right', 'center').\r\n     * @property {string} verticalAlign - Vertical text box alignment ('top', 'bottom', 'middle').\r\n     * @property {number} dx - Text offset x in angstroms.\r\n     * @property {number} dy - Text offset y in angstroms.\r\n     * @property {number} dz - Text offset z in angstroms.\r\n     * @property {string} fg - Color rule for foreground.\r\n     * @property {string} bg - Color rule for background.\r\n     * @property {boolean} showBg - Flag, that toggles background rendering.\r\n     *\r\n     */\r\n    TX: {\r\n      template: '{{Chain}}.{{Residue}}{{Sequence}}.{{Name}}',\r\n      horizontalAlign: 'center',\r\n      verticalAlign: 'middle',\r\n      dx: 0,\r\n      dy: 0,\r\n      dz: 1,\r\n      fg: 'none',\r\n      bg: '0x202020',\r\n      showBg: true,\r\n    },\r\n\r\n    //----------------------------------------------------------------------------\r\n    // VOLUME DENSITY\r\n    //----------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Volume density mode options.\r\n     *\r\n     * @typedef VolumeDensityModeOptions\r\n     *\r\n     * @property {number} kSigma - Noise threshold coefficient.\r\n     * @property {boolean} frame - flag, that turns on box frame painting.\r\n     * @property {boolean} isoMode - flag, that turns on IsoSurface mode instead of Volume Rendering.\r\n     * @property {PolyComplexity} polyComplexity - Polygonal complexity settings for different resolutions.\r\n     */\r\n    VD: {\r\n      kSigma: 1.0,\r\n      kSigmaMed: 2.0,\r\n      kSigmaMax: 4.0,\r\n      frame: true,\r\n      isoMode: false,\r\n      polyComplexity: {\r\n        poor: 2,\r\n        low: 3,\r\n        medium: 4,\r\n        high: 8,\r\n        ultra: 10,\r\n      },\r\n    },\r\n  },\r\n\r\n  /**\r\n   * Default options for all available colorers.\r\n   * Use {@link Colorer.id} as a dictionary key to access colorer options.\r\n   *\r\n   * Usually you don't need to override these settings. You may specify colorer options as a parameter during\r\n   * {@link Colorer} construction.\r\n   *\r\n   * Not all colorers have options.\r\n   *\r\n   * @memberof SettingsObject#\r\n   * @type {Object.<string, object>}\r\n   *\r\n   * @property {ElementColorerOptions} EL - Element colorer options.\r\n   * @property {SequenceColorerOptions} SQ - Sequence colorer options.\r\n   * @property {MoleculeColorerOptions} MO - Molecule colorer options.\r\n   * @property {UniformColorerOptions} UN - Uniform colorer options.\r\n   * @property {ConditionalColorerOptions} CO - Conditional colorer options.\r\n   * @property {TemperatureColorerOptions} TM - Temperature colorer options.\r\n   * @property {OccupancyColorerOptions} OC - Occupancy colorer options.\r\n   * @property {HydrophobicityColorerOptions} HY - Hydrophobicity colorer options.\r\n   */\r\n  colorers: {\r\n    /**\r\n     * Element colorer options.\r\n     *\r\n     * @typedef ElementColorerOptions\r\n     *\r\n     * @property {number} carbon - Carbon color or -1 to use default.\r\n     */\r\n    EL: {\r\n      carbon: -1,\r\n    },\r\n\r\n    /**\r\n     * Uniform colorer options.\r\n     *\r\n     * @typedef UniformColorerOptions\r\n     *\r\n     * @property {number} color - Single color to paint with.\r\n     */\r\n    UN: {\r\n      color: 0xFFFFFF,\r\n    },\r\n\r\n    /**\r\n     * Conditional colorer options.\r\n     *\r\n     * @typedef ConditionalColorerOptions\r\n     *\r\n     * @property {string} subset - Selector string.\r\n     * @property {number} color - Color of selected atoms.\r\n     * @property {number} baseColor - Color of other atoms.\r\n     */\r\n    CO: {\r\n      subset: 'charged',\r\n      color: 0xFF0000,\r\n      baseColor: 0xFFFFFF,\r\n    },\r\n\r\n    /**\r\n     * Carbon colorer options.\r\n     *\r\n     * @typedef CarbonColorerOptions\r\n     *\r\n     * @property {number} color - Single color to paint carbons\r\n     * @property {number} factor - Color factor for not carbon atoms.\r\n     */\r\n    CB: {\r\n      color: 0x909090,\r\n      factor: 0.6,\r\n    },\r\n\r\n    /**\r\n     * Sequence colorer options.\r\n     *\r\n     * @typedef SequenceColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    SQ: {\r\n      gradient: 'rainbow',\r\n    },\r\n\r\n    /**\r\n     * Temperature colorer options.\r\n     *\r\n     * @typedef TemperatureColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     * @property {number} min - Minimal temperature.\r\n     * @property {number} max - Maximal temperature.\r\n     */\r\n    TM: {\r\n      gradient: 'temp',\r\n      min: 5,\r\n      max: 40,\r\n    },\r\n\r\n    /**\r\n     * Occupancy colorer options.\r\n     *\r\n     * @typedef OccupancyColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    OC: {\r\n      gradient: 'reds',\r\n    },\r\n\r\n    /**\r\n     * Hydrophobicity colorer options.\r\n     *\r\n     * @typedef HydrophobicityColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    HY: {\r\n      gradient: 'blue-red',\r\n    },\r\n\r\n    /**\r\n     * Molecule colorer options.\r\n     *\r\n     * @typedef MoleculeColorerOptions\r\n     *\r\n     * @property {string} gradient - Name of gradient to use.\r\n     */\r\n    MO: {\r\n      gradient: 'rainbow',\r\n    },\r\n  },\r\n\r\n  /*\r\n   * Use antialiasing in WebGL.\r\n   * @type {boolean}\r\n   */\r\n  antialias: true,\r\n\r\n  /*\r\n   * Camera field of view in degrees.\r\n   * @type {number}\r\n   */\r\n  camFov: 45.0,\r\n\r\n  /*\r\n   * Camera near plane distance.\r\n   * @type {number}\r\n   */\r\n  camNear: 0.5,\r\n\r\n  /*\r\n   * Camera far plane distance.\r\n   * @type {number}\r\n   */\r\n  camFar: 100.0,\r\n\r\n  camDistance: 2.5,\r\n\r\n  radiusToFit: 1.0,\r\n\r\n  /**\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fogNearFactor: 0.5, // [0, 1]\r\n\r\n  /**\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fogFarFactor: 1, // [0, 1]\r\n  fogAlpha: 1.0,\r\n  fogColor: 0x000000,\r\n  fogColorEnable: false,\r\n\r\n  /**\r\n   * Palette used for molecule coloring.\r\n   * @type {string}\r\n   */\r\n  palette: 'JM',\r\n\r\n  /*\r\n   * Geometry resolution.\r\n   * @type {string}\r\n   */\r\n  resolution: 'medium',\r\n\r\n  autoResolution: false/* true */,\r\n\r\n  autoPreset: true,\r\n\r\n  preset: 'default', // TODO: remove 'preset' from settings, implement autodetection\r\n\r\n  presets: {\r\n    // Default\r\n    default: [{\r\n      mode: 'BS',\r\n      colorer: 'EL',\r\n      selector: 'all',\r\n      material: 'SF',\r\n    }],\r\n\r\n    empty: [],\r\n\r\n    // Wireframe\r\n    wire: [{\r\n      mode: 'LN',\r\n      colorer: 'EL',\r\n      selector: 'all',\r\n      material: 'SF',\r\n    }],\r\n\r\n    // Small molecules\r\n    small: [{\r\n      mode: 'BS',\r\n      colorer: 'EL',\r\n      selector: 'all',\r\n      material: 'SF',\r\n    }],\r\n\r\n    // Proteins, nucleic acids etc.\r\n    macro: [{\r\n      mode: 'CA',\r\n      colorer: 'SS',\r\n      selector: 'not hetatm',\r\n      material: 'SF',\r\n    }, {\r\n      mode: 'BS',\r\n      colorer: 'EL',\r\n      selector: 'hetatm and not water',\r\n      material: 'SF',\r\n    }],\r\n  },\r\n\r\n  objects: {\r\n    line: {\r\n      color: 0xFFFFFFFF,\r\n      dashSize: 0.3,\r\n      gapSize: 0.05,\r\n    },\r\n  },\r\n\r\n  //----------------------------------------------------------------------------\r\n\r\n  bg: {\r\n    color: 0x202020,\r\n    transparent: false,\r\n  },\r\n\r\n  draft: {\r\n    clipPlane: false,\r\n    clipPlaneFactor: 0.5,\r\n    clipPlaneSpeed: 0.00003,\r\n  },\r\n\r\n  /*\r\n     * Separate group for plugins.\r\n     * Each plugin handles its field by itself.\r\n     */\r\n  plugins: {\r\n\r\n  },\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  axes: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fog: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fps: true,\r\n\r\n  /**\r\n   * Switch using of z-sprites for sphere and cylinder geometry\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  zSprites: true,\r\n\r\n  isoSurfaceFakeOpacity: true,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  suspendRender: true,\r\n\r\n  nowater: false,\r\n\r\n  /**\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  autobuild: true,\r\n\r\n  /**\r\n   * Anti-aliasing.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  fxaa: true,\r\n  /**\r\n   * Outline depths\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  outline: {\r\n    on: false,\r\n    color: 0x000000,\r\n    threshold: 0.1,\r\n    thickness: 1,\r\n  },\r\n\r\n  /**\r\n   * Ambient Occlusion special effect.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  ao: false,\r\n\r\n  /**\r\n   * Shadows options.\r\n   *\r\n   * @property {boolean} shadowMap - enable/disable.\r\n   * @property {string} basic/percentage-closer filtering/non-uniform randomizing pcf.\r\n   * @property {number} radius for percentage-closer filtering.\r\n   */\r\n  shadow: {\r\n    on: false,\r\n    type: 'random'/* basic, pcf, random */,\r\n    radius: 1.0,\r\n  },\r\n\r\n  /**\r\n   * Auto-rotation with constant speed.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  autoRotation: 0.0,\r\n\r\n  /**\r\n   * Set maximum fps for animation.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  maxfps: 30,\r\n\r\n  /**\r\n   * Set fbx output precision.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  fbxprec: 4,\r\n\r\n  /**\r\n   * Auto-rotation axis.\r\n   *\r\n   * - true:  complex auto-rotation is about vertical axis\r\n   * - false: rotation axis is defined by last user rotation\r\n   *\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  autoRotationAxisFixed: true,\r\n\r\n  /**\r\n   * Enable zooming with mouse wheel or pinch gesture.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  zooming: true,\r\n\r\n  /**\r\n   * Enable picking atoms & residues with left mouse button or touch.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  picking: true,\r\n\r\n  /**\r\n   * Set picking mode ('atom', 'residue', 'chain', 'molecule').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  pick: 'atom',\r\n\r\n  /**\r\n   * Make \"component\" and \"fragment\" editing modes available.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  editing: false,\r\n\r\n  /**\r\n   * Detect aromatic loops.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  aromatic: false,\r\n\r\n  /**\r\n   * Load only one biological unit from all those described in PDB file.\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  singleUnit: true,\r\n\r\n  /**\r\n   * Set stereo mode ('NONE', 'SIMPLE', 'DISTORTED', 'ANAGLYPH', 'WEBVR').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  stereo: 'NONE',\r\n\r\n  /**\r\n   * Enable smooth transition between views\r\n   * @type {boolean}\r\n   * @instance\r\n   */\r\n  interpolateViews: true,\r\n\r\n  /**\r\n   * Set transparency mode ('standard', 'prepass').\r\n   * @type {string}\r\n   * @instance\r\n   */\r\n  transparency: 'prepass',\r\n\r\n  /**\r\n   * Mouse translation speed.\r\n   * @type {number}\r\n   * @instance\r\n   */\r\n  translationSpeed: 2,\r\n\r\n  debug: {\r\n    example: 3.5,\r\n    text: 'hello!',\r\n    good: true,\r\n    ssaoKernelRadius: 0.7,\r\n    ssaoFactor: 0.7,\r\n    stereoBarrel: 0.25,\r\n  },\r\n  use: {\r\n    multiFile: false,\r\n  },\r\n};\r\n\r\n//----------------------------------------------------------------------------\r\n// SETTINGS CLASS\r\n//----------------------------------------------------------------------------\r\n\r\nfunction Settings() {\r\n  EventDispatcher.call(this);\r\n\r\n  this.old = null;\r\n  this.now = {};\r\n  this._changed = {};\r\n\r\n  this.reset();\r\n}\r\n\r\nutils.deriveClass(Settings, EventDispatcher, {\r\n  defaults,\r\n\r\n  set(path, value) {\r\n    if (_.isString(path)) {\r\n      const oldValue = _.get(this.now, path);\r\n      if (oldValue !== value) {\r\n        _.set(this.now, path, value);\r\n        this._notifyChange(path, value);\r\n      }\r\n    } else {\r\n      const diff = utils.objectsDiff(path, this.now);\r\n      if (!_.isEmpty(diff)) {\r\n        _.merge(this.now, diff);\r\n        this._notifyChanges(diff);\r\n      }\r\n    }\r\n  },\r\n\r\n  get(path, defaultValue) {\r\n    return _.get(this.now, path, defaultValue);\r\n  },\r\n\r\n  reset() {\r\n    const diff = utils.objectsDiff(defaults, this.now);\r\n    this.now = _.cloneDeep(defaults);\r\n    this.old = null;\r\n    this._notifyChanges(diff);\r\n    this._changed = {};\r\n  },\r\n\r\n  checkpoint() {\r\n    this.old = _.cloneDeep(this.now);\r\n    this._changed = {};\r\n  },\r\n\r\n  _notifyChange(path, value) {\r\n    this._changed[path] = true;\r\n    this.dispatchEvent({ type: `change:${path}`, value });\r\n  },\r\n\r\n  _notifyChanges(diff) {\r\n    utils.forInRecursive(diff, (deepValue, deepPath) => {\r\n      this._notifyChange(deepPath, deepValue);\r\n    });\r\n  },\r\n\r\n  changed() {\r\n    if (!this.old) {\r\n      return [];\r\n    }\r\n    const { old, now } = this;\r\n    const keys = _.filter(Object.keys(this._changed), (key) => _.get(old, key) !== _.get(now, key));\r\n    return keys;\r\n  },\r\n\r\n  applyDiffs(diffs) {\r\n    if (diffs.hasOwnProperty('VERSION') && diffs.VERSION !== VERSION) {\r\n      throw new Error('Settings version does not match!');\r\n    }\r\n    // VERSION shouldn't be presented inside settings structure\r\n    delete diffs.VERSION;\r\n    this.reset();\r\n    this.set(diffs);\r\n  },\r\n\r\n  getDiffs(versioned) {\r\n    const diffs = utils.objectsDiff(this.now, defaults);\r\n    if (versioned) {\r\n      diffs.VERSION = VERSION;\r\n    }\r\n    return diffs;\r\n  },\r\n\r\n  setPluginOpts(plugin, opts) {\r\n    defaults.plugins[plugin] = _.cloneDeep(opts);\r\n    this.now.plugins[plugin] = _.cloneDeep(opts);\r\n  },\r\n});\r\n\r\nexport default new Settings();\r\n","import _ from 'lodash';\r\nimport settings from './settings';\r\nimport utils from './utils';\r\nimport logger from './utils/logger';\r\n\r\nlet repIndex = 0;\r\n\r\nfunction asBoolean(value) {\r\n  return !(!value || value === '0' || (_.isString(value) && value.toLowerCase() === 'false'));\r\n}\r\n\r\nconst adapters = {\r\n  string: String,\r\n  number: Number,\r\n  boolean: asBoolean,\r\n};\r\n\r\n// Level 1 assignment symbol\r\nconst cL1Ass = '=';\r\n\r\nconst cOptsSep = '!';\r\n// Level 2 (options) assignment symbol\r\nconst cL2Ass = ':';\r\n// Level 2 (options) separator symbol\r\nconst cLSep = ',';\r\n\r\nconst cCommonIgnoreSymbols = '$;@/?';\r\n/**\r\n * We may (and should) leave as is for better readability:\r\n *\r\n *        $ , ; : @ / ?\r\n */\r\n/**\r\n * Generate regular expression for symbols excluded for first level encryption\r\n */\r\nfunction getLevel1ExcludedExpr() {\r\n  const cLevel1Ignores = ':,';\r\n  return utils.generateRegExp(cCommonIgnoreSymbols + cLevel1Ignores);\r\n}\r\n\r\n/**\r\n * Generate regular expression for symbols excluded for first level encryption\r\n * (options, etc, ..)\r\n */\r\nfunction getLevel2ExcludedExpr() {\r\n  const cLevel2Ignores = ' ';\r\n  return utils.generateRegExp(cCommonIgnoreSymbols + cLevel2Ignores);\r\n}\r\n\r\nconst cL1ExclExpr = getLevel1ExcludedExpr();\r\nfunction encodeQueryComponentL1(value) {\r\n  return utils.encodeQueryComponent(value, cL1ExclExpr);\r\n}\r\n\r\nconst cL2ExclExpr = getLevel2ExcludedExpr();\r\nfunction encodeQueryComponentL2(value) {\r\n  return utils.encodeQueryComponent(value, cL2ExclExpr);\r\n}\r\n\r\nfunction ensureRepList(opts) {\r\n  let { reps } = opts;\r\n  if (!reps) {\r\n    const { presets } = settings.now;\r\n    let preset = opts.preset || settings.now.preset;\r\n    reps = presets[preset];\r\n    if (!reps) {\r\n      logger.warn(`Unknown preset \"${preset}\"`);\r\n      [preset] = Object.keys(presets);\r\n      reps = presets[preset]; // fall back to any preset\r\n    }\r\n    opts.preset = preset;\r\n    opts.reps = utils.deriveDeep(reps, true);\r\n  }\r\n}\r\n\r\nfunction ensureRepAssign(opts, prop, value) {\r\n  ensureRepList(opts);\r\n  const rep = opts.reps[repIndex];\r\n  // prop specified twice therefore start new rep by cloning the current\r\n  if (rep.hasOwnProperty(prop)) {\r\n    repIndex = opts.reps.length;\r\n    opts.reps[repIndex] = utils.deriveDeep(rep, true);\r\n  }\r\n  if (value !== undefined) {\r\n    opts.reps[repIndex][prop] = value;\r\n  }\r\n}\r\n\r\nfunction addObject(opts, params, options) {\r\n  if (opts._objects === undefined) {\r\n    opts._objects = [];\r\n  }\r\n\r\n  const [type, newOpts] = options;\r\n  const newObj = {\r\n    type,\r\n    params,\r\n  };\r\n\r\n  if (newOpts !== undefined) {\r\n    newObj.opts = newOpts;\r\n  }\r\n\r\n  opts._objects[opts._objects.length] = newObj;\r\n}\r\n\r\nfunction parseParams(str, params) {\r\n  const sep = str.indexOf(',');\r\n  if (sep >= 0) {\r\n    params.push(str.substr(sep + 1).split(','));\r\n    return str.substr(0, sep);\r\n  }\r\n  // keep this untouched if no params were extracted\r\n  return str;\r\n}\r\n\r\nfunction extractArgs(input, defaultsDict, params) {\r\n  if (input) {\r\n    const bang = input.indexOf(cOptsSep);\r\n    const inputVal = parseParams(input.substr(0, bang >= 0 ? bang : undefined), params);\r\n    if (bang >= 0) {\r\n      const args = input.substr(bang + 1).split(cLSep);\r\n      input = inputVal;\r\n      if (defaultsDict) {\r\n        const defaults = defaultsDict[input];\r\n        const opts = utils.deriveDeep(defaults, true);\r\n        args.forEach((arg) => {\r\n          const pair = arg.split(cL2Ass, 2);\r\n          const key = decodeURIComponent(pair[0]);\r\n          const value = decodeURIComponent(pair[1]);\r\n          const adapter = adapters[typeof _.get(defaults, key)];\r\n          if (adapter) {\r\n            _.set(opts, key, adapter(value));\r\n          } else {\r\n            logger.warn(`Unknown argument \"${key}\" for option \"${input}\"`);\r\n          }\r\n        });\r\n        if (Object.keys(opts).length > 0) {\r\n          input = [input, opts];\r\n        }\r\n      }\r\n    } else {\r\n      input = inputVal;\r\n    }\r\n  }\r\n  return input;\r\n}\r\n\r\nconst actions = {\r\n\r\n  l: 'load',\r\n  load: String,\r\n  t: 'type',\r\n  type: String,\r\n  v: 'view',\r\n  view: String,\r\n  u: 'unit',\r\n  unit: Number,\r\n  menu: asBoolean,\r\n\r\n  // Commands\r\n\r\n  o: 'object',\r\n  object(value, opts) {\r\n    const params = [];\r\n    let options = extractArgs(value, settings.defaults.objects, params);\r\n    if (!Array.isArray(options)) {\r\n      options = [options];\r\n    }\r\n    addObject(opts, params[0], options);\r\n  },\r\n\r\n  p: 'preset',\r\n  preset(value, opts) {\r\n    opts.preset = value;\r\n    opts.reps = null;\r\n    ensureRepList(opts);\r\n  },\r\n\r\n  r: 'rep',\r\n  rep(value, opts) {\r\n    ensureRepList(opts);\r\n    repIndex = Number(value);\r\n    // clamp the index to one greater than the last\r\n    repIndex = repIndex <= opts.reps.length ? (repIndex < 0 ? 0 : repIndex) : opts.reps.length;\r\n    // create a new rep if it is adjacent to the existing ones\r\n    if (repIndex === opts.reps.length) {\r\n      // if there is no rep to derive from, derive from the first rep of the default\r\n      opts.reps[repIndex] = repIndex > 0 ? utils.deriveDeep(opts.reps[repIndex - 1], true)\r\n        : utils.deriveDeep(settings.defaults.presets.default[0], true);\r\n    }\r\n  },\r\n\r\n  s: 'select',\r\n  select(value, opts) {\r\n    ensureRepAssign(opts, 'selector', value);\r\n  },\r\n\r\n  m: 'mode',\r\n  mode(value, opts) {\r\n    ensureRepAssign(opts, 'mode', extractArgs(value, settings.defaults.modes));\r\n  },\r\n\r\n  c: 'color',\r\n  color(value, opts) {\r\n    ensureRepAssign(opts, 'colorer', extractArgs(value, settings.defaults.colorers));\r\n  },\r\n\r\n  mt: 'material',\r\n  material(value, opts) {\r\n    ensureRepAssign(opts, 'material', extractArgs(value, settings.defaults.materials));\r\n  },\r\n\r\n  dup(value, opts) {\r\n    ensureRepList(opts);\r\n    const { reps } = opts;\r\n    const rep = reps[repIndex];\r\n    repIndex = reps.length;\r\n    reps[repIndex] = utils.deriveDeep(rep, true);\r\n  },\r\n\r\n  // Settings shortcuts\r\n\r\n  ar: 'autoResolution',\r\n};\r\n\r\nfunction _fromArray(entries) {\r\n  repIndex = 0;\r\n\r\n  const opts = {};\r\n  for (let i = 0, n = entries.length; i < n; ++i) {\r\n    const /** string[] */ entry = entries[i];\r\n    let /** string? */ key = entry[0];\r\n    const /** string? */ value = entry[1];\r\n    let /** function|string? */ action = actions[key];\r\n\r\n    // unwind shortcuts and aliases\r\n    while (_.isString(action)) {\r\n      key = action;\r\n      action = actions[key];\r\n    }\r\n\r\n    // either set a property or use specialized parser\r\n    if (!action) {\r\n      const adapter = adapters[typeof _.get(settings.defaults, key)];\r\n      if (adapter) {\r\n        _.set(opts, `settings.${key}`, adapter(value));\r\n      } else {\r\n        logger.warn(`Unknown option \"${key}\"`);\r\n      }\r\n    } else if (_.isFunction(action)) {\r\n      const result = action(value, opts);\r\n      if (result !== undefined) {\r\n        opts[key] = result;\r\n      }\r\n    }\r\n  }\r\n\r\n  return opts;\r\n}\r\n\r\nfunction fromAttr(attr) {\r\n  return _fromArray(utils.getUrlParameters(`?${attr || ''}`));\r\n}\r\n\r\nfunction fromURL(url) {\r\n  return _fromArray(utils.getUrlParameters(url));\r\n}\r\n\r\nfunction _processOptsForURL(opts) {\r\n  const str = [];\r\n  let i = 0;\r\n  utils.forInRecursive(opts, (value, key) => {\r\n    str[i++] = encodeQueryComponentL2(key) + cL2Ass + encodeQueryComponentL2(value);\r\n  });\r\n  return str.join(cLSep);\r\n}\r\n\r\nfunction _processArgsForURL(args) {\r\n  if (!_.isArray(args)) {\r\n    return args;\r\n  }\r\n  if (args.length < 2) {\r\n    return args[0];\r\n  }\r\n  return `${args[0]}${cOptsSep}${_processOptsForURL(args[1])}`;\r\n}\r\n\r\nfunction _processObjForURL(objOpts) {\r\n  if (!objOpts || !objOpts.type) {\r\n    return undefined;\r\n  }\r\n  let res = objOpts.type;\r\n  if (_.isArray(objOpts.params) && objOpts.params.length > 0) {\r\n    res += `,${objOpts.params.join(',')}`;\r\n  }\r\n  if (objOpts.opts) {\r\n    res += cOptsSep + _processOptsForURL(objOpts.opts);\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction toURL(opts) {\r\n  const stringList = [];\r\n  let idx = 0;\r\n\r\n  function checkAndAdd(prefix, value) {\r\n    if (value !== null && value !== undefined) {\r\n      stringList[idx++] = encodeQueryComponentL1(prefix)\r\n                            + cL1Ass + encodeQueryComponentL1(value);\r\n    }\r\n  }\r\n\r\n  function addReps(repList) {\r\n    if (!repList) {\r\n      return;\r\n    }\r\n    for (let i = 0, n = repList.length; i < n; ++i) {\r\n      if (_.isEmpty(repList[i])) {\r\n        continue;\r\n      }\r\n      checkAndAdd('r', i);\r\n      checkAndAdd('s', repList[i].selector);\r\n      checkAndAdd('m', _processArgsForURL(repList[i].mode));\r\n      checkAndAdd('c', _processArgsForURL(repList[i].colorer));\r\n      checkAndAdd('mt', _processArgsForURL(repList[i].material));\r\n    }\r\n  }\r\n\r\n  function addObjects(objList) {\r\n    if (!objList) {\r\n      return;\r\n    }\r\n    for (let i = 0, n = objList.length; i < n; ++i) {\r\n      checkAndAdd('o', _processObjForURL(objList[i]));\r\n    }\r\n  }\r\n\r\n  checkAndAdd('l', opts.load);\r\n  checkAndAdd('u', opts.unit);\r\n  checkAndAdd('p', opts.preset);\r\n  addReps(opts.reps);\r\n  addObjects(opts._objects);\r\n\r\n  checkAndAdd('v', opts.view);\r\n\r\n  utils.forInRecursive(opts.settings, (value, key) => {\r\n    // I heard these lines in the whispers of the Gods\r\n    // Handle preset setting in reps\r\n    if (key === 'preset') {\r\n      return;\r\n    }\r\n    checkAndAdd(key, value);\r\n  });\r\n\r\n  let url = '';\r\n  if (typeof window !== 'undefined') {\r\n    const { location } = window;\r\n    url = `${location.protocol}//${location.host}${location.pathname}`;\r\n  }\r\n  if (stringList.length > 0) {\r\n    url += `?${stringList.join('&')}`;\r\n  }\r\n\r\n  return url;\r\n}\r\n\r\nfunction _processOptsForScript(opts) {\r\n  const str = [];\r\n  let i = 0;\r\n  utils.forInRecursive(opts, (value, key) => {\r\n    str[i++] = `${key}=${utils.enquoteString(value)}`;\r\n  });\r\n  return str.join(' ');\r\n}\r\n\r\nfunction _processArgsForScript(args) {\r\n  if (!_.isArray(args)) {\r\n    return args;\r\n  }\r\n  if (args.length < 2) {\r\n    return args[0];\r\n  }\r\n  return `${args[0]} ${_processOptsForScript(args[1])}`;\r\n}\r\n\r\nfunction _processObjForScript(objOpts) {\r\n  if (!objOpts || !objOpts.type) {\r\n    return undefined;\r\n  }\r\n  let res = objOpts.type;\r\n  if (_.isArray(objOpts.params) && objOpts.params.length > 0) {\r\n    res += ` ${objOpts.params.map(utils.enquoteString).join(' ')}`;\r\n  }\r\n  if (objOpts.opts) {\r\n    res += ` ${_processOptsForScript(objOpts.opts)}`;\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction _processRepsForScript(rep, index) {\r\n  const repString = [];\r\n  let strIdx = 0;\r\n  function localAdd(prefix, value) {\r\n    if (value !== null && value !== undefined) {\r\n      repString[strIdx++] = prefix + value;\r\n    }\r\n  }\r\n  if (_.isEmpty(rep)) {\r\n    return null;\r\n  }\r\n  localAdd('', index);\r\n  localAdd('s=', utils.enquoteString(rep.selector));\r\n  localAdd('m=', _processArgsForScript(rep.mode));\r\n  localAdd('c=', _processArgsForScript(rep.colorer));\r\n  localAdd('mt=', _processArgsForScript(rep.material));\r\n  return repString.join(' ');\r\n}\r\n\r\nfunction toScript(opts) {\r\n  const commandsList = [];\r\n  let idx = 0;\r\n  function checkAndAdd(command, value, saveQuotes) {\r\n    if (value !== null && value !== undefined) {\r\n      const quote = (typeof value === 'string' && saveQuotes) ? '\"' : '';\r\n      commandsList[idx++] = `${command} ${quote}${value}${quote}`.trim();\r\n    }\r\n  }\r\n\r\n  function addReps(repList) {\r\n    if (!repList) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0, n = repList.length; i < n; ++i) {\r\n      checkAndAdd('rep', _processRepsForScript(repList[i], i));\r\n    }\r\n  }\r\n\r\n  function addObjects(objList) {\r\n    if (!objList) {\r\n      return;\r\n    }\r\n    for (let i = 0, n = objList.length; i < n; ++i) {\r\n      checkAndAdd('', _processObjForScript(objList[i]));\r\n    }\r\n  }\r\n\r\n  checkAndAdd('set', 'autobuild false');\r\n  checkAndAdd('load', opts.load, true);\r\n  checkAndAdd('unit', opts.unit);\r\n  checkAndAdd('preset', opts.preset);\r\n  addReps(opts.reps);\r\n  addObjects(opts._objects);\r\n\r\n  utils.forInRecursive(opts.settings, (value, key) => {\r\n    // I heard these lines in the whispers of the Gods\r\n    // Handle preset setting in reps\r\n    if (key === 'preset') {\r\n      return;\r\n    }\r\n    checkAndAdd(`set ${key}`, value, true);\r\n  });\r\n  checkAndAdd('view', opts.view);\r\n  checkAndAdd('set', 'autobuild true');\r\n  return commandsList.join('\\n');\r\n}\r\n\r\nexport default {\r\n  fromURL,\r\n  fromAttr,\r\n  adapters,\r\n  toURL,\r\n  toScript,\r\n};\r\n","/**\r\n * Atom measurements.\r\n *\r\n * @param {Residue} residue    - (required) Residue containing the atom\r\n * @param {string} name        - (required) Name, unique in the residue\r\n * @param {Element} type       - (required) Chemical element reference\r\n * @param {THREE.Vector3} position - Registered coordinates\r\n *\r\n * @param {number} role        - Role of atom inside monomer: Lead and wing are particularity interesting\r\n * @param {boolean} het        - Non-standard residue indicator\r\n *\r\n * @param {number} serial      - Serial number, unique in the model\r\n * @param {string} location    - Alternative location indicator (usually space or A-Z)\r\n * @param {number} occupancy   - Occupancy percentage, from 0 to 1\r\n * @param {number} temperature - Temperature\r\n * @param {number} charge      - Charge\r\n *\r\n * @exports Atom\r\n * @constructor\r\n */\r\n\r\nclass Atom {\r\n  constructor(residue, name, type, position, role, het, serial, location, occupancy, temperature, charge) {\r\n    this.index = -1;\r\n    this.residue = residue;\r\n    this.name = name;\r\n    this.element = type;\r\n    this.position = position;\r\n    this.role = role;\r\n    this.mask = 1 | 0;\r\n\r\n    this.het = het;\r\n\r\n    this.serial = serial;\r\n    this.location = (location || ' ').charCodeAt(0);\r\n    this.occupancy = occupancy || 1;\r\n    this.temperature = temperature;\r\n    this.charge = charge;\r\n    this.hydrogenCount = -1; // explicitly invalid\r\n    this.radicalCount = 0;\r\n    this.valence = -1; // explicitly invalid\r\n\r\n    this.bonds = [];\r\n\r\n    this.flags = 0x0000;\r\n    if (type.name === 'H') {\r\n      this.flags |= Atom.Flags.HYDROGEN;\r\n    } else if (type.name === 'C') {\r\n      this.flags |= Atom.Flags.CARBON;\r\n    }\r\n  }\r\n\r\n  isHet() {\r\n    return this.het;\r\n  }\r\n\r\n  isHydrogen() {\r\n    return this.element.number === 1;\r\n  }\r\n\r\n  getVisualName() {\r\n    const { name } = this;\r\n    if (name.length > 0) {\r\n      return name;\r\n    }\r\n    return this.element.name.trim();\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const { bonds } = this;\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i]);\r\n    }\r\n  }\r\n\r\n  getFullName() {\r\n    let name = '';\r\n    if (this.residue !== null) {\r\n      if (this.residue._chain !== null) {\r\n        name += `${this.residue._chain.getName()}.`;\r\n      }\r\n      name += `${this.residue._sequence}.`;\r\n    }\r\n    name += this.name;\r\n    return name;\r\n  }\r\n\r\n  /**\r\n   * Enumeration of atom flag values.\r\n   *\r\n   * @enum {number}\r\n   * @readonly\r\n   */\r\n  static Flags = {\r\n    CARBON: 0x0001,\r\n    // OXYGEN: 0x0002,\r\n    // NITROGEN: 0x0004,\r\n    HYDROGEN: 0x0008,\r\n    /** Non-polar hydrogen (it is also a HYDROGEN) */\r\n    NONPOLARH: 0x1008,\r\n  };\r\n}\r\n\r\nexport default Atom;\r\n","class Element {\r\n  constructor(number, name, fullName, weight, radius, radiusBonding, hValency) {\r\n    this.number = number;\r\n    this.name = name;\r\n    this.fullName = fullName;\r\n    this.weight = weight;\r\n    this.radius = radius;\r\n    this.radiusBonding = radiusBonding;\r\n    this.hydrogenValency = hValency;\r\n  }\r\n\r\n  static Constants = {\r\n    /* eslint-disable no-magic-numbers */\r\n    U1: 1,\r\n    Lead: 2,\r\n    U2: 3,\r\n    Wing: 4,\r\n    U18: 18,\r\n    /* eslint-enable no-magic-numbers */\r\n  };\r\n\r\n  static Role = {\r\n    /* eslint-disable no-magic-numbers */\r\n    N: Element.Constants.U1,\r\n    CA: Element.Constants.Lead,\r\n    C: Element.Constants.U2,\r\n    O: Element.Constants.Wing,\r\n    SG: Element.Constants.U18,\r\n    /* eslint-enable no-magic-numbers */\r\n  };\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\n  static ByAtomicNumber = [\r\n    /* eslint-disable no-magic-numbers */\r\n    null,\r\n    new Element(1, 'H', 'Hydrogen', 1.008, 1.2, 0.23, [1]),\r\n    new Element(2, 'HE', 'Helium', 4.003, 1.4, 0.93, [0]),\r\n    new Element(3, 'LI', 'Lithium', 6.941, 1.82, 0.68, [1]),\r\n    new Element(4, 'BE', 'Beryllium', 9.012, 1.7, 0.35, [2]),\r\n    new Element(5, 'B', 'Boron', 10.81, 2.08, 0.83, [3]),\r\n    new Element(6, 'C', 'Carbon', 12.011, 1.95, 0.68, [4]),\r\n    new Element(7, 'N', 'Nitrogen', 14.007, 1.85, 0.68, [3, 5]),\r\n    new Element(8, 'O', 'Oxygen', 15.999, 1.7, 0.68, [2, 4]),\r\n    new Element(9, 'F', 'Fluorine', 18.998, 1.73, 0.64, [1]),\r\n    new Element(10, 'NE', 'Neon', 20.18, 1.54, 1.12, [0]),\r\n    new Element(11, 'NA', 'Sodium', 22.99, 2.27, 0.97, [1]),\r\n    new Element(12, 'MG', 'Magnesium', 24.305, 1.73, 1.1, [2]),\r\n    new Element(13, 'AL', 'Aluminum', 26.981, 2.05, 1.35, [3]),\r\n    new Element(14, 'SI', 'Silicon', 28.086, 2.1, 1.2, [4]),\r\n    new Element(15, 'P', 'Phosphorus', 30.974, 2.08, 0.75, [3, 5]),\r\n    new Element(16, 'S', 'Sulfur', 32.07, 2, 1.02, [2, 4, 6]),\r\n    new Element(17, 'CL', 'Chlorine', 35.453, 1.97, 0.99, [1, 3, 5, 7]),\r\n    new Element(18, 'AR', 'Argon', 39.948, 1.88, 1.57, [0]),\r\n    new Element(19, 'K', 'Potassium', 39.1, 2.75, 1.33, [1]),\r\n    new Element(20, 'CA', 'Calcium', 40.08, 1.973, 0.99, [2]),\r\n    new Element(21, 'SC', 'Scandium', 44.956, 1.7, 1.44, [0]),\r\n    new Element(22, 'TI', 'Titanium', 47.88, 1.7, 1.47, [0]),\r\n    new Element(23, 'V', 'Vanadium', 50.941, 1.7, 1.33, [0]),\r\n    new Element(24, 'CR', 'Chromium', 52, 1.7, 1.35, [0]),\r\n    new Element(25, 'MN', 'Manganese', 54.938, 1.7, 1.35, [0]),\r\n    new Element(26, 'FE', 'Iron', 55.847, 1.7, 1.34, [0]),\r\n    new Element(27, 'CO', 'Cobalt', 58.93, 1.7, 1.33, [0]),\r\n    new Element(28, 'NI', 'Nickel', 58.69, 1.63, 1.5, [0]),\r\n    new Element(29, 'CU', 'Copper', 63.55, 1.4, 1.52, [0]),\r\n    new Element(30, 'ZN', 'Zinc', 65.39, 1.39, 1.45, [0]),\r\n    new Element(31, 'GA', 'Gallium', 69.72, 1.87, 1.22, [3]),\r\n    new Element(32, 'GE', 'Germanium', 72.61, 1.7, 1.17, [4]),\r\n    new Element(33, 'AS', 'Arsenic', 74.92, 1.85, 1.21, [3, 5]),\r\n    new Element(34, 'SE', 'Selenium', 78.96, 1.9, 1.22, [2, 4, 6]),\r\n    new Element(35, 'BR', 'Bromine', 79.9, 2.1, 1.21, [1, 3, 5, 7]),\r\n    new Element(36, 'KR', 'Krypton', 83.8, 2.02, 1.91, [0]),\r\n    new Element(37, 'RB', 'Rubidium', 85.47, 1.7, 1.47, [1]),\r\n    new Element(38, 'SR', 'Strontium', 87.62, 1.7, 1.12, [2]),\r\n    new Element(39, 'Y', 'Yttrium', 88.91, 1.7, 1.78, [0]),\r\n    new Element(40, 'ZR', 'Zirconium', 91.22, 1.7, 1.56, [0]),\r\n    new Element(41, 'NB', 'Niobium', 92.91, 1.7, 1.48, [0]),\r\n    new Element(42, 'MO', 'Molybdenum', 95.94, 1.7, 1.47, [0]),\r\n    new Element(43, 'TC', 'Technetium', 98.91, 1.7, 1.35, [0]),\r\n    new Element(44, 'RU', 'Ruthenium', 101.07, 1.7, 1.4, [0]),\r\n    new Element(45, 'RH', 'Rhodium', 102.91, 1.7, 1.45, [0]),\r\n    new Element(46, 'PD', 'Palladium', 106.42, 1.63, 1.5, [0]),\r\n    new Element(47, 'AG', 'Silver', 107.87, 1.72, 1.59, [0]),\r\n    new Element(48, 'CD', 'Cadmium', 112.41, 1.58, 1.69, [0]),\r\n    new Element(49, 'IN', 'Indium', 114.82, 1.93, 1.63, [3]),\r\n    new Element(50, 'SN', 'Tin', 118.71, 2.17, 1.46, [2, 4]),\r\n    new Element(51, 'SB', 'Antimony', 121.75, 2.2, 1.46, [3, 5]),\r\n    new Element(52, 'TE', 'Tellurium', 127.6, 2.06, 1.47, [2, 4, 6]),\r\n    new Element(53, 'I', 'Iodine', 126.91, 2.15, 1.4, [1, 3, 5, 7]),\r\n    new Element(54, 'XE', 'Xenon', 131.29, 2.16, 1.98, [0]),\r\n    new Element(55, 'CS', 'Cesium', 132.91, 1.7, 1.67, [1]),\r\n    new Element(56, 'BA', 'Barium', 137.33, 1.7, 1.34, [2]),\r\n    new Element(57, 'LA', 'Lanthanum', 138.91, 1.7, 1.87, [0]),\r\n    new Element(58, 'CE', 'Cerium', 140.12, 1.7, 1.83, [0]),\r\n    new Element(59, 'PR', 'Praseodymium', 140.91, 1.7, 1.82, [0]),\r\n    new Element(60, 'ND', 'Neodymium', 144.24, 1.7, 1.81, [0]),\r\n    new Element(61, 'PM', 'Promethium', 144.9, 1.7, 1.8, [0]),\r\n    new Element(62, 'SM', 'Samarium', 150.36, 1.7, 1.8, [0]),\r\n    new Element(63, 'EU', 'Europium', 151.96, 1.7, 1.99, [0]),\r\n    new Element(64, 'GD', 'Gadolinium', 157.25, 1.7, 1.79, [0]),\r\n    new Element(65, 'TB', 'Terbium', 158.93, 1.7, 1.76, [0]),\r\n    new Element(66, 'DY', 'Dysprosium', 162.5, 1.7, 1.75, [0]),\r\n    new Element(67, 'HO', 'Holmium', 164.93, 1.7, 1.74, [0]),\r\n    new Element(68, 'ER', 'Erbium', 167.26, 1.7, 1.73, [0]),\r\n    new Element(69, 'TM', 'Thulium', 168.93, 1.7, 1.72, [0]),\r\n    new Element(70, 'YB', 'Ytterbium', 173.04, 1.7, 1.94, [0]),\r\n    new Element(71, 'LU', 'Lutetium', 174.97, 1.7, 1.72, [0]),\r\n    new Element(72, 'HF', 'Hafnium', 178.49, 1.7, 1.57, [0]),\r\n    new Element(73, 'TA', 'Tantalum', 180.95, 1.7, 1.43, [0]),\r\n    new Element(74, 'W', 'Tungsten', 183.85, 1.7, 1.37, [0]),\r\n    new Element(75, 'RE', 'Rhenium', 186.21, 1.7, 1.35, [0]),\r\n    new Element(76, 'OS', 'Osmium', 190.2, 1.7, 1.37, [0]),\r\n    new Element(77, 'IR', 'Iridium', 192.22, 1.7, 1.32, [0]),\r\n    new Element(78, 'PT', 'Platinum', 195.08, 1.72, 1.5, [0]),\r\n    new Element(79, 'AU', 'Gold', 196.97, 1.66, 1.5, [0]),\r\n    new Element(80, 'HG', 'Mercury', 200.59, 1.55, 1.7, [0]),\r\n    new Element(81, 'TL', 'Thallium', 204.38, 1.96, 1.55, [1, 3]),\r\n    new Element(82, 'PB', 'Lead', 207.2, 2.02, 1.54, [2, 4]),\r\n    new Element(83, 'BI', 'Bismuth', 208.98, 1.7, 1.54, [3, 5]),\r\n    new Element(84, 'PO', 'Polonium', 210, 1.7, 1.68, [2, 4, 6]),\r\n    new Element(85, 'AT', 'Astatine', 210, 1.7, 1.7, [1, 3, 5, 7]),\r\n    new Element(86, 'RN', 'Radon', 222, 1.7, 2.4, [0]),\r\n    new Element(87, 'FR', 'Francium', 223, 1.7, 2, [1]),\r\n    new Element(88, 'RA', 'Radium', 226.03, 1.7, 1.9, [2]),\r\n    new Element(89, 'AC', 'Actinium', 227.03, 1.7, 1.88, [0]),\r\n    new Element(90, 'TH', 'Thorium', 232.04, 1.7, 1.79, [0]),\r\n    new Element(91, 'PA', 'Protactinium', 231.04, 1.7, 1.61, [0]),\r\n    new Element(92, 'U', 'Uranium', 238.03, 1.86, 1.58, [0]),\r\n    new Element(93, 'NP', 'Neptunium', 237.05, 1.7, 1.55, [0]),\r\n    new Element(94, 'PU', 'Plutonium', 239.1, 1.7, 1.53, [0]),\r\n    new Element(95, 'AM', 'Americium', 243.1, 1.7, 1.51, [0]),\r\n    new Element(96, 'CM', 'Curium', 247.1, 1.7, 1.5, [0]),\r\n    new Element(97, 'BK', 'Berkelium', 247.1, 1.7, 1.5, [0]),\r\n    new Element(98, 'CF', 'Californium', 252.1, 1.7, 1.5, [0]),\r\n    new Element(99, 'ES', 'Einsteinium', 252.1, 1.7, 1.5, [0]),\r\n    new Element(100, 'FM', 'Fermium', 257.1, 1.7, 1.5, [0]),\r\n    new Element(101, 'MD', 'Mendelevium', 256.1, 1.7, 1.5, [0]),\r\n    new Element(102, 'NO', 'Nobelium', 259.1, 1.7, 1.5, [0]),\r\n    new Element(103, 'LR', 'Lawrencium', 260.1, 1.7, 1.5, [0]),\r\n    new Element(104, 'RF', 'Rutherfordium', 261, 1.7, 1.6, [0]),\r\n    new Element(105, 'DB', 'Dubnium', 262, 1.7, 1.6, [0]),\r\n    new Element(106, 'SG', 'Seaborgium', 263, 1.7, 1.6, [0]),\r\n    new Element(107, 'BH', 'Bohrium', 262, 1.7, 1.6, [0]),\r\n    new Element(108, 'HS', 'Hassium', 265, 1.7, 1.6, [0]),\r\n    new Element(109, 'MT', 'Meitnerium', 268, 1.7, 1.6, [0]),\r\n    /* eslint-enable no-magic-numbers */\r\n  ];\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\n  static ByName = {\r\n    // Duplicate atomic numbers (isotopes)\r\n    /* eslint-disable no-magic-numbers */\r\n    D: new Element(1, 'D', 'Deuterium', 2.014, 1.2, 0.23, [1]),\r\n    T: new Element(1, 'T', 'Tritium', 3.016, 1.2, 0.23, [1]),\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // All regular elements will be added later, automatically\r\n  };\r\n}\r\n\r\n(function () {\r\n  const byAtomicNumber = Element.ByAtomicNumber;\r\n  const byName = Element.ByName;\r\n  for (let i = 0, n = byAtomicNumber.length; i < n; ++i) {\r\n    const element = byAtomicNumber[i];\r\n    if (element) {\r\n      byName[element.name] = element;\r\n    }\r\n  }\r\n}());\r\n\r\n// find atom type by chemical element (or create if missing)\r\nElement.getByName = function (element) {\r\n  let type = Element.ByName[element];\r\n  if (!type) {\r\n    type = Element.ByName[element] = new Element(0, element, 'Unknown', 0, 1.0, 0.01, [0]);\r\n  }\r\n  return type;\r\n};\r\n\r\nexport default Element;\r\n","const cBondTypes = {\r\n  /** Was generated manually */\r\n  UNKNOWN: 0,\r\n  /** Simple covalent bond */\r\n  COVALENT: 1,\r\n  /** Aromatic bond */\r\n  AROMATIC: 2,\r\n};\r\n\r\nfunction getAtomPos(atom) {\r\n  return atom.position;\r\n}\r\n\r\n/**\r\n * Bond between atoms.\r\n *\r\n * @param {Atom} left     - The first atom.\r\n * @param {Atom} right    - The second atom.\r\n * @param {number} order - Order of current bond.\r\n * @param {number} type - Bond type.\r\n * @param {boolean} fixed - Indicator of a pre-specified connection (in contrast with guessed one).\r\n *\r\n * @exports Bond\r\n * @constructor\r\n */\r\nclass Bond {\r\n  constructor(left, right, order, type, fixed) {\r\n    this._left = left;\r\n    this._right = right;\r\n    this._fixed = fixed;\r\n    this._index = -1;\r\n    if (left > right) {\r\n      throw new Error('In a bond atom indices must be in increasing order');\r\n    }\r\n    this._order = order;\r\n    this._type = type;\r\n  }\r\n\r\n  getLeft() {\r\n    return this._left;\r\n  }\r\n\r\n  getRight() {\r\n    return this._right;\r\n  }\r\n\r\n  getOrder() {\r\n    return this._order;\r\n  }\r\n\r\n  calcLength() {\r\n    return this._left.position.distanceTo(this._right.position);\r\n  }\r\n\r\n  _forEachNeighbour(currAtom, process) {\r\n    const { bonds } = currAtom;\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i]._left !== currAtom ? bonds[i]._left : bonds[i]._right);\r\n    }\r\n  }\r\n\r\n  forEachLevelOne(process) {\r\n    const left = this._left;\r\n    const right = this._right;\r\n    this._forEachNeighbour(left, (atom) => {\r\n      if (atom === right) {\r\n        return;\r\n      }\r\n      process(atom);\r\n    });\r\n    this._forEachNeighbour(right, (atom) => {\r\n      if (atom === left) {\r\n        return;\r\n      }\r\n      process(atom);\r\n    });\r\n  }\r\n\r\n  forEachLevelTwo(process) {\r\n    // TODO refactor this piece of an art?\r\n    const left = this._left;\r\n    const right = this._right;\r\n    const self = this;\r\n    self._forEachNeighbour(left, (atom) => {\r\n      if (atom === right) {\r\n        return;\r\n      }\r\n      self._forEachNeighbour(atom, (l2Atom) => {\r\n        if (l2Atom === left) {\r\n          return;\r\n        }\r\n        process(l2Atom);\r\n      });\r\n    });\r\n    self._forEachNeighbour(right, (atom) => {\r\n      if (atom === left) {\r\n        return;\r\n      }\r\n      self._forEachNeighbour(atom, (l2Atom) => {\r\n        if (l2Atom === right) {\r\n          return;\r\n        }\r\n        process(l2Atom);\r\n      });\r\n    });\r\n  }\r\n\r\n  _fixDir(refPoint, currDir, posGetter) {\r\n    // count atoms to the right and to the left of the current plane\r\n    let rightCount = 0;\r\n    let leftCount = 0;\r\n    const tmpVec = refPoint.clone();\r\n    function checkDir(atom) {\r\n      tmpVec.copy(posGetter(atom));\r\n      tmpVec.sub(refPoint);\r\n      const dotProd = currDir.dot(tmpVec);\r\n      if (dotProd > 0) {\r\n        ++rightCount;\r\n      } else {\r\n        ++leftCount;\r\n      }\r\n    }\r\n    function checkCarbon(atom) {\r\n      if (atom.element.name === 'C') {\r\n        checkDir(atom);\r\n      }\r\n    }\r\n    // count all atoms to the left and right of our plane, start from level 1 and carbons\r\n    const stages = [\r\n      [this.forEachLevelOne, checkCarbon],\r\n      [this.forEachLevelOne, checkDir],\r\n      [this.forEachLevelTwo, checkCarbon],\r\n      [this.forEachLevelTwo, checkDir],\r\n    ];\r\n\r\n    for (let stageId = 0; stageId < stages.length; ++stageId) {\r\n      stages[stageId][0].call(this, stages[stageId][1]);\r\n      if (leftCount > rightCount) {\r\n        return currDir.multiplyScalar(-1);\r\n      }\r\n      if (leftCount < rightCount) {\r\n        return currDir;\r\n      }\r\n    }\r\n    return currDir;\r\n  }\r\n\r\n  calcNormalDir(posGetter) {\r\n    const left = this._left;\r\n    const right = this._right;\r\n    let first = left;\r\n    let second = right;\r\n    posGetter = posGetter === undefined ? getAtomPos : posGetter;\r\n    if (left.bonds.length > right.bonds.length) {\r\n      first = right;\r\n      second = left;\r\n    }\r\n    let third = first;\r\n    let maxNeibs = 0;\r\n    const { bonds } = second;\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      let another = bonds[i]._left;\r\n      if (bonds[i]._left === second) {\r\n        another = bonds[i]._right;\r\n      }\r\n      if (another.bonds.length > maxNeibs && another !== first) {\r\n        third = another;\r\n        maxNeibs = another.bonds.length;\r\n      }\r\n    }\r\n    const secondPos = posGetter(second);\r\n    const firstV = posGetter(first).clone().sub(secondPos);\r\n    const secondV = posGetter(third).clone().sub(secondPos);\r\n    secondV.crossVectors(firstV, secondV);\r\n    if (secondV.lengthSq() < 0.0001) {\r\n      secondV.set(0, 1, 0);\r\n    }\r\n    firstV.normalize();\r\n    secondV.normalize();\r\n    firstV.crossVectors(secondV, firstV);\r\n    if (firstV.lengthSq() < 0.0001) {\r\n      firstV.set(0, 1, 0);\r\n    }\r\n    firstV.normalize();\r\n    return this._fixDir(secondPos, firstV, posGetter);\r\n  }\r\n\r\n  static BondType = cBondTypes;\r\n}\r\n\r\nBond.prototype.BondType = cBondTypes;\r\n\r\nexport default Bond;\r\n","import * as THREE from 'three';\r\nimport Atom from './Atom';\r\nimport Element from './Element';\r\n\r\nconst cNucleicControlNames = ['C3\\'', 'C3*', 'P', 'H5T', 'H3T'];\r\nconst cNucleicWing1Names = ['OP1', 'O1P'];\r\nconst cNucleicWing2Names = ['OP2', 'O2P'];\r\n\r\nconst cCylinderSource = ['C3\\'', 'C3*', 'C1', 'C1\\'', 'C1*', 'P'];\r\nconst cCylinderTarget = [{\r\n  types: ['A', 'DA', 'G', 'DG'],\r\n  atoms: ['N1'],\r\n}, {\r\n  types: ['C', 'DC'],\r\n  atoms: ['N3'],\r\n}, {\r\n  types: ['T', 'DT', 'U', 'DU'],\r\n  atoms: ['O4'],\r\n}];\r\n\r\n/**\r\n * Residue instance.\r\n *\r\n * @param {Chain} chain      - Chain this residue belongs to.\r\n * @param {ResidueType} type - Generic residue instance type.\r\n * @param {number} sequence  - Sequence ID.\r\n * @param {string} icode     - One character insertion code (usually space or A-Z).\r\n *\r\n * @exports Residue\r\n * @constructor\r\n */\r\nclass Residue {\r\n  constructor(chain, type, sequence, icode) {\r\n    this._chain = chain;\r\n    this._component = null;\r\n    this._type = type;\r\n    this._sequence = sequence;\r\n    this._icode = icode;\r\n    this._mask = 1 | 0;\r\n    this._index = -1;\r\n\r\n    this._atoms = [];\r\n    this._secondary = null;\r\n    this._firstAtom = null;\r\n    this._leadAtom = null;\r\n    this._wingAtom = null;\r\n    this._lastAtom = null;\r\n    this._controlPoint = null;\r\n    this._midPoint = null;\r\n    this._wingVector = null;\r\n    this._cylinders = null;\r\n    this._isValid = true;\r\n    this._het = false;\r\n    this._molecule = null;\r\n    this.temperature = null;\r\n    this.occupancy = null;\r\n  }\r\n\r\n  // Getters and setters\r\n  getChain() {\r\n    return this._chain;\r\n  }\r\n\r\n  getMolecule() {\r\n    return this._molecule;\r\n  }\r\n\r\n  getType() {\r\n    return this._type;\r\n  }\r\n\r\n  getSequence() {\r\n    return this._sequence;\r\n  }\r\n\r\n  getSecondary() {\r\n    return this._secondary;\r\n  }\r\n\r\n  getICode() {\r\n    return this._icode;\r\n  }\r\n\r\n  // Other methods\r\n\r\n  addAtom(name, type, xyz, role, het, serial, altLoc, occupancy, tempFactor, charge) {\r\n    const atom = new Atom(this, name, type, xyz, role, het, serial, altLoc, occupancy, tempFactor, charge);\r\n    const complex = this._chain.getComplex();\r\n    complex.addAtom(atom);\r\n    this._atoms.push(atom);\r\n    this._het = this._het || het;\r\n    return atom;\r\n  }\r\n\r\n  getAtomCount() {\r\n    return this._atoms.length;\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    const atoms = this._atoms;\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      if (process(atoms[i])) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  _findAtomByName(name) {\r\n    let res = null;\r\n    this.forEachAtom((atom) => {\r\n      if (atom.name === name) {\r\n        res = atom;\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  _findFirstAtomInList(names) {\r\n    let res = null;\r\n    for (let i = 0; i < names.length; ++i) {\r\n      res = this._findAtomByName(names[i]);\r\n      if (res !== null) {\r\n        return res;\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff;\r\n    const atoms = this._atoms;\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      mask &= atoms[i].mask;\r\n    }\r\n    this._mask = mask;\r\n  }\r\n\r\n  getCylinderTargetList() {\r\n    const type = this._type._name;\r\n    for (let i = 0, n = cCylinderTarget.length; i < n; ++i) {\r\n      for (let j = 0, m = cCylinderTarget[i].types.length; j < m; ++j) {\r\n        if (type === cCylinderTarget[i].types[j]) {\r\n          return cCylinderTarget[i].atoms;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  _detectLeadWing(dst, next, getAtomPosition) {\r\n    const leadAtom = this._findFirstAtomInList(cNucleicControlNames);\r\n    let wingStart = this._findFirstAtomInList(cNucleicWing1Names);\r\n    let wingEnd = this._findFirstAtomInList(cNucleicWing2Names);\r\n\r\n    if (wingStart === null && next !== null) {\r\n      wingStart = next._findFirstAtomInList(cNucleicWing1Names);\r\n    }\r\n\r\n    if (wingEnd === null && next !== null) {\r\n      wingEnd = next._findFirstAtomInList(cNucleicWing2Names);\r\n    }\r\n\r\n    if (leadAtom === null || wingStart === null || wingEnd === null) {\r\n      return;\r\n    }\r\n\r\n    dst._leadAtom = leadAtom;\r\n    dst._controlPoint = getAtomPosition(leadAtom);\r\n    dst._wingVector = getAtomPosition(wingEnd).clone().sub(getAtomPosition(wingStart));\r\n    dst._isValid = true;\r\n\r\n    const cylSource = this._findFirstAtomInList(cCylinderSource);\r\n    const targetList = this.getCylinderTargetList();\r\n    const cylTarget = targetList !== null ? this._findFirstAtomInList(targetList) : null;\r\n    if (cylSource === null || cylTarget === null) {\r\n      return;\r\n    }\r\n    dst._cylinders = [getAtomPosition(cylSource), getAtomPosition(cylTarget)];\r\n  }\r\n\r\n  calcWing(prevLeadPos, currLeadPos, prevWingPos, prevWing) {\r\n    const vectorA = currLeadPos.clone().sub(prevLeadPos);\r\n    const vectorB = prevLeadPos.clone().sub(prevWingPos);\r\n    vectorB.crossVectors(vectorA, vectorB);\r\n    vectorB.crossVectors(vectorA, vectorB).normalize();\r\n    if (prevWing !== null && prevWing.length() > 0.0001) {\r\n      const needToNegate = vectorB.length() > 0.0001 && Math.abs(prevWing.angleTo(vectorB)) > Math.PI / 2;\r\n      if (needToNegate) {\r\n        vectorB.negate();\r\n      }\r\n    }\r\n    return vectorB;\r\n  }\r\n\r\n  _innerFinalize(prevRes, prev, nextRes, dst, chainAsNucleic, getAtomPosition) {\r\n    const bFirstInChain = prev === null;\r\n\r\n    const lp = getAtomPosition(this._leadAtom);\r\n    const currLeadPos = new THREE.Vector3(lp.x, lp.y, lp.z);\r\n    if (chainAsNucleic) {\r\n      this._detectLeadWing(dst, nextRes, getAtomPosition);\r\n      return;\r\n    }\r\n\r\n    if (bFirstInChain) { // for first one in chain\r\n      dst._midPoint = getAtomPosition(this._firstAtom).clone();\r\n    } else {\r\n      const prevLeadPos = prev._controlPoint; // lead point of previous monomer\r\n      dst._midPoint = prevLeadPos.clone().lerp(currLeadPos, 0.5);\r\n      dst._wingVector = this.calcWing(prevLeadPos, currLeadPos, getAtomPosition(prevRes._wingAtom), prev._wingVector);\r\n    }\r\n    dst._controlPoint = currLeadPos;\r\n  }\r\n\r\n  _finalize2(prev, next, asNucleic) {\r\n    // Should be called AFTER first finalize\r\n    this._innerFinalize(prev, prev, next, this, asNucleic, (atom) => atom.position);\r\n  }\r\n\r\n  isConnected(anotherResidue) {\r\n    if (this._chain !== anotherResidue._chain) {\r\n      return false;\r\n    }\r\n    if (this === anotherResidue) {\r\n      return true;\r\n    }\r\n    let res = false;\r\n    this.forEachAtom((atom) => {\r\n      const { bonds } = atom;\r\n      for (let i = 0, n = bonds.length; i < n; ++i) {\r\n        const bond = bonds[i];\r\n        if (bond._left.residue === anotherResidue || bond._right.residue === anotherResidue) {\r\n          res = true;\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  _finalize() {\r\n    const self = this;\r\n    [this._firstAtom] = this._atoms;\r\n    this._lastAtom = this._atoms[this._atoms.length - 1];\r\n\r\n    this._leadAtom = null;\r\n    this._wingAtom = null;\r\n\r\n    let tempCount = 0;\r\n    let temperature = 0; // average temperature\r\n    let occupCount = 0;\r\n    let occupancy = 0; // average occupancy\r\n    this.forEachAtom((a) => {\r\n      if (self._leadAtom === null) {\r\n        if (a.role === Element.Constants.Lead) {\r\n          self._leadAtom = a;\r\n        }\r\n      }\r\n      if (self._wingAtom === null) {\r\n        if (a.role === Element.Constants.Wing) {\r\n          self._wingAtom = a;\r\n        }\r\n      }\r\n      if (a.temperature) {\r\n        temperature += a.temperature;\r\n        tempCount++;\r\n      }\r\n      if (a.occupancy) {\r\n        occupancy += a.occupancy;\r\n        occupCount++;\r\n      }\r\n      return (self._leadAtom !== null && self._wingAtom !== null);\r\n    });\r\n\r\n    if (tempCount > 0) {\r\n      this.temperature = temperature / tempCount;\r\n    }\r\n    if (occupCount > 0) {\r\n      this.occupancy = occupancy / occupCount;\r\n    }\r\n\r\n    // Still try to make monomer look valid\r\n    if (this._leadAtom === null || this._wingAtom === null) {\r\n      this._isValid = false;\r\n    }\r\n    if (this._leadAtom === null) {\r\n      this._leadAtom = this._firstAtom;\r\n    }\r\n    if (this._wingAtom === null) {\r\n      this._wingAtom = this._lastAtom;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Residue;\r\n","/**\r\n * Residue type.\r\n *\r\n * Predefined acid or created with HET, HETNAM, etc.\r\n *\r\n * @param {string} name            - Short name, either standard (ALA, MET, etc.) or non-standard one.\r\n * @param {string} fullName        - Full residue name.\r\n * @param {string} letterCode      - 1-letter symbol.\r\n *\r\n * @exports ResidueType\r\n * @constructor\r\n */\r\nclass ResidueType {\r\n  constructor(name, fullName, letterCode) {\r\n    this._name = name;\r\n    this._fullName = fullName;\r\n    this.letterCode = letterCode;\r\n    this.flags = 0x0000;\r\n  }\r\n\r\n  getName() {\r\n    return this._name;\r\n  }\r\n\r\n  // DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\n  static StandardTypes = {\r\n    /* eslint-disable no-magic-numbers */\r\n    ALA: new ResidueType('ALA', 'Alanine', 'A'),\r\n    ARG: new ResidueType('ARG', 'Arginine', 'R'),\r\n    ASN: new ResidueType('ASN', 'Asparagine', 'N'),\r\n    ASP: new ResidueType('ASP', 'Aspartic Acid', 'D'),\r\n    CYS: new ResidueType('CYS', 'Cysteine', 'C'),\r\n    GLN: new ResidueType('GLN', 'Glutamine', 'Q'),\r\n    GLU: new ResidueType('GLU', 'Glutamic Acid', 'E'),\r\n    GLY: new ResidueType('GLY', 'Glycine', 'G'),\r\n    HIS: new ResidueType('HIS', 'Histidine', 'H'),\r\n    ILE: new ResidueType('ILE', 'Isoleucine', 'I'),\r\n    LEU: new ResidueType('LEU', 'Leucine', 'L'),\r\n    LYS: new ResidueType('LYS', 'Lysine', 'K'),\r\n    MET: new ResidueType('MET', 'Methionine', 'M'),\r\n    PHE: new ResidueType('PHE', 'Phenylalanine', 'F'),\r\n    PRO: new ResidueType('PRO', 'Proline', 'P'),\r\n    PYL: new ResidueType('PYL', 'Pyrrolysine', 'O'),\r\n    SEC: new ResidueType('SEC', 'Selenocysteine', 'U'),\r\n    SER: new ResidueType('SER', 'Serine', 'S'),\r\n    THR: new ResidueType('THR', 'Threonine', 'T'),\r\n    TRP: new ResidueType('TRP', 'Tryptophan', 'W'),\r\n    TYR: new ResidueType('TYR', 'Tyrosine', 'Y'),\r\n    VAL: new ResidueType('VAL', 'Valine', 'V'),\r\n    A: new ResidueType('A', 'Adenine', 'A'),\r\n    C: new ResidueType('C', 'Cytosine', 'C'),\r\n    G: new ResidueType('G', 'Guanine', 'G'),\r\n    I: new ResidueType('I', 'Inosine', 'I'),\r\n    T: new ResidueType('T', 'Thymine', 'T'),\r\n    U: new ResidueType('U', 'Uracil', 'U'),\r\n    DA: new ResidueType('DA', 'Adenine', 'A'),\r\n    DC: new ResidueType('DC', 'Cytosine', 'C'),\r\n    DG: new ResidueType('DG', 'Guanine', 'G'),\r\n    DI: new ResidueType('DI', 'Inosine', 'I'),\r\n    DT: new ResidueType('DT', 'Thymine', 'T'),\r\n    DU: new ResidueType('DU', 'Uracil', 'U'),\r\n    '+A': new ResidueType('+A', 'Adenine', 'A'),\r\n    '+C': new ResidueType('+C', 'Cytosine', 'C'),\r\n    '+G': new ResidueType('+G', 'Guanine', 'G'),\r\n    '+I': new ResidueType('+I', 'Inosine', 'I'),\r\n    '+T': new ResidueType('+T', 'Thymine', 'T'),\r\n    '+U': new ResidueType('+U', 'Uracil', 'U'),\r\n    WAT: new ResidueType('WAT', 'Water', ''),\r\n    H2O: new ResidueType('H2O', 'Water', ''),\r\n    HOH: new ResidueType('HOH', 'Water', ''),\r\n    DOD: new ResidueType('DOD', 'Water', ''),\r\n    UNK: new ResidueType('UNK', 'Unknown', ''),\r\n    UNL: new ResidueType('UNL', 'Unknown Ligand', ''),\r\n    /* eslint-enable no-magic-numbers */\r\n  };\r\n\r\n  /**\r\n   * Enumeration of residue flag values.\r\n   *\r\n   * @enum {number}\r\n   * @readonly\r\n   */\r\n  static Flags = {\r\n    // Amino acids\r\n    /** Amino acid residue */\r\n    PROTEIN: 0x0001,\r\n    /** Basic amino acid residue */\r\n    BASIC: 0x0002,\r\n    /** Acidic amino acid residue */\r\n    ACIDIC: 0x0004,\r\n    /** Polar uncharged side chain amino acid residue */\r\n    POLAR: 0x0008,\r\n    /** Non-polar hydrophobic side chain amino acid residue */\r\n    NONPOLAR: 0x0010,\r\n    /** Aromatic amino acid residue */\r\n    AROMATIC: 0x0020,\r\n\r\n    // Nucleic acids\r\n\r\n    /** Nucleic residue */\r\n    NUCLEIC: 0x0100,\r\n    /** Purine nucleic residue */\r\n    PURINE: 0x0200,\r\n    /** Pyrimidine nucleic residue */\r\n    PYRIMIDINE: 0x0400,\r\n    /** DNA */\r\n    DNA: 0x0800,\r\n    /** RNA */\r\n    RNA: 0x1000,\r\n\r\n    /** Water */\r\n    WATER: 0x10000,\r\n  };\r\n}\r\n\r\n// Flag combinations\r\nfunction _addFlag(flag, list) {\r\n  for (let i = 0, n = list.length; i < n; ++i) {\r\n    const res = ResidueType.StandardTypes[list[i]];\r\n    if (res) {\r\n      res.flags |= flag;\r\n    }\r\n  }\r\n}\r\n\r\nconst { Flags } = ResidueType;\r\n_addFlag(Flags.WATER, ['WAT', 'H2O', 'HOH', 'DOD']);\r\n\r\n_addFlag(Flags.PROTEIN, [\r\n  'ALA', 'ARG', 'ASN', 'ASP', 'CYS', 'GLY', 'GLU', 'GLN', 'HIS', 'ILE',\r\n  'LEU', 'LYS', 'MET', 'PHE', 'PRO', 'PYL', 'SEC', 'SER', 'THR', 'TRP',\r\n  'TYR', 'VAL',\r\n]);\r\n_addFlag(Flags.BASIC, ['ARG', 'HIS', 'LYS']);\r\n_addFlag(Flags.ACIDIC, ['ASP', 'GLU']);\r\n_addFlag(Flags.POLAR, ['ASN', 'CYS', 'GLN', 'SER', 'THR', 'TYR']);\r\n_addFlag(Flags.NONPOLAR, ['ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL', 'GLY']);\r\n_addFlag(Flags.AROMATIC, ['PHE', 'TRP', 'TYR']);\r\n\r\n_addFlag(Flags.NUCLEIC, [\r\n  'A', 'G', 'I', 'DA', 'DG', 'DI', '+A', '+G', '+I',\r\n  'C', 'T', 'U', 'DC', 'DT', 'DU', '+C', '+T', '+U',\r\n]);\r\n_addFlag(Flags.PURINE, ['A', 'G', 'I', 'DA', 'DG', 'DI', '+A', '+G', '+I']);\r\n_addFlag(Flags.PYRIMIDINE, ['C', 'T', 'U', 'DC', 'DT', 'DU', '+C', '+T', '+U']);\r\n_addFlag(Flags.DNA, ['DA', 'DG', 'DI', 'DC', 'DT', 'DU']);\r\n_addFlag(Flags.RNA, ['A', 'G', 'I', 'C', 'T', 'U']);\r\n// Table of kdHydrophobicity\r\nconst hydro = {\r\n  ILE: 4.5,\r\n  VAL: 4.2,\r\n  LEU: 3.8,\r\n  PHE: 2.8,\r\n  CYS: 2.5,\r\n  MET: 1.9,\r\n  ALA: 1.8,\r\n  GLY: -0.4,\r\n  THR: -0.7,\r\n  SER: -0.8,\r\n  TRP: -0.9,\r\n  TYR: -1.3,\r\n  PRO: -1.6,\r\n  HIS: -3.2,\r\n  GLU: -3.5,\r\n  GLN: -3.5,\r\n  ASP: -3.5,\r\n  ASN: -3.5,\r\n  LYS: -3.9,\r\n  ARG: -4.5,\r\n};\r\n\r\nfunction _addParam(param, list) {\r\n  const keys = Object.keys(list);\r\n  for (let i = 0, n = keys.length; i < n; ++i) {\r\n    const key = keys[i];\r\n    const value = list[key];\r\n    ResidueType.StandardTypes[key][param] = value;\r\n  }\r\n}\r\n\r\n_addParam('hydrophobicity', hydro);\r\n\r\nexport default ResidueType;\r\n","import * as THREE from 'three';\r\nimport Residue from './Residue';\r\nimport ResidueType from './ResidueType';\r\n\r\n/**\r\n * Residues in chain are either amino acid either nucleic acid (and water)\r\n * There might be some modified/mutated residues, which type could not be determined by their name (nucleic or amino); In this\r\n * case firstly program definites the chain type (by well-known residues) and then definites modified/mutated residues\r\n */\r\nconst ChainType = {\r\n  UNKNOWN: 0,\r\n  PROTEIN: 1,\r\n  NUCLEIC: 2,\r\n};\r\n\r\n/**\r\n * Residue chain.\r\n *\r\n * @param {Complex} complex - Molecular complex this chain belongs to.\r\n * @param {string} name - One character identifier (usually space, A-Z, 0-9, or a-z).\r\n *\r\n * @exports Chain\r\n * @constructor\r\n */\r\nclass Chain {\r\n  constructor(complex, name) {\r\n    this._complex = complex;\r\n    this._name = name;\r\n    this._mask = 1 | 0;\r\n    this._index = -1;\r\n    this._residues = [];\r\n\r\n    this.minSequence = Number.POSITIVE_INFINITY;\r\n    this.maxSequence = Number.NEGATIVE_INFINITY;\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex;\r\n  }\r\n\r\n  getName() {\r\n    return this._name;\r\n  }\r\n\r\n  getResidues() {\r\n    return this._residues;\r\n  }\r\n\r\n  _determineType() {\r\n    const residues = this._residues;\r\n\r\n    const { PROTEIN, NUCLEIC } = ResidueType.Flags;\r\n\r\n    this.type = ChainType.UNKNOWN;\r\n\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const { flags } = residues[i]._type;\r\n\r\n      if ((flags & NUCLEIC) !== 0) {\r\n        this.type = ChainType.NUCLEIC;\r\n        break;\r\n      } else if ((flags & PROTEIN) !== 0) {\r\n        this.type = ChainType.PROTEIN;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds thre residue with specified sequence number and inserion code\r\n   * @param {Number} seqNum sequence number\r\n   * @param {string} iCode insertion code\r\n   * @returns {*} Residue or null if not found\r\n   */\r\n  findResidue(seqNum, iCode) {\r\n    const residues = this._residues;\r\n\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const res = residues[i];\r\n      if (res._sequence === seqNum && res._icode === iCode) {\r\n        return [res, i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _finalize() {\r\n    this._determineType();\r\n\r\n    const residues = this._residues;\r\n\r\n    let prev = null;\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      const next = (i + 1 < n) ? residues[i + 1] : null;\r\n      const curr = residues[i];\r\n      // TODO: skip invalid residues\r\n      if (1 /* curr._isValid */) { // eslint-disable-line no-constant-condition\r\n        curr._finalize2(prev, next, this.type === ChainType.NUCLEIC);\r\n        prev = curr;\r\n      }\r\n    }\r\n\r\n    // fix very first wing\r\n    if (residues.length > 1 && residues[1]._wingVector) {\r\n      const p = residues[1]._wingVector;\r\n      residues[0]._wingVector = new THREE.Vector3(p.x, p.y, p.z);\r\n    } else if (residues.length > 0) {\r\n      residues[0]._wingVector = new THREE.Vector3(1, 0, 0);\r\n    }\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const residues = this._residues;\r\n    let prev = null;\r\n    let prevData = null;\r\n    const frameRes = frameData._residues;\r\n    const n = residues.length;\r\n    function getAtomPos(atom) {\r\n      return frameData.getAtomPos(atom.index);\r\n    }\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const curr = residues[i];\r\n      const currData = frameRes[curr._index];\r\n      const nextRes = (i + 1 < n) ? residues[i + 1] : null;\r\n      curr._innerFinalize(prev, prevData, nextRes, currData, this.type === ChainType.NUCLEIC, getAtomPos);\r\n      prev = curr;\r\n      prevData = currData;\r\n    }\r\n\r\n    frameRes[residues[0]._index]._wingVector = n > 1\r\n      ? frameRes[residues[1]._index]._wingVector\r\n      : new THREE.Vector3(1, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Create a new residue.\r\n   *\r\n   * @param {string} name - Residue name.\r\n   * @param {number} sequence - Residue sequence number.\r\n   * @param {string} iCode - Insertion code.\r\n   * @returns {Residue} - Newly created residue instance.\r\n   */\r\n  addResidue(name, sequence, iCode) {\r\n    let type = this._complex.getResidueType(name);\r\n    if (type === null) {\r\n      type = this._complex.addResidueType(name);\r\n    }\r\n    const residue = new Residue(this, type, sequence, iCode);\r\n    this._complex.addResidue(residue);\r\n    this._residues.push(residue);\r\n\r\n    if (type.flags & (ResidueType.Flags.NUCLEIC | ResidueType.Flags.PROTEIN)) {\r\n      if (this.maxSequence < sequence) {\r\n        this.maxSequence = sequence;\r\n      }\r\n      if (this.minSequence > sequence) {\r\n        this.minSequence = sequence;\r\n      }\r\n    }\r\n\r\n    return residue;\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residues.length;\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._residues;\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i]);\r\n    }\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff;\r\n    const residues = this._residues;\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      mask &= residues[i]._mask;\r\n    }\r\n    this._mask = mask;\r\n  }\r\n}\r\n\r\nexport default Chain;\r\n","import Residue from './Residue';\r\n\r\n/** An element of protein secondary structure. */\r\nclass StructuralElement {\r\n  /**\r\n   * Create a secondary structural element of the specified type.\r\n   *\r\n   * @param {StructuralElement.Type} type Secondary structure type.\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   */\r\n  constructor(type, init, term) {\r\n    /**\r\n     * Secondary structure type.\r\n     * @type {StructuralElement.Type}\r\n     */\r\n    this.type = type;\r\n    /**\r\n     * Generic secondary structure type.\r\n     * @type {StructuralElement.Generic}\r\n     */\r\n    this.generic = StructuralElement.genericByType[this.type] || 'loop';\r\n    /**\r\n     * Initial residue.\r\n     * @type Residue\r\n     */\r\n    this.init = init;\r\n    /**\r\n     * Terminal residue.\r\n     * @type Residue\r\n     */\r\n    this.term = term;\r\n  }\r\n\r\n  /**\r\n   * An internal method for making a final pass over the complex to set all required references.\r\n   *\r\n   * **NOTE:** I'm sorry. It's a legacy code waiting for refactoring.\r\n   * Just copying it as-is right now and hoping for the best.\r\n   *\r\n   * @param {object} serialAtomMap A dictionary of atoms\r\n   * @param {object} residueHash A dictionary of hashed residues to check.\r\n   * @param {Complex} complex The molecular complex this element belongs to.\r\n   */\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    if (this.init instanceof Residue && this.term instanceof Residue) {\r\n      return;\r\n    }\r\n\r\n    // Link all intermediate residues to this structural element\r\n    const start = complex.splitUnifiedSerial(this.init);\r\n    const end = complex.splitUnifiedSerial(this.term);\r\n    for (let chainId = start.chain; chainId <= end.chain; chainId++) {\r\n      for (let serialId = start.serial; serialId <= end.serial; serialId++) {\r\n        for (let { iCode } = start; iCode <= end.iCode; iCode++) {\r\n          const hashCode = complex.getUnifiedSerial(chainId, serialId, iCode);\r\n          if (residueHash[hashCode]) {\r\n            residueHash[hashCode]._secondary = this;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Replace unfined serials by objects\r\n    this.init = residueHash[this.init];\r\n    this.term = residueHash[this.term];\r\n  }\r\n}\r\n\r\n/**\r\n * Specific type of a secondary structural element.\r\n * @enum {string}\r\n * @see StructuralElement.Generic\r\n */\r\nStructuralElement.Type = {\r\n  /** A strand of a [beta-sheet](https://en.wikipedia.org/wiki/Beta_sheet). */\r\n  STRAND: 'E',\r\n  /** An isolated beta-bridge (too small for a beta-sheet). */\r\n  BRIDGE: 'B',\r\n\r\n  /** A [3/10 helix](https://en.wikipedia.org/wiki/310_helix) (hydrogen bonding is 3 residues apart). */\r\n  HELIX_310: 'G',\r\n  /** An [alpha-helix](https://en.wikipedia.org/wiki/Alpha_helix) (hydrogen bonding is 4 residues apart). */\r\n  HELIX_ALPHA: 'H',\r\n  /** A [pi-helix](https://en.wikipedia.org/wiki/Pi_helix) (hydrogen bonding is 5 residues apart). */\r\n  HELIX_PI: 'I',\r\n  /** A generic helix of unspecified bonding distance. */\r\n  HELIX: 'X',\r\n\r\n  /** An isolated 3/10-like helical turn. */\r\n  TURN_310: '3',\r\n  /** An isolated alpha-like helical turn. */\r\n  TURN_ALPHA: '4',\r\n  /** An isolated pi-like helical turn. */\r\n  TURN_PI: '5',\r\n  /** An isolated helical [turn](https://en.wikipedia.org/wiki/Turn_(biochemistry)) of unspecified bonding distance. */\r\n  TURN: 'T',\r\n\r\n  /** A bend (a region of high curvature). */\r\n  BEND: 'S',\r\n  /** Just a protein section with no particular conformation. */\r\n  COIL: 'C',\r\n};\r\n\r\n/**\r\n * Generic type of a secondary structural element.\r\n * @enum {string}\r\n * @see StructuralElement.Type\r\n */\r\nStructuralElement.Generic = {\r\n  /** A strand of a sheet. */\r\n  STRAND: 'strand',\r\n  /** A helix. */\r\n  HELIX: 'helix',\r\n  /** Just a protein section with no particular conformation. */\r\n  LOOP: 'loop',\r\n};\r\n\r\nconst StructuralElementType = StructuralElement.Type;\r\nconst StructuralElementGeneric = StructuralElement.Generic;\r\n\r\n/**\r\n * A mapping from specific types to generic ones.\r\n * @type {Object<StructuralElement.Type, StructuralElement.Generic>}\r\n */\r\nStructuralElement.genericByType = {\r\n  [StructuralElementType.STRAND]: StructuralElementGeneric.STRAND,\r\n  [StructuralElementType.HELIX_310]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX_ALPHA]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX_PI]: StructuralElementGeneric.HELIX,\r\n  [StructuralElementType.HELIX]: StructuralElementGeneric.HELIX,\r\n};\r\n\r\nexport default StructuralElement;\r\n","import StructuralElement from './StructuralElement';\r\n\r\nconst StructuralElementType = StructuralElement.Type;\r\n\r\nexport const typeByPDBHelixClass = {\r\n  1: StructuralElementType.HELIX_ALPHA,\r\n  3: StructuralElementType.HELIX_PI,\r\n  5: StructuralElementType.HELIX_310,\r\n};\r\n\r\n/**\r\n * Helical secondary structure of a protein.\r\n * @extends StructuralElement\r\n */\r\nclass Helix extends StructuralElement {\r\n  /**\r\n   * Create a helix.\r\n   *\r\n   * @param {number} helixClass A helix class according to the\r\n   *   [PDB Format](http://www.wwpdb.org/documentation/file-format-content/format33/sect5.html#HELIX).\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   * @param {number} serial Serial number of the helix (see PDB Format).\r\n   * @param {string} name Helix identifier (see PDB Format).\r\n   * @param {string} comment Comment about this helix (see PDB Format).\r\n   * @param {number} length Length of this helix, in residues (see PDB Format).\r\n   */\r\n  constructor(helixClass, init, term, serial, name, comment, length) {\r\n    super(typeByPDBHelixClass[helixClass] || StructuralElement.Type.HELIX, init, term);\r\n\r\n    /**\r\n     * Serial number of the helix (see PDB Format).\r\n     * @type {number}\r\n     */\r\n    this.serial = serial;\r\n    /**\r\n     * Helix identifier (see PDB Format).\r\n     * @type {string}\r\n     */\r\n    this.name = name;\r\n    /**\r\n     * Comment about this helix (see PDB Format).\r\n     * @type {string}\r\n     */\r\n    this.comment = comment;\r\n    /**\r\n     * Length of this helix, in residues (see PDB Format).\r\n     * @type {number}\r\n     */\r\n    this.length = length;\r\n  }\r\n}\r\n\r\nexport default Helix;\r\n","import StructuralElement from './StructuralElement';\r\n\r\n/**\r\n * A single strand of a sheet in a protein secondary structure.\r\n * @extends StructuralElement\r\n */\r\nclass Strand extends StructuralElement {\r\n  /**\r\n   * Create a strand.\r\n   *\r\n   * @param {Sheet} sheet Parent sheet this strand belongs to.\r\n   * @param {Residue} init Initial residue.\r\n   * @param {Residue} term Terminal residue.\r\n   * @param {number} sense Sense of strand with respect to previous strand in the sheet.\r\n   *   - 0 if the first strand,\r\n   *   - 1 if parallel, and\r\n   *   - -1 if anti-parallel.\r\n   * @param {Atom} atomCur Atom in current strand (see PDB Format).\r\n   * @param {Atom} atomPrev Atom in previous strand (see PDB Format).\r\n   */\r\n  constructor(sheet, init, term, sense, atomCur, atomPrev) {\r\n    super(StructuralElement.Type.STRAND, init, term);\r\n\r\n    /**\r\n     * Parent sheet this strand belongs to.\r\n     * @type {Sheet}\r\n     */\r\n    this.sheet = sheet;\r\n    /**\r\n     * Sense of strand with respect to previous strand in the sheet.\r\n     * - 0 if the first strand,\r\n     * - 1 if parallel, and\r\n     * - -1 if anti-parallel.\r\n     * @type {number}\r\n     */\r\n    this.sense = sense;\r\n    /**\r\n     * Atom in current strand (see PDB Format).\r\n     * @type {Atom}\r\n     */\r\n    this.atomCur = atomCur;\r\n    /**\r\n     * Atom in previous strand (see PDB Format).\r\n     * @type {Atom}\r\n     */\r\n    this.atomPrev = atomPrev;\r\n  }\r\n\r\n  /**\r\n   * An internal method for making a final pass over the complex to set all required references.\r\n   *\r\n   * **NOTE:** I'm sorry. It's a legacy code waiting for refactoring.\r\n   * Just copying it as-is right now and hoping for the best.\r\n   *\r\n   * @param {object} serialAtomMap A dictionary of atoms\r\n   * @param {object} residueHash A dictionary of hashed residues to check.\r\n   * @param {Complex} complex The molecular complex this element belongs to.\r\n   *\r\n   * @override\r\n   */\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    super._finalize(serialAtomMap, residueHash, complex);\r\n\r\n    let as = this.atomCur;\r\n    if (as !== null && !Number.isNaN(as)) {\r\n      this.atomCur = serialAtomMap[as];\r\n    }\r\n    as = this.atomPrev;\r\n    if (as !== null && !Number.isNaN(as)) {\r\n      this.atomPrev = serialAtomMap[as];\r\n    }\r\n  }\r\n}\r\n\r\nexport default Strand;\r\n","import Strand from './Strand';\r\n\r\n/**\r\n * Sheet secondary structure of a protein.\r\n *\r\n * @param {string} name -\r\n * @param {number} width -\r\n *\r\n * @exports Sheet\r\n * @constructor\r\n */\r\nclass Sheet {\r\n  constructor(name, width) {\r\n    this._name = name;\r\n    this._width = width;\r\n\r\n    this._strands = [];\r\n  }\r\n\r\n  // Getters and setters\r\n  getName() {\r\n    return this._name;\r\n  }\r\n\r\n  getWidth() {\r\n    return this._width;\r\n  }\r\n\r\n  addStrand(strand) {\r\n    this._strands.push(strand);\r\n    this._width = this._strands.length;\r\n  }\r\n\r\n  addEmptyStrand() {\r\n    this._strands.push(new Strand(null, null, null, null, null, null));\r\n  }\r\n\r\n  _finalize(serialAtomMap, residueHash, complex) {\r\n    const s = this._strands;\r\n    for (let i = 0, n = s.length; i < n; ++i) {\r\n      s[i]._finalize(serialAtomMap, residueHash, complex);\r\n    }\r\n    if (!this._width) {\r\n      this._width = s.length;\r\n    }\r\n    if (s.length !== this._width) {\r\n      throw new Error(`Sheet ${this._name} is inconsistent.`);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Sheet;\r\n","import * as THREE from 'three';\r\n\r\n/**\r\n * Atom measurements.\r\n *\r\n * @param {string} id              - SGroup id\r\n * @param {string} name            - Name of the group\r\n * @param {THREE.Vector3} position - Registered coordinates\r\n * @param {array} atoms            - Atoms group consists of\r\n * @param {object} saveNode        - XML node from file for saving\r\n *\r\n * @exports SGroup\r\n * @constructor\r\n */\r\nclass SGroup {\r\n  constructor(id, name, position, atoms, saveNode) {\r\n    this._id = id;\r\n    this._name = name;\r\n    this._position = position || new THREE.Vector3();\r\n    this._atoms = atoms || [];\r\n    this._charge = 0; // default group charge\r\n    this._repeat = 1; // how many times group repeated: always > 0\r\n    this._center = null;\r\n    this.xmlNodeRef = saveNode || null;\r\n  }\r\n\r\n  /**\r\n   * Get atom full name.\r\n   * @returns {string} Atom full name.\r\n   */\r\n  getName() {\r\n    return this._name;\r\n  }\r\n\r\n  getPosition() {\r\n    return this._position;\r\n  }\r\n\r\n  getCentralPoint() {\r\n    return this._center;\r\n  }\r\n\r\n  _rebuildSGroupOnAtomChange() {\r\n    const nLimon = 100000000;\r\n    if (this._center === null) {\r\n      return; // nothing to do if we are not relative\r\n    }\r\n\r\n    const bLow = new THREE.Vector3(nLimon, nLimon, nLimon);\r\n    const bHight = new THREE.Vector3(-nLimon, -nLimon, -nLimon);\r\n    for (let j = 0, n = this._atoms.length; j < n; j++) {\r\n      const aPos = this._atoms[j].position;\r\n      bLow.set(Math.min(bLow.x, aPos.x), Math.min(bLow.y, aPos.y), Math.min(bLow.z, aPos.z));\r\n      bHight.set(Math.max(bHight.x, aPos.x), Math.max(bHight.y, aPos.y), Math.max(bHight.z, aPos.z));\r\n    }\r\n    this._center.addVectors(bLow, bHight);\r\n    this._center.multiplyScalar(0.5);\r\n  }\r\n}\r\n\r\nexport default SGroup;\r\n","import utils from '../../utils';\r\n\r\n//----------------------------------------------------------------------------\r\nclass Range {\r\n  constructor(min, max) {\r\n    this.min = min;\r\n    this.max = typeof max === 'undefined' ? min : max;\r\n  }\r\n\r\n  includes(value) {\r\n    return this.min <= value && value <= this.max;\r\n  }\r\n\r\n  toString() {\r\n    const { min, max } = this;\r\n    return min === max ? String(min) : [min, max].join(':');\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.min, this.max];\r\n  }\r\n}\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n\r\nclass List {\r\n  constructor(arg) {\r\n    if (arg instanceof this.constructor) {\r\n      // delegate construction to a different class\r\n      // eslint-disable-next-line no-constructor-return\r\n      return arg;\r\n    }\r\n    if (arg instanceof Array) {\r\n      this._values = arg.slice(0);\r\n    } else if (arg) {\r\n      this._values = [arg];\r\n    } else {\r\n      this._values = [];\r\n    }\r\n  }\r\n\r\n  append(value) {\r\n    const values = this._values;\r\n    values[values.length] = value;\r\n    return this;\r\n  }\r\n\r\n  remove(value) {\r\n    const values = this._values;\r\n    const index = values.indexOf(value);\r\n    if (index >= 0) {\r\n      values.splice(index, 1);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  toString() {\r\n    return this._values.join(',');\r\n  }\r\n\r\n  toJSON() {\r\n    const values = this._values;\r\n    const result = [];\r\n    for (let i = 0, n = values.length; i < n; ++i) {\r\n      const value = values[i];\r\n      result[i] = value.toJSON ? value.toJSON() : value;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nclass RangeList extends List {\r\n  includes(value) {\r\n    const list = this._values;\r\n    for (let i = 0, n = list.length; i < n; ++i) {\r\n      if (list[i].includes(value)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n//----------------------------------------------------------------------------\r\n\r\nconst valuesArray = [];\r\n\r\nclass ValueList extends List {\r\n  constructor(arg, upperOnly) {\r\n    const list = super(arg);\r\n    if (upperOnly) {\r\n      this.upperOnly = true;\r\n      const values = list._values;\r\n      for (let i = 0, n = values.length; i < n; ++i) {\r\n        const value = values[i];\r\n        if (typeof value === 'string') {\r\n          values[i] = value.toUpperCase();\r\n        }\r\n      }\r\n    } else {\r\n      this.upperOnly = false;\r\n    }\r\n    // return constructed object\r\n    // eslint-disable-next-line no-constructor-return\r\n    return list;\r\n  }\r\n\r\n  includes(value) {\r\n    // we do not convert to upper case here for perfomance reasons\r\n    // if list is upper case only, value must be converted before it is sent up to  here\r\n    return this._values.indexOf(value) !== -1;\r\n  }\r\n\r\n  toString() {\r\n    // Quote values that are not correct identifiers\r\n    const values = this._values;\r\n    valuesArray.length = 0;\r\n    for (let i = 0, n = values.length; i < n; ++i) {\r\n      valuesArray[i] = utils.correctSelectorIdentifier(String(values[i]));\r\n    }\r\n    return valuesArray.join(',');\r\n  }\r\n\r\n  _validate(value) {\r\n    return (this.upperOnly && typeof value === 'string') ? value.toUpperCase() : value;\r\n  }\r\n\r\n  append(value) {\r\n    super.append(this._validate(value));\r\n    return this;\r\n  }\r\n\r\n  remove(value) {\r\n    super.remove(this._validate(value));\r\n    return this;\r\n  }\r\n}\r\n\r\nexport {\r\n  Range,\r\n  List,\r\n  RangeList,\r\n  ValueList,\r\n};\r\n","import { RangeList, ValueList } from './selectArgs';\r\n\r\n/** Base class for atom selectors. */\r\nclass Selector {\r\n  toString() {\r\n    return this.keyword;\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name];\r\n  }\r\n}\r\n\r\nSelector.prototype.name = 'Error';\r\nSelector.prototype.keyword = 'error';\r\n\r\n/** Base class for list-based atom selectors. */\r\nclass ListSelector extends Selector {\r\n  constructor(list) {\r\n    super();\r\n    this.list = list;\r\n  }\r\n\r\n  toString() {\r\n    return `${this.keyword} ${this.list}`;\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.list.toJSON()];\r\n  }\r\n}\r\n\r\nclass RangeListSelector extends ListSelector {\r\n  constructor(arg) {\r\n    super(new RangeList(arg));\r\n  }\r\n}\r\n\r\nclass ValueListSelector extends ListSelector {\r\n  constructor(arg, caseSensitive) {\r\n    super(new ValueList(arg, !caseSensitive));\r\n  }\r\n}\r\n\r\nclass NoneSelector extends Selector {\r\n  includesAtom(_atom) {\r\n    return false;\r\n  }\r\n}\r\n\r\nNoneSelector.prototype.name = 'None';\r\nNoneSelector.prototype.keyword = 'none';\r\n\r\nclass AllSelector extends Selector {\r\n  includesAtom(_atom) {\r\n    return true;\r\n  }\r\n}\r\n\r\nAllSelector.prototype.name = 'All';\r\nAllSelector.prototype.keyword = 'all';\r\n\r\nexport {\r\n  Selector,\r\n  ListSelector,\r\n  RangeListSelector,\r\n  ValueListSelector,\r\n  NoneSelector,\r\n  AllSelector,\r\n};\r\n","import { Selector, NoneSelector } from './selectorsBase';\r\n\r\n//----------------------------------------------------------------------------\r\n// Operators\r\n//----------------------------------------------------------------------------\r\nconst none = new NoneSelector();\r\n\r\nclass PrefixOperator extends Selector {\r\n  constructor(rhs) {\r\n    super();\r\n    this.rhs = rhs || none;\r\n  }\r\n\r\n  toString() {\r\n    const rhs = this.rhs.priority && this.rhs.priority > this.priority ? `(${this.rhs})` : this.rhs;\r\n    return `${this.keyword} ${rhs}`;\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.rhs.toJSON()];\r\n  }\r\n}\r\n\r\nPrefixOperator.prototype.priority = 1;\r\n\r\nclass InfixOperator extends Selector {\r\n  constructor(lhs, rhs) {\r\n    super();\r\n    this.lhs = lhs || none;\r\n    this.rhs = rhs || none;\r\n  }\r\n\r\n  toString() {\r\n    const lhs = this.lhs.priority && this.lhs.priority > this.priority ? `(${this.lhs})` : this.lhs;\r\n    const rhs = this.rhs.priority && this.rhs.priority > this.priority ? `(${this.rhs})` : this.rhs;\r\n    return `${lhs} ${this.keyword} ${rhs}`;\r\n  }\r\n\r\n  toJSON() {\r\n    return [this.name, this.lhs.toJSON(), this.rhs.toJSON()];\r\n  }\r\n}\r\n\r\nInfixOperator.prototype.priority = 1000;\r\n\r\nexport { PrefixOperator, InfixOperator };\r\n","import Atom from './Atom';\r\nimport ResidueType from './ResidueType';\r\nimport { parser } from '../utils/SelectionParser';\r\nimport { Range, RangeList, ValueList } from './selectors/selectArgs';\r\nimport { PrefixOperator, InfixOperator } from './selectors/selectOps';\r\nimport {\r\n  Selector,\r\n  RangeListSelector,\r\n  ValueListSelector,\r\n  NoneSelector,\r\n  AllSelector,\r\n} from './selectors/selectorsBase';\r\n\r\nconst keywords = {};\r\n\r\n//----------------------------------------------------------------------------\r\n// Named selectors\r\n//----------------------------------------------------------------------------\r\n\r\nfunction defineSelector(name, SelectorClass) {\r\n  const keyword = name.toLowerCase();\r\n  SelectorClass.prototype.keyword = keyword;\r\n  SelectorClass.prototype.name = name;\r\n\r\n  const factory = ((...args) => new SelectorClass(...args));\r\n  factory.SelectorClass = SelectorClass;\r\n  keywords[keyword] = factory;\r\n\r\n  return SelectorClass;\r\n}\r\n\r\ndefineSelector('Serial', class SerialSelector extends RangeListSelector {\r\n  includesAtom(atom) {\r\n    return this.list.includes(atom.serial);\r\n  }\r\n});\r\n\r\ndefineSelector('Name', class NameSelector extends ValueListSelector {\r\n  includesAtom(atom) {\r\n    return this.list.includes(atom.name);\r\n  }\r\n});\r\n\r\ndefineSelector('AltLoc', class AltLocSelector extends ValueListSelector {\r\n  includesAtom(atom) {\r\n    return this.list.includes(String.fromCharCode(atom.location));\r\n  }\r\n});\r\n\r\ndefineSelector('Elem', class ElemSelector extends ValueListSelector {\r\n  includesAtom(atom) {\r\n    return this.list.includes(atom.element.name);\r\n  }\r\n});\r\n\r\ndefineSelector('Residue', class ResidueSelector extends ValueListSelector {\r\n  includesAtom(atom) {\r\n    return this.list.includes(atom.residue._type._name);\r\n  }\r\n});\r\n\r\ndefineSelector('Sequence', class SequenceSelector extends RangeListSelector {\r\n  includesAtom(atom) {\r\n    return this.list.includes(atom.residue._sequence);\r\n  }\r\n});\r\n\r\ndefineSelector('ICode', class ICodeSelector extends ValueListSelector {\r\n  constructor(arg) {\r\n    super(arg, true);\r\n  }\r\n\r\n  includesAtom(atom) {\r\n    return this.list.includes(atom.residue._icode);\r\n  }\r\n});\r\n\r\ndefineSelector('ResIdx', class ResIdxSelector extends RangeListSelector {\r\n  includesAtom(atom) {\r\n    return this.list.includes(atom.residue._index);\r\n  }\r\n});\r\n\r\ndefineSelector('Chain', class ChainSelector extends ValueListSelector {\r\n  constructor(arg) {\r\n    super(arg, true);\r\n  }\r\n\r\n  includesAtom(atom) {\r\n    return this.list.includes(atom.residue._chain._name);\r\n  }\r\n});\r\n\r\ndefineSelector('Hetatm', class HetatmSelector extends Selector {\r\n  includesAtom(atom) {\r\n    return atom.het;\r\n  }\r\n});\r\n\r\ndefineSelector('PolarH', class PolarHSelector extends Selector {\r\n  includesAtom(atom) {\r\n    return (atom.flags & Atom.Flags.NONPOLARH) === Atom.Flags.HYDROGEN;\r\n  }\r\n});\r\n\r\ndefineSelector('NonPolarH', class NonPolarHSelector extends Selector {\r\n  includesAtom(atom) {\r\n    return (atom.flags & Atom.Flags.NONPOLARH) === Atom.Flags.NONPOLARH;\r\n  }\r\n});\r\n\r\ndefineSelector('All', AllSelector);\r\n\r\ndefineSelector('None', NoneSelector);\r\n\r\nconst NULL_SELECTOR = keywords.none();\r\n\r\n//----------------------------------------------------------------------------\r\n// Named operators\r\n//----------------------------------------------------------------------------\r\n\r\nfunction defineOperator(name, priority, OperatorClass) {\r\n  OperatorClass.prototype.priority = priority;\r\n  return defineSelector(name, OperatorClass);\r\n}\r\ndefineOperator('Not', 1, class NotOperator extends PrefixOperator {\r\n  includesAtom(atom) {\r\n    return !this.rhs.includesAtom(atom);\r\n  }\r\n});\r\n\r\ndefineOperator('And', 2, class AndOperator extends InfixOperator {\r\n  includesAtom(atom) {\r\n    return this.lhs.includesAtom(atom) && this.rhs.includesAtom(atom);\r\n  }\r\n});\r\n\r\ndefineOperator('Or', 3, class OrOperator extends InfixOperator {\r\n  includesAtom(atom) {\r\n    return this.lhs.includesAtom(atom) || this.rhs.includesAtom(atom);\r\n  }\r\n});\r\n\r\n//----------------------------------------------------------------------------\r\n// Flag selectors\r\n//----------------------------------------------------------------------------\r\n\r\nfunction byResidueTypeFlag(flag, name) {\r\n  return defineSelector(name, class extends Selector {\r\n    includesAtom(atom) {\r\n      return (atom.residue._type.flags & flag) !== 0;\r\n    }\r\n  });\r\n}\r\n\r\nbyResidueTypeFlag(ResidueType.Flags.PROTEIN, 'Protein');\r\nbyResidueTypeFlag(ResidueType.Flags.BASIC, 'Basic');\r\nbyResidueTypeFlag(ResidueType.Flags.ACIDIC, 'Acidic');\r\nbyResidueTypeFlag(ResidueType.Flags.BASIC | ResidueType.Flags.ACIDIC, 'Charged');\r\nbyResidueTypeFlag(ResidueType.Flags.POLAR, 'Polar');\r\nbyResidueTypeFlag(ResidueType.Flags.NONPOLAR, 'NonPolar');\r\nbyResidueTypeFlag(ResidueType.Flags.AROMATIC, 'Aromatic');\r\nbyResidueTypeFlag(ResidueType.Flags.NUCLEIC, 'Nucleic');\r\nbyResidueTypeFlag(ResidueType.Flags.PURINE, 'Purine');\r\nbyResidueTypeFlag(ResidueType.Flags.PYRIMIDINE, 'Pyrimidine');\r\nbyResidueTypeFlag(ResidueType.Flags.WATER, 'Water');\r\n\r\n//----------------------------------------------------------------------------\r\nconst selectors = Object.create(keywords);\r\n\r\nselectors.Selector = Selector;\r\nselectors.RangeListSelector = RangeListSelector;\r\nselectors.ValueListSelector = ValueListSelector;\r\nselectors.Range = Range;\r\nselectors.RangeList = RangeList;\r\nselectors.ValueList = ValueList;\r\nselectors.PrefixOperator = PrefixOperator;\r\nselectors.InfixOperator = InfixOperator;\r\nselectors.Context = Object.create({});\r\n\r\nselectors.GetSelector = function (key) {\r\n  if (!selectors.Context.hasOwnProperty(key)) {\r\n    const exc = { message: `selector ${key} is not registered` };\r\n    throw exc;\r\n  }\r\n  return selectors.Context[key] || NULL_SELECTOR;\r\n};\r\n\r\nselectors.ClearContext = function () {\r\n  Object.keys(selectors.Context).forEach((k) => { delete selectors.Context[k]; });\r\n};\r\n\r\nselectors.keyword = function (key) {\r\n  return keywords[key.toLowerCase()] || keywords.none;\r\n};\r\n\r\nselectors.parse = function (str) {\r\n  const res = {};\r\n  try {\r\n    res.selector = parser.parse(str);\r\n  } catch (e) {\r\n    res.selector = NULL_SELECTOR;\r\n    res.error = e.message;\r\n  }\r\n  return res;\r\n};\r\n\r\nparser.yy = selectors;\r\nparser.yy.parseError = parser.parseError; // workaround for incorrect JISON parser generator for AMD module\r\n\r\nexport default selectors;\r\n","import * as THREE from 'three';\r\nimport selectors from './selectors';\r\n\r\n/**\r\n * Basic biological unit class.\r\n *\r\n * @exports BiologicalUnit\r\n * @constructor\r\n */\r\nclass BiologicalUnit {\r\n  constructor(complex) {\r\n    this._complex = complex;\r\n    this._selector = selectors.keyword('All')();\r\n    this._boundaries = {\r\n      boundingBox: new THREE.Box3(),\r\n      boundingSphere: new THREE.Sphere(),\r\n    };\r\n  }\r\n\r\n  computeBoundaries() {\r\n    const atoms = this._complex._atoms;\r\n    const n = atoms.length;\r\n    const selector = this._selector;\r\n\r\n    const { boundingBox } = this._boundaries;\r\n    boundingBox.makeEmpty();\r\n    if (n === 1) {\r\n      boundingBox.expandByPoint(atoms[0].position);\r\n      const bbc = new THREE.Vector3();\r\n      boundingBox.getCenter(bbc);\r\n      const s = 2 * atoms[0].element.radius;\r\n      boundingBox.setFromCenterAndSize(bbc, new THREE.Vector3(s, s, s));\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        if (selector.includesAtom(atoms[i])) {\r\n          boundingBox.expandByPoint(atoms[i].position);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Build bounding sphere\r\n    let radiusSquared = 0.0;\r\n    const center = new THREE.Vector3();\r\n    boundingBox.getCenter(center);\r\n    if (n === 1) {\r\n      this._boundaries.boundingSphere.set(center, atoms[0].element.radius);\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        if (!selector.includesAtom(atoms[i])) {\r\n          continue;\r\n        }\r\n        const pos = atoms[i].position;\r\n        const lengthSquared = center.distanceToSquared(pos);\r\n        if (radiusSquared < lengthSquared) {\r\n          radiusSquared = lengthSquared;\r\n        }\r\n      }\r\n      this._boundaries.boundingSphere.set(center, Math.sqrt(radiusSquared));\r\n    }\r\n  }\r\n\r\n  getTransforms() {\r\n    return [];\r\n  }\r\n\r\n  getSelector() {\r\n    return this._selector;\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this._boundaries;\r\n  }\r\n\r\n  finalize() {\r\n  }\r\n}\r\n\r\nexport default BiologicalUnit;\r\n","import * as THREE from 'three';\r\nimport selectors from './selectors';\r\nimport BiologicalUnit from './BiologicalUnit';\r\n\r\n/**\r\n * Biological assembly.\r\n *\r\n * @exports Assembly\r\n * @constructor\r\n */\r\n\r\nclass Assembly extends BiologicalUnit {\r\n  constructor(complex) {\r\n    super(complex);\r\n    this.chains = [];\r\n    this.matrices = [];\r\n  }\r\n\r\n  computeBoundaries() {\r\n    super.computeBoundaries();\r\n    // fix up the boundaries\r\n    const { matrices } = this;\r\n    const oldCenter = this._boundaries.boundingSphere.center;\r\n    const oldRad = this._boundaries.boundingSphere.radius;\r\n    const boundingBox = this._boundaries.boundingBox = new THREE.Box3();\r\n    boundingBox.makeEmpty();\r\n    for (let i = 0, n = matrices.length; i < n; ++i) {\r\n      boundingBox.expandByPoint(oldCenter.clone().applyMatrix4(matrices[i]));\r\n    }\r\n\r\n    const newRad = boundingBox.max.distanceTo(boundingBox.min) / 2 + oldRad;\r\n    const center = new THREE.Vector3();\r\n    boundingBox.getCenter(center);\r\n    this._boundaries.boundingSphere = new THREE.Sphere().set(center, newRad);\r\n    boundingBox.max.addScalar(oldRad);\r\n    boundingBox.min.subScalar(oldRad);\r\n  }\r\n\r\n  /**\r\n   * Mark a chain as belonging to this biological assembly.\r\n   * @param {string} chain - chain identifier, usually a single letter\r\n   */\r\n  addChain(chain) {\r\n    this.chains[this.chains.length] = chain;\r\n  }\r\n\r\n  /**\r\n   * Add a transformation matrix.\r\n   * @param {THREE.Matrix4} matrix - transformation matrix\r\n   */\r\n  addMatrix(matrix) {\r\n    this.matrices[this.matrices.length] = matrix;\r\n  }\r\n\r\n  getTransforms() {\r\n    return this.matrices;\r\n  }\r\n\r\n  finalize() {\r\n    if (this.chains.length > 0) {\r\n      this._selector = selectors.keyword('Chain')(this.chains);\r\n    } else {\r\n      this._selector = selectors.keyword('None')();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Assembly;\r\n","/**\r\n * This class represents connected component as a part of a complex.\r\n * WARNING! The whole component entity is build under the assumption that residues\r\n * are placed in the chains and complex in ascending order of indices\r\n *\r\n * @param {Complex} complex - Molecular complex this chain belongs to.\r\n *\r\n * @exports Component\r\n * @constructor\r\n */\r\nclass Component {\r\n  constructor(complex) {\r\n    this._complex = complex;\r\n    this._index = -1;\r\n    this._residueIndices = [];\r\n    this._cycles = [];\r\n    this._subDivs = [];\r\n    this._residueCount = 0;\r\n  }\r\n\r\n  getResidues() {\r\n    return this._complex._residues;\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residueCount;\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._complex._residues;\r\n    const resIdc = this._residueIndices;\r\n    for (let idIdc = 0, idCount = resIdc.length; idIdc < idCount; ++idIdc) {\r\n      for (let idx = resIdc[idIdc].start, last = resIdc[idIdc].end; idx <= last; ++idx) {\r\n        process(residues[idx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  setSubDivs(subDivs) {\r\n    this._subDivs = subDivs;\r\n    let curr = 0;\r\n    const resIdc = [];\r\n    let resCnt = 0;\r\n    for (let i = 0, n = subDivs.length; i < n; ++i) {\r\n      if (i === n - 1 || subDivs[i].end + 1 !== subDivs[i + 1].start) {\r\n        const { start } = subDivs[curr];\r\n        const { end } = subDivs[i];\r\n        resIdc[resIdc.length] = {\r\n          start,\r\n          end,\r\n        };\r\n        resCnt += end - start + 1;\r\n        curr = i + 1;\r\n      }\r\n    }\r\n\r\n    this._residueIndices = resIdc;\r\n    this._residueCount = resCnt;\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex;\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const bonds = this._complex._bonds;\r\n\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      const bond = bonds[i];\r\n      if (bond._left.residue._component === this) {\r\n        process(bond);\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.forEachCycle((cycle) => {\r\n      cycle.update();\r\n    });\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    this.forEachResidue((residue) => {\r\n      residue.forEachAtom(process);\r\n    });\r\n  }\r\n\r\n  addCycle(cycle) {\r\n    this._cycles.push(cycle);\r\n  }\r\n\r\n  forEachCycle(process) {\r\n    const cycles = this._cycles;\r\n    for (let i = 0, n = cycles.length; i < n; ++i) {\r\n      process(cycles[i]);\r\n    }\r\n  }\r\n\r\n  markResidues() {\r\n    const self = this;\r\n    self.forEachResidue((residue) => {\r\n      residue._component = self;\r\n    });\r\n  }\r\n\r\n  _forEachSubChain(mask, process) {\r\n    const residues = this._complex._residues;\r\n    const subs = this._subDivs;\r\n    for (let i = 0, n = subs.length; i < n; ++i) {\r\n      for (let idx = subs[i].start, last = subs[i].end; idx <= last; ++idx) {\r\n        const currRes = residues[idx];\r\n        if (mask & currRes._mask && currRes._isValid) {\r\n          let end = idx + 1;\r\n          for (; end <= last; ++end) {\r\n            const endRes = residues[end];\r\n            if (!(mask & endRes._mask && endRes._isValid)) {\r\n              break;\r\n            }\r\n          }\r\n          process(i, idx, end - 1);\r\n          idx = end;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getMaskedSequences(mask) {\r\n    const subs = [];\r\n    let idx = 0;\r\n    this._forEachSubChain(mask, (_subIdx, start, end) => {\r\n      subs[idx++] = { start, end };\r\n    });\r\n\r\n    return subs;\r\n  }\r\n\r\n  getMaskedSubdivSequences(mask) {\r\n    const subs = [];\r\n    let currIdx = -1;\r\n    let lastSubIdx = -1;\r\n    const subDivs = this._subDivs;\r\n\r\n    this._forEachSubChain(mask, (subIdx, start, end) => {\r\n      if (lastSubIdx !== subIdx) {\r\n        ++currIdx;\r\n        subs[currIdx] = {\r\n          arr: [],\r\n          boundaries: subDivs[subIdx],\r\n        };\r\n        lastSubIdx = subIdx;\r\n      }\r\n      subs[currIdx].arr[subs[currIdx].arr.length] = { start, end };\r\n    });\r\n\r\n    return subs;\r\n  }\r\n}\r\n\r\nexport default Component;\r\n","import utils from '../utils';\r\n\r\nconst cMaxPairsForHashCode = 32;\r\nconst cHashTableSize = 1024 * 1024;\r\nconst cNumbersPerPair = 4;\r\nconst cMaxNeighbours = 14;\r\nconst cInvalidVal = -1;\r\n// 89237 is a large simple number, can be used for pseudo random hash code create\r\nconst cBigPrime = 89237;\r\n\r\nclass AtomPairs {\r\n  constructor(maxPairsEstimate) {\r\n    this.numPairs = 0;\r\n    this.numMaxPairs = maxPairsEstimate;\r\n    this.intBuffer = utils.allocateTyped(Int32Array, maxPairsEstimate * cNumbersPerPair);\r\n    for (let i = 0; i < maxPairsEstimate * cNumbersPerPair; i++) {\r\n      this.intBuffer[i] = cInvalidVal;\r\n    }\r\n    this.hashBuffer = utils.allocateTyped(Int32Array, cHashTableSize * cMaxPairsForHashCode);\r\n    for (let i = 0; i < cHashTableSize * cMaxPairsForHashCode; i++) {\r\n      this.hashBuffer[i] = cInvalidVal;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all pairs memory\r\n   */\r\n  destroy() {\r\n    this.intBuffer = null;\r\n    this.hashBuffer = null;\r\n  }\r\n\r\n  /**\r\n   * Add pair of atoms to collection\r\n   * @param {number} indexA - Index of the 1st vertex.\r\n   * @param {number} indexB - Index of the 2nd vertex.\r\n   */\r\n  addPair(indexA, indexB) {\r\n    const ia = (indexA < indexB) ? indexA : indexB;\r\n    const ib = (indexA > indexB) ? indexA : indexB;\r\n    const codeToAdd = ia + (ib << cMaxNeighbours);\r\n\r\n    const hashCode = (ia + (ib * cBigPrime)) & (cHashTableSize - 1);\r\n    let j = hashCode * cMaxPairsForHashCode;\r\n    let apI = 0;\r\n    for (; apI < cMaxPairsForHashCode; apI++) {\r\n      const code = this.hashBuffer[j + apI];\r\n      if (code === cInvalidVal) {\r\n        break;\r\n      }\r\n      if (code === codeToAdd) {\r\n        return false;\r\n      }\r\n    }\r\n    // add this new hash code\r\n    if (apI >= cMaxPairsForHashCode) {\r\n      throw new Error('addPair: increase cMaxPairsForHashCode');\r\n    }\r\n    this.hashBuffer[j + apI] = codeToAdd;\r\n\r\n    // actually add\r\n    if (this.numPairs >= this.numMaxPairs) {\r\n      throw new Error('addPair: increase num pairs');\r\n    }\r\n    j = this.numPairs * cNumbersPerPair;\r\n    this.intBuffer[j] = ia;\r\n    this.intBuffer[j + 1] = ib;\r\n    this.intBuffer[j + 2] = codeToAdd;\r\n    this.numPairs++;\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default AtomPairs;\r\n","import AtomPairs from './AtomPairs';\r\nimport Bond from './Bond';\r\n\r\nconst cProfileBondBuilder = false;\r\nconst cEstBondsMultiplier = 4;\r\nconst cSpaceCode = 32;\r\nconst cBondTolerance = 0.45;\r\nconst cVMDTolerance = 0.6;\r\nconst cBondRadInJMOL = true;\r\nconst cEpsilon = 0.001;\r\n\r\n/**\r\n * Get radius used for building bonds.\r\n *\r\n * @param {Atom} atom - Atom object.\r\n * @returns {number} special value for bonding radius for this atom\r\n */\r\nfunction _getBondingRadius(atom) {\r\n  const { element } = atom;\r\n  if (element) {\r\n    return element.radiusBonding;\r\n  }\r\n  throw new Error('_getBondingRadius: Logic error.');\r\n}\r\n\r\nfunction _isAtomEligible(atom) {\r\n  // build for all non-hetatm and for hetatm without bonds\r\n  return !atom.isHet() || (atom.bonds && atom.bonds.length === 0);\r\n}\r\n\r\n/**\r\n * Bond between atoms.\r\n *\r\n * @param {Complex} complex molecular complex\r\n\r\n * @exports AutoBond\r\n * @constructor\r\n */\r\nclass AutoBond {\r\n  constructor(complex) {\r\n    this._complex = complex;\r\n    this._maxRad = 1.8;\r\n    const bBox = this._complex.getDefaultBoundaries().boundingBox;\r\n    this._vBoxMin = bBox.min.clone();\r\n    this._vBoxMax = bBox.max.clone();\r\n\r\n    this._pairCollection = null;\r\n  }\r\n\r\n  /**\r\n   * Add existing pairs of connectors (from pdb file after its reading)\r\n   * @returns {number} 0\r\n   */\r\n  _addExistingPairs() {\r\n    const atoms = this._complex.getAtoms();\r\n    const numAtoms = atoms.length;\r\n    let aInd = 0;\r\n    const collection = this._pairCollection;\r\n\r\n    for (; aInd < numAtoms; aInd++) {\r\n      const { bonds } = atoms[aInd];\r\n      const numBondsForAtom = bonds.length;\r\n      for (let bInd = 0; bInd < numBondsForAtom; bInd++) {\r\n        const bond = bonds[bInd];\r\n        const indTo = bond._left.index;\r\n        if (indTo === aInd) {\r\n          collection.addPair(aInd, bond._right.index);\r\n        }\r\n      } // for (b) all bonds in atom\r\n    } // for (a)\r\n    return 0;\r\n  }\r\n\r\n  _findPairs() {\r\n    const vw = this._complex.getVoxelWorld();\r\n    if (vw === null) {\r\n      return;\r\n    }\r\n\r\n    const atoms = this._complex._atoms;\r\n    const atomsNum = atoms.length;\r\n    const self = this;\r\n\r\n    let rA;\r\n    let isHydrogenA;\r\n    let posA;\r\n    let locationA;\r\n    let atomA;\r\n\r\n    const processAtom = function (atomB) {\r\n      if (isHydrogenA && atomB.isHydrogen()) {\r\n        return;\r\n      }\r\n\r\n      const locationB = atomB.location;\r\n      if ((locationA !== cSpaceCode)\r\n        && (locationB !== cSpaceCode)\r\n        && (locationA !== locationB)) {\r\n        return;\r\n      }\r\n\r\n      const dist2 = posA.distanceToSquared(atomB.position);\r\n      const rB = atomB.element.radiusBonding;\r\n      const maxAcceptable = cBondRadInJMOL ? rA + rB + cBondTolerance : cVMDTolerance * (rA + rB);\r\n\r\n      if (dist2 > (maxAcceptable * maxAcceptable)) {\r\n        return;\r\n      }\r\n\r\n      if (dist2 < cEpsilon) {\r\n        return;\r\n      }\r\n\r\n      self._pairCollection.addPair(atomA.index, atomB.index);\r\n    };\r\n\r\n    for (let i = 0; i < atomsNum; ++i) {\r\n      atomA = atoms[i];\r\n      if (!_isAtomEligible(atomA)) {\r\n        continue;\r\n      }\r\n\r\n      rA = atomA.element.radiusBonding;\r\n      isHydrogenA = atomA.isHydrogen();\r\n      posA = atomA.position;\r\n      locationA = atomA.location;\r\n\r\n      vw.forEachAtomWithinRadius(posA, 2 * this._maxRad + cBondTolerance, processAtom);\r\n    }\r\n  }\r\n\r\n  _addPairs() {\r\n    const atoms = this._complex._atoms;\r\n\r\n    for (let i = 0, k = 0; i < this._pairCollection.numPairs; i++, k += 4) {\r\n      const iA = this._pairCollection.intBuffer[k];\r\n      const iB = this._pairCollection.intBuffer[k + 1];\r\n      this._addPair(atoms[iA], atoms[iB]);\r\n    }\r\n  }\r\n\r\n  _addPair(atomA, atomB) {\r\n    const bondsA = atomA.bonds;\r\n    const indexA = atomA.index;\r\n    const indexB = atomB.index;\r\n    for (let j = 0, numBonds = bondsA.length; j < numBonds; ++j) {\r\n      const bond = bondsA[j];\r\n      if (bond._left.index === indexB || bond._right.index === indexB) {\r\n        return;\r\n      }\r\n    }\r\n    const left = indexA < indexB ? atomA : atomB;\r\n    const right = indexA < indexB ? atomB : atomA;\r\n    const newBond = this._complex.addBond(left, right, 0, Bond.BondType.UNKNOWN, false);\r\n    bondsA.push(newBond);\r\n    atomB.bonds.push(newBond);\r\n  }\r\n\r\n  build() {\r\n    if (cProfileBondBuilder) {\r\n      console.time('Bonds Builder');\r\n    }\r\n    this._buildInner();\r\n\r\n    if (cProfileBondBuilder) {\r\n      console.timeEnd('Bonds Builder');\r\n    }\r\n  }\r\n\r\n  _buildInner() {\r\n    const atoms = this._complex._atoms;\r\n    if (atoms.length < 2) {\r\n      return;\r\n    }\r\n    if (atoms[0].index < 0) {\r\n      throw new Error('AutoBond: Atoms in complex were not indexed.');\r\n    }\r\n\r\n    this._calcBoundingBox();\r\n    this._pairCollection = new AtomPairs(atoms.length * cEstBondsMultiplier);\r\n    this._addExistingPairs();\r\n    this._findPairs();\r\n    this._addPairs();\r\n  }\r\n\r\n  _calcBoundingBox() {\r\n    const atoms = this._complex._atoms;\r\n    const nAtoms = atoms.length;\r\n    let maxRad = _getBondingRadius(atoms[0]);\r\n    for (let i = 1; i < nAtoms; ++i) {\r\n      maxRad = Math.max(maxRad, _getBondingRadius(atoms[i]));\r\n    }\r\n    this._vBoxMax.addScalar(maxRad);\r\n    this._vBoxMin.addScalar(-maxRad);\r\n    this._maxRad = maxRad * 1.2;\r\n  }\r\n\r\n  destroy() {\r\n    if (this._pairCollection) {\r\n      this._pairCollection.destroy();\r\n    }\r\n  }\r\n}\r\n\r\nexport default AutoBond;\r\n","import * as THREE from 'three';\r\nimport Bond from './Bond';\r\nimport Element from './Element';\r\n\r\nconst cCrossThresh = 0.1;\r\nconst cAromaticType = Bond.BondType.AROMATIC;\r\nconst cAromaticAtoms = [\r\n  Element.ByName.C.number,\r\n  Element.ByName.N.number,\r\n  // Element.ByName.O.number,\r\n  // Element.ByName.S.number,\r\n];\r\n\r\n/** Conditions for bonds:\r\n   *   - Cross product with each subsequent bond to add is collinear and point to the same direction\r\n   *   - Each pair of a adjacent bonds belong to not more than one cycle\r\n   *   - If there is more than one candidates we try them in ascending order of angle values\r\n   */\r\n\r\nconst _coDirVectors = (function () {\r\n  const v1Tmp = new THREE.Vector3();\r\n  const v2Tmp = new THREE.Vector3();\r\n  const cp = new THREE.Vector3();\r\n  return function (v1, v2) {\r\n    v1Tmp.copy(v1).normalize();\r\n    v2Tmp.copy(v2).normalize();\r\n    cp.crossVectors(v1Tmp, v2Tmp);\r\n    if (cp.length() > cCrossThresh) {\r\n      return false;\r\n    }\r\n    // zero vector in out terms must be collinear to any\r\n    return v1Tmp.dot(v2Tmp) >= 0;\r\n  };\r\n}());\r\n\r\nfunction _insertAscending(arr, val) {\r\n  let idx = 0;\r\n  while (idx < arr.length && arr[idx] < val) {\r\n    ++idx;\r\n  }\r\n  arr.splice(idx, 0, val);\r\n}\r\n\r\nfunction _anotherAtom(bond, currAtom) {\r\n  return bond._left === currAtom ? bond._right : bond._left;\r\n}\r\n\r\nfunction _cosBetween(v1, v2) {\r\n  const theta = v1.dot(v2) / (Math.sqrt(v1.lengthSq() * v2.lengthSq()));\r\n  return THREE.MathUtils.clamp(theta, -1, 1);\r\n}\r\n\r\nfunction _markAromatic(bond) {\r\n  bond._type = cAromaticType;\r\n}\r\n\r\nclass Cycle {\r\n  constructor(atomsList) {\r\n    this.atoms = atomsList;\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    const { atoms } = this;\r\n    const center = new THREE.Vector3();\r\n    const nA = atoms.length;\r\n    for (let j = 0; j < nA; ++j) {\r\n      center.add(atoms[j].position);\r\n    }\r\n    center.multiplyScalar(1.0 / nA);\r\n    this.center = center;\r\n    this.radius = center.distanceTo(atoms[0].position.clone().lerp(atoms[1].position, 0.5));\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const { atoms } = this;\r\n    const nA = atoms.length;\r\n    let currAtom = atoms[0];\r\n    let nextAtom;\r\n\r\n    function checkBond(bond) {\r\n      if (bond._left === nextAtom || bond._right === nextAtom) {\r\n        process(bond);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < nA; ++i) {\r\n      nextAtom = atoms[(i + 1) % nA];\r\n      currAtom.forEachBond(checkBond);\r\n      currAtom = nextAtom;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _isAromatic(bond) {\r\n  return bond._type === cAromaticType;\r\n}\r\n\r\nfunction _isPossibleAromatic(bond) {\r\n  if (bond.type === cAromaticType) {\r\n    return true;\r\n  }\r\n  const rightIdx = cAromaticAtoms.indexOf(bond._right.element.number);\r\n  const leftIdx = cAromaticAtoms.indexOf(bond._left.element.number);\r\n  return rightIdx !== -1 && leftIdx !== -1;\r\n}\r\n\r\nfunction _checkCycleSimple(cycle) {\r\n  return cycle.length > 3;\r\n}\r\n\r\nfunction _checkCycleComplex(cycle) {\r\n  console.assert(cycle.length > 2);\r\n  return true;\r\n}\r\n\r\nclass AromaticLoopsMarker {\r\n  constructor(complex) {\r\n    this._complex = complex;\r\n    const bondsData = new Array(complex._bonds.length);\r\n    const bondMarks = new Array(complex._bonds.length);\r\n    for (let i = 0, n = bondsData.length; i < n; ++i) {\r\n      bondsData[i] = [];\r\n      bondMarks[i] = false;\r\n    }\r\n    this._bondsData = bondsData;\r\n    this._bondMarks = bondMarks;\r\n    this._resetCycles();\r\n  }\r\n\r\n  _resetCycles() {\r\n    this._cycles = [];\r\n    this._currIdx = -1;\r\n  }\r\n\r\n  _haveSameCycle(bondsData, bond1, bond2) {\r\n    const arr1 = bondsData[bond1._index];\r\n    const arr2 = bondsData[bond2._index];\r\n    const n1 = arr1.length;\r\n    const n2 = arr2.length;\r\n    let i1 = 0;\r\n    let i2 = 0;\r\n    while (i1 < n1 && i2 < n2) {\r\n      if (arr1[i1] === arr2[i2]) {\r\n        return true;\r\n      }\r\n      if (arr1[i1] > arr2[i2]) {\r\n        ++i2;\r\n      } else {\r\n        ++i1;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _tryBond(prevBond, currRight, currDir) {\r\n    const bondsOrder = [];\r\n    const bondsData = this._bondsData;\r\n    const currLeft = _anotherAtom(prevBond, currRight);\r\n    const currVec = currRight.position.clone().sub(currLeft.position);\r\n    const startAtomRef = this._currStart;\r\n    const self = this;\r\n    const bondMarks = this._bondMarks;\r\n    let checkAromatic = this._checkBond;\r\n    bondMarks[prevBond._index] = true;\r\n    checkAromatic = checkAromatic === undefined ? _isAromatic : checkAromatic;\r\n    currRight.forEachBond((newBond) => {\r\n      if (!checkAromatic(newBond)\r\n        || newBond === prevBond\r\n        || bondMarks[newBond._index]\r\n        || self._haveSameCycle(bondsData, prevBond, newBond)) {\r\n        return;\r\n      }\r\n      const anotherAtom = _anotherAtom(newBond, currRight);\r\n      const anotherVec = anotherAtom.position.clone().sub(currRight.position);\r\n      const val = anotherAtom === startAtomRef ? -2.0 : 1 - _cosBetween(currVec, anotherVec);\r\n      const newDir = anotherVec.cross(currVec);\r\n      if (!_coDirVectors(newDir, currDir)) {\r\n        return;\r\n      }\r\n      let idx = 0;\r\n      while (idx < bondsOrder.length && bondsOrder[idx].val < val) {\r\n        ++idx;\r\n      }\r\n      bondsOrder.splice(idx, 0, { bond: newBond, val, dir: newDir });\r\n    });\r\n\r\n    for (let i = 0, n = bondsOrder.length; i < n; ++i) {\r\n      const { bond } = bondsOrder[i];\r\n      const newRight = bond._left === currRight ? bond._right : bond._left;\r\n      if (newRight === startAtomRef) {\r\n        ++this._currIdx;\r\n        this._cycles.push([currRight]);\r\n        bondMarks[prevBond._index] = false;\r\n        return true;\r\n      }\r\n      if (this._tryBond(bond, newRight, bondsOrder[i].dir)) {\r\n        _insertAscending(bondsData[bond._index], this._currIdx);\r\n        this._cycles[this._currIdx].push(currRight);\r\n        bondMarks[prevBond._index] = false;\r\n        return true;\r\n      }\r\n    }\r\n    bondMarks[prevBond._index] = false;\r\n    return false;\r\n  }\r\n\r\n  _startCycle(bond) {\r\n    // start from left to right\r\n    this._currStart = bond._left;\r\n    if (this._tryBond(bond, bond._right, new THREE.Vector3())) {\r\n      _insertAscending(this._bondsData[bond._index], this._currIdx);\r\n      this._cycles[this._currIdx].push(bond._left);\r\n    }\r\n  }\r\n\r\n  _findLoops(checkBond, checkCycle) {\r\n    this._checkBond = checkBond;\r\n    const complex = this._complex;\r\n    const self = this;\r\n\r\n    complex.forEachComponent((component) => {\r\n      self._resetCycles();\r\n      component.forEachBond((bond) => {\r\n        if (checkBond(bond)) {\r\n          self._startCycle(bond);\r\n        }\r\n      });\r\n      const cycles = self._cycles;\r\n      for (let i = 0, n = cycles.length; i < n; ++i) {\r\n        const cycle = cycles[i];\r\n        if (!checkCycle(cycle)) {\r\n          continue;\r\n        }\r\n        const newCycle = new Cycle(cycle);\r\n        newCycle.forEachBond(_markAromatic);\r\n        component.addCycle(newCycle);\r\n      }\r\n    });\r\n  }\r\n\r\n  markCycles() {\r\n    this._findLoops(_isAromatic, _checkCycleSimple);\r\n  }\r\n\r\n  detectCycles() {\r\n    this._findLoops(_isPossibleAromatic, _checkCycleComplex);\r\n  }\r\n}\r\n\r\nexport default AromaticLoopsMarker;\r\n","import * as THREE from 'three';\r\nimport utils from '../utils';\r\n\r\n/**\r\n * Calculate min & max radius of a sphere slice between zMin & zMax\r\n *\r\n * @param {Vector3} center - center of the sphere\r\n * @param {number} radius  - sphere radius\r\n * @param {number} zMin - lower bound of the slice\r\n * @param {number} zMax - upper bound of the slice\r\n */\r\nfunction _getSphereSliceRadiusRange(center, radius, zMin, zMax) {\r\n  const dzMin = zMin - center.z;\r\n  const dzMax = zMax - center.z;\r\n  const rzMin = Math.sqrt(Math.max(radius * radius - dzMin * dzMin, 0.0));\r\n  const rzMax = Math.sqrt(Math.max(radius * radius - dzMax * dzMax, 0.0));\r\n\r\n  const rMin = Math.min(rzMin, rzMax);\r\n  let rMax;\r\n\r\n  if (zMin <= center.z && zMax >= center.z) {\r\n    // sphere's main diameter is inside slice\r\n    rMax = radius;\r\n  } else {\r\n    rMax = Math.max(rzMin, rzMax);\r\n  }\r\n\r\n  return [rMin, rMax];\r\n}\r\n\r\n/**\r\n * Calculate min & max radius of a circle slice between yMin & yMax.\r\n *\r\n * To maintain analogy with _getSphereSliceRadiusRange we call radius what in fact is\r\n * half-width (along X axis) of the slice, i.e. 1D-sphere radius.\r\n *\r\n * @param {Vector3} center - center of the circle (z can be ignored)\r\n * @param {number} radius  - circle radius\r\n * @param {number} yMin - lower bound of the slice\r\n * @param {number} yMax - upper bound of the slice\r\n * @returns {Array} - array of two numbers (min & max radius, or half-width)\r\n */\r\nfunction _getCircleSliceRadiusRange(center, radius, yMin, yMax) {\r\n  const dyMin = yMin - center.y;\r\n  const dyMax = yMax - center.y;\r\n  const ryMin = Math.sqrt(Math.max(radius * radius - dyMin * dyMin, 0.0));\r\n  const ryMax = Math.sqrt(Math.max(radius * radius - dyMax * dyMax, 0.0));\r\n\r\n  const rMin = Math.min(ryMin, ryMax);\r\n  let rMax;\r\n\r\n  if (yMin <= center.y && yMax >= center.y) {\r\n    // slice's main diameter is inside slice\r\n    rMax = radius;\r\n  } else {\r\n    rMax = Math.max(ryMin, ryMax);\r\n  }\r\n\r\n  return [rMin, rMax];\r\n}\r\n\r\n/**\r\n * VoxelWorld constructor\r\n *\r\n * @param {Box3} box - bounding box of the volume to be partitioned\r\n * @param {Vector3} vCellSizeHint - target voxel size (actual voxel size may differ from this)\r\n */\r\nclass VoxelWorld {\r\n  constructor(box, vCellSizeHint) {\r\n    this._box = box.clone();\r\n    const size = new THREE.Vector3();\r\n    box.getSize(size);\r\n    this._count = size.clone().divide(vCellSizeHint).floor().max(new THREE.Vector3(1, 1, 1));\r\n    this._last = this._count.clone().subScalar(1);\r\n    this._cellSize = size.clone().divide(this._count);\r\n    this._cellInnerR = 0.5 * Math.min(Math.min(this._cellSize.x, this._cellSize.y), this._cellSize.z);\r\n    this._cellOuterR = 0.5 * Math.sqrt(this._cellSize.dot(this._cellSize));\r\n\r\n    // array of voxels, each element contains index of first atom in voxel\r\n    const numVoxels = this._count.x * this._count.y * this._count.z;\r\n    this._voxels = utils.allocateTyped(Int32Array, numVoxels);\r\n    for (let i = 0; i < numVoxels; ++i) {\r\n      this._voxels[i] = -1;\r\n    }\r\n\r\n    // array of atoms that stores multiple single-linked lists\r\n    // two elements for each atom: Atom ref, index of next atom (in this array\r\n    this._atoms = [];\r\n  }\r\n\r\n  /**\r\n   * Add all atoms from a complex to voxel world\r\n   *\r\n   * @param {Complex} complex - complex\r\n   */\r\n  addAtoms(complex) {\r\n    const self = this;\r\n\r\n    let idx = this._atoms.length;\r\n\r\n    // resize array of atoms\r\n    this._atoms.length += 2 * complex.getAtomCount();\r\n\r\n    complex.forEachAtom((atom) => {\r\n      // find which voxel contains this atom\r\n      const voxelIdx = self._findVoxel(atom.position);\r\n\r\n      // push current atom to the head of voxel's atom list\r\n      self._atoms[idx] = atom;\r\n      self._atoms[idx + 1] = self._voxels[voxelIdx];\r\n      self._voxels[voxelIdx] = idx;\r\n\r\n      idx += 2;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get voxel that contains specified 3D point (we use clamp at the edges)\r\n   *\r\n   * @param {Vector3} point - a point in 3D\r\n   * @returns {number} - index of voxel\r\n   */\r\n  static _zero = new THREE.Vector3(0, 0, 0);\r\n\r\n  static _voxel = new THREE.Vector3();\r\n\r\n  _findVoxel(point) {\r\n    const zero = VoxelWorld._zero;\r\n    const voxel = VoxelWorld._voxel;\r\n    voxel.copy(point)\r\n      .sub(this._box.min)\r\n      .divide(this._cellSize)\r\n      .floor()\r\n      .clamp(zero, this._last);\r\n    return voxel.x + this._count.x * (voxel.y + this._count.y * voxel.z);\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom in voxel\r\n   *\r\n   * @param {number} voxel - index of voxel\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  _forEachAtomInVoxel(voxel, process) {\r\n    for (let i = this._voxels[voxel]; i >= 0; i = this._atoms[i + 1]) {\r\n      process(this._atoms[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each voxel that is touched by given sphere. Callback also takes flag\r\n   * isInside specifying whether voxel lies inside the sphere entirely.\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(number,bool)} process - function to call that takes voxel index and boolean isInside\r\n   */\r\n\r\n  static _xRange = new THREE.Vector2();\r\n\r\n  static _yRange = new THREE.Vector2();\r\n\r\n  static _zRange = new THREE.Vector2();\r\n\r\n  _forEachVoxelWithinRadius(center, radius, process) {\r\n    const xRange = VoxelWorld._xRange;\r\n    const yRange = VoxelWorld._yRange;\r\n    const zRange = VoxelWorld._zRange;\r\n\r\n    // switch to a faster method unless cell size is much smaller than sphere radius\r\n    if (radius / this._cellInnerR < 10) {\r\n      this._forEachVoxelWithinRadiusSimple(center, radius, process);\r\n      return;\r\n    }\r\n\r\n    let rRangeXY;\r\n    let rRangeX;\r\n    let xVal;\r\n    let yVal;\r\n    let zVal;\r\n    let isInsideX;\r\n    let isInsideY;\r\n    let isInsideZ;\r\n\r\n    zRange.set(center.z - radius, center.z + radius);\r\n    zRange.subScalar(this._box.min.z)\r\n      .divideScalar(this._cellSize.z)\r\n      .floor()\r\n      .clampScalar(0, this._count.z - 1);\r\n\r\n    for (let z = zRange.x; z <= zRange.y; ++z) {\r\n      zVal = [this._box.min.z + z * this._cellSize.z,\r\n        this._box.min.z + (z + 1) * this._cellSize.z];\r\n\r\n      isInsideZ = (center.z - radius <= zVal[0]) && (zVal[1] <= center.z + radius);\r\n\r\n      rRangeXY = _getSphereSliceRadiusRange(center, radius, zVal[0], zVal[1]);\r\n\r\n      yRange.set(center.y - rRangeXY[1], center.y + rRangeXY[1]);\r\n      yRange.subScalar(this._box.min.y)\r\n        .divideScalar(this._cellSize.y)\r\n        .floor()\r\n        .clampScalar(0, this._count.y - 1);\r\n\r\n      for (let y = yRange.x; y <= yRange.y; ++y) {\r\n        yVal = [this._box.min.y + y * this._cellSize.y,\r\n          this._box.min.y + (y + 1) * this._cellSize.y];\r\n\r\n        isInsideY = (center.y - rRangeXY[0] <= yVal[0]) && (yVal[1] <= center.y + rRangeXY[0]);\r\n\r\n        rRangeX = _getCircleSliceRadiusRange(center, rRangeXY[1], yVal[0], yVal[1]);\r\n\r\n        xRange.set(center.x - rRangeX[1], center.x + rRangeX[1]);\r\n        xRange.subScalar(this._box.min.x)\r\n          .divideScalar(this._cellSize.x)\r\n          .floor()\r\n          .clampScalar(0, this._count.x - 1);\r\n\r\n        for (let { x } = xRange; x <= xRange.y; ++x) {\r\n          xVal = [this._box.min.x + x * this._cellSize.x,\r\n            this._box.min.x + (x + 1) * this._cellSize.x];\r\n          isInsideX = (center.x - rRangeX[0] <= xVal[0]) && (xVal[1] <= center.x + rRangeX[0]);\r\n\r\n          process(x + this._count.x * (y + this._count.y * z), isInsideX && isInsideY && isInsideZ);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each voxel that is touched by given sphere. Callback also takes flag\r\n   * isInside specifying whether voxel lies inside the sphere entirely.\r\n   * This is a version of method that doesn't try to \"calculate\" what voxels fall inside radius\r\n   * but instead just checks all voxels inside sphere's bounding box. This should be faster\r\n   * unless cell size is much smaller than sphere radius.\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(number,bool)} process - function to call that takes voxel index and boolean isInside\r\n   */\r\n\r\n  static _vCenter = new THREE.Vector3();\r\n\r\n  _forEachVoxelWithinRadiusSimple(center, radius, process) {\r\n    const xRange = VoxelWorld._xRange;\r\n    const yRange = VoxelWorld._yRange;\r\n    const zRange = VoxelWorld._zRange;\r\n    const vCenter = VoxelWorld._vCenter;\r\n\r\n    const distTouch2 = (radius + this._cellOuterR) * (radius + this._cellOuterR);\r\n    let distInside2 = -1.0;\r\n    if (radius > this._cellOuterR) {\r\n      distInside2 = (radius - this._cellOuterR) * (radius - this._cellOuterR);\r\n    }\r\n\r\n    // calculate bounding box for the sphere\r\n    xRange.set(center.x - radius, center.x + radius);\r\n    xRange.subScalar(this._box.min.x)\r\n      .divideScalar(this._cellSize.x)\r\n      .floor();\r\n    xRange.x = Math.min(Math.max(xRange.x, 0), this._count.x - 1);\r\n    xRange.y = Math.min(Math.max(xRange.y, 0), this._count.x - 1);\r\n\r\n    yRange.set(center.y - radius, center.y + radius);\r\n    yRange.subScalar(this._box.min.y)\r\n      .divideScalar(this._cellSize.y)\r\n      .floor();\r\n    yRange.x = Math.min(Math.max(yRange.x, 0), this._count.y - 1);\r\n    yRange.y = Math.min(Math.max(yRange.y, 0), this._count.y - 1);\r\n\r\n    zRange.set(center.z - radius, center.z + radius);\r\n    zRange.subScalar(this._box.min.z)\r\n      .divideScalar(this._cellSize.z)\r\n      .floor();\r\n    zRange.x = Math.min(Math.max(zRange.x, 0), this._count.z - 1);\r\n    zRange.y = Math.min(Math.max(zRange.y, 0), this._count.z - 1);\r\n\r\n    for (let z = zRange.x; z <= zRange.y; ++z) {\r\n      const zVal = [this._box.min.z + z * this._cellSize.z,\r\n        this._box.min.z + (z + 1) * this._cellSize.z];\r\n      vCenter.z = 0.5 * (zVal[0] + zVal[1]);\r\n\r\n      for (let y = yRange.x; y <= yRange.y; ++y) {\r\n        const yVal = [this._box.min.y + y * this._cellSize.y,\r\n          this._box.min.y + (y + 1) * this._cellSize.y];\r\n        vCenter.y = 0.5 * (yVal[0] + yVal[1]);\r\n\r\n        for (let { x } = xRange; x <= xRange.y; ++x) {\r\n          const xVal = [this._box.min.x + x * this._cellSize.x,\r\n            this._box.min.x + (x + 1) * this._cellSize.x];\r\n          vCenter.x = 0.5 * (xVal[0] + xVal[1]);\r\n\r\n          const d2 = center.distanceToSquared(vCenter);\r\n          if (d2 <= distTouch2) {\r\n            process(x + this._count.x * (y + this._count.y * z), d2 <= distInside2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom within given sphere\r\n   *\r\n   * @param {Vector3} center - center of the sphere\r\n   * @param {number} radius  - sphere radius\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinRadius(center, radius, process) {\r\n    const self = this;\r\n    const r2 = radius * radius;\r\n\r\n    self._forEachVoxelWithinRadius(center, radius, (voxel, isInside) => {\r\n      if (isInside) {\r\n        self._forEachAtomInVoxel(voxel, process);\r\n      } else {\r\n        self._forEachAtomInVoxel(voxel, (atom) => {\r\n          if (center.distanceToSquared(atom.position) <= r2) {\r\n            process(atom);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms defined by mask\r\n   *\r\n   * @param {Complex} complex - complex\r\n   * @param {number} mask - bit mask\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinDistFromMasked(complex, mask, dist, process) {\r\n    this._forEachAtomWithinDistFromGroup((atomProc) => {\r\n      complex.forEachAtom((atom) => {\r\n        if ((atom.mask & mask) !== 0) {\r\n          atomProc(atom);\r\n        }\r\n      });\r\n    }, dist, process);\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms defined by selector\r\n   *\r\n   * @param {Complex} complex - complex\r\n   * @param {number} selector - selector\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  forEachAtomWithinDistFromSelected(complex, selector, dist, process) {\r\n    this._forEachAtomWithinDistFromGroup((atomProc) => {\r\n      complex.forEachAtom((atom) => {\r\n        if (selector.includesAtom(atom)) {\r\n          atomProc(atom);\r\n        }\r\n      });\r\n    }, dist, process);\r\n  }\r\n\r\n  /**\r\n   * Call a function for each atom of given complex within given distance from group of atoms\r\n   *\r\n   * @param {function} forEachAtom - enumerator of atoms in the group\r\n   * @param {number} dist - distance\r\n   * @param {function(Atom)} process - function to call\r\n   */\r\n  _forEachAtomWithinDistFromGroup(forEachAtom, dist, process) {\r\n    const self = this;\r\n    const r2 = dist * dist;\r\n\r\n    const voxels = [];\r\n    const atoms = [];\r\n    let idx = 0;\r\n\r\n    // build \"within radius\" atom list for each voxel\r\n    forEachAtom((atom) => {\r\n      self._forEachVoxelWithinRadius(atom.position, dist, (voxel, isInside) => {\r\n        if (isInside) {\r\n          // this voxel is inside circle -- no check will be required\r\n          voxels[voxel] = -1;\r\n        } else if (typeof voxels[voxel] === 'undefined') {\r\n          // this voxel isn't covered yet -- start building list of atoms\r\n          atoms.push(atom);\r\n          atoms.push(-1);\r\n          voxels[voxel] = idx;\r\n          idx += 2;\r\n        } else if (voxels[voxel] !== -1) {\r\n          // this voxel has a list of atoms required for distance check -- add atom to the list\r\n          atoms.push(atom);\r\n          atoms.push(voxels[voxel]);\r\n          voxels[voxel] = idx;\r\n          idx += 2;\r\n        }\r\n      });\r\n    });\r\n\r\n    let voxel;\r\n\r\n    const processIfWithin = function (atom) {\r\n      if (typeof voxels[voxel] === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      idx = voxels[voxel];\r\n      if (idx === -1) {\r\n        // this voxel is fully covered\r\n        process(atom);\r\n        return;\r\n      }\r\n\r\n      // check distance to each atom within radius from this voxel\r\n      for (; idx >= 0; idx = atoms[idx + 1]) {\r\n        if (atom.position.distanceToSquared(atoms[idx].position) < r2) {\r\n          process(atom);\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    // for each marked voxel\r\n    for (voxel in voxels) {\r\n      if (voxels.hasOwnProperty(voxel)) {\r\n        self._forEachAtomInVoxel(voxel, processIfWithin);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default VoxelWorld;\r\n","import ResidueType from './ResidueType';\r\nimport PairCollection from './AtomPairs';\r\n\r\nconst MINIMAL_DISTANCE = 0.5;\r\nconst MIN_HBOND_ENERGY = -9.9;\r\nconst MAX_HBOND_ENERGY = -0.5;\r\nconst COUPLING_CONSTANT = -27.888; // = -332 * 0.42 * 0.2\r\nconst MAX_COUPLING_DISTANCE = 5.0; // how far is the closest atom of a potential partner residue from CA atom\r\nconst MAX_RESIDUES_THRESHOLD = 1000;\r\n\r\nexport default class HBondInfo {\r\n  constructor(complex) {\r\n    this._complex = complex;\r\n    this._hbonds = []; // array of bond info for each residue\r\n    if (this._complex._residues.length > MAX_RESIDUES_THRESHOLD) {\r\n      this._buildVW(); // optimized version using voxel grid\r\n    } else {\r\n      this._build(); // test all pairs of residues\r\n    }\r\n  }\r\n\r\n  isBond(from, to) {\r\n    if (this._hbonds[from]) {\r\n      const [acc0, acc1] = this._hbonds[from].acceptor;\r\n      if (acc0 && acc0.residue === to && acc0.energy < MAX_HBOND_ENERGY) {\r\n        return true;\r\n      }\r\n      if (acc1 && acc1.residue === to && acc1.energy < MAX_HBOND_ENERGY) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _build() {\r\n    const self = this;\r\n\r\n    for (let i = 0; i < this._complex._residues.length - 1; ++i) {\r\n      const ri = this._complex._residues[i];\r\n      if ((ri.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        continue;\r\n      }\r\n\r\n      // get predecessor in chain\r\n      let preri = null;\r\n      if (i > 0 && (this._complex._residues[i - 1].getType().flags & ResidueType.Flags.PROTEIN)\r\n        && ri._sequence === this._complex._residues[i - 1]._sequence + 1) {\r\n        preri = this._complex._residues[i - 1];\r\n      }\r\n\r\n      for (let j = i + 1; j < this._complex._residues.length; ++j) {\r\n        const rj = this._complex._residues[j];\r\n        if ((rj.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n          continue;\r\n        }\r\n\r\n        // get predecessor in chain\r\n        let prerj = null;\r\n        if ((this._complex._residues[j - 1].getType().flags & ResidueType.Flags.PROTEIN)\r\n          && rj._sequence === this._complex._residues[j - 1]._sequence + 1) {\r\n          prerj = this._complex._residues[j - 1];\r\n        }\r\n\r\n        self._calcHBondEnergy(preri, ri, rj);\r\n        if (j !== i + 1) {\r\n          self._calcHBondEnergy(prerj, rj, ri);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _buildVW() {\r\n    const self = this;\r\n    const residues = this._complex._residues;\r\n    let ri;\r\n    let preri;\r\n\r\n    const vw = this._complex.getVoxelWorld();\r\n    if (vw === null) {\r\n      return;\r\n    }\r\n\r\n    const pairs = new PairCollection(this._complex._residues.length * this._complex._residues.length / 2);\r\n\r\n    function processAtom(atom) {\r\n      const rj = atom.residue;\r\n\r\n      if (rj._index === ri._index) {\r\n        return;\r\n      }\r\n\r\n      if ((rj.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        return;\r\n      }\r\n\r\n      if (!pairs.addPair(ri._index, rj._index)) {\r\n        // we've seen this pair\r\n        return;\r\n      }\r\n\r\n      // get predecessor in chain\r\n      let prerj = rj._index > 0 ? residues[rj._index - 1] : null;\r\n      if (prerj\r\n        && ((prerj.getType().flags & ResidueType.Flags.PROTEIN) === 0 || rj._sequence !== prerj._sequence + 1)) {\r\n        prerj = null;\r\n      }\r\n\r\n      self._calcHBondEnergy(preri, ri, rj);\r\n      if (rj._index !== ri._index + 1) {\r\n        self._calcHBondEnergy(prerj, rj, ri);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < residues.length - 1; ++i) {\r\n      ri = residues[i];\r\n      if ((ri.getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n        continue;\r\n      }\r\n\r\n      // get predecessor in chain\r\n      preri = i > 0 ? residues[i - 1] : null;\r\n      if (preri\r\n        && ((preri.getType().flags & ResidueType.Flags.PROTEIN) === 0 || ri._sequence !== preri._sequence + 1)) {\r\n        preri = null;\r\n      }\r\n\r\n      vw.forEachAtomWithinRadius(this._residueGetCAlpha(ri), MAX_COUPLING_DISTANCE, processAtom);\r\n    }\r\n  }\r\n\r\n  _residueGetCAlpha(res) {\r\n    for (let i = 0; i < res._atoms.length; ++i) {\r\n      const { name } = res._atoms[i];\r\n      if (name === 'CA'\r\n        || name === 'C1') {\r\n        return res._atoms[i].position;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _residueGetCO(res) {\r\n    let c = null;\r\n    let o = null;\r\n\r\n    res.forEachAtom((a) => {\r\n      if (a.name === 'C') {\r\n        c = a.position;\r\n      } else if (a.name === 'O') {\r\n        o = a.position;\r\n      }\r\n    });\r\n\r\n    return [c, o];\r\n  }\r\n\r\n  // TODO Support hydrogen defined in complex\r\n  _residueGetNH(prev, res) {\r\n    const [c, o] = this._residueGetCO(prev);\r\n\r\n    let n;\r\n    res.forEachAtom((a) => {\r\n      if (a.name === 'N') {\r\n        n = a.position;\r\n      }\r\n    });\r\n\r\n    if (c && o && n) {\r\n      // calculate hydrogen position\r\n      const h = c.clone();\r\n      h.sub(o);\r\n      h.multiplyScalar(1.0 / h.length());\r\n      h.add(n);\r\n\r\n      return [n, h];\r\n    }\r\n\r\n    return [null, null];\r\n  }\r\n\r\n  _calcHBondEnergy(predonor, donor, acceptor) {\r\n    let result = 0;\r\n\r\n    if (predonor === null) {\r\n      return result;\r\n    }\r\n\r\n    if (donor.getType().getName() !== 'PRO') {\r\n      const [n, h] = this._residueGetNH(predonor, donor);\r\n      const [c, o] = this._residueGetCO(acceptor);\r\n\r\n      if (n === null || h === null || c === null || o === null) {\r\n        return result;\r\n      }\r\n\r\n      const distanceHO = h.distanceTo(o);\r\n      const distanceHC = h.distanceTo(c);\r\n      const distanceNC = n.distanceTo(c);\r\n      const distanceNO = n.distanceTo(o);\r\n\r\n      if (distanceHO < MINIMAL_DISTANCE || distanceHC < MINIMAL_DISTANCE\r\n          || distanceNC < MINIMAL_DISTANCE || distanceNO < MINIMAL_DISTANCE) {\r\n        result = MIN_HBOND_ENERGY;\r\n      } else {\r\n        result = COUPLING_CONSTANT / distanceHO - COUPLING_CONSTANT / distanceHC\r\n                 + COUPLING_CONSTANT / distanceNC - COUPLING_CONSTANT / distanceNO;\r\n      }\r\n\r\n      // DSSP compatibility mode:\r\n      result = Math.round(result * 1000) / 1000;\r\n\r\n      if (result < MIN_HBOND_ENERGY) {\r\n        result = MIN_HBOND_ENERGY;\r\n      }\r\n    }\r\n\r\n    // update donor\r\n    if (typeof this._hbonds[donor._index] === 'undefined') {\r\n      this._hbonds[donor._index] = {\r\n        donor: [],\r\n        acceptor: [],\r\n      };\r\n    }\r\n    const donorInfo = this._hbonds[donor._index];\r\n\r\n    if (donorInfo.acceptor.length < 2) {\r\n      donorInfo.acceptor.push({\r\n        residue: acceptor._index,\r\n        energy: result,\r\n      });\r\n    }\r\n\r\n    if (donorInfo.acceptor.length > 1) {\r\n      if (result < donorInfo.acceptor[0].energy) {\r\n        donorInfo.acceptor[1].residue = donorInfo.acceptor[0].residue;\r\n        donorInfo.acceptor[1].energy = donorInfo.acceptor[0].energy;\r\n        donorInfo.acceptor[0].residue = acceptor._index;\r\n        donorInfo.acceptor[0].energy = result;\r\n      } else if (result < donorInfo.acceptor[1].energy) {\r\n        donorInfo.acceptor[1].residue = acceptor._index;\r\n        donorInfo.acceptor[1].energy = result;\r\n      }\r\n    }\r\n\r\n    // update acceptor\r\n    if (typeof this._hbonds[acceptor._index] === 'undefined') {\r\n      this._hbonds[acceptor._index] = {\r\n        donor: [],\r\n        acceptor: [],\r\n      };\r\n    }\r\n    const accInfo = this._hbonds[acceptor._index];\r\n\r\n    if (accInfo.donor.length < 2) {\r\n      accInfo.donor.push({\r\n        residue: donor._index,\r\n        energy: result,\r\n      });\r\n    }\r\n\r\n    if (accInfo.donor.length > 1) {\r\n      if (result < accInfo.donor[0].energy) {\r\n        accInfo.donor[1].residue = accInfo.donor[0].residue;\r\n        accInfo.donor[1].energy = accInfo.donor[0].energy;\r\n        accInfo.donor[0].residue = donor._index;\r\n        accInfo.donor[0].energy = result;\r\n      } else if (result < accInfo.donor[1].energy) {\r\n        accInfo.donor[1].residue = donor._index;\r\n        accInfo.donor[1].energy = result;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import HBondInfo from './HBondInfo';\r\nimport ResidueType from './ResidueType';\r\n\r\nconst BridgeType = Object.freeze({\r\n  NO_BRIDGE: 0,\r\n  PARALLEL: 1,\r\n  ANTI_PARALLEL: 2,\r\n});\r\n\r\nconst HelixFlag = Object.freeze({\r\n  START: 1,\r\n  MIDDLE: 2,\r\n  END: 3,\r\n  START_AND_END: 4,\r\n});\r\n\r\nconst StructureType = Object.freeze({\r\n  STRAND: 'E',\r\n  BRIDGE: 'B',\r\n  HELIX_310: 'G',\r\n  HELIX_ALPHA: 'H',\r\n  HELIX_PI: 'I',\r\n  TURN: 'T',\r\n  BEND: 'S',\r\n  LOOP: ' ',\r\n});\r\n\r\nexport default class SecondaryStructureMap {\r\n  constructor(complex) {\r\n    this._complex = complex;\r\n    this._build();\r\n  }\r\n\r\n  _build() {\r\n    const self = this;\r\n    this._hbonds = new HBondInfo(this._complex);\r\n    this._ss = []; // DSSP map by residue\r\n\r\n    // auxilliary data\r\n    this._sheet = [];\r\n    this._betaPartners = [];\r\n    this._bend = [];\r\n    for (let i = 0; i < this._complex.getResidues().length; ++i) {\r\n      this._betaPartners[i] = [];\r\n    }\r\n    this._helixFlags = [];\r\n    this._helixFlags[3] = [];\r\n    this._helixFlags[4] = [];\r\n    this._helixFlags[5] = [];\r\n\r\n    // calculate peptide chain lengths\r\n    this._chainLengths = [];\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i].getResidues();\r\n      let len = 0;\r\n      for (; len < chain.length; ++len) {\r\n        if ((chain[len].getType().flags & ResidueType.Flags.PROTEIN) === 0) {\r\n          break;\r\n        }\r\n      }\r\n      this._chainLengths[i] = len;\r\n    }\r\n\r\n    this._buildBetaSheets();\r\n\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      self._buildAlphaHelices(this._complex._chains[i].getResidues(), this._chainLengths[i], false);\r\n    }\r\n  }\r\n\r\n  _buildAlphaHelices(inResidues, chainLength, inPreferPiHelices) {\r\n    // Helix and Turn\r\n    for (let stride = 3; stride <= 5; ++stride) {\r\n      if (inResidues.length < stride) {\r\n        break;\r\n      }\r\n\r\n      for (let i = 0; i + stride < chainLength; ++i) {\r\n        if (this._hbonds.isBond(inResidues[i + stride]._index, inResidues[i]._index)\r\n        /* && NoChainBreak(res[i], res[i + stride]) */) {\r\n          this._helixFlags[stride][inResidues[i + stride]._index] = HelixFlag.END;\r\n          for (let j = i + 1; j < i + stride; ++j) {\r\n            if (typeof this._helixFlags[stride][inResidues[j]._index] === 'undefined') {\r\n              this._helixFlags[stride][inResidues[j]._index] = HelixFlag.MIDDLE;\r\n            }\r\n          }\r\n\r\n          if (this._helixFlags[stride][inResidues[i]._index] === HelixFlag.END) {\r\n            this._helixFlags[stride][inResidues[i]._index] = HelixFlag.START_AND_END;\r\n          } else {\r\n            this._helixFlags[stride][inResidues[i]._index] = HelixFlag.START;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 2; i < chainLength - 2; ++i) {\r\n      const kappa = this._kappa(inResidues[i - 2], inResidues[i], inResidues[i + 2]);\r\n      this._bend[inResidues[i]._index] = (kappa !== 360 && kappa > 70);\r\n    }\r\n\r\n    for (let i = 1; i + 4 < chainLength; ++i) {\r\n      if (this._isHelixStart(inResidues[i]._index, 4) && this._isHelixStart(inResidues[i - 1]._index, 4)) {\r\n        for (let j = i; j <= i + 3; ++j) {\r\n          this._ss[inResidues[j]._index] = StructureType.HELIX_ALPHA;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 3 < chainLength; ++i) {\r\n      if (this._isHelixStart(inResidues[i]._index, 3) && this._isHelixStart(inResidues[i - 1]._index, 3)) {\r\n        let empty = true;\r\n        for (let j = i; empty && j <= i + 2; ++j) {\r\n          empty = typeof this._ss[inResidues[j]._index] === 'undefined'\r\n                  || this._ss[inResidues[j]._index] === StructureType.HELIX_310;\r\n        }\r\n        if (empty) {\r\n          for (let j = i; j <= i + 2; ++j) {\r\n            this._ss[inResidues[j]._index] = StructureType.HELIX_310;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 5 < chainLength; ++i) {\r\n      if (this._isHelixStart(inResidues[i]._index, 5) && this._isHelixStart(inResidues[i - 1]._index, 5)) {\r\n        let empty = true;\r\n        for (let j = i; empty && j <= i + 4; ++j) {\r\n          empty = typeof this._ss[inResidues[j]._index] === 'undefined'\r\n                  || this._ss[inResidues[j]._index] === StructureType.HELIX_PI\r\n                  || (inPreferPiHelices && this._ss[inResidues[j]._index] === StructureType.HELIX_ALPHA);\r\n        }\r\n        if (empty) {\r\n          for (let j = i; j <= i + 4; ++j) {\r\n            this._ss[inResidues[j]._index] = StructureType.HELIX_PI;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i + 1 < chainLength; ++i) {\r\n      if (typeof this._ss[inResidues[i]._index] === 'undefined') {\r\n        let isTurn = false;\r\n        for (let stride = 3; stride <= 5 && !isTurn; ++stride) {\r\n          for (let k = 1; k < stride && !isTurn; ++k) {\r\n            isTurn = (i >= k) && this._isHelixStart(inResidues[i - k]._index, stride);\r\n          }\r\n        }\r\n\r\n        if (isTurn) {\r\n          this._ss[inResidues[i]._index] = StructureType.TURN;\r\n        } else if (this._bend[inResidues[i]._index]) {\r\n          this._ss[inResidues[i]._index] = StructureType.BEND;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _residueGetCAlpha(res) {\r\n    for (let i = 0; i < res._atoms.length; ++i) {\r\n      const { name } = res._atoms[i];\r\n      if (name === 'CA'\r\n          || name === 'C1') {\r\n        return res._atoms[i].position;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  _cosinusAngle(p1, p2, p3, p4) {\r\n    const v12 = p1.clone().sub(p2);\r\n    const v34 = p3.clone().sub(p4);\r\n\r\n    let result = 0;\r\n\r\n    const x = v12.dot(v12) * v34.dot(v34);\r\n    if (x > 0) {\r\n      result = v12.dot(v34) / Math.sqrt(x);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  _kappa(prevPrev, res, nextNext) {\r\n    const curCA = this._residueGetCAlpha(res);\r\n    const ppCA = this._residueGetCAlpha(prevPrev);\r\n    const nnCA = this._residueGetCAlpha(nextNext);\r\n    if (curCA === null || ppCA === null || nnCA === null) {\r\n      return 180;\r\n    }\r\n\r\n    const ckap = this._cosinusAngle(curCA, ppCA, nnCA, curCA);\r\n    const skap = Math.sqrt(1 - ckap * ckap);\r\n    return Math.atan2(skap, ckap) * 180 / Math.PI;\r\n  }\r\n\r\n  _isHelixStart(res, stride) {\r\n    return (this._helixFlags[stride][res] === HelixFlag.START\r\n      || this._helixFlags[stride][res] === HelixFlag.START_AND_END);\r\n  }\r\n\r\n  _buildBetaSheets() {\r\n    // find bridges\r\n    // check each chain against each other chain, and against itself\r\n    const bridges = [];\r\n    for (let a = 0; a < this._complex._chains.length; ++a) {\r\n      const lenA = this._chainLengths[a];\r\n      if (lenA <= 4) {\r\n        continue;\r\n      }\r\n\r\n      const chainA = this._complex._chains[a].getResidues();\r\n\r\n      for (let b = a; b < this._complex._chains.length; ++b) {\r\n        const lenB = this._chainLengths[b];\r\n        if (lenB <= 4) {\r\n          continue;\r\n        }\r\n\r\n        const chainB = this._complex._chains[b].getResidues();\r\n\r\n        for (let i = 1; i + 1 < lenA; ++i) {\r\n          const ri = chainA[i];\r\n\r\n          let j = 1;\r\n          if (b === a) {\r\n            j = i + 3; // check for self-bridges forward down the chain\r\n          }\r\n\r\n          for (; j + 1 < lenB; ++j) {\r\n            const rj = chainB[j];\r\n\r\n            const type = this._testBridge(chainA, i, chainB, j);\r\n            if (type === BridgeType.NO_BRIDGE) {\r\n              continue;\r\n            }\r\n\r\n            // there is a bridge, try to attach it to previously found sequence\r\n            let found = false;\r\n            for (const bridge of bridges) {\r\n              if (type !== bridge.type || ri._index !== bridge.i[bridge.i.length - 1] + 1) {\r\n                continue;\r\n              }\r\n\r\n              if (type === BridgeType.PARALLEL && bridge.j[bridge.j.length - 1] + 1 === rj._index) {\r\n                bridge.i.push(ri._index);\r\n                bridge.j.push(rj._index);\r\n                found = true;\r\n                break;\r\n              }\r\n\r\n              if (type === BridgeType.ANTI_PARALLEL && bridge.j[0] - 1 === rj._index) {\r\n                bridge.i.push(ri._index);\r\n                bridge.j.unshift(rj._index);\r\n                found = true;\r\n                break;\r\n              }\r\n            }\r\n\r\n            // this bridge cannot be attached anywhere, start a new sequence\r\n            if (!found) {\r\n              bridges.push({\r\n                type,\r\n                i: [ri._index],\r\n                chainI: ri.getChain()._index,\r\n                j: [rj._index],\r\n                chainJ: rj.getChain()._index,\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // extend ladders\r\n    bridges.sort((a, b) => {\r\n      if (a.chainI < b.chainI || (a.chainI === b.chainI && a.i[0] < b.i[0])) {\r\n        return -1;\r\n      }\r\n      return 1;\r\n    });\r\n\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      for (let j = i + 1; j < bridges.length; ++j) {\r\n        const ibi = bridges[i].i[0];\r\n        const iei = bridges[i].i[bridges[i].i.length - 1];\r\n        const jbi = bridges[i].j[0];\r\n        const jei = bridges[i].j[bridges[i].j.length - 1];\r\n        const ibj = bridges[j].i[0];\r\n        const iej = bridges[j].i[bridges[j].i.length - 1];\r\n        const jbj = bridges[j].j[0];\r\n        const jej = bridges[j].j[bridges[j].j.length - 1];\r\n\r\n        if (bridges[i].type !== bridges[j].type\r\n          || this._hasChainBreak(Math.min(ibi, ibj), Math.max(iei, iej))\r\n          || this._hasChainBreak(Math.min(jbi, jbj), Math.max(jei, jej))\r\n          || ibj - iei >= 6 || (iei >= ibj && ibi <= iej)) {\r\n          continue;\r\n        }\r\n\r\n        let bulge = false;\r\n        if (bridges[i].type === BridgeType.PARALLEL) {\r\n          bulge = ((jbj - jei < 6 && ibj - iei < 3) || (jbj - jei < 3));\r\n        } else {\r\n          bulge = ((jbi - jej < 6 && ibj - iei < 3) || (jbi - jej < 3));\r\n        }\r\n\r\n        if (bulge) {\r\n          bridges[i].i = bridges[i].i.concat(bridges[j].i);\r\n          if (bridges[i].type === BridgeType.PARALLEL) {\r\n            bridges[i].j = bridges[i].j.concat(bridges[j].j);\r\n          } else {\r\n            bridges[i].j = bridges[j].j.concat(bridges[i].j);\r\n          }\r\n          bridges.splice(j--, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Sheet\r\n    const ladderset = new Set();\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      ladderset.add(bridges[i]);\r\n    }\r\n\r\n    let sheet = 1;\r\n    let ladder = 0;\r\n    while (ladderset.size > 0) {\r\n      let bridge = ladderset.values().next().value;\r\n      ladderset.delete(bridge);\r\n\r\n      const sheetset = new Set();\r\n      sheetset.add(bridge);\r\n\r\n      let toMove;\r\n      do {\r\n        toMove = new Set();\r\n        for (const a of sheetset.values()) {\r\n          for (const b of ladderset.values()) {\r\n            if (this._areBridgesLinked(a, b)) {\r\n              toMove.add(b);\r\n            }\r\n          }\r\n        }\r\n        for (bridge of toMove.values()) {\r\n          sheetset.add(bridge);\r\n          ladderset.delete(bridge);\r\n        }\r\n      } while (toMove.size > 0);\r\n\r\n      for (bridge of sheetset.values()) {\r\n        bridge.ladder = ladder;\r\n        bridge.sheet = sheet;\r\n        bridge.link = sheetset;\r\n        ++ladder;\r\n      }\r\n\r\n      ++sheet;\r\n    }\r\n\r\n    for (let i = 0; i < bridges.length; ++i) {\r\n      const bridge = bridges[i];\r\n\r\n      // find out if any of the i and j set members already have\r\n      // a bridge assigned, if so, we're assigning bridge 2\r\n\r\n      let betai = 0;\r\n      let betaj = 0;\r\n\r\n      for (let l = 0; l < bridge.i.length; ++l) {\r\n        if (this._betaPartners[bridge.i[l]][0]) {\r\n          betai = 1;\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (let l = 0; l < bridge.j.length; ++l) {\r\n        if (this._betaPartners[bridge.j[l]][0]) {\r\n          betaj = 1;\r\n          break;\r\n        }\r\n      }\r\n\r\n      let ss = StructureType.BRIDGE;\r\n      if (bridge.i.length > 1) {\r\n        ss = StructureType.STRAND;\r\n      }\r\n\r\n      if (bridge.type === BridgeType.PARALLEL) {\r\n        let j = 0;\r\n        for (let k = 0; k < bridge.i.length; ++k) {\r\n          this._betaPartners[bridge.i[k]][betai] = {\r\n            residue: bridge.j[j++],\r\n            ladder: bridge.ladder,\r\n            parallel: true,\r\n          };\r\n        }\r\n\r\n        j = 0;\r\n        for (let k = 0; k < bridge.j.length; ++k) {\r\n          this._betaPartners[bridge.j[k]][betaj] = {\r\n            residue: bridge.i[j++],\r\n            ladder: bridge.ladder,\r\n            parallel: true,\r\n          };\r\n        }\r\n      } else {\r\n        let j = bridge.j.length - 1;\r\n        for (let k = 0; k < bridge.i.length; ++k) {\r\n          this._betaPartners[bridge.i[k]][betai] = {\r\n            residue: bridge.j[j--],\r\n            ladder: bridge.ladder,\r\n            parallel: false,\r\n          };\r\n        }\r\n\r\n        j = bridge.i.length - 1;\r\n        for (let k = 0; k < bridge.j.length; ++k) {\r\n          this._betaPartners[bridge.j[k]][betaj] = {\r\n            residue: bridge.i[j--],\r\n            ladder: bridge.ladder,\r\n            parallel: false,\r\n          };\r\n        }\r\n      }\r\n\r\n      for (let k = bridge.i[0]; k <= bridge.i[bridge.i.length - 1]; ++k) {\r\n        if (this._ss[k] !== StructureType.STRAND) {\r\n          this._ss[k] = ss;\r\n          this._sheet[k] = bridge.sheet;\r\n        }\r\n      }\r\n\r\n      for (let k = bridge.j[0]; k <= bridge.j[bridge.j.length - 1]; ++k) {\r\n        if (this._ss[k] !== StructureType.STRAND) {\r\n          this._ss[k] = ss;\r\n          this._sheet[k] = bridge.sheet;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _testBridge(chainA, from, chainB, to) {\r\n    let result = BridgeType.NO_BRIDGE;\r\n\r\n    const a = chainA[from - 1]._index;\r\n    const b = chainA[from]._index;\r\n    const c = chainA[from + 1]._index;\r\n    const d = chainB[to - 1]._index;\r\n    const e = chainB[to]._index;\r\n    const f = chainB[to + 1]._index;\r\n\r\n    const isBond = this._hbonds.isBond.bind(this._hbonds);\r\n    if ((isBond(c, e) && isBond(e, a)) || (isBond(f, b) && isBond(b, d))) {\r\n      result = BridgeType.PARALLEL;\r\n    } else if ((isBond(c, d) && isBond(f, a)) || (isBond(e, b) && isBond(b, e))) {\r\n      result = BridgeType.ANTI_PARALLEL;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  // return true if any of the residues in bridge a is identical to any of the residues in bridge b\r\n  _areBridgesLinked(a, b) {\r\n    const ai = new Set(a.i);\r\n    const aj = new Set(a.j);\r\n\r\n    for (const i of b.i) {\r\n      if (ai.has(i) || aj.has(i)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    for (const i of b.j) {\r\n      if (ai.has(i) || aj.has(i)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  _hasChainBreak(from, to) {\r\n    for (let i = from + 1; i <= to; ++i) {\r\n      if (this._complex._residues[i]._sequence !== this._complex._residues[i - 1]._sequence + 1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nSecondaryStructureMap.StructureType = StructureType;\r\n","import * as THREE from 'three';\r\nimport logger from '../utils/logger';\r\nimport Atom from './Atom';\r\nimport Chain from './Chain';\r\nimport Helix from './Helix';\r\nimport Strand from './Strand';\r\nimport Sheet from './Sheet';\r\nimport Component from './Component';\r\nimport ResidueType from './ResidueType';\r\nimport Bond from './Bond';\r\nimport AutoBond from './AutoBond';\r\nimport AromaticLoopsMarker from './AromaticLoopsMarker';\r\nimport BiologicalUnit from './BiologicalUnit';\r\nimport selectors from './selectors';\r\nimport VoxelWorld from './VoxelWorld';\r\nimport SecondaryStructureMap from './SecondaryStructureMap';\r\nimport StructuralElement from './StructuralElement';\r\n\r\nconst VOXEL_SIZE = 5.0;\r\n\r\nconst { StructureType } = SecondaryStructureMap;\r\nconst StructuralElementType = StructuralElement.Type;\r\n\r\n// see http://www.wwpdb.org/documentation/file-format-content/format33/sect5.html#HELIX\r\nconst helixClassMap = {\r\n  [StructureType.HELIX_ALPHA]: 1,\r\n  [StructureType.HELIX_PI]: 3,\r\n  [StructureType.HELIX_310]: 5,\r\n};\r\n\r\nconst loopMap = {\r\n  [StructureType.BRIDGE]: StructuralElementType.BRIDGE,\r\n  [StructureType.TURN]: StructuralElementType.TURN,\r\n  [StructureType.BEND]: StructuralElementType.BEND,\r\n  [StructureType.LOOP]: StructuralElementType.COIL,\r\n};\r\n\r\n/**\r\n * The entire complex of the molecules under study.\r\n *\r\n * @exports Complex\r\n * @constructor\r\n */\r\nclass Complex {\r\n  constructor() {\r\n    this._chains = [];\r\n    this._components = [];\r\n    this._helices = [];\r\n    this._sheets = [];\r\n    this.structures = [];\r\n\r\n    this._residueTypes = Object.create(ResidueType.StandardTypes);\r\n    this._atoms = [];\r\n    this._residues = [];\r\n    this._bonds = [];\r\n    this._sgroups = [];\r\n    this._molecules = [];\r\n    this._maskNeedsUpdate = false;\r\n\r\n    this.metadata = {};\r\n\r\n    this.symmetry = [];\r\n    this.units = [new BiologicalUnit(this)];\r\n    this._currentUnit = 0; // default biological unit is the asymmetric unit\r\n  }\r\n\r\n  addAtom(atom) {\r\n    const index = this._atoms.length;\r\n    this._atoms.push(atom);\r\n    return index;\r\n  }\r\n\r\n  addSheet(sheet) {\r\n    const index = this._sheets.length;\r\n    this._sheets.push(sheet);\r\n    return index;\r\n  }\r\n\r\n  addHelix(helix) {\r\n    const index = this._helices.length;\r\n    this._helices.push(helix);\r\n    return index;\r\n  }\r\n\r\n  getAtoms() {\r\n    return this._atoms;\r\n  }\r\n\r\n  getBonds() {\r\n    return this._bonds;\r\n  }\r\n\r\n  getAtomCount() {\r\n    return this._atoms.length;\r\n  }\r\n\r\n  addResidue(residue) {\r\n    const index = this._residues.length;\r\n    this._residues.push(residue);\r\n    return index;\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    this.forEachChain((chain) => {\r\n      chain.updateToFrame(frameData);\r\n    });\r\n  }\r\n\r\n  addResidueType(resName) {\r\n    const rt = this._residueTypes[resName] = new ResidueType(resName, 'Unknown', '');\r\n    return rt;\r\n  }\r\n\r\n  getResidueCount() {\r\n    return this._residues.length;\r\n  }\r\n\r\n  getResidues() {\r\n    return this._residues;\r\n  }\r\n\r\n  getSGroupCount() {\r\n    return this._sgroups.length;\r\n  }\r\n\r\n  getSGroups() {\r\n    return this._sgroups;\r\n  }\r\n\r\n  /*\r\n     Extract atom by its fullname: #chainName#.#residueId#.#atomName#\r\n     */\r\n  getAtomByFullname(fullName) {\r\n    const parts = fullName.split('.');\r\n    if (parts.length !== 3) {\r\n      return null;\r\n    }\r\n\r\n    const chainName = parts[0];\r\n    const resId = parseInt(parts[1], 10);\r\n    if (Number.isNaN(resId)) {\r\n      return null;\r\n    }\r\n    const atomName = parts[2].toUpperCase();\r\n\r\n    let currAtom = null;\r\n    this.forEachChain((chain) => {\r\n      if (currAtom) {\r\n        return;\r\n      }\r\n      if (chain._name.localeCompare(chainName) === 0) {\r\n        chain.forEachResidue((residue) => {\r\n          if (currAtom) {\r\n            return;\r\n          }\r\n          if (residue._sequence === resId) {\r\n            residue.forEachAtom((atom) => {\r\n              if (currAtom) {\r\n                return;\r\n              }\r\n              if (atomName.localeCompare(atom.name) === 0) {\r\n                currAtom = atom;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    return currAtom;\r\n  }\r\n\r\n  /**\r\n   * Create a new chain.\r\n   *\r\n   * @param {string} name - Chain name.\r\n   * @returns {Chain} - Newly created chain.\r\n   */\r\n  addChain(name) {\r\n    const result = new Chain(this, name);\r\n    this._chains.push(result);\r\n    return result;\r\n  }\r\n\r\n  getChain(name) {\r\n    for (let i = 0, n = this._chains.length; i < n; ++i) {\r\n      const chain = this._chains[i];\r\n      if (chain.getName() === name) {\r\n        return chain;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getChainCount() {\r\n    return this._chains.length;\r\n  }\r\n\r\n  getMolecules() {\r\n    return this._molecules;\r\n  }\r\n\r\n  getMoleculeCount() {\r\n    return this._molecules.length;\r\n  }\r\n\r\n  forEachAtom(process) {\r\n    const atoms = this._atoms;\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      process(atoms[i]);\r\n    }\r\n  }\r\n\r\n  forEachBond(process) {\r\n    const bonds = this._bonds;\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      process(bonds[i]);\r\n    }\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const residues = this._residues;\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i]);\r\n    }\r\n  }\r\n\r\n  forEachChain(process) {\r\n    const chains = this._chains;\r\n    for (let i = 0, n = chains.length; i < n; ++i) {\r\n      process(chains[i]);\r\n    }\r\n  }\r\n\r\n  forEachMolecule(process) {\r\n    const molecules = this._molecules;\r\n    const n = molecules.length;\r\n    for (let i = 0; i < n; ++i) {\r\n      process(molecules[i]);\r\n    }\r\n  }\r\n\r\n  forEachSGroup(process) {\r\n    const groups = this._sgroups;\r\n    for (let i = 0, n = groups.length; i < n; ++i) {\r\n      process(groups[i]);\r\n    }\r\n  }\r\n\r\n  forEachComponent(process) {\r\n    const components = this._components;\r\n    for (let i = 0, n = components.length; i < n; ++i) {\r\n      process(components[i]);\r\n    }\r\n  }\r\n\r\n  forEachVisibleComponent(process) {\r\n    const components = this._components;\r\n    for (let i = 0, n = components.length; i < n; ++i) {\r\n      process(components[i]);\r\n    }\r\n  }\r\n\r\n  addBond(left, right, order, type, fixed) {\r\n    const bond = new Bond(left, right, order, type, fixed);\r\n    this._bonds.push(bond);\r\n    return bond;\r\n  }\r\n\r\n  getBondCount() {\r\n    return this._bonds.length;\r\n  }\r\n\r\n  getResidueType(name) {\r\n    return this._residueTypes[name] || null;\r\n  }\r\n\r\n  getUnifiedSerial(chain, serial, iCode) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const maxSerial = 65536;\r\n    const chainShift = maxSerial * 256;\r\n    /* eslint-enable no-magic-numbers */\r\n    return serial + iCode * maxSerial + chain * chainShift;\r\n  }\r\n\r\n  splitUnifiedSerial(uniSerial) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const maxSerial = 65536;\r\n    const chainShift = maxSerial * 256;\r\n    /* eslint-enable no-magic-numbers */\r\n    const chainId = Math.floor(uniSerial / chainShift);\r\n    const remnant = uniSerial - chainId * chainShift;\r\n    const insCode = Math.floor(remnant / maxSerial);\r\n    const ser = remnant - insCode * maxSerial;\r\n    return { chain: chainId, serial: ser, iCode: insCode };\r\n  }\r\n\r\n  _fillCmpEdit() {\r\n    const self = this;\r\n    const components = this._components;\r\n\r\n    function addComp() {\r\n      const comp = new Component(self);\r\n      comp._index = components.length;\r\n      components[comp._index] = comp;\r\n      return comp;\r\n    }\r\n\r\n    this.forEachChain((chain) => {\r\n      const residues = chain._residues;\r\n      const resCount = residues.length;\r\n      if (resCount < 1) {\r\n        return;\r\n      }\r\n      let comp = addComp();\r\n      let currStart = residues[0]._index;\r\n\r\n      for (let i = 0; i < resCount; ++i) {\r\n        const currRes = residues[i];\r\n        currRes._component = comp;\r\n\r\n        const nextRes = i === resCount - 1 ? null : residues[i + 1];\r\n        if (!nextRes\r\n          || !currRes.isConnected(nextRes)\r\n          || currRes._index !== nextRes._index - 1) {\r\n          // the last condition is broken and incorrect\r\n          // the refactoring of the Component is required in order to fix this issue\r\n          comp.setSubDivs([{\r\n            start: currStart,\r\n            end: currRes._index,\r\n          }]);\r\n          if (nextRes) {\r\n            currStart = nextRes._index;\r\n            comp = addComp();\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // This function was added in the moment of despair\r\n  // It was the dark times for miew\r\n  _fillCmpNoedit() {\r\n    const comp = new Component(this);\r\n    comp._index = 0;\r\n\r\n    const residues = this._residues;\r\n    const resCount = residues.length;\r\n    if (resCount === 0) {\r\n      return;\r\n    }\r\n\r\n    const currSubDivs = [];\r\n    let currStart = 0;\r\n    for (let i = 0; i < resCount; ++i) {\r\n      const currRes = residues[i];\r\n      currRes._component = comp;\r\n\r\n      const nextRes = i === resCount - 1 ? null : residues[i + 1];\r\n      if (!nextRes\r\n        || !currRes.isConnected(nextRes)) {\r\n        // wrap up this interval\r\n        currSubDivs[currSubDivs.length] = {\r\n          start: currStart,\r\n          end: i,\r\n        };\r\n        if (nextRes) {\r\n          currStart = i + 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    comp.setSubDivs(currSubDivs);\r\n    this._components[comp._index] = comp;\r\n  }\r\n\r\n  /**\r\n   * Fill components information.\r\n   * @param {boolean} enableEditing - Restructure Complex to enable per-component editing.\r\n   */\r\n  _fillComponents(enableEditing) {\r\n    if (enableEditing) {\r\n      this._fillCmpEdit();\r\n    } else {\r\n      this._fillCmpNoedit();\r\n    }\r\n  }\r\n\r\n  getCurrentUnit() {\r\n    return this._currentUnit;\r\n  }\r\n\r\n  getDefaultBoundaries() {\r\n    return this.units[0].getBoundaries();\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this.units[this._currentUnit].getBoundaries();\r\n  }\r\n\r\n  getTransforms() {\r\n    return this.units[this._currentUnit].getTransforms();\r\n  }\r\n\r\n  getSelector() {\r\n    return this.units[this._currentUnit].getSelector();\r\n  }\r\n\r\n  resetCurrentUnit() {\r\n    this._currentUnit = 0;\r\n    this.setCurrentUnit(1);\r\n  }\r\n\r\n  setCurrentUnit(newUnit) {\r\n    if (newUnit !== null && newUnit !== undefined\r\n      && newUnit !== this._currentUnit\r\n      && newUnit >= 0\r\n      && newUnit < this.units.length) {\r\n      this._currentUnit = newUnit;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  _computeBounds() {\r\n    const { units } = this;\r\n    for (let i = 0, n = units.length; i < n; ++i) {\r\n      units[i].computeBoundaries();\r\n    }\r\n  }\r\n\r\n  onAtomPositionChanged() {\r\n    this.forEachChain((a) => {\r\n      a._finalize();\r\n    });\r\n    this.forEachComponent((c) => {\r\n      c.update();\r\n    });\r\n    // Update bounding sphere and box\r\n    this._computeBounds();\r\n    this._finalizeBonds();\r\n    this.forEachSGroup((s) => {\r\n      s._rebuildSGroupOnAtomChange();\r\n    });\r\n  }\r\n\r\n  update() {\r\n    if (this._maskNeedsUpdate) {\r\n      this.updateStructuresMask();\r\n      this._maskNeedsUpdate = false;\r\n    }\r\n  }\r\n\r\n  _finalizeBonds() {\r\n    const bonds = this.getBonds();\r\n    const n = bonds.length;\r\n    for (let i = 0; i < n; ++i) {\r\n      bonds[i]._index = i;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finalizes complex's inner data(i.e. after parsing).\r\n   * @param {objects} opts - Build bonds automatically.\r\n   * @param {boolean} opts.needAutoBonding     - Build bonds automatically.\r\n   * @param {boolean} opts.detectAromaticLoops - Find/mark aromatic loops.\r\n   * @param {boolean} opts.enableEditing       - Restructure Complex to enable per-component editing.\r\n   * @param {Array<Atom>} [opts.serialAtomMap] - Array of atoms ordered by their serials.\r\n   */\r\n  finalize(opts) {\r\n    opts = opts || {};\r\n    // Put bonds into atoms\r\n    const bonds = this._bonds;\r\n    let i;\r\n    let n;\r\n    // remove invalid bonds\r\n    for (i = bonds.length - 1; i >= 0; i--) {\r\n      const bond = bonds[i];\r\n      if (bond._left === null || bond._right === null) {\r\n        bonds.splice(i, 1);\r\n      } else {\r\n        bond._left.bonds.push(bond);\r\n        bond._right.bonds.push(bond);\r\n      }\r\n    }\r\n\r\n    const residues = this._residues;\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      residues[i]._finalize();\r\n    }\r\n\r\n    this.forEachChain((a) => {\r\n      a._finalize();\r\n    });\r\n\r\n    // WARNING! this MUST be done BEFORE computeBounds is called\r\n    const { units } = this;\r\n    for (i = 0, n = units.length; i < n; ++i) {\r\n      units[i].finalize();\r\n    }\r\n    // try setting first biomolecule by defaults\r\n    this.setCurrentUnit(1);\r\n\r\n    const residueHash = {};\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      const res = residues[i];\r\n      // This code is extremely dangerous for non-PDB formats\r\n      residueHash[this.getUnifiedSerial(\r\n        res.getChain().getName().charCodeAt(0),\r\n        res.getSequence(),\r\n        res.getICode().charCodeAt(0),\r\n      )] = res;\r\n    }\r\n\r\n    const { structures } = this;\r\n    for (i = 0, n = structures.length; i < n; ++i) {\r\n      structures[i]._finalize(opts.serialAtomMap, residueHash, this);\r\n    }\r\n\r\n    const helices = this._helices;\r\n    for (i = 0, n = helices.length; i < n; ++i) {\r\n      helices[i]._finalize(opts.serialAtomMap, residueHash, this);\r\n    }\r\n\r\n    const sheets = this._sheets;\r\n    for (i = 0, n = sheets.length; i < n; ++i) {\r\n      sheets[i]._finalize(opts.serialAtomMap, residueHash, this);\r\n    }\r\n\r\n    // Update bounding sphere and box\r\n    this._computeBounds();\r\n\r\n    const atoms = this._atoms;\r\n    for (i = 0, n = atoms.length; i < n; ++i) {\r\n      const currAtom = atoms[i];\r\n      currAtom.index = i;\r\n    }\r\n\r\n    if (opts.needAutoBonding) {\r\n      const autoConnector = new AutoBond(this);\r\n      autoConnector.build();\r\n      autoConnector.destroy();\r\n    }\r\n\r\n    const chains = this._chains;\r\n    for (i = 0, n = chains.length; i < n; ++i) {\r\n      chains[i]._index = i;\r\n    }\r\n\r\n    for (i = 0, n = residues.length; i < n; ++i) {\r\n      residues[i]._index = i;\r\n    }\r\n\r\n    // mark non-polar hydrogens\r\n    for (i = 0, n = atoms.length; i < n; ++i) {\r\n      const atom = atoms[i];\r\n      if (atom.flags & Atom.Flags.HYDROGEN && atom.bonds.length === 1) {\r\n        const bond = atom.bonds[0];\r\n        const other = (bond._left !== atom && bond._left) || bond._right;\r\n        if (other.flags & Atom.Flags.CARBON) {\r\n          atom.flags |= Atom.Flags.NONPOLARH;\r\n        }\r\n      }\r\n    }\r\n\r\n    this._finalizeBonds();\r\n    this._fillComponents(opts.enableEditing);\r\n\r\n    const marker = new AromaticLoopsMarker(this);\r\n    marker.markCycles();\r\n    if (opts.detectAromaticLoops) { // TODO remove this condition clause, it is for debug purposes only!\r\n      marker.detectCycles(); // TODO add conditional detection\r\n    }\r\n\r\n    this._finalizeMolecules();\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // add reference to molecule into residue\r\n    for (let i = 0; i < this._molecules.length; i++) {\r\n      const molecule = this._molecules[i];\r\n      const count = molecule.residues.length;\r\n      for (let j = 0; j < count; j++) {\r\n        const residue = molecule.residues[j];\r\n        residue._molecule = molecule;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateStructuresMask() {\r\n    const updater = (structure) => structure.collectMask();\r\n    this.forEachResidue(updater);\r\n    this.forEachChain(updater);\r\n    this.forEachMolecule(updater);\r\n  }\r\n\r\n  countAtomsByMask(mask) {\r\n    let count = 0;\r\n\r\n    this.forEachAtom((atom) => {\r\n      if ((atom.mask & mask) !== 0) {\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  getNumAtomsBySelector(selector) {\r\n    let count = 0;\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (selector.includesAtom(atom)) {\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  resetAtomMask(mask) {\r\n    this.forEachAtom((atom) => {\r\n      atom.mask = mask;\r\n    });\r\n  }\r\n\r\n  markAtoms(selector, mask) {\r\n    const setMask = mask;\r\n    const clearMask = ~setMask;\r\n    let count = 0;\r\n    const totalSelector = selectors.keyword('And')(selector, this.getSelector());\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (totalSelector.includesAtom(atom)) {\r\n        atom.mask |= setMask;\r\n        count++;\r\n      } else {\r\n        atom.mask &= clearMask;\r\n      }\r\n    });\r\n    this._maskNeedsUpdate = true;\r\n\r\n    return count;\r\n  }\r\n\r\n  markAtomsAdditionally(selector, mask) {\r\n    const setMask = mask;\r\n    let count = 0;\r\n\r\n    this.forEachAtom((atom) => {\r\n      if (selector.includesAtom(atom) && (atom.mask & mask) !== mask) {\r\n        atom.mask |= setMask;\r\n        count++;\r\n      }\r\n    });\r\n\r\n    return count;\r\n  }\r\n\r\n  clearAtomBits(mask) {\r\n    const clearMask = ~mask;\r\n    this.forEachAtom((atom) => {\r\n      atom.mask &= clearMask;\r\n    });\r\n    const reseter = (a) => {\r\n      a._mask &= clearMask;\r\n    };\r\n    this.forEachAtom(reseter);\r\n    this.forEachResidue(reseter);\r\n    this.forEachChain(reseter);\r\n    this.forEachMolecule(reseter);\r\n  }\r\n\r\n  getAtomNames() {\r\n    if (this.hasOwnProperty('_atomNames')) {\r\n      return this._atomNames;\r\n    }\r\n\r\n    const dict = {};\r\n    this.forEachAtom((atom) => {\r\n      dict[atom.name] = 1;\r\n    });\r\n    this._atomNames = Object.keys(dict);\r\n\r\n    return this._atomNames;\r\n  }\r\n\r\n  getElements() {\r\n    if (this.hasOwnProperty('_elements')) {\r\n      return this._elements;\r\n    }\r\n\r\n    const dict = {};\r\n    this.forEachAtom((atom) => {\r\n      dict[atom.element.name] = 1;\r\n    });\r\n    this._elements = Object.keys(dict);\r\n\r\n    return this._elements;\r\n  }\r\n\r\n  getResidueNames() {\r\n    if (this.hasOwnProperty('_residueNames')) {\r\n      return this._residueNames;\r\n    }\r\n\r\n    const dict = {};\r\n    this.forEachResidue((res) => {\r\n      dict[res._type._name] = 1;\r\n    });\r\n    this._residueNames = Object.keys(dict);\r\n\r\n    return this._residueNames;\r\n  }\r\n\r\n  getChainNames() {\r\n    if (this.hasOwnProperty('_chainNames')) {\r\n      return this._chainNames;\r\n    }\r\n\r\n    const dict = {};\r\n    this.forEachChain((chain) => {\r\n      dict[chain._name] = 1;\r\n    });\r\n    this._chainNames = Object.keys(dict);\r\n\r\n    return this._chainNames;\r\n  }\r\n\r\n  getAltLocNames() {\r\n    if (this.hasOwnProperty('_altlocNames')) {\r\n      return this._altlocNames;\r\n    }\r\n\r\n    const dict = {};\r\n    this.forEachAtom((atom) => {\r\n      dict[String.fromCharCode(atom.location)] = 1;\r\n    });\r\n    this._altlocNames = Object.keys(dict);\r\n\r\n    return this._altlocNames;\r\n  }\r\n\r\n  getVoxelWorld() {\r\n    if (!this.hasOwnProperty('_voxelWorld')) {\r\n      try {\r\n        this._voxelWorld = new VoxelWorld(\r\n          this.getDefaultBoundaries().boundingBox,\r\n          new THREE.Vector3(VOXEL_SIZE, VOXEL_SIZE, VOXEL_SIZE),\r\n        );\r\n        this._voxelWorld.addAtoms(this);\r\n      } catch (e) {\r\n        logger.warn('Unable to create voxel world');\r\n        this._voxelWorld = null;\r\n      }\r\n    }\r\n\r\n    return this._voxelWorld;\r\n  }\r\n\r\n  /**\r\n   * Simple function to make unified routine procedure without code duplication.\r\n   * @param {Array} srcArray   - Source chemical structure array (will be part of resulting chemical structure array).\r\n   * @param {Array} dstArray   - Resulting chemical structure array.\r\n   * @param {number} param     - Parameter for processor.\r\n   * @param {function} functor - Processor for every element in array.\r\n   */\r\n  addElement(srcArray, dstArray, param, functor) {\r\n    const { length } = srcArray;\r\n    for (let i = 0; i < length; ++i) {\r\n      const elem = srcArray[i];\r\n      functor(elem, param);\r\n      dstArray.push(elem);\r\n    }\r\n  }\r\n\r\n  // this function joins multiple complexes into one (this)\r\n  // atom, bond, ... objects are reused -- so input complexes are no longer valid\r\n  joinComplexes(complexes) {\r\n    // clear target complex\r\n    this._chains = [];\r\n    this._components = [];\r\n    this._helices = [];\r\n    this._sheets = [];\r\n    this.structures = [];\r\n    this._atoms = [];\r\n    this._residues = [];\r\n    this._bonds = [];\r\n    this._sgroups = [];\r\n\r\n    const self = this;\r\n    let atomBias = 0;\r\n    let bondBias = 0;\r\n    let residueBias = 0;\r\n    let chainBias = 0;\r\n    let componentBias = 0;\r\n\r\n    function processAtom(atom, bias) {\r\n      atom.serial += bias;\r\n      atom.index += bias;\r\n    }\r\n\r\n    function processBond(bond, bias) {\r\n      bond._index += bias;\r\n    }\r\n\r\n    function processResidue(residue, bias) {\r\n      residue._index += bias;\r\n    }\r\n\r\n    function processChain(chain, bias) {\r\n      chain._complex = self;\r\n      chain._index += bias;\r\n    }\r\n\r\n    function processComponent(component, bias) {\r\n      component._complex = self;\r\n      component._index += bias;\r\n    }\r\n\r\n    /**\r\n     * Simple function to do nothing.\r\n     */\r\n    function doNothing() {\r\n    }\r\n\r\n    for (let i = 0; i < complexes.length; ++i) {\r\n      const c = complexes[i];\r\n      this.addElement(c._atoms, this._atoms, atomBias, processAtom);\r\n      this.addElement(c._bonds, this._bonds, bondBias, processBond);\r\n      this.addElement(c._residues, this._residues, residueBias, processResidue);\r\n      this.addElement(c._chains, this._chains, chainBias, processChain);\r\n      this.addElement(c._sheets, this._sheets, 0, doNothing);\r\n      this.addElement(c._helices, this._helices, 0, doNothing);\r\n      this.addElement(c._sgroups, this._sgroups, 0, doNothing);\r\n      this.addElement(c._components, this._components, componentBias, processComponent);\r\n      this.addElement(c.structures, this.structures, 0, doNothing);\r\n      // merge residue types\r\n      for (const rt in c._residueTypes) {\r\n        if (c._residueTypes.hasOwnProperty(rt)) {\r\n          this._residueTypes[rt] = c._residueTypes[rt];\r\n        }\r\n      }\r\n\r\n      atomBias += c._atoms.length;\r\n      bondBias += c._bonds.length;\r\n      residueBias += c._residues.length;\r\n      chainBias += c._chains.length;\r\n      componentBias += c._components.length;\r\n    }\r\n\r\n    this._computeBounds();\r\n  }\r\n\r\n  /**\r\n   * Replace secondary structure with calculated one.\r\n   *\r\n   * DSSP algorithm implementation is used.\r\n   *\r\n   * Kabsch W, Sander C. 1983. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and\r\n   * geometrical features. Biopolymers. 22(12):2577-2637. doi:10.1002/bip.360221211.\r\n   */\r\n  dssp() {\r\n    const ssMap = new SecondaryStructureMap(this);\r\n\r\n    const structures = this.structures = [];\r\n    const helices = this._helices = [];\r\n    const sheets = this._sheets = [];\r\n\r\n    const getSheet = (index) => {\r\n      let item = sheets[index];\r\n      if (!item) {\r\n        item = sheets[index] = new Sheet(String(index), 0);\r\n      }\r\n      return item;\r\n    };\r\n\r\n    let lastCode;\r\n    let lastSheetIndex;\r\n    let lastHelixIndex = 0;\r\n    let curStructure = null;\r\n    for (let i = 0, n = this._residues.length; i < n; ++i) {\r\n      const curCode = ssMap._ss[i];\r\n      const curResidue = this._residues[i];\r\n      const curSheetIndex = ssMap._sheet[i];\r\n\r\n      // expand the last structure\r\n      if (curCode === lastCode && curSheetIndex === lastSheetIndex) {\r\n        curResidue._secondary = curStructure;\r\n        if (curStructure) {\r\n          curStructure.term = curResidue;\r\n        }\r\n        if (curStructure instanceof Helix) {\r\n          curStructure.length++;\r\n        }\r\n        continue;\r\n      }\r\n\r\n      // create a new structure\r\n      const helixClass = helixClassMap[curCode];\r\n      const loopType = loopMap[curCode];\r\n      if (curCode === StructureType.STRAND) {\r\n        const curSheet = getSheet(curSheetIndex);\r\n        curStructure = new Strand(curSheet, curResidue, curResidue, 0, null, null);\r\n        curSheet.addStrand(curStructure);\r\n      } else if (helixClass !== undefined) {\r\n        lastHelixIndex++;\r\n        curStructure = new Helix(helixClass, curResidue, curResidue, lastHelixIndex, String(lastHelixIndex), '', 1);\r\n        helices.push(curStructure);\r\n      } else if (loopType !== undefined) {\r\n        curStructure = new StructuralElement(loopType, curResidue, curResidue);\r\n      } else {\r\n        curStructure = null;\r\n      }\r\n\r\n      if (curStructure) {\r\n        structures.push(curStructure);\r\n      }\r\n\r\n      curResidue._secondary = curStructure;\r\n\r\n      lastCode = curCode;\r\n      lastSheetIndex = curSheetIndex;\r\n    }\r\n\r\n    this._sheets = sheets.filter((_sheet) => true); // squeeze sheets array\r\n  }\r\n}\r\n\r\nComplex.prototype.id = 'Complex';\r\nComplex.prototype.name = '';\r\n\r\nexport default Complex;\r\n","import * as THREE from 'three';\r\nimport utils from '../utils';\r\n\r\nfunction pow2ceil(v) {\r\n  let p = 2;\r\n  v = (v - 1) >> 1;\r\n  while (v) {\r\n    p <<= 1;\r\n    v >>= 1;\r\n  }\r\n  return p;\r\n}\r\n\r\n/**\r\n * Volume constructor\r\n *\r\n * @param {Object} type - Float32Array, Int8Array, etc...\r\n * @param {Object|Array} dimensions - number of data points on each axis (x, y, z)\r\n * @param {Box3} box - bounding box defining data place in metric space,\r\n *                     it's corners correspond to extreme data points\r\n * @param {Number} vecSize - dimension of the field data point (1 = scalar, 3 = 3D vector)\r\n * @param {Object} data - typed array of the same type as specified by the 1st parameter,\r\n *                        layout: point by point along X,\r\n *                                row by row along Y,\r\n *                                plane by plane along Z\r\n * @param {Number} volumeInfo - volume info values to define threshold to filter the noise\r\n */\r\n\r\nclass Volume {\r\n  constructor(type, dimensions, box, vecSize, data, volumeInfo) {\r\n    this._box = box.clone();\r\n    this._dimVec = Math.max(Math.floor(vecSize || 1), 1);\r\n    this._volumeInfo = volumeInfo;\r\n\r\n    if (dimensions instanceof Array) {\r\n      [this._dimX, this._dimY, this._dimZ] = dimensions;\r\n    } else {\r\n      this._dimX = dimensions.x;\r\n      this._dimY = dimensions.y;\r\n      this._dimZ = dimensions.z;\r\n    }\r\n    this._dimX = Math.max(Math.floor(this._dimX), 1);\r\n    this._dimY = Math.max(Math.floor(this._dimY), 1);\r\n    this._dimZ = Math.max(Math.floor(this._dimZ), 1);\r\n\r\n    this._rowElements = this._dimVec * this._dimX;\r\n    this._planeElements = this._rowElements * this._dimY;\r\n    this._totalElements = this._planeElements * this._dimZ;\r\n\r\n    this._data = data || utils.allocateTyped(type, this._totalElements);\r\n\r\n    // override getter/setter for vector fields\r\n    switch (this._dimVec) {\r\n      case 1:\r\n        break;\r\n\r\n      case 2:\r\n        this.getValue = function (x, y, z) {\r\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\r\n          return [this._data[idx], this._data[idx + 1]];\r\n        };\r\n\r\n        this.setValue = function (x, y, z, a, b) {\r\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\r\n          this._data[idx] = a;\r\n          this._data[idx + 1] = b;\r\n        };\r\n\r\n        this.addValue = function (x, y, z, a, b) {\r\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\r\n          this._data[idx] += a;\r\n          this._data[idx + 1] += b;\r\n        };\r\n        break;\r\n\r\n      case 3:\r\n        this.getValue = function (x, y, z) {\r\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\r\n          return [this._data[idx], this._data[idx + 1], this._data[idx + 2]];\r\n        };\r\n\r\n        this.setValue = function (x, y, z, a, b, c) {\r\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\r\n          this._data[idx] = a;\r\n          this._data[idx + 1] = b;\r\n          this._data[idx + 2] = c;\r\n        };\r\n\r\n        this.addValue = function (x, y, z, a, b, c) {\r\n          const idx = x * this._dimVec + y * this._rowElements + z * this._planeElements;\r\n          this._data[idx] += a;\r\n          this._data[idx + 1] += b;\r\n          this._data[idx + 2] += c;\r\n        };\r\n        break;\r\n\r\n      default:\r\n        throw new Error('Volume: invalid vector dimension');\r\n    }\r\n  }\r\n\r\n  // default getter assumes it's a scalar field\r\n  getValue(x, y, z) {\r\n    return this._data[x + y * this._rowElements + z * this._planeElements];\r\n  }\r\n\r\n  // default setter assumes it's a scalar field\r\n  setValue(x, y, z, val) {\r\n    this._data[x + y * this._rowElements + z * this._planeElements] = val;\r\n  }\r\n\r\n  // default adder assumes it's a scalar field\r\n  addValue(x, y, z, val) {\r\n    this._data[x + y * this._rowElements + z * this._planeElements] += val;\r\n  }\r\n\r\n  getDimensions() {\r\n    return [this._dimX, this._dimY, this._dimZ];\r\n  }\r\n\r\n  getBox() {\r\n    return this._box;\r\n  }\r\n\r\n  getVolumeInfo() {\r\n    return this._volumeInfo;\r\n  }\r\n\r\n  getCellSize() {\r\n    const boxSize = new THREE.Vector3();\r\n    this._box.getSize(boxSize);\r\n    const res = new THREE.Vector3();\r\n    res.x = this._dimX > 1 ? boxSize.x / (this._dimX - 1) : 0;\r\n    res.y = this._dimY > 1 ? boxSize.y / (this._dimY - 1) : 0;\r\n    res.z = this._dimZ > 1 ? boxSize.z / (this._dimZ - 1) : 0;\r\n    return res;\r\n  }\r\n\r\n  computeGradient() {\r\n    if (this._dimVec !== 1) {\r\n      // gradient can only be computed for scalar fields\r\n      return null;\r\n    }\r\n\r\n    // create a 3D vector field of gradients\r\n    const gradient = new Volume(Float32Array, [this._dimX, this._dimY, this._dimZ], this._box, 3);\r\n\r\n    // calculate cell side lengths\r\n    const vl = this.getCellSize();\r\n\r\n    // gradient axis scaling values and averaging factors, to correctly\r\n    // calculate the gradient for volumes with irregular cell spacing\r\n    const vs = new THREE.Vector3(-0.5 / vl.x, -0.5 / vl.y, -0.5 / vl.z);\r\n\r\n    // TODO Check for intended bug in VMD (min is zero)\r\n    function clamp(val, min, max) {\r\n      return Math.min(max, Math.max(min, val));\r\n    }\r\n\r\n    const xSize = this._dimX;\r\n    const ySize = this._dimY;\r\n    const zSize = this._dimZ;\r\n    const volMap = this._data;\r\n\r\n    function _voxelValue(x, y, z) {\r\n      return volMap[z * xSize * ySize + y * xSize + x];\r\n    }\r\n\r\n    for (let zi = 0; zi < zSize; ++zi) {\r\n      const zm = clamp(zi - 1, 0, zSize - 1);\r\n      const zp = clamp(zi + 1, 0, zSize - 1);\r\n\r\n      for (let yi = 0; yi < ySize; ++yi) {\r\n        const ym = clamp(yi - 1, 0, ySize - 1);\r\n        const yp = clamp(yi + 1, 0, ySize - 1);\r\n\r\n        for (let xi = 0; xi < xSize; ++xi) {\r\n          const xm = clamp(xi - 1, 0, xSize - 1);\r\n          const xp = clamp(xi + 1, 0, xSize - 1);\r\n\r\n          // Calculate the volume gradient at each grid cell.\r\n          // Gradients are now stored unnormalized, since we need them in pure\r\n          // form in order to draw field lines etc.  Shading code will now have\r\n          // to do renormalization for itself on-the-fly.\r\n\r\n          // XXX this gradient is only correct for orthogonal grids, since\r\n          // we're using the array index offsets rather to calculate the gradient\r\n          // rather than voxel coordinate offsets.  This will have to be\r\n          // re-worked for non-orthogonal datasets.\r\n\r\n          gradient.setValue(\r\n            xi,\r\n            yi,\r\n            zi,\r\n            (_voxelValue(xp, yi, zi) - _voxelValue(xm, yi, zi)) * vs.x,\r\n            (_voxelValue(xi, yp, zi) - _voxelValue(xi, ym, zi)) * vs.y,\r\n            (_voxelValue(xi, yi, zp) - _voxelValue(xi, yi, zm)) * vs.z,\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return gradient;\r\n  }\r\n\r\n  normalize() {\r\n    const data = this._data;\r\n\r\n    // get min/max\r\n    let min = data[0];\r\n    let max = data[0];\r\n    for (let i = 1; i < data.length; ++i) {\r\n      min = Math.min(min, data[i]);\r\n      max = Math.max(max, data[i]);\r\n    }\r\n\r\n    const d = 1.0 / (max - min);\r\n    if (d === 0) {\r\n      return;\r\n    }\r\n\r\n    // normalize\r\n    for (let i = 0; i < data.length; ++i) {\r\n      data[i] = d * (data[i] - min);\r\n    }\r\n  }\r\n\r\n  getTiledTextureStride() {\r\n    return [this._dimX + 2, this._dimY + 2];\r\n  }\r\n\r\n  buildTiledTexture() {\r\n    let tilesX = Math.ceil(Math.sqrt(this._dimZ * this._dimY / this._dimX));\r\n\r\n    let width = tilesX * (this._dimX + 2) - 1;\r\n    width = pow2ceil(width);\r\n    tilesX = Math.floor(width / (this._dimX + 2));\r\n\r\n    const tilesY = Math.ceil(this._dimZ / tilesX);\r\n    let height = tilesY * (this._dimY + 2) - 1;\r\n    height = pow2ceil(height);\r\n\r\n    const data = new Uint8Array(width * height);\r\n\r\n    let src;\r\n    let dst;\r\n    for (let tileRow = 0; tileRow < tilesY; ++tileRow) {\r\n      // process each pixel row of this tile row\r\n      for (let row = 0; row < this._dimY; ++row) {\r\n        src = tileRow * tilesX * this._planeElements + row * this._rowElements;\r\n        dst = width * (tileRow * (this._dimY + 2) + row);\r\n        // copy a series of rows through several XY planes\r\n        for (let t = 0; t < tilesX; ++t) {\r\n          // copy one row of one XY plane\r\n          for (let x = 0; x < this._dimX; ++x) {\r\n            data[dst++] = 255.0 * this._data[src++];\r\n          }\r\n\r\n          // repeat last pixel of previous tile\r\n          data[dst++] = 255.0 * this._data[src - 1];\r\n\r\n          if (t < tilesX - 1) {\r\n            // skip to the same row of next XY plane\r\n            src += this._planeElements - this._rowElements;\r\n            // repeat first pixel of next tile\r\n            data[dst++] = 255.0 * this._data[src];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // fill pixels between tile rows with copy of edge pixels\r\n    for (let tileRow = 0; tileRow < tilesY; ++tileRow) {\r\n      // copy last pixel row of this tile row to the following pixel row of the texture\r\n      src = width * (tileRow * (this._dimY + 2) + this._dimY - 1);\r\n      dst = src + width;\r\n      for (let x = 0; x < width; ++x) {\r\n        data[dst++] = data[src++];\r\n      }\r\n      if (tileRow < tilesY - 1) {\r\n        // copy first pixel row of next tile row to the preceding pixel row of the texture\r\n        src = width * (tileRow + 1) * (this._dimY + 2);\r\n        dst = src - width;\r\n        for (let x = 0; x < width; ++x) {\r\n          data[dst++] = data[src++];\r\n        }\r\n      }\r\n    }\r\n\r\n    const texture = new THREE.DataTexture(\r\n      data,\r\n      width,\r\n      height,\r\n      THREE.LuminanceFormat,\r\n      THREE.UnsignedByteType,\r\n      THREE.UVMapping,\r\n      THREE.ClampToEdgeWrapping,\r\n      THREE.ClampToEdgeWrapping,\r\n      THREE.LinearFilter,\r\n      THREE.LinearFilter,\r\n    );\r\n    texture.needsUpdate = true;\r\n    return texture;\r\n  }\r\n\r\n  /* ********************************************************************************\r\n   *\r\n   * Methods that provide direct access to internal array (for better performance)\r\n   *\r\n   ******************************************************************************** */\r\n\r\n  getData() {\r\n    return this._data;\r\n  }\r\n\r\n  getDirectIdx(x, y, z) {\r\n    return x * this._dimVec + y * this._rowElements + z * this._planeElements;\r\n  }\r\n\r\n  getStrideX() {\r\n    return this._dimVec;\r\n  }\r\n\r\n  getStrideY() {\r\n    return this._rowElements;\r\n  }\r\n\r\n  getStrideZ() {\r\n    return this._planeElements;\r\n  }\r\n}\r\n\r\nVolume.prototype.id = 'Volume';\r\n\r\nexport default Volume;\r\n","/**\r\n * Residue Molecule.\r\n *\r\n * @param {Complex} complex - Molecular complex this Molecule belongs to.\r\n * @param {String} name - Molecule's name.\r\n * @param {Integer} index - Molecule's index in file.\r\n *\r\n * @exports Molecule\r\n * @constructor\r\n */\r\nclass Molecule {\r\n  constructor(complex, name, index) {\r\n    this.complex = complex;\r\n    this.name = name || '';\r\n    this.residues = [];\r\n    this.mask = 1 | 0;\r\n    this.index = index || -1; // start with 1\r\n  }\r\n\r\n  forEachResidue(process) {\r\n    const { residues } = this;\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      process(residues[i]);\r\n    }\r\n  }\r\n\r\n  collectMask() {\r\n    let mask = 0xffffffff;\r\n    const { residues } = this;\r\n    for (let i = 0, n = residues.length; i < n; ++i) {\r\n      mask &= residues[i]._mask;\r\n    }\r\n    this.mask = mask;\r\n  }\r\n}\r\n\r\nexport default Molecule;\r\n","import Atom from './chem/Atom';\r\nimport Element from './chem/Element';\r\nimport Bond from './chem/Bond';\r\nimport Residue from './chem/Residue';\r\nimport ResidueType from './chem/ResidueType';\r\nimport Chain from './chem/Chain';\r\nimport Helix from './chem/Helix';\r\nimport Strand from './chem/Strand';\r\nimport Sheet from './chem/Sheet';\r\nimport SGroup from './chem/SGroup';\r\nimport Assembly from './chem/Assembly';\r\nimport Complex from './chem/Complex';\r\nimport Volume from './chem/Volume';\r\nimport VoxelWorld from './chem/VoxelWorld';\r\nimport selectors from './chem/selectors';\r\nimport Molecule from './chem/Molecule';\r\n\r\nexport default {\r\n  Atom,\r\n  Element,\r\n  Bond,\r\n  Residue,\r\n  ResidueType,\r\n  Chain,\r\n  Helix,\r\n  Strand,\r\n  Sheet,\r\n  SGroup,\r\n  Assembly,\r\n  Complex,\r\n  Volume,\r\n  VoxelWorld,\r\n  selectors,\r\n  Molecule,\r\n};\r\n","/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nimport * as THREE from 'three';\r\n\r\nclass CSS2DObject extends THREE.Object3D {\r\n  constructor(element) {\r\n    super();\r\n    const self = this;\r\n    this._element = element;\r\n    this._element.style.position = 'absolute';\r\n    this.addEventListener('removed', () => {\r\n      if (self._element.parentNode !== null) {\r\n        self._element.parentNode.removeChild(self._element);\r\n      }\r\n    });\r\n  }\r\n\r\n  getElement() {\r\n    return this._element;\r\n  }\r\n\r\n  /**\r\n   * Sets label transparency.\r\n   *\r\n   * @param {number} transp    - in [0; 1] 1 means fully transparent\r\n   */\r\n  setTransparency(transp) {\r\n    const el = this.getElement();\r\n    if (el === null) {\r\n      return;\r\n    }\r\n    if (transp === 1.0) {\r\n      el.style.display = 'none';\r\n      return;\r\n    }\r\n    el.style.display = 'inline';\r\n    const op = 1.0 - transp;\r\n    const top = op.toString();\r\n    const op100 = op * 100;\r\n    el.style.opacity = top;\r\n    el.style.filter = `alpha(opacity=${op100})`; // IE fallback\r\n  }\r\n\r\n  clone() {\r\n    const obj = new CSS2DObject(this._element);\r\n    obj.copy(this);\r\n    return obj;\r\n  }\r\n}\r\n\r\nexport default CSS2DObject;\r\n","import * as THREE from 'three';\r\n\r\nclass RCGroup extends THREE.Group {\r\n  raycast(raycaster, intersects) {\r\n    if (!this.visible) {\r\n      return;\r\n    }\r\n\r\n    const { children } = this;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      children[i].raycast(raycaster, intersects);\r\n    }\r\n  }\r\n\r\n  enableSubset(mask, innerOnly) {\r\n    const { children } = this;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].enableSubset) {\r\n        children[i].enableSubset(mask, innerOnly);\r\n      }\r\n    }\r\n  }\r\n\r\n  disableSubset(mask, innerOnly) {\r\n    const { children } = this;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].disableSubset) {\r\n        children[i].disableSubset(mask, innerOnly);\r\n      }\r\n    }\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.children.length === 0;\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const { children } = this;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].updateToFrame) {\r\n        children[i].updateToFrame(frameData);\r\n      }\r\n    }\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = [];\r\n    const { children } = this;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        Array.prototype.push.apply(totalSubset, children[i].getSubset(mask, innerOnly));\r\n      }\r\n    }\r\n    return totalSubset;\r\n  }\r\n}\r\n\r\nexport default RCGroup;\r\n","/* eslint-disable no-magic-numbers */\r\nimport * as THREE from 'three';\r\nimport logger from '../utils/logger';\r\nimport CSS2DObject from './CSS2DObject';\r\nimport RCGroup from './RCGroup';\r\nimport vertexScreenQuadShader from './shaders/ScreenQuad.vert';\r\nimport fragmentScreenQuadFromTex from './shaders/ScreenQuadFromTex.frag';\r\nimport fragmentScreenQuadFromTexWithDistortion from './shaders/ScreenQuadFromTexWithDistortion.frag';\r\n\r\nconst LAYERS = {\r\n  DEFAULT: 0, VOLUME: 1, TRANSPARENT: 2, PREPASS_TRANSPARENT: 3, VOLUME_BFPLANE: 4, COLOR_FROM_POSITION: 5, SHADOWMAP: 6,\r\n};\r\n\r\nconst SELECTION_LAYERS = [ // These layers, that are used in the selection by ray casting\r\n  LAYERS.DEFAULT, LAYERS.TRANSPARENT,\r\n];\r\n\r\nTHREE.Object3D.prototype.resetTransform = function () {\r\n  this.position.set(0, 0, 0);\r\n  this.quaternion.set(0, 0, 0, 1);\r\n  this.scale.set(1, 1, 1);\r\n};\r\n\r\n// update world matrix of this object and all its ancestors\r\nTHREE.Object3D.prototype.updateMatrixWorldRecursive = function () {\r\n  if (this.parent != null) {\r\n    this.parent.updateMatrixWorldRecursive();\r\n  }\r\n  this.updateMatrixWorld();\r\n};\r\n// add object to parent, saving objects' world transform\r\nTHREE.Object3D.prototype.addSavingWorldTransform = (function () {\r\n  const _worldMatrixInverse = new THREE.Matrix4();\r\n\r\n  return function (object) {\r\n    if (object instanceof THREE.Object3D) {\r\n      _worldMatrixInverse.copy(this.matrixWorld).invert();\r\n      _worldMatrixInverse.multiply(object.matrixWorld);\r\n      object.matrix.copy(_worldMatrixInverse);\r\n      object.matrix.decompose(object.position, object.quaternion, object.scale);\r\n      this.add(object);\r\n    }\r\n  };\r\n}());\r\n\r\n// render a tiny transparent quad in the center of the screen\r\nTHREE.WebGLRenderer.prototype.renderDummyQuad = (function () {\r\n  const _material = new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.0, depthWrite: false });\r\n\r\n  const _scene = new THREE.Scene();\r\n  const _quad = new THREE.Mesh(new THREE.PlaneGeometry(0.01, 0.01), _material);\r\n  _scene.add(_quad);\r\n\r\n  const _camera = new THREE.OrthographicCamera(-0.5, 0.5, 0.5, -0.5, -10000, 10000);\r\n  _camera.position.z = 100;\r\n\r\n  return function () {\r\n    this.render(_scene, _camera);\r\n  };\r\n}());\r\n\r\nTHREE.WebGLRenderer.prototype.renderScreenQuad = (function () {\r\n  const _scene = new THREE.Scene();\r\n  const _quad = new THREE.Mesh(new THREE.PlaneGeometry(1.0, 1.0));\r\n  _scene.add(_quad);\r\n\r\n  const _camera = new THREE.OrthographicCamera(-0.5, 0.5, 0.5, -0.5, -10000, 10000);\r\n  _camera.position.z = 100;\r\n\r\n  return function (material) {\r\n    _quad.material = material;\r\n    this.render(_scene, _camera);\r\n  };\r\n}());\r\n\r\nTHREE.Matrix4.prototype.isIdentity = (function () {\r\n  const identity = new THREE.Matrix4();\r\n  return function () {\r\n    return identity.equals(this);\r\n  };\r\n}());\r\n\r\nTHREE.Matrix4.prototype.applyToPointsArray = function (array, stride, w) {\r\n  if (!array || !stride || stride < 3) {\r\n    return array;\r\n  }\r\n  w = w || 0; // use point as normal by default\r\n  const e = this.elements;\r\n  for (let i = 0; i < array.length; i += stride) {\r\n    const x = array[i];\r\n    const y = array[i + 1];\r\n    const z = array[i + 2];\r\n\r\n    const persp = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\r\n\r\n    array[i] = (e[0] * x + e[4] * y + e[8] * z + e[12] * w) * persp;\r\n    array[i + 1] = (e[1] * x + e[5] * y + e[9] * z + e[13] * w) * persp;\r\n    array[i + 2] = (e[2] * x + e[6] * y + e[10] * z + e[14] * w) * persp;\r\n  }\r\n  return array;\r\n};\r\n\r\nclass ScreenQuadMaterial extends THREE.RawShaderMaterial {\r\n  constructor(params) {\r\n    if (params.uniforms === undefined) {\r\n      params.uniforms = {};\r\n    }\r\n    params.uniforms.srcTex = { type: 't', value: null };\r\n    params.vertexShader = vertexScreenQuadShader;\r\n    params.transparent = false;\r\n    params.depthTest = false;\r\n    params.depthWrite = false;\r\n    super(params);\r\n  }\r\n}\r\n\r\nTHREE.WebGLRenderer.prototype.renderScreenQuadFromTex = (function () {\r\n  const _material = new ScreenQuadMaterial({\r\n    uniforms: { opacity: { type: 'f', value: 1.0 } },\r\n    fragmentShader: fragmentScreenQuadFromTex,\r\n    transparent: true,\r\n  });\r\n\r\n  return function (srcTex, opacity) {\r\n    _material.uniforms.srcTex.value = srcTex;\r\n    _material.transparent = (opacity < 1.0);\r\n    _material.uniforms.opacity.value = opacity;\r\n    this.renderScreenQuad(_material);\r\n  };\r\n}());\r\n\r\nTHREE.WebGLRenderer.prototype.renderScreenQuadFromTexWithDistortion = (function () {\r\n  const _material = new ScreenQuadMaterial({\r\n    uniforms: { coef: { type: 'f', value: 1.0 } },\r\n    fragmentShader: fragmentScreenQuadFromTexWithDistortion,\r\n  });\r\n\r\n  return function (srcTex, coef) {\r\n    _material.uniforms.srcTex.value = srcTex;\r\n    _material.uniforms.coef.value = coef;\r\n    this.renderScreenQuad(_material);\r\n  };\r\n}());\r\n\r\n/**\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nTHREE.PerspectiveCamera.prototype.setMinimalFov = function (angle) {\r\n  if (this.aspect >= 1.0) {\r\n    this.fov = angle;\r\n  } else {\r\n    this.fov = THREE.MathUtils.radToDeg(2 * Math.atan(Math.tan(THREE.MathUtils.degToRad(angle) * 0.5) / this.aspect));\r\n  }\r\n};\r\n\r\n/**\r\n * @param {THREE.PerspectiveCamera} camera - Base camera for this stereo camera.\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nTHREE.StereoCamera.prototype.updateHalfSized = function (camera, angle) {\r\n  const originalAspect = camera.aspect;\r\n  const originalFov = camera.fov;\r\n\r\n  camera.aspect = originalAspect / 2.0;\r\n  camera.setMinimalFov(angle);\r\n  camera.updateProjectionMatrix();\r\n\r\n  this.update(camera);\r\n\r\n  camera.aspect = originalAspect;\r\n  camera.fov = originalFov;\r\n  camera.updateProjectionMatrix();\r\n};\r\n\r\n/**\r\n * @param {number} radius - Radius of bounding sphere in angstroms to fit on screen.\r\n * @param {number} angle - Field of view in degrees.\r\n */\r\nTHREE.PerspectiveCamera.prototype.setDistanceToFit = function (radius, angle) {\r\n  this.position.z = radius / Math.sin(0.5 * THREE.MathUtils.degToRad(angle));\r\n};\r\n\r\n/**\r\n * @param {RCGroup} gfxObj - All objects on scene.\r\n * @param {THREE.PerspectiveCamera} camera - Camera used for rendering.\r\n * @param {number} clipPlane - Distance to clip plane.\r\n * @param {number} fogFarPlane - Distance to fog far plane.\r\n */\r\nTHREE.Raycaster.prototype.intersectVisibleObject = function (gfxObj, camera, clipPlane, fogFarPlane) {\r\n  const intersects = this.intersectObject(gfxObj, false);\r\n  if (intersects.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // find point closest to camera that doesn't get clipped by camera near plane or clipPlane (if it exists)\r\n  const nearPlane = Math.min(camera.near, clipPlane);\r\n  let i;\r\n  let p = intersects[0];\r\n  const v = new THREE.Vector3();\r\n  for (i = 0; i < intersects.length; ++i) {\r\n    p = intersects[i];\r\n    v.copy(p.point);\r\n    v.applyMatrix4(camera.matrixWorldInverse);\r\n    if (v.z <= -nearPlane) {\r\n      break;\r\n    }\r\n  }\r\n  if (i === intersects.length) {\r\n    return null;\r\n  }\r\n\r\n  // check that selected intersection point is not clipped by camera far plane or occluded by fog (if it exists)\r\n  const farPlane = Math.min(camera.far, fogFarPlane);\r\n  v.copy(p.point);\r\n  v.applyMatrix4(camera.matrixWorldInverse);\r\n  if (v.z <= -farPlane) {\r\n    return null;\r\n  }\r\n  return p;\r\n};\r\n\r\nTHREE.Matrix4.prototype.extractScale = (function () {\r\n  const _v = new THREE.Vector3();\r\n\r\n  return function (scale) {\r\n    if (scale === undefined) {\r\n      logger.debug('extractScale(): new is too expensive operation to do it on-the-fly');\r\n      scale = _v.clone();\r\n    }\r\n\r\n    const te = this.elements;\r\n    scale.x = _v.set(te[0], te[1], te[2]).length();\r\n    scale.y = _v.set(te[4], te[5], te[6]).length();\r\n    scale.z = _v.set(te[8], te[9], te[10]).length();\r\n\r\n    // if determine is negative, we need to invert one scale\r\n    const det = this.determinant();\r\n    if (det < 0) {\r\n      scale.x = -scale.x;\r\n    }\r\n    return scale;\r\n  };\r\n}());\r\n\r\nfunction _calcCylinderMatrix(posBegin, posEnd, radius) {\r\n  const posCenter = posBegin.clone().lerp(posEnd, 0.5);\r\n  const matScale = new THREE.Matrix4();\r\n  matScale.makeScale(radius, posBegin.distanceTo(posEnd), radius);\r\n\r\n  const matRotHalf = new THREE.Matrix4();\r\n  matRotHalf.makeRotationX(Math.PI / 2);\r\n\r\n  const matRotLook = new THREE.Matrix4();\r\n  const vUp = new THREE.Vector3(0, 1, 0);\r\n  matRotLook.lookAt(posCenter, posEnd, vUp);\r\n\r\n  matRotLook.multiply(matRotHalf);\r\n  matRotLook.multiply(matScale);\r\n  matRotLook.setPosition(posCenter);\r\n  return matRotLook;\r\n}\r\n\r\nfunction _calcChunkMatrix(eye, target, up, rad) {\r\n  const matScale = new THREE.Matrix4();\r\n  matScale.makeScale(rad.x, rad.y, 0);\r\n\r\n  const matRotLook = new THREE.Matrix4();\r\n  matRotLook.lookAt(eye, target, up);\r\n  matRotLook.multiply(matScale);\r\n  matRotLook.setPosition(eye);\r\n\r\n  return matRotLook;\r\n}\r\n\r\nfunction _groupHasGeometryToRender(group) {\r\n  let hasGeoms = false;\r\n  group.traverse((node) => {\r\n    if (node.hasOwnProperty('geometry') || node instanceof CSS2DObject) {\r\n      hasGeoms = true;\r\n    }\r\n  });\r\n  return hasGeoms;\r\n}\r\n\r\nfunction _buildDistorionMesh(widthSegments, heightSegements, coef) {\r\n  // solve equation r_u = r_d * (1 + k * r_d^2)\r\n  // for r_d using iterations\r\n  // takes: r_u^2\r\n  // returns: r_d / r_u  factor that can be used to distort point coords\r\n  function calcInverseBarrel(r2) {\r\n    const epsilon = 1e-5;\r\n    let prevR2 = 0.0;\r\n    let curR2 = r2;\r\n    let dr = 1.0;\r\n    while (Math.abs(curR2 - prevR2) > epsilon) {\r\n      dr = 1.0 + coef * curR2;\r\n      prevR2 = curR2;\r\n      curR2 = r2 / (dr * dr);\r\n    }\r\n\r\n    return 1.0 / dr;\r\n  }\r\n\r\n  const geo = new THREE.PlaneGeometry(2.0, 2.0, widthSegments, heightSegements);\r\n\r\n  const pos = geo.getAttribute('position');\r\n  for (let i = 0; i < pos.count; ++i) {\r\n    const x = pos.array[3 * i];\r\n    const y = pos.array[3 * i + 1];\r\n    const c = calcInverseBarrel(x * x + y * y);\r\n    pos.setXY(i, c * x, c * y);\r\n  }\r\n\r\n  return geo;\r\n}\r\n\r\nTHREE.BufferAttribute.prototype.copyAtList = function (attribute, indexList) {\r\n  console.assert(\r\n    this.itemSize === attribute.itemSize,\r\n    'DEBUG: BufferAttribute.copyAtList buffers have different item size.',\r\n  );\r\n  const { itemSize } = this;\r\n  for (let i = 0, n = indexList.length; i < n; ++i) {\r\n    for (let j = 0; j < itemSize; ++j) {\r\n      this.array[i * itemSize + j] = attribute.array[indexList[i] * itemSize + j];\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\nfunction fillArray(array, value, startIndex, endIndex) {\r\n  startIndex = (typeof startIndex !== 'undefined') ? startIndex : 0;\r\n  endIndex = (typeof endIndex !== 'undefined') ? endIndex : array.length;\r\n  for (let i = startIndex; i < endIndex; ++i) {\r\n    array[i] = value;\r\n  }\r\n}\r\n\r\n/** @param {THREE.Object3D} object - Parent object. */\r\nfunction removeChildren(object) {\r\n  const { children } = object;\r\n  for (let i = 0, n = children.length; i < n; ++i) {\r\n    const child = children[i];\r\n    child.parent = null;\r\n    child.dispatchEvent({ type: 'removed' });\r\n  }\r\n  object.children = [];\r\n}\r\n\r\nfunction clearTree(object) {\r\n  object.traverse((obj) => {\r\n    if (obj instanceof THREE.Mesh || obj instanceof THREE.LineSegments || obj instanceof THREE.Line) {\r\n      obj.geometry.dispose();\r\n    }\r\n  });\r\n  removeChildren(object);\r\n}\r\n\r\nfunction destroyObject(object) {\r\n  clearTree(object);\r\n  if (object.parent) {\r\n    object.parent.remove(object);\r\n  } else {\r\n    object.dispatchEvent({ type: 'removed' });\r\n  }\r\n}\r\n\r\nfunction belongToSelectLayers(object) {\r\n  for (let i = 0; i < SELECTION_LAYERS.length; i++) {\r\n    if (((object.layers.mask >> SELECTION_LAYERS[i]) & 1) === 1) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction processObjRenderOrder(root, idMaterial) {\r\n  // set renderOrder to 0 for Backdrop and to 1 in other cases to render Backdrop earlier all other materials\r\n  const renderOrder = +(idMaterial !== 'BA');\r\n  root.traverse((object) => {\r\n    if (object.isGroup) {\r\n      object.renderOrder = renderOrder;\r\n    }\r\n  });\r\n}\r\n\r\nfunction applySelectionMaterial(geo) {\r\n  geo.traverse((node) => {\r\n    if ('material' in node) {\r\n      node.material = node.material.clone(true);\r\n      // using z-offset to magically fix selection rendering artifact (on z-sprites)\r\n      node.material.setValues({\r\n        depthFunc: THREE.LessEqualDepth,\r\n        overrideColor: true,\r\n        fog: false,\r\n        lights: false,\r\n        shadowmap: false,\r\n      });\r\n      node.material.setUberOptions({ fixedColor: new THREE.Color(0xFFFF00), zOffset: -1e-6 });\r\n    }\r\n  });\r\n}\r\n\r\nfunction getMiddlePoint(point1, point2, optionalTarget) {\r\n  const result = optionalTarget || new THREE.Vector3();\r\n\r\n  result.set(0, 0, 0);\r\n  result.addScaledVector(point1, 0.5);\r\n  result.addScaledVector(point2, 0.5);\r\n\r\n  return result;\r\n}\r\n\r\n// Monkey-patch for \"InstancedBufferGeometry.instanceCount becomes undefined after copy()\"\r\n// https://github.com/mrdoob/three.js/issues/22151\r\nconst _oldInstancedBufferGeometryCopy = THREE.InstancedBufferGeometry.prototype.copy;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function (source) {\r\n  _oldInstancedBufferGeometryCopy.call(this, source);\r\n  if (this.instanceCount === undefined) {\r\n    this.instanceCount = Infinity;\r\n  }\r\n};\r\n\r\nexport default {\r\n  calcCylinderMatrix: _calcCylinderMatrix,\r\n  calcChunkMatrix: _calcChunkMatrix,\r\n  groupHasGeometryToRender: _groupHasGeometryToRender,\r\n  buildDistorionMesh: _buildDistorionMesh,\r\n  RCGroup,\r\n  fillArray,\r\n  clearTree,\r\n  destroyObject,\r\n  belongToSelectLayers,\r\n  processObjRenderOrder,\r\n  applySelectionMaterial,\r\n  getMiddlePoint,\r\n  LAYERS,\r\n};\r\n","import * as THREE from 'three';\r\nimport gfxutils from './gfx/gfxutils';\r\n\r\nconst _defaultBoundaries = {\r\n  boundingBox: new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)),\r\n  boundingSphere: new THREE.Sphere(new THREE.Vector3(0, 0, 0), 1),\r\n};\r\n\r\nclass Visual extends gfxutils.RCGroup {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource);\r\n    this.name = name;\r\n    this._dataSource = dataSource;\r\n  }\r\n\r\n  release() {\r\n    if (this.parent) {\r\n      this.parent.remove(this);\r\n    }\r\n  }\r\n\r\n  getDataSource() {\r\n    return this._dataSource;\r\n  }\r\n\r\n  getBoundaries() {\r\n    return _defaultBoundaries;\r\n  }\r\n}\r\n\r\nexport default Visual;\r\n","function _ensureArray(x) {\r\n  if (x === null || x === undefined || Array.isArray(x)) {\r\n    return x;\r\n  }\r\n  return [x];\r\n}\r\n\r\n/** An indexed list of objects or classes. */\r\nclass EntityList {\r\n  /**\r\n   * Create a list of objects.\r\n   * The objects can be indexed by one or more properties for the later retrieval.\r\n   *\r\n   * @param {!Array<Object>=} entities A list of objects to automatically register at creation time.\r\n   * @param {!Array<string>=} indices A list of property names to use for case-insensitive indexing.\r\n   *   By default, a single `.id` property is used.\r\n   * @see EntityList#register\r\n   */\r\n  constructor(entities = [], indices = ['id']) {\r\n    this._list = [];\r\n    this._dict = {};\r\n    this._indices = [...indices];\r\n    this._indices.forEach((index) => {\r\n      this._dict[index] = {};\r\n    });\r\n\r\n    entities.forEach((entity) => this.register(entity));\r\n  }\r\n\r\n  /**\r\n   * Add a value to the end of a list.\r\n   * The list will contain only one copy of the value.\r\n   *\r\n   * @param {!Array} list An array.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.unregisterFromList\r\n   * @see EntityList.registerInDict\r\n   */\r\n  static registerInList(list, value) {\r\n    if (!list.includes(value)) {\r\n      list.push(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a value from a list if it is there.\r\n   *\r\n   * @param {!Array} list An array.\r\n   * @param {*} value A value to remove.\r\n   * @see EntityList.registerInList\r\n   */\r\n  static unregisterFromList(list, value) {\r\n    const pos = list.indexOf(value);\r\n    if (pos !== -1) {\r\n      list.splice(pos, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a value to a dictionary.\r\n   * The value may be stored under multiple different keys (aliases).\r\n   * There might be multiples values stored under the same key.\r\n   *\r\n   * @param {!Object<string,*>} dict A dictionary.\r\n   * @param {!Array<string>} keys An array of keys.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.unregisterFromDict\r\n   * @see EntityList.registerInList\r\n   */\r\n  static registerInDict(dict, keys, value) {\r\n    keys.forEach((key) => {\r\n      key = key.toLowerCase();\r\n      const list = dict[key] = dict[key] || [];\r\n      if (!list.includes(value)) {\r\n        list.push(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove a value from a dictionary.\r\n   * The value may be stored under multiple different keys (aliases).\r\n   * There might be multiples values stored under the same key.\r\n   *\r\n   * @param {!Object<string,*>} dict A dictionary.\r\n   * @param {!Array<string>} keys An array of keys.\r\n   * @param {*} value A value to add.\r\n   * @see EntityList.registerInDict\r\n   */\r\n  static unregisterFromDict(dict, keys, value) {\r\n    keys.forEach((key) => {\r\n      key = key.toLowerCase();\r\n      const list = dict[key];\r\n      if (list) {\r\n        const pos = list.indexOf(value);\r\n        if (pos !== -1) {\r\n          list.splice(pos, 1);\r\n        }\r\n        if (list.length === 0) {\r\n          delete dict[key];\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add an entity to this list.\r\n   *\r\n   * @param {!Object} entity An object or a class to register. The object must include all\r\n   *   properties specified as indices on construction.\r\n   * @see EntityList#unregister\r\n   */\r\n  register(entity) {\r\n    EntityList.registerInList(this._list, entity);\r\n    this._indices.forEach((index) => {\r\n      EntityList.registerInDict(this._dict[index], _ensureArray(entity[index]), entity);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove an entity from this list.\r\n   *\r\n   * @param {!Object} entity An object or a class to unregister. The object may be\r\n   *   missing from the list but it must include all properties specified as indices\r\n   *   on construction.\r\n   * @see EntityList#register\r\n   */\r\n  unregister(entity) {\r\n    EntityList.unregisterFromList(this._list, entity);\r\n    this._indices.forEach((index) => {\r\n      EntityList.unregisterFromDict(this._dict[index], _ensureArray(entity[index]), entity);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * An ordered list of all registered entities.\r\n   * It is a read-only copy, use {@link EntityList#register} and {@link EntityList#unregister}\r\n   * to modify it.\r\n   *\r\n   * @type {!Array<Object>}\r\n   */\r\n  get all() {\r\n    return [...this._list];\r\n  }\r\n\r\n  /**\r\n   * The first registered entity.\r\n   * Use it if you do not care which entity you are referring to.\r\n   *\r\n   * @type {Object=}\r\n   */\r\n  get first() {\r\n    return this._list[0];\r\n  }\r\n\r\n  /**\r\n   * Retrieve a list of keys for the index.\r\n   *\r\n   * @param {string=} index One of the indices specified during the list construction. If omitted,\r\n   *   the first of the indices is used.\r\n   * @returns {!Array<string>} An unordered list of keys in the index, i.e. particular property\r\n   *   values for all registered entities.\r\n   */\r\n  keys(index) {\r\n    return Object.keys(this._dict[index || this._indices[0]]);\r\n  }\r\n\r\n  /**\r\n   * Retrieve an entity by its key.\r\n   *\r\n   * @param {string} key A case-insensitive property value to look-up.\r\n   * @param {string=} index One of the indices specified during the list construction. If omitted,\r\n   *   the first of the indices is used.\r\n   * @returns {Object=} An object registered in the index under the key. If there are multiple\r\n   *   objects under the same key, the first one is returned.\r\n   */\r\n  get(key, index) {\r\n    const dict = this._dict[index || this._indices[0]];\r\n    if (dict) {\r\n      const values = dict[key && key.toLowerCase()];\r\n      return values && values.length > 0 ? values[0] : undefined;\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport default EntityList;\r\n","import settings from '../settings';\r\nimport logger from './logger';\r\n\r\nfunction makeContextDependent(prototype) {\r\n  Object.defineProperties(prototype, {\r\n    logger: {\r\n      get() {\r\n        return this.context && this.context.logger ? this.context.logger : logger;\r\n      },\r\n    },\r\n    settings: {\r\n      get() {\r\n        return this.context && this.context.settings ? this.context.settings : settings;\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\nexport default makeContextDependent;\r\n","import * as THREE from 'three';\r\n\r\nclass CollisionSphere {\r\n  constructor(position, radius) {\r\n    this._position = position;\r\n    this._radius = radius;\r\n  }\r\n\r\n  static _sphere = new THREE.Sphere();\r\n\r\n  raycast(raycaster) {\r\n    const sphere = CollisionSphere._sphere;\r\n    sphere.set(this._position, this._radius);\r\n\r\n    const p = new THREE.Vector3();\r\n    if (raycaster.ray.intersectSphere(sphere, p)) {\r\n      return {\r\n        distance: raycaster.ray.origin.distanceTo(p),\r\n        point: p,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nconst SphereCollisionGeo = (base) => class extends base {\r\n  constructor(count, ...args) {\r\n    super(...args);\r\n    this._objects = new Array(count);\r\n    this.boundingSphere = null;\r\n    this.boundingBox = null;\r\n  }\r\n\r\n  setSphere(idx, position, radius) {\r\n    this._objects[idx] = new CollisionSphere(position, radius);\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    // TODO raycast with bounding sphere? How to deal with updates?\r\n    for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n      const inters = this._objects[i].raycast(raycaster);\r\n      if (inters) {\r\n        inters.chunkIdx = i;\r\n        intersects.push(inters);\r\n      }\r\n    }\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    const objects = this._objects;\r\n    let { boundingBox } = this;\r\n    if (boundingBox === null) {\r\n      this.boundingBox = boundingBox = new THREE.Box3();\r\n    }\r\n    boundingBox.makeEmpty();\r\n    for (let i = 0, n = objects.length; i < n; ++i) {\r\n      boundingBox.expandByPoint(objects[i]._position);\r\n    }\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    this.computeBoundingBox();\r\n    const objects = this._objects;\r\n    const { boundingBox } = this;\r\n    // Build bounding sphere\r\n    let radiusSquared = 0.0;\r\n    const center = new THREE.Vector3();\r\n    boundingBox.getCenter(center);\r\n    for (let i = 0, n = objects.length; i < n; ++i) {\r\n      const pos = objects[i]._position;\r\n      const lengthSquared = center.distanceToSquared(pos);\r\n      if (radiusSquared < lengthSquared) {\r\n        radiusSquared = lengthSquared;\r\n      }\r\n    }\r\n    if (this.boundingSphere === null) {\r\n      this.boundingSphere = new THREE.Sphere();\r\n    }\r\n    this.boundingSphere.set(center, Math.sqrt(radiusSquared));\r\n  }\r\n};\r\nexport default SphereCollisionGeo;\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport utils from '../../utils';\r\nimport SphereCollisionGeo from './SphereCollisionGeo';\r\n\r\nconst tmpColor = new THREE.Color();\r\n\r\nconst OFFSET_SIZE = 4;\r\nconst COLOR_SIZE = 3;\r\nconst { copySubArrays } = utils;\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x;\r\n  arr[idx + 1] = y;\r\n  arr[idx + 2] = z;\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x;\r\n  arr[idx + 1] = y;\r\n  arr[idx + 2] = z;\r\n  arr[idx + 3] = w;\r\n}\r\nclass InstancedSpheresGeometry extends SphereCollisionGeo(THREE.InstancedBufferGeometry) {\r\n  constructor(spheresCount, sphereComplexity, useZSprites) {\r\n    super(spheresCount);\r\n    this._sphGeometry = useZSprites ? new THREE.PlaneGeometry(2, 2, 1, 1)\r\n      : new THREE.SphereBufferGeometry(1, sphereComplexity * 2, sphereComplexity, 0, Math.PI * 2, 0, Math.PI);\r\n    this._init(spheresCount, this._sphGeometry);\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    setArrayXYZW(this._offsets, itemIdx * OFFSET_SIZE, itemPos.x, itemPos.y, itemPos.z, itemRad);\r\n    this.setSphere(itemIdx, itemPos, itemRad);\r\n  }\r\n\r\n  setColor(itemIdx, colorVal) {\r\n    tmpColor.set(colorVal);\r\n    setArrayXYZ(this._colors, itemIdx * COLOR_SIZE, tmpColor.r, tmpColor.g, tmpColor.b);\r\n  }\r\n\r\n  startUpdate() {\r\n    return true;\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('offset').needsUpdate = true;\r\n    this.getAttribute('color').needsUpdate = true;\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate();\r\n    this.computeBoundingSphere();\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha;\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      alphaArr[chunkIndices[i]] = value;\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true;\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length;\r\n    const geom = new THREE.InstancedBufferGeometry();\r\n    this._init.call(geom, instanceCount, this._sphGeometry);\r\n\r\n    copySubArrays(this._offsets, geom._offsets, chunkIndices, OFFSET_SIZE);\r\n    copySubArrays(this._colors, geom._colors, chunkIndices, COLOR_SIZE);\r\n    geom.boundingSphere = this.boundingSphere;\r\n    geom.boundingBox = this.boundingBox;\r\n    return [geom];\r\n  }\r\n\r\n  _init(spheresCount, sphereGeo) {\r\n    this.copy(sphereGeo);\r\n\r\n    this._offsets = utils.allocateTyped(Float32Array, spheresCount * OFFSET_SIZE);\r\n    this._colors = utils.allocateTyped(Float32Array, spheresCount * COLOR_SIZE);\r\n    const alpha = this._alpha = utils.allocateTyped(Float32Array, spheresCount);\r\n    _.fill(alpha, 1.0);\r\n\r\n    this.setAttribute('offset', new THREE.InstancedBufferAttribute(this._offsets, OFFSET_SIZE, false, 1));\r\n    this.setAttribute('color', new THREE.InstancedBufferAttribute(this._colors, COLOR_SIZE, false, 1));\r\n    this.setAttribute('alphaColor', new THREE.InstancedBufferAttribute(alpha, 1, false, 1));\r\n  }\r\n}\r\nexport default InstancedSpheresGeometry;\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport utils from '../../utils';\r\n\r\nconst MAX_IDC_16BIT = 65535;\r\nconst VEC_SIZE = 3;\r\nconst tmpColor = new THREE.Color();\r\n\r\n/**\r\n * This class represents geometry which consists of separate chunks.\r\n * Each chunk has same index and similar geometry with equal points and faces count.\r\n * Each chunk has by default only one color.\r\n * @constructor\r\n */\r\n\r\nclass ChunkedObjectsGeometry extends THREE.BufferGeometry {\r\n  constructor(chunkGeo, chunksCount) {\r\n    super();\r\n\r\n    if (this.constructor === ChunkedObjectsGeometry) {\r\n      throw new Error('Can not instantiate abstract class!');\r\n    }\r\n\r\n    this._chunkGeo = chunkGeo;\r\n\r\n    this._init(chunkGeo, chunksCount);\r\n  }\r\n\r\n  startUpdate() {\r\n    return true;\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('position').needsUpdate = true;\r\n    this.getAttribute('normal').needsUpdate = true;\r\n    this.getAttribute('color').needsUpdate = true;\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    tmpColor.set(colorVal);\r\n    const colors = this._colors;\r\n    const chunkSize = this._chunkSize;\r\n    for (let i = chunkIdx * chunkSize, end = i + chunkSize; i < end; ++i) {\r\n      const idx = i * VEC_SIZE;\r\n      colors[idx] = tmpColor.r;\r\n      colors[idx + 1] = tmpColor.g;\r\n      colors[idx + 2] = tmpColor.b;\r\n    }\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate();\r\n    this.computeBoundingSphere();\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha;\r\n    const chunkSize = this._chunkSize;\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const left = chunkIndices[i] * chunkSize;\r\n      _.fill(alphaArr, value, left, left + chunkSize);\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true;\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const inters = [];\r\n    // use THREE.Mesh raycasting interface for the Geometry. The Mesh is\r\n    // created with existed geometry and default material, so it doesn't slowdown.\r\n    const mesh = new THREE.Mesh();\r\n    mesh.geometry = this;\r\n    mesh.raycast(raycaster, inters);\r\n\r\n    const facesPerChunk = this._chunkGeo.index.count / 3;\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('faceIndex')) {\r\n        continue;\r\n      }\r\n      inters[i].chunkIdx = Math.floor(inters[i].faceIndex / facesPerChunk);\r\n      intersects.push(inters[i]);\r\n    }\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length;\r\n    const geom = new THREE.BufferGeometry();\r\n    this._init.call(geom, this._chunkGeo, instanceCount);\r\n\r\n    const srcPos = this._positions;\r\n    const srcNorm = this._normals;\r\n    const srcColor = this._colors;\r\n\r\n    const dstPos = geom._positions;\r\n    const dstNorm = geom._normals;\r\n    const dstColor = geom._colors;\r\n\r\n    const chunkSize = this._chunkSize * VEC_SIZE;\r\n\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const dstPtOffset = i * chunkSize;\r\n      const ptIdxBegin = chunkIndices[i] * chunkSize;\r\n      const ptIdxEnd = ptIdxBegin + chunkSize;\r\n      dstPos.set(srcPos.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset);\r\n      dstNorm.set(srcNorm.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset);\r\n      dstColor.set(srcColor.subarray(ptIdxBegin, ptIdxEnd), dstPtOffset);\r\n    }\r\n\r\n    geom.boundingSphere = this.boundingSphere;\r\n    geom.boundingBox = this.boundingBox;\r\n    return [geom];\r\n  }\r\n\r\n  _init(chunkGeo, chunksCount) {\r\n    const chunkSize = this._chunkSize = chunkGeo.attributes.position.count;\r\n    const chunkIndex = chunkGeo.index.array;\r\n    const chunkIndexSize = chunkIndex.length;\r\n    const pointsCount = this._chunkSize * chunksCount;\r\n    const use32bitIndex = pointsCount > MAX_IDC_16BIT;\r\n    const indexSize = chunkIndexSize * chunksCount;\r\n    const index = this._index = utils.allocateTyped(use32bitIndex ? Uint32Array : Uint16Array, indexSize);\r\n    this._positions = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE);\r\n    this._normals = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE);\r\n    this._colors = utils.allocateTyped(Float32Array, pointsCount * VEC_SIZE);\r\n    const alpha = this._alpha = utils.allocateTyped(Float32Array, pointsCount);\r\n    _.fill(alpha, 1.0);\r\n\r\n    for (let i = 0; i < chunksCount; ++i) {\r\n      const offset = i * chunkIndexSize;\r\n      const posOffset = i * chunkSize;\r\n      index.set(chunkIndex, offset);\r\n      for (let j = 0; j < chunkIndexSize; ++j) {\r\n        index[offset + j] += posOffset;\r\n      }\r\n    }\r\n\r\n    this.setIndex(new THREE.BufferAttribute(this._index, 1));\r\n    this.setAttribute('position', new THREE.BufferAttribute(this._positions, VEC_SIZE));\r\n    this.setAttribute('normal', new THREE.BufferAttribute(this._normals, VEC_SIZE));\r\n    this.setAttribute('color', new THREE.BufferAttribute(this._colors, VEC_SIZE));\r\n    this.setAttribute('alphaColor', new THREE.BufferAttribute(alpha, 1));\r\n  }\r\n}\r\nexport default ChunkedObjectsGeometry;\r\n","import * as THREE from 'three';\r\nimport utils from '../../utils';\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry';\r\nimport SphereCollisionGeo from './SphereCollisionGeo';\r\n\r\nconst VEC_SIZE = 3;\r\n\r\nclass SimpleSpheresGeometry extends SphereCollisionGeo(ChunkedObjectsGeometry) {\r\n  constructor(spheresCount, sphereComplexity) {\r\n    const sphGeometry = new THREE.SphereBufferGeometry(\r\n      1,\r\n      sphereComplexity * 2,\r\n      sphereComplexity,\r\n      0,\r\n      Math.PI * 2,\r\n      0,\r\n      Math.PI,\r\n    );\r\n    super(spheresCount, sphGeometry, spheresCount);\r\n\r\n    const normals = this._normals;\r\n    const geoNormals = sphGeometry.attributes.normal.array;\r\n    const chunkSize = this._chunkSize;\r\n    this._chunkPos = this._chunkGeo.attributes.position.array;\r\n    this._tmpPositions = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE);\r\n    for (let i = 0; i < spheresCount; ++i) {\r\n      normals.set(geoNormals, chunkSize * VEC_SIZE * i);\r\n    }\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    const tmpPos = this._tmpPositions;\r\n    const chunkSize = this._chunkSize;\r\n    const geoPos = this._chunkPos;\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      const idx = i * 3;\r\n      tmpPos[idx] = itemPos.x + geoPos[idx] * itemRad;\r\n      tmpPos[idx + 1] = itemPos.y + geoPos[idx + 1] * itemRad;\r\n      tmpPos[idx + 2] = itemPos.z + geoPos[idx + 2] * itemRad;\r\n    }\r\n\r\n    this._positions.set(tmpPos, chunkSize * itemIdx * VEC_SIZE);\r\n    this.setSphere(itemIdx, itemPos, itemRad);\r\n  }\r\n}\r\nexport default SimpleSpheresGeometry;\r\n","import * as THREE from 'three';\r\nimport utils from '../../utils';\r\nimport gfxutils from '../gfxutils';\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry';\r\n\r\nconst VEC_SIZE = 3;\r\nconst centerPos = new THREE.Vector3();\r\nconst tmpVector = new THREE.Vector3();\r\nconst normMtx = new THREE.Matrix3();\r\n\r\nclass Simple2CCylindersGeometry extends ChunkedObjectsGeometry {\r\n  constructor(instanceCount, polyComplexity) {\r\n    const cylGeometry = new THREE.CylinderGeometry(1, 1, 1.0, Math.max(3, polyComplexity), 2, true);\r\n    super(cylGeometry, 2 * instanceCount);\r\n\r\n    const chunkSize = this._chunkSize;\r\n    this._chunkPos = this._chunkGeo.attributes.position.array;\r\n    this._chunkNorms = this._chunkGeo.attributes.normal.array;\r\n    this._tmpVector = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE);\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const chunkSize = this._chunkSize;\r\n    const firstOffset = chunkSize * 2 * itemIdx * VEC_SIZE;\r\n    const secondOffset = firstOffset + chunkSize * VEC_SIZE;\r\n\r\n    const tmpArray = this._tmpVector;\r\n    const geoPos = this._chunkPos;\r\n    const geoNorm = this._chunkNorms;\r\n\r\n    centerPos.lerpVectors(botPos, topPos, 0.5);\r\n    const mtx1 = gfxutils.calcCylinderMatrix(botPos, centerPos, itemRad);\r\n    normMtx.getNormalMatrix(mtx1);\r\n\r\n    let idx;\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE;\r\n      tmpVector.fromArray(geoPos, idx);\r\n      tmpVector.applyMatrix4(mtx1);\r\n      tmpVector.toArray(tmpArray, idx);\r\n    }\r\n    this._positions.set(tmpArray, firstOffset);\r\n\r\n    // now shift center to get another part of the cylinder\r\n    centerPos.sub(botPos);\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE;\r\n      tmpArray[idx] += centerPos.x;\r\n      tmpArray[idx + 1] += centerPos.y;\r\n      tmpArray[idx + 2] += centerPos.z;\r\n    }\r\n    this._positions.set(tmpArray, secondOffset);\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE;\r\n      tmpVector.fromArray(geoNorm, idx);\r\n      tmpVector.applyMatrix3(normMtx);\r\n      tmpVector.toArray(tmpArray, idx);\r\n    }\r\n    this._normals.set(tmpArray, firstOffset);\r\n    this._normals.set(tmpArray, secondOffset);\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const first = 2 * itemIdx;\r\n    super.setColor(first, colorVal1);\r\n\r\n    const second = first + 1;\r\n    super.setColor(second, colorVal2);\r\n  }\r\n}\r\n\r\nexport default Simple2CCylindersGeometry;\r\n","import * as THREE from 'three';\r\nimport utils from '../../utils';\r\n\r\nconst MAX_POINTS_COUNT_16BIT = 65536;\r\nconst PTS_PER_TRIANGLE = 3;\r\n\r\nclass CylinderBufferGeometry extends THREE.BufferGeometry {\r\n  constructor(\r\n    radiusTop,\r\n    radiusBottom,\r\n    height,\r\n    radialSegments,\r\n    heightSegments,\r\n    openEnded,\r\n  ) {\r\n    super();\r\n\r\n    const thetaStart = 0;\r\n    const thetaLength = 2 * Math.PI;\r\n\r\n    this.type = 'CylinderBufferGeometry';\r\n\r\n    this.parameters = {\r\n      radiusTop,\r\n      radiusBottom,\r\n      height,\r\n      radialSegments,\r\n      heightSegments,\r\n      openEnded,\r\n    };\r\n\r\n    const hasTop = openEnded === false && radiusTop > 0;\r\n    const hasBottom = openEnded === false && radiusBottom > 0;\r\n    const vertexCount = (heightSegments + 1) * radialSegments\r\n      + hasTop * (radialSegments + 1)\r\n      + hasBottom * (radialSegments + 1);\r\n    const facesCount = (2 * heightSegments + hasTop + hasBottom) * radialSegments;\r\n\r\n    const heightHalf = height / 2;\r\n\r\n    /* eslint-disable no-magic-numbers */\r\n    const positions = new THREE.BufferAttribute(utils.allocateTyped(Float32Array, vertexCount * 3), 3);\r\n    const normals = new THREE.BufferAttribute(utils.allocateTyped(Float32Array, vertexCount * 3), 3);\r\n    const indices = new THREE.Uint16BufferAttribute(utils.allocateTyped(Uint16Array, facesCount * PTS_PER_TRIANGLE), 1);\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    const uvs = new THREE.BufferAttribute(utils.allocateTyped(Float32Array, vertexCount * 2), 2);\r\n    console.assert(vertexCount < MAX_POINTS_COUNT_16BIT, 'DEBUG: Cylinder Geometry has too many vertices (65536 max).');\r\n\r\n    let currVtxIdx = 0;\r\n    let currFaceIdx = 0;\r\n    const tanTheta = -(radiusBottom - radiusTop) / height;\r\n\r\n    // setup cylinder data\r\n    for (let y = 0; y <= heightSegments; y++) {\r\n      // faces\r\n      if (y !== heightSegments) {\r\n        for (let i = 0; i < radialSegments; i++) {\r\n          const v1 = currVtxIdx + i;\r\n          const v2 = currVtxIdx + radialSegments + i;\r\n          const v3 = currVtxIdx + radialSegments + ((i + 1) % radialSegments);\r\n          const v4 = currVtxIdx + ((i + 1) % radialSegments);\r\n\r\n          indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, v1, v4, v2);\r\n          currFaceIdx++;\r\n          indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, v2, v4, v3);\r\n          currFaceIdx++;\r\n        }\r\n      }\r\n\r\n      // vertices\r\n      const v = y / heightSegments;\r\n      const radius = v * (radiusBottom - radiusTop) + radiusTop;\r\n\r\n      for (let x = 0; x < radialSegments; x++) {\r\n        const u = x / radialSegments;\r\n\r\n        const vx = radius * Math.sin(u * thetaLength + thetaStart);\r\n        const vy = v * height - heightHalf;\r\n        const vz = radius * Math.cos(u * thetaLength + thetaStart);\r\n\r\n        const normal = new THREE.Vector3(\r\n          vx,\r\n          Math.sqrt(vx * vx + vz * vz) * tanTheta,\r\n          vz,\r\n        ).normalize();\r\n\r\n        positions.setXYZ(currVtxIdx, vx, vy, vz);\r\n        normals.setXYZ(currVtxIdx, normal.x, normal.y, normal.z);\r\n        uvs.setXY(currVtxIdx, u, v);\r\n        ++currVtxIdx;\r\n      }\r\n    }\r\n\r\n    // top cap\r\n    if (hasTop) {\r\n      const startTIdx = currVtxIdx;\r\n      const lastIdx = currVtxIdx + radialSegments;\r\n      for (let fTIdx = 0; fTIdx < radialSegments; ++fTIdx) {\r\n        const currSrcIdx = currVtxIdx - radialSegments;\r\n        positions.setXYZ(\r\n          currVtxIdx,\r\n          positions.getX(currSrcIdx),\r\n          positions.getY(currSrcIdx),\r\n          positions.getZ(currSrcIdx),\r\n        );\r\n        normals.setXYZ(currVtxIdx, 0, 1, 0);\r\n        uvs.setXY(currVtxIdx, 1, 1);\r\n\r\n        const nextTVtx = startTIdx + ((fTIdx + 1) % radialSegments);\r\n        indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, currVtxIdx, nextTVtx, lastIdx);\r\n        currFaceIdx++;\r\n        currVtxIdx++;\r\n      }\r\n\r\n      positions.setXYZ(currVtxIdx, 0, heightHalf, 0);\r\n      normals.setXYZ(currVtxIdx, 0, 1, 0);\r\n      uvs.setXY(currVtxIdx, 1, 1);\r\n      ++currVtxIdx;\r\n    }\r\n\r\n    // bottom cap\r\n    if (hasBottom) {\r\n      const startBIdx = currVtxIdx;\r\n      const lastBIdx = currVtxIdx + radialSegments;\r\n      for (let fBIdx = 0; fBIdx < radialSegments; ++fBIdx) {\r\n        const currSrcBIdx = fBIdx;\r\n        positions.setXYZ(\r\n          currVtxIdx,\r\n          positions.getX(currSrcBIdx),\r\n          positions.getY(currSrcBIdx),\r\n          positions.getZ(currSrcBIdx),\r\n        );\r\n        normals.setXYZ(currVtxIdx, 0, -1, 0);\r\n        uvs.setXY(currVtxIdx, 0, 0);\r\n\r\n        const nextBVtx = startBIdx + ((fBIdx + 1) % radialSegments);\r\n        indices.setXYZ(currFaceIdx * PTS_PER_TRIANGLE, nextBVtx, currVtxIdx, lastBIdx);\r\n        currFaceIdx++;\r\n        currVtxIdx++;\r\n      }\r\n\r\n      positions.setXYZ(currVtxIdx, 0, -heightHalf, 0);\r\n      normals.setXYZ(currVtxIdx, 0, -1, 0);\r\n      uvs.setXY(currVtxIdx, 0, 0);\r\n    }\r\n\r\n    this.setIndex(indices);\r\n    this.setAttribute('position', positions);\r\n    this.setAttribute('normal', normals);\r\n    this.setAttribute('uv', uvs);\r\n  }\r\n\r\n  clone() {\r\n    const { parameters } = this;\r\n\r\n    return new CylinderBufferGeometry(\r\n      parameters.radiusTop,\r\n      parameters.radiusBottom,\r\n      parameters.height,\r\n      parameters.radialSegments,\r\n      parameters.heightSegments,\r\n      parameters.openEnded,\r\n    );\r\n  }\r\n}\r\n\r\nexport default CylinderBufferGeometry;\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport utils from '../../utils';\r\nimport gfxutils from '../gfxutils';\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry';\r\nimport CylinderBufferGeometry from './CylinderBufferGeometry';\r\n\r\nconst tmpColor = new THREE.Color();\r\nconst invMatrix = new THREE.Matrix4();\r\n\r\nconst OFFSET_SIZE = 4;\r\nconst COLOR_SIZE = 3;\r\nconst { copySubArrays } = utils;\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x;\r\n  arr[idx + 1] = y;\r\n  arr[idx + 2] = z;\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x;\r\n  arr[idx + 1] = y;\r\n  arr[idx + 2] = z;\r\n  arr[idx + 3] = w;\r\n}\r\n\r\nfunction sortNumber(a, b) {\r\n  return a - b;\r\n}\r\n\r\nfunction _prepareCylinderInfo(chunkIndices) {\r\n  chunkIndices.sort(sortNumber);\r\n  const chunksIdx = [];\r\n  const cylinderInfo = [];\r\n  for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n    const val = chunkIndices[i];\r\n    const even = (val | 0) % 2 === 0;\r\n    const newPar = {\r\n      first: false,\r\n      second: false,\r\n    };\r\n    if (even) {\r\n      newPar.first = true;\r\n      newPar.second = i + 1 < n && chunkIndices[i + 1] === chunkIndices[i] + 1;\r\n      if (newPar.second) {\r\n        ++i;\r\n      }\r\n    } else {\r\n      newPar.second = true;\r\n    }\r\n    chunksIdx.push(Math.floor(val / 2));\r\n    cylinderInfo.push(newPar);\r\n  }\r\n  return { indices: chunksIdx, cylinderInfo };\r\n}\r\n\r\nfunction _assignOpacity(cylinderInfo, color1, color2) {\r\n  for (let i = 0, n = cylinderInfo.length; i < n; ++i) {\r\n    const info = cylinderInfo[i];\r\n    if (!info.first) {\r\n      color1[COLOR_SIZE * i] = -0.5;\r\n    }\r\n    if (!info.second) {\r\n      color2[COLOR_SIZE * i] = -0.5;\r\n    }\r\n  }\r\n}\r\nclass Instanced2CCylindersGeometry extends THREE.InstancedBufferGeometry {\r\n  constructor(instanceCount, polyComplexity, useZSprites, openEnded) {\r\n    super();\r\n    this._useZSprites = useZSprites;\r\n    this._cylGeometry = useZSprites ? new THREE.PlaneGeometry(2, 2, 1, 1)\r\n      : new CylinderBufferGeometry(1, 1, 1.0, Math.max(3, polyComplexity), 2, openEnded);\r\n    this._init(instanceCount, this._cylGeometry, this._useZSprites);\r\n\r\n    this._collisionGeo = new Simple2CCylindersGeometry(instanceCount, 3);\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const matrix = gfxutils.calcCylinderMatrix(botPos, topPos, itemRad);\r\n    let me = matrix.elements;\r\n    const mtxOffset = itemIdx * OFFSET_SIZE;\r\n\r\n    this._collisionGeo.setItem(itemIdx, botPos, topPos, itemRad);\r\n    setArrayXYZW(this._matVector1, mtxOffset, me[0], me[4], me[8], me[12]);\r\n    setArrayXYZW(this._matVector2, mtxOffset, me[1], me[5], me[9], me[13]);\r\n    setArrayXYZW(this._matVector3, mtxOffset, me[2], me[6], me[10], me[14]);\r\n\r\n    if (this._useZSprites) {\r\n      invMatrix.copy(matrix).invert();\r\n      me = invMatrix.elements;\r\n      setArrayXYZW(this._invmatVector1, mtxOffset, me[0], me[4], me[8], me[12]);\r\n      setArrayXYZW(this._invmatVector2, mtxOffset, me[1], me[5], me[9], me[13]);\r\n      setArrayXYZW(this._invmatVector3, mtxOffset, me[2], me[6], me[10], me[14]);\r\n    }\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const colorIdx = itemIdx * COLOR_SIZE;\r\n    tmpColor.set(colorVal1);\r\n    setArrayXYZ(this._color1, colorIdx, tmpColor.r, tmpColor.g, tmpColor.b);\r\n    tmpColor.set(colorVal2);\r\n    setArrayXYZ(this._color2, colorIdx, tmpColor.r, tmpColor.g, tmpColor.b);\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    this._collisionGeo.computeBoundingSphere();\r\n    this.boundingSphere = this._collisionGeo.boundingSphere;\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    this._collisionGeo.computeBoundingBox();\r\n    this.boundingBox = this._collisionGeo.boundingBox;\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    this._collisionGeo.raycast(raycaster, intersects);\r\n  }\r\n\r\n  startUpdate() {\r\n    return true;\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('matVector1').needsUpdate = true;\r\n    this.getAttribute('matVector2').needsUpdate = true;\r\n    this.getAttribute('matVector3').needsUpdate = true;\r\n    this.getAttribute('color').needsUpdate = true;\r\n    this.getAttribute('color2').needsUpdate = true;\r\n    this.getAttribute('alphaColor').needsUpdate = true;\r\n    if (this._useZSprites) {\r\n      this.getAttribute('invmatVector1').needsUpdate = true;\r\n      this.getAttribute('invmatVector2').needsUpdate = true;\r\n      this.getAttribute('invmatVector3').needsUpdate = true;\r\n    }\r\n\r\n    this._collisionGeo.finishUpdate();\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate();\r\n    this.computeBoundingSphere();\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const alphaArr = this._alpha;\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      alphaArr[Math.floor(chunkIndices[i] / 2)] = value;\r\n    }\r\n    this.getAttribute('alphaColor').needsUpdate = true;\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const info = _prepareCylinderInfo(chunkIndices);\r\n    const cylinderIndices = info.indices;\r\n    const instanceCount = cylinderIndices.length;\r\n    const geom = new THREE.InstancedBufferGeometry();\r\n    this._init.call(geom, instanceCount, this._cylGeometry, this._useZSprites);\r\n\r\n    copySubArrays(this._matVector1, geom._matVector1, cylinderIndices, OFFSET_SIZE);\r\n    copySubArrays(this._matVector2, geom._matVector2, cylinderIndices, OFFSET_SIZE);\r\n    copySubArrays(this._matVector3, geom._matVector3, cylinderIndices, OFFSET_SIZE);\r\n\r\n    if (this._useZSprites) {\r\n      copySubArrays(this._invmatVector1, geom._invmatVector1, cylinderIndices, OFFSET_SIZE);\r\n      copySubArrays(this._invmatVector2, geom._invmatVector2, cylinderIndices, OFFSET_SIZE);\r\n      copySubArrays(this._invmatVector3, geom._invmatVector3, cylinderIndices, OFFSET_SIZE);\r\n    }\r\n\r\n    copySubArrays(this._color1, geom._color1, cylinderIndices, COLOR_SIZE);\r\n    copySubArrays(this._color2, geom._color2, cylinderIndices, COLOR_SIZE);\r\n    _assignOpacity(info.cylinderInfo, geom._color1, geom._color2);\r\n    geom.boundingSphere = this.boundingSphere;\r\n    geom.boundingBox = this.boundingBox;\r\n    return [geom];\r\n  }\r\n\r\n  getGeoParams() {\r\n    return this._cylGeometry.parameters;\r\n  }\r\n\r\n  _init(instanceCount, cylinderGeo, useZSprites) {\r\n    this.copy(cylinderGeo);\r\n    this._matVector1 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\r\n    this._matVector2 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\r\n    this._matVector3 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\r\n    this._color1 = utils.allocateTyped(Float32Array, instanceCount * COLOR_SIZE);\r\n    this._color2 = utils.allocateTyped(Float32Array, instanceCount * COLOR_SIZE);\r\n    const alpha = this._alpha = utils.allocateTyped(Float32Array, instanceCount);\r\n    _.fill(alpha, 1.0);\r\n\r\n    this.setAttribute('matVector1', new THREE.InstancedBufferAttribute(this._matVector1, OFFSET_SIZE, false, 1));\r\n    this.setAttribute('matVector2', new THREE.InstancedBufferAttribute(this._matVector2, OFFSET_SIZE, false, 1));\r\n    this.setAttribute('matVector3', new THREE.InstancedBufferAttribute(this._matVector3, OFFSET_SIZE, false, 1));\r\n    this.setAttribute('color', new THREE.InstancedBufferAttribute(this._color1, COLOR_SIZE, false, 1));\r\n    this.setAttribute('color2', new THREE.InstancedBufferAttribute(this._color2, COLOR_SIZE, false, 1));\r\n\r\n    this.setAttribute('alphaColor', new THREE.InstancedBufferAttribute(this._alpha, 1, false, 1));\r\n\r\n    if (useZSprites) {\r\n      this._invmatVector1 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\r\n      this._invmatVector2 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\r\n      this._invmatVector3 = utils.allocateTyped(Float32Array, instanceCount * OFFSET_SIZE);\r\n\r\n      this.setAttribute(\r\n        'invmatVector1',\r\n        new THREE.InstancedBufferAttribute(this._invmatVector1, OFFSET_SIZE, false, 1),\r\n      );\r\n      this.setAttribute(\r\n        'invmatVector2',\r\n        new THREE.InstancedBufferAttribute(this._invmatVector2, OFFSET_SIZE, false, 1),\r\n      );\r\n      this.setAttribute(\r\n        'invmatVector3',\r\n        new THREE.InstancedBufferAttribute(this._invmatVector3, OFFSET_SIZE, false, 1),\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Instanced2CCylindersGeometry;\r\n","import * as THREE from 'three';\r\nimport utils from '../../utils';\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry';\r\n\r\nconst VEC_SIZE = 3;\r\nconst TRI_SIZE = 3;\r\nconst tmpPrev = new THREE.Vector3();\r\nconst tmpNext = new THREE.Vector3();\r\nconst tmpRes = new THREE.Vector3();\r\nconst simpleNormal = new THREE.Vector3(1.0, 0.0, 0.0);\r\nconst normalOnCut = new THREE.Vector3();\r\nconst nearRingPt = new THREE.Vector3();\r\n\r\nfunction _createExtrudedChunkGeometry(shape, ringsCount) {\r\n  const geo = new THREE.BufferGeometry();\r\n  const ptsCount = shape.length;\r\n  const totalPts = ptsCount * ringsCount;\r\n  const type = totalPts <= 65536 ? Uint16Array : Uint32Array;\r\n  const facesPerChunk = (ringsCount - 1) * ptsCount * 2;\r\n  const indices = new THREE.BufferAttribute(utils.allocateTyped(type, facesPerChunk * TRI_SIZE), 1);\r\n\r\n  let currVtxIdx = 0;\r\n  let currFaceIdx = 0;\r\n  for (let y = 0; y < ringsCount; y++) {\r\n    // faces\r\n    if (y !== ringsCount - 1) {\r\n      for (let i = 0; i < ptsCount; i++) {\r\n        const v1 = currVtxIdx + i;\r\n        const v2 = currVtxIdx + ptsCount + i;\r\n        const v3 = currVtxIdx + ptsCount + ((i + 1) % ptsCount);\r\n        const v4 = currVtxIdx + ((i + 1) % ptsCount);\r\n\r\n        indices.setXYZ(currFaceIdx * TRI_SIZE, v1, v4, v2);\r\n        currFaceIdx++;\r\n        indices.setXYZ(currFaceIdx * TRI_SIZE, v2, v4, v3);\r\n        currFaceIdx++;\r\n      }\r\n    }\r\n\r\n    currVtxIdx += ptsCount;\r\n  }\r\n\r\n  geo.setIndex(indices);\r\n  const pos = utils.allocateTyped(Float32Array, totalPts * VEC_SIZE);\r\n  geo.setAttribute('position', new THREE.BufferAttribute(pos, VEC_SIZE));\r\n\r\n  geo._positions = shape;\r\n\r\n  return geo;\r\n}\r\n\r\nclass ExtrudedObjectsGeometry extends ChunkedObjectsGeometry {\r\n  constructor(shape, ringsCount, chunksCount) {\r\n    const chunkGeo = _createExtrudedChunkGeometry(shape, ringsCount);\r\n    super(chunkGeo, chunksCount);\r\n    this._ringsCount = ringsCount;\r\n\r\n    const tmpShape = this._tmpShape = [];\r\n    for (let i = 0; i < shape.length; ++i) {\r\n      tmpShape[i] = new THREE.Vector3();\r\n    }\r\n  }\r\n\r\n  setItem(itemIdx, matrices, hasSlope = false, hasCut = false) {\r\n    const ptsCount = this._chunkGeo._positions.length;\r\n    const ringsCount = this._ringsCount;\r\n    const chunkStartIdx = ptsCount * this._ringsCount * itemIdx * VEC_SIZE;\r\n\r\n    this._setPoints(matrices, ptsCount, ringsCount, chunkStartIdx);\r\n\r\n    if (hasSlope) {\r\n      this._setSlopeNormals(ptsCount, ringsCount, chunkStartIdx);\r\n    } else {\r\n      this._setBaseNormals(ptsCount, ringsCount, chunkStartIdx);\r\n    }\r\n\r\n    if (hasCut) {\r\n      this._addCut(ptsCount, ringsCount, chunkStartIdx);\r\n    }\r\n  }\r\n\r\n  _setPoints(matrices, ptsCount, ringsCount, chunkStartIdx) {\r\n    const tmpShape = this._tmpShape;\r\n    const positions = this._positions;\r\n    const shape = this._chunkGeo._positions;\r\n\r\n    for (let i = 0, vtxIdx = chunkStartIdx; i < ringsCount; ++i) {\r\n      const mtx = matrices[i];\r\n\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpShape[j].copy(shape[j]).applyMatrix4(mtx).toArray(positions, vtxIdx);\r\n      }\r\n    }\r\n  }\r\n\r\n  _setBaseNormals(ptsCount, ringsCount, chunkStartIdx) {\r\n    const nPtsInRing = ptsCount * VEC_SIZE;\r\n\r\n    for (let i = 0, vtxIdx = chunkStartIdx; i < ringsCount; ++i, vtxIdx += nPtsInRing) {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, false);\r\n    }\r\n  }\r\n\r\n  _setSlopeNormals(ptsCount, ringsCount, chunkStartIdx) {\r\n    const normals = this._normals;\r\n    const nPtsInRing = ptsCount * VEC_SIZE;\r\n\r\n    let vtxIdx = chunkStartIdx;\r\n    // First ring\r\n    // In all cases, besides cut, second ring is coincident to first. So values of first ring's normals doesn't\r\n    // matter (In the cut case special handler will be applied later and will set them to correct values)\r\n    for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n      simpleNormal.toArray(normals, vtxIdx);\r\n    }\r\n    // second ring\r\n    // If it isn't first Item we take normals' values from the last ring of the previous item (these rings are coincident)\r\n    // else we count normals' values based on next ring information\r\n    if (vtxIdx - 2 * nPtsInRing > 0) {\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpRes.fromArray(normals, vtxIdx - 2 * nPtsInRing).toArray(normals, vtxIdx);\r\n      }\r\n    } else {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, true, +nPtsInRing);\r\n      vtxIdx += nPtsInRing;\r\n    }\r\n    // other rings\r\n    // we count normals' values based on previous ring information\r\n    for (let i = 2; i < ringsCount; ++i, vtxIdx += nPtsInRing) {\r\n      this._countNormalsInRing(ptsCount, vtxIdx, true, -nPtsInRing);\r\n    }\r\n  }\r\n\r\n  // Counting normals:\r\n  // - Slope\r\n  //   Radius changes throught part => normals aren't parallel with the plane contains section points\r\n  //   normal = vTangentInSectionPlane x vToSuchPointInPrevSection (all vectors are scaled for being 1 in length)\r\n  // - No slope\r\n  //   Radius doesn't change throught part => normals are parallel with the plane contains section points\r\n  //   normal = vToPrevPointInSection + vToNextPointInSection (all vectors are scaled for being 1 in length)\r\n  _countNormalsInRing(ptsCount, vtxIdx, isSlope, shiftToExtraPt) {\r\n    const tmpShape = this._tmpShape;\r\n    const normals = this._normals;\r\n\r\n    tmpShape[0].fromArray(this._positions, vtxIdx);\r\n    tmpShape[ptsCount - 1].fromArray(this._positions, vtxIdx + (ptsCount - 1) * VEC_SIZE);\r\n\r\n    for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n      if (j < ptsCount - 1) {\r\n        tmpShape[j + 1].fromArray(this._positions, vtxIdx + VEC_SIZE);\r\n      }\r\n\r\n      if (isSlope) {\r\n        nearRingPt.fromArray(this._positions, vtxIdx + shiftToExtraPt);\r\n\r\n        tmpPrev.subVectors(tmpShape[(j + ptsCount - 1) % ptsCount], tmpShape[(j + 1) % ptsCount]).normalize();\r\n        tmpNext.subVectors(tmpShape[j], nearRingPt).normalize();\r\n        tmpRes.crossVectors(tmpNext, tmpPrev).normalize().toArray(normals, vtxIdx);\r\n      } else {\r\n        tmpPrev.subVectors(tmpShape[j], tmpShape[(j + ptsCount - 1) % ptsCount]).normalize();\r\n        tmpNext.subVectors(tmpShape[j], tmpShape[(j + 1) % ptsCount]).normalize();\r\n        tmpRes.addVectors(tmpPrev, tmpNext).normalize().toArray(normals, vtxIdx);\r\n      }\r\n    }\r\n  }\r\n\r\n  _addCut(ptsCount, ringsCount, chunkStartIdx) {\r\n    // Nothing to do if item is flat or only line\r\n    if (ptsCount < 3 || ringsCount < 2) {\r\n      return;\r\n    }\r\n    const positions = this._positions;\r\n    const normals = this._normals;\r\n    const tmpShape = this._tmpShape;\r\n    const nPtsInRing = ptsCount * VEC_SIZE;\r\n\r\n    // Normal to the cut plane is equal to cross product of two vectors which are lying in it\r\n    tmpShape[0].fromArray(positions, chunkStartIdx);\r\n    tmpShape[1].fromArray(positions, chunkStartIdx + VEC_SIZE);\r\n    tmpShape[2].fromArray(positions, chunkStartIdx + 2 * VEC_SIZE);\r\n\r\n    tmpPrev.subVectors(tmpShape[1], tmpShape[0]).normalize();\r\n    tmpNext.subVectors(tmpShape[1], tmpShape[2]).normalize();\r\n    normalOnCut.crossVectors(tmpPrev, tmpNext).normalize();\r\n\r\n    let vtxIdx = chunkStartIdx;\r\n    // First and second rings normals' values are equal to value of normal to the cutting plane\r\n    for (let j = 0; j < ptsCount * 2; ++j, vtxIdx += VEC_SIZE) {\r\n      normalOnCut.toArray(normals, vtxIdx);\r\n    }\r\n    if (ringsCount > 2) {\r\n      // Third ring points are coincident to first ring points, but have different normals. It makes sharp angle near cut\r\n      for (let j = 0; j < ptsCount; ++j, vtxIdx += VEC_SIZE) {\r\n        tmpRes.fromArray(positions, vtxIdx - nPtsInRing).toArray(positions, vtxIdx);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ExtrudedObjectsGeometry;\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport utils from '../../utils';\r\n\r\nconst MAX_IDC_16BIT = 65535;\r\nconst VERTEX_PER_SEGMENT = 4;\r\nconst POS_SIZE = 4;\r\nconst DIR_SIZE = 3;\r\nconst COL_SIZE = 3;\r\nconst tmpColor = new THREE.Color();\r\nconst direction = new THREE.Vector3();\r\n\r\nfunction setArrayXYZ(arr, idx, x, y, z) {\r\n  arr[idx] = x;\r\n  arr[idx + 1] = y;\r\n  arr[idx + 2] = z;\r\n}\r\n\r\nfunction setArrayXYZW(arr, idx, x, y, z, w) {\r\n  arr[idx] = x;\r\n  arr[idx + 1] = y;\r\n  arr[idx + 2] = z;\r\n  arr[idx + 3] = w;\r\n}\r\n\r\nfunction getSubset(arr, startSegmentIdx, segmentsCount, elemSize) {\r\n  const start = startSegmentIdx * VERTEX_PER_SEGMENT;\r\n  const end = start + segmentsCount * VERTEX_PER_SEGMENT;\r\n  return arr.subarray(start * elemSize, end * elemSize);\r\n}\r\n\r\n/**\r\n * This class represents lines geometry which consists of screen-aligned narrow quad of variable width.\r\n *\r\n * @constructor\r\n *\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n * collision geometry.\r\n */\r\n\r\nclass ThickLinesGeometry extends THREE.BufferGeometry {\r\n  constructor(segmentsCount) {\r\n    super();\r\n    this._initVertices(segmentsCount);\r\n  }\r\n\r\n  startUpdate() {\r\n    return true;\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.getAttribute('position').needsUpdate = true;\r\n    this.getAttribute('color').needsUpdate = true;\r\n    this.getAttribute('alphaColor').needsUpdate = true;\r\n    this.getAttribute('direction').needsUpdate = true;\r\n  }\r\n\r\n  setColor(segmentIdx, colorVal) {\r\n    tmpColor.set(colorVal);\r\n    let idx = segmentIdx * VERTEX_PER_SEGMENT * COL_SIZE;\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b);\r\n    idx += COL_SIZE;\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b);\r\n    idx += COL_SIZE;\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b);\r\n    idx += COL_SIZE;\r\n    setArrayXYZ(this._colors, idx, tmpColor.r, tmpColor.g, tmpColor.b);\r\n  }\r\n\r\n  setSegment(segmentIdx, pos1, pos2) {\r\n    direction.subVectors(pos1, pos2);\r\n    direction.normalize();\r\n    const positions = this._positions;\r\n    const directions = this._directions;\r\n    let idx = segmentIdx * VERTEX_PER_SEGMENT * POS_SIZE;\r\n    let dirIdx = segmentIdx * VERTEX_PER_SEGMENT * DIR_SIZE;\r\n    setArrayXYZW(positions, idx, pos1.x, pos1.y, pos1.z, 0.5);\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z);\r\n    idx += POS_SIZE;\r\n    dirIdx += DIR_SIZE;\r\n    setArrayXYZW(positions, idx, pos1.x, pos1.y, pos1.z, -0.5);\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z);\r\n    idx += POS_SIZE;\r\n    dirIdx += DIR_SIZE;\r\n    setArrayXYZW(positions, idx, pos2.x, pos2.y, pos2.z, 0.5);\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z);\r\n    idx += POS_SIZE;\r\n    dirIdx += DIR_SIZE;\r\n    setArrayXYZW(positions, idx, pos2.x, pos2.y, pos2.z, -0.5);\r\n    setArrayXYZ(directions, dirIdx, direction.x, direction.y, direction.z);\r\n  }\r\n\r\n  setOpacity(startSegIdx, endSegIdx, value) {\r\n    const start = startSegIdx * VERTEX_PER_SEGMENT;\r\n    const end = endSegIdx * VERTEX_PER_SEGMENT;\r\n    _.fill(this.alpha, value, end, start);\r\n    this.getAttribute('alphaColor').needsUpdate = true;\r\n  }\r\n\r\n  getSubsetSegments(startSegmentIdx, segmentsCount) {\r\n    return [\r\n      getSubset(this._positions, startSegmentIdx, segmentsCount, POS_SIZE),\r\n      getSubset(this._directions, startSegmentIdx, segmentsCount, DIR_SIZE),\r\n    ];\r\n  }\r\n\r\n  getSubsetColors(startSegmentIdx, segmentsCount) {\r\n    return getSubset(this._colors, startSegmentIdx, segmentsCount, COL_SIZE);\r\n  }\r\n\r\n  getSubsetOpacities(startSegmentIdx, segmentsCount) {\r\n    return getSubset(this._alpha, startSegmentIdx, segmentsCount, 1);\r\n  }\r\n\r\n  getNumVertexPerSegment() {\r\n    return VERTEX_PER_SEGMENT;\r\n  }\r\n\r\n  getPositionSize() {\r\n    return POS_SIZE;\r\n  }\r\n\r\n  setSegments(startSegmentIdx, positions) {\r\n    const startPos = startSegmentIdx * VERTEX_PER_SEGMENT * POS_SIZE;\r\n    if (positions instanceof Array && positions.length === 2) {\r\n      this._positions.set(positions[0], startPos);\r\n      const startDir = startSegmentIdx * VERTEX_PER_SEGMENT * DIR_SIZE;\r\n      this._directions.set(positions[1], startDir); // dirs are geo part of vertex\r\n    } else {\r\n      this._positions.set(positions, startPos);\r\n    }\r\n  }\r\n\r\n  setColors(startSegmentIdx, colors) {\r\n    const start = startSegmentIdx * VERTEX_PER_SEGMENT * COL_SIZE;\r\n    this._colors.set(colors, start);\r\n  }\r\n\r\n  _initVertices(segmentsCount) {\r\n    this._buffersSize = segmentsCount * VERTEX_PER_SEGMENT;\r\n    const pointsCount = this._buffersSize;\r\n    const use32bitIndex = pointsCount > MAX_IDC_16BIT;\r\n    this._index = utils.allocateTyped(use32bitIndex ? Uint32Array : Uint16Array, segmentsCount * 6);\r\n    this._positions = utils.allocateTyped(Float32Array, pointsCount * POS_SIZE);\r\n    this._colors = utils.allocateTyped(Float32Array, pointsCount * COL_SIZE);\r\n    this._directions = utils.allocateTyped(Float32Array, pointsCount * DIR_SIZE);\r\n    const alpha = this._alpha = utils.allocateTyped(Float32Array, pointsCount);\r\n    _.fill(alpha, 1.0);\r\n\r\n    const index = this._index;\r\n    let indexOffset = 0;\r\n    let pointOffset = 0;\r\n    for (let j = 0; j < segmentsCount; j++, indexOffset += 6, pointOffset += VERTEX_PER_SEGMENT) {\r\n      index[indexOffset] = pointOffset;\r\n      index[indexOffset + 1] = pointOffset + 1;\r\n      index[indexOffset + 2] = pointOffset + 3;\r\n      index[indexOffset + 3] = pointOffset;\r\n      index[indexOffset + 4] = pointOffset + 2;\r\n      index[indexOffset + 5] = pointOffset + 3;\r\n    }\r\n    this.setIndex(new THREE.BufferAttribute(this._index, 1));\r\n\r\n    this.setAttribute('position', new THREE.BufferAttribute(this._positions, POS_SIZE));\r\n    this.setAttribute('color', new THREE.BufferAttribute(this._colors, COL_SIZE));\r\n    this.setAttribute('alphaColor', new THREE.BufferAttribute(alpha, 1));\r\n    this.setAttribute('direction', new THREE.BufferAttribute(this._directions, DIR_SIZE));\r\n  }\r\n}\r\n\r\nexport default ThickLinesGeometry;\r\n","import * as THREE from 'three';\r\nimport BaseLinesGeometry from './ThickLinesGeometry';\r\n\r\n/**\r\n * This class represents geometry which consists lines. This can build bounding volumes\r\n * @constructor\r\n *\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n */\r\nclass LinesGeometry extends BaseLinesGeometry {\r\n  startUpdate() {\r\n    return true;\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    const { boundingBox } = this;\r\n    // Build bounding sphere\r\n    let radiusSquared = 0.0;\r\n    const center = new THREE.Vector3();\r\n    if (boundingBox) {\r\n      boundingBox.getCenter(center);\r\n    }\r\n    const positions = this._positions;\r\n    const sphere = this.boundingSphere || new THREE.Sphere();\r\n    const size = this._positions.length;\r\n    const pos = new THREE.Vector3();\r\n    const posSize = this.getPositionSize();\r\n    for (let i = 0; i < size; i += posSize) {\r\n      pos.set(positions[i], positions[i + 1], positions[i + 2]);\r\n      const lengthSquared = center.distanceToSquared(pos);\r\n      if (radiusSquared < lengthSquared) {\r\n        radiusSquared = lengthSquared;\r\n      }\r\n    }\r\n    sphere.set(center, Math.sqrt(radiusSquared));\r\n    this.boundingSphere = sphere;\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    const positions = this._positions;\r\n    const box = new THREE.Box3();\r\n    const size = this._positions.length;\r\n    const tmpVec = new THREE.Vector3();\r\n    const posSize = this.getPositionSize();\r\n    for (let i = 0; i < size; i += posSize) {\r\n      tmpVec.set(positions[i], positions[i + 1], positions[i + 2]);\r\n      box.expandByPoint(tmpVec);\r\n    }\r\n    this.boundingBox = box;\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate();\r\n    this.computeBoundingSphere();\r\n  }\r\n}\r\n\r\nexport default LinesGeometry;\r\n","import * as THREE from 'three';\r\nimport utils from '../../utils';\r\nimport gfxutils from '../gfxutils';\r\nimport ChunkedObjectsGeometry from './ChunkedObjectsGeometry';\r\n\r\nconst VEC_SIZE = 3;\r\nconst tmpVector = new THREE.Vector3();\r\nconst normMtx = new THREE.Matrix3();\r\n\r\nclass CylinderCollisionGeo extends ChunkedObjectsGeometry {\r\n  constructor(instanceCount, polyComplexity) {\r\n    const cylGeometry = new THREE.CylinderGeometry(1, 1, 1.0, Math.max(3, polyComplexity), 2, true);\r\n    super(cylGeometry, instanceCount);\r\n\r\n    const chunkSize = this._chunkSize;\r\n    this._chunkPos = this._chunkGeo.attributes.position.array;\r\n    this._chunkNorms = this._chunkGeo.attributes.normal.array;\r\n    this._tmpVector = utils.allocateTyped(Float32Array, chunkSize * VEC_SIZE);\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos, itemRad) {\r\n    const chunkSize = this._chunkSize;\r\n    const itemOffset = chunkSize * itemIdx * VEC_SIZE;\r\n\r\n    const tmpArray = this._tmpVector;\r\n    const geoPos = this._chunkPos;\r\n    const geoNorm = this._chunkNorms;\r\n\r\n    const mtx1 = gfxutils.calcCylinderMatrix(botPos, topPos, itemRad);\r\n    normMtx.getNormalMatrix(mtx1);\r\n    let idx;\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE;\r\n      tmpVector.fromArray(geoPos, idx);\r\n      tmpVector.applyMatrix4(mtx1);\r\n      tmpVector.toArray(tmpArray, idx);\r\n    }\r\n    this._positions.set(tmpArray, itemOffset);\r\n\r\n    for (let i = 0; i < chunkSize; ++i) {\r\n      idx = i * VEC_SIZE;\r\n      tmpVector.fromArray(geoNorm, idx);\r\n      tmpVector.applyMatrix3(normMtx);\r\n      tmpVector.toArray(tmpArray, idx);\r\n    }\r\n    this._normals.set(tmpArray, itemOffset);\r\n  }\r\n}\r\nexport default CylinderCollisionGeo;\r\n","import LinesGeometry from './LinesGeometry';\r\nimport CylinderCollisionGeo from './CylinderCollisionGeo';\r\n\r\nconst COLLISION_RAD = 0.1;\r\n\r\n/**\r\n * This class represents geometry which consists of separate chunks.\r\n * Each chunk has same index and similar geometry with equal points and faces count.\r\n * Each chunk has by default only one color.\r\n * @constructor\r\n *\r\n * @param {number}  chunksCount     Total chunks count.\r\n * @param {number}  segmentsCount   Number of segments per chunk.\r\n * @param {boolean} enableCollision Enable or disable collision where each segment is\r\n *                                  a collidable cylinder.\r\n * collision geometry.\r\n */\r\nclass ChunkedLinesGeometry extends LinesGeometry {\r\n  constructor(chunksCount, segmentsCount, enableCollision) {\r\n    super(chunksCount * segmentsCount);\r\n    this._init(segmentsCount);\r\n    this._collisionGeo = enableCollision ? new CylinderCollisionGeo(chunksCount * segmentsCount, 3) : null;\r\n  }\r\n\r\n  startUpdate() {\r\n    return true;\r\n  }\r\n\r\n  computeBoundingSphere() {\r\n    const collisionGeo = this._collisionGeo;\r\n    if (collisionGeo) {\r\n      collisionGeo.computeBoundingSphere();\r\n      this.boundingSphere = collisionGeo.boundingSphere;\r\n      return;\r\n    }\r\n    super.computeBoundingSphere();\r\n  }\r\n\r\n  computeBoundingBox() {\r\n    const collisionGeo = this._collisionGeo;\r\n    if (collisionGeo) {\r\n      collisionGeo.computeBoundingBox();\r\n      this.boundingBox = collisionGeo.boundingBox;\r\n      return;\r\n    }\r\n    super.computeBoundingBox();\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const collisionGeo = this._collisionGeo;\r\n    if (!collisionGeo) {\r\n      return;\r\n    }\r\n    const segCount = this._chunkSize;\r\n    this._collisionGeo.raycast(raycaster, intersects);\r\n    for (let i = 0, n = intersects.length; i < n; ++i) {\r\n      let { chunkIdx } = intersects[i];\r\n      if (chunkIdx === undefined) {\r\n        continue;\r\n      }\r\n      chunkIdx = (chunkIdx / segCount) | 0;\r\n      intersects[i].chunkIdx = chunkIdx;\r\n    }\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    const chunkSize = this._chunkSize;\r\n    for (let i = chunkIdx * chunkSize, end = i + chunkSize; i < end; ++i) {\r\n      super.setColor(i, colorVal);\r\n    }\r\n  }\r\n\r\n  setSegment(chunkIdx, segIdx, pos1, pos2) {\r\n    const chunkSize = this._chunkSize;\r\n    const idx = chunkIdx * chunkSize + segIdx;\r\n    super.setSegment(idx, pos1, pos2);\r\n    if (this._collisionGeo) {\r\n      this._collisionGeo.setItem(chunkIdx * chunkSize + segIdx, pos1, pos2, COLLISION_RAD);\r\n    }\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate();\r\n    this.computeBoundingSphere();\r\n  }\r\n\r\n  setOpacity(chunkIndices, value) {\r\n    const chunkSize = this._chunkSize;\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const left = chunkIndices[i] * chunkSize;\r\n      super.setOpacity(left, left + chunkSize - 1, value);\r\n    }\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const instanceCount = chunkIndices.length;\r\n    const chunkSize = this._chunkSize;\r\n    const subset = new ChunkedLinesGeometry(instanceCount, chunkSize, false);\r\n    for (let i = 0, n = chunkIndices.length; i < n; ++i) {\r\n      const dstPtOffset = i * chunkSize;\r\n      const startSegIdx = chunkIndices[i] * chunkSize;\r\n      subset.setSegments(dstPtOffset, this.getSubsetSegments(startSegIdx, chunkSize));\r\n      subset.setColors(dstPtOffset, this.getSubsetColors(startSegIdx, chunkSize));\r\n    }\r\n\r\n    subset.boundingSphere = this.boundingSphere;\r\n    subset.boundingBox = this.boundingBox;\r\n    return [subset];\r\n  }\r\n\r\n  _init(chunkSize) {\r\n    this._chunkSize = chunkSize;\r\n  }\r\n}\r\n\r\nexport default ChunkedLinesGeometry;\r\n","import * as THREE from 'three';\r\nimport LinesGeometry from './LinesGeometry';\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry';\r\n\r\nconst COLLISION_RAD = 0.3;\r\nconst tmpVector = new THREE.Vector3();\r\n\r\nclass TwoColorLinesGeometry extends LinesGeometry {\r\n  constructor(segmentsCount) {\r\n    super(segmentsCount * 2);\r\n    this._init(segmentsCount);\r\n    this._collisionGeo = new Simple2CCylindersGeometry(segmentsCount, 3);\r\n  }\r\n\r\n  setItem(itemIdx, botPos, topPos) {\r\n    this._collisionGeo.setItem(itemIdx, botPos, topPos, COLLISION_RAD);\r\n    const offset = 2 * itemIdx;// there are two points per segment\r\n    tmpVector.lerpVectors(botPos, topPos, 0.5);\r\n    super.setSegment(offset, botPos, tmpVector);\r\n    super.setSegment(offset + 1, tmpVector, topPos);\r\n  }\r\n\r\n  setColor(itemIdx, colorVal1, colorVal2) {\r\n    const offset = 2 * itemIdx;// there are two points per segment\r\n    super.setColor(offset, colorVal1);\r\n    super.setColor(offset + 1, colorVal2);\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    if (this._collisionGeo) {\r\n      this._collisionGeo.raycast(raycaster, intersects);\r\n    }\r\n  }\r\n\r\n  getSubset(segmentIndices) {\r\n    const instanceCount = segmentIndices.length;\r\n    const subset = new TwoColorLinesGeometry(instanceCount, false);\r\n    for (let i = 0, n = instanceCount; i < n; ++i) {\r\n      const startSegIdx = segmentIndices[i];\r\n      subset.setSegments(i, this.getSubsetSegments(startSegIdx, 1));\r\n      subset.setColors(i, this.getSubsetColors(startSegIdx, 1));\r\n    }\r\n\r\n    subset.boundingSphere = this.boundingSphere;\r\n    subset.boundingBox = this.boundingBox;\r\n    return [subset];\r\n  }\r\n\r\n  _init(segmentsCount) {\r\n    this._segCounts = segmentsCount * 2;\r\n  }\r\n}\r\n// (???)parent = LinesGeometry.prototype;\r\n\r\nexport default TwoColorLinesGeometry;\r\n","import * as THREE from 'three';\r\nimport ChunkedLinesGeometry from './ChunkedLinesGeometry';\r\nimport SphereCollisionGeo from './SphereCollisionGeo';\r\n\r\nconst vectors = [\r\n  new THREE.Vector3(1, 0, 0),\r\n  new THREE.Vector3(-1, 0, 0),\r\n  new THREE.Vector3(0, 1, 0),\r\n  new THREE.Vector3(0, -1, 0),\r\n  new THREE.Vector3(0, 0, 1),\r\n  new THREE.Vector3(0, 0, -1),\r\n];\r\nconst vecCount = vectors.length;\r\nconst tempPos1 = new THREE.Vector3();\r\nconst tempPos2 = new THREE.Vector3();\r\n\r\nclass CrossGeometry extends SphereCollisionGeo(ChunkedLinesGeometry) {\r\n  constructor(chunksCount) {\r\n    super(chunksCount, chunksCount, (vecCount / 2) | 0, false);\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, itemRad) {\r\n    this.setSphere(itemIdx, itemPos, itemRad);\r\n\r\n    for (let i = 0; i < vecCount / 2; ++i) {\r\n      const first = i * 2;\r\n      tempPos1.x = itemPos.x + vectors[first].x * itemRad;\r\n      tempPos1.y = itemPos.y + vectors[first].y * itemRad;\r\n      tempPos1.z = itemPos.z + vectors[first].z * itemRad;\r\n      const second = first + 1;\r\n      tempPos2.x = itemPos.x + vectors[second].x * itemRad;\r\n      tempPos2.y = itemPos.y + vectors[second].y * itemRad;\r\n      tempPos2.z = itemPos.z + vectors[second].z * itemRad;\r\n      this.setSegment(itemIdx, i, tempPos1, tempPos2);\r\n    }\r\n  }\r\n}\r\nexport default CrossGeometry;\r\n","import * as THREE from 'three';\r\nimport utils from '../../utils';\r\n\r\nconst POS_RAD_SIZE = 4;\r\nconst COLOR_SIZE = 3;\r\nconst tmpColor = new THREE.Color();\r\n\r\n/**\r\n * This is a base class for isosurface algorithms.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\nclass IsoSurfaceGeometry extends THREE.BufferGeometry {\r\n  constructor(spheresCount, opts) {\r\n    super();\r\n\r\n    this._opts = opts;\r\n    this.zClip = this._opts.zClip;\r\n    this._posRad = utils.allocateTyped(Float32Array, spheresCount * POS_RAD_SIZE);\r\n    this._colors = utils.allocateTyped(Float32Array, spheresCount * COLOR_SIZE);\r\n  }\r\n\r\n  setItem(chunkIdx, pos, radius) {\r\n    const posRad = this._posRad;\r\n    let idx = POS_RAD_SIZE * chunkIdx;\r\n    posRad[idx++] = pos.x;\r\n    posRad[idx++] = pos.y;\r\n    posRad[idx++] = pos.z;\r\n    posRad[idx] = radius;\r\n  }\r\n\r\n  setColor(chunkIdx, colorVal) {\r\n    tmpColor.set(colorVal);\r\n    const colors = this._colors;\r\n    let idx = COLOR_SIZE * chunkIdx;\r\n    colors[idx++] = tmpColor.r;\r\n    colors[idx++] = tmpColor.g;\r\n    colors[idx] = tmpColor.b;\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate();\r\n    this.computeBoundingSphere();\r\n  }\r\n\r\n  finishUpdate() {\r\n    this._build();\r\n  }\r\n\r\n  setOpacity() {\r\n    // not implemented\r\n  }\r\n\r\n  raycast() {\r\n  }\r\n\r\n  getSubset() {\r\n    return [];\r\n  }\r\n}\r\nexport default IsoSurfaceGeometry;\r\n","import utils from '../../utils';\r\n\r\n/**\r\n * Class for marching cube\r\n * Stores 8 points and 8 float values are stored together in linear array\r\n * Int values for has intersection or not - in integer32 linear array\r\n * Int values for bits flags - in integer32 linear array\r\n *\r\n */\r\nclass IsoSurfaceMarchCube {\r\n  constructor() {\r\n    this.pointsValuesLinear = null;\r\n    this.hasIntersection = null;\r\n    this.bitsInside = null;\r\n  }\r\n\r\n  create(numCellsPerSide) {\r\n    const vx7000000 = 0x7000000;\r\n    const n3 = numCellsPerSide * numCellsPerSide * numCellsPerSide;\r\n    if (n3 > vx7000000) {\r\n      throw new Error('Too large cube dimension: lead to memory huge uasge');\r\n    }\r\n    this.pointsValuesLinear = utils.allocateTyped(Float32Array, (2 << (2 + 2)) * n3);\r\n    this.hasIntersection = utils.allocateTyped(Int32Array, n3);\r\n    this.bitsInside = utils.allocateTyped(Int32Array, n3);\r\n    return 0;\r\n  }\r\n\r\n  destroy() {\r\n    this.bitsInside = null;\r\n    this.hasIntersection = null;\r\n    this.pointsValuesLinear = null;\r\n  }\r\n}\r\n\r\n/* eslint-disable no-magic-numbers */\r\nIsoSurfaceMarchCube.prototype.striIndicesMarchCube = [\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1,\r\n  8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1,\r\n  3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1,\r\n  4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1,\r\n  4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1,\r\n  9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1,\r\n  10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1,\r\n  5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1,\r\n  5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1,\r\n  8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1,\r\n  2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1,\r\n  2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1,\r\n  11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1,\r\n  5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1,\r\n  11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1,\r\n  11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1,\r\n  2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1,\r\n  6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1,\r\n  3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1,\r\n  6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1,\r\n  6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1,\r\n  8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1,\r\n  7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1,\r\n  3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1,\r\n  0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\r\n  9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\r\n  8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1,\r\n  5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1,\r\n  0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1,\r\n  6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1,\r\n  10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1,\r\n  1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1,\r\n  0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1,\r\n  3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1,\r\n  6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1,\r\n  9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\r\n  8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1,\r\n  3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1,\r\n  6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1,\r\n  10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1,\r\n  10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1,\r\n  2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1,\r\n  7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1,\r\n  7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1,\r\n  2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1,\r\n  1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1,\r\n  11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1,\r\n  8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1,\r\n  0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1,\r\n  7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1,\r\n  7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1,\r\n  10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1,\r\n  0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1,\r\n  7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1,\r\n  6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\r\n  6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1,\r\n  4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1,\r\n  10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1,\r\n  8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1,\r\n  1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1,\r\n  10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1,\r\n  10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\r\n  11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1,\r\n  9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\r\n  6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1,\r\n  7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1,\r\n  3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1,\r\n  7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1,\r\n  3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1,\r\n  6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1,\r\n  9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1,\r\n  1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1,\r\n  4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1,\r\n  7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1,\r\n  6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\r\n  0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1,\r\n  6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1,\r\n  0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1,\r\n  11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1,\r\n  6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1,\r\n  5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1,\r\n  9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1,\r\n  1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1,\r\n  10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1,\r\n  0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1,\r\n  10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1,\r\n  11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1,\r\n  9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1,\r\n  7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1,\r\n  2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\r\n  9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1,\r\n  9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1,\r\n  1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n  5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1,\r\n  0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1,\r\n  10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1,\r\n  2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1,\r\n  0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1,\r\n  0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1,\r\n  9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1,\r\n  5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1,\r\n  5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1,\r\n  8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1,\r\n  9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\r\n  1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1,\r\n  3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1,\r\n  4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1,\r\n  9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1,\r\n  11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n  11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1,\r\n  2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1,\r\n  9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1,\r\n  3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1,\r\n  1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1,\r\n  4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1,\r\n  0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,\r\n  9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1,\r\n  1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n];\r\n/* eslint-enable no-magic-numbers */\r\n\r\nexport default IsoSurfaceMarchCube;\r\n","import * as THREE from 'three';\r\nimport IsoSurfaceMarchCube from './IsoSurfaceMarchCube';\r\nimport utils from '../../utils';\r\n\r\nconst edgeTable = [\r\n  0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\r\n  0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\r\n  0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\r\n  0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\r\n  0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\r\n  0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\r\n  0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\r\n  0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\r\n  0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\r\n  0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\r\n  0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\r\n  0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\r\n  0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\r\n  0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\r\n  0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\r\n  0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\r\n  0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\r\n  0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\r\n  0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\r\n  0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\r\n  0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\r\n  0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\r\n  0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\r\n  0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\r\n  0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\r\n  0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\r\n  0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\r\n  0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\r\n  0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\r\n  0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\r\n  0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\r\n  0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0];\r\n\r\nfunction _voxelGradientFast(v, point, grad) {\r\n  const g = v.getValue(point.x, point.y, point.z);\r\n  grad.set(g[0], g[1], g[2]);\r\n}\r\n\r\n// Helper class GridCell\r\nclass GridCell {\r\n  constructor() {\r\n    this._arrSize = 8;\r\n    this.p = new Array(this._arrSize);\r\n    this.g = new Array(this._arrSize);\r\n    this.val = new Array(this._arrSize);\r\n    for (let i = 0; i < this._arrSize; ++i) {\r\n      this.p[i] = new THREE.Vector3();\r\n      this.g[i] = new THREE.Vector3();\r\n    }\r\n    this.cubeIndex = 0;\r\n  }\r\n}\r\n\r\n// Helper class Triangle\r\nclass Triangle {\r\n  constructor() {\r\n    this.a = {\r\n      p: new THREE.Vector3(),\r\n      n: new THREE.Vector3(),\r\n    };\r\n\r\n    this.b = {\r\n      p: new THREE.Vector3(),\r\n      n: new THREE.Vector3(),\r\n    };\r\n\r\n    this.c = {\r\n      p: new THREE.Vector3(),\r\n      n: new THREE.Vector3(),\r\n    };\r\n  }\r\n}\r\n\r\nfunction createArray(arrSize) {\r\n  const arr = new Array(arrSize);\r\n  for (let i = 0; i < arrSize; ++i) {\r\n    arr[i] = new THREE.Vector3();\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\nclass IsoSurface {\r\n  constructor() {\r\n    this._numTriangles = 0;\r\n    this._numVertices = 0;\r\n    this._position = [];\r\n    this._normals = [];\r\n    this._colors = null;\r\n    this._indices = [];\r\n    this._volumetricData = null;\r\n    this._xAxis = new THREE.Vector3();\r\n    this._yAxis = new THREE.Vector3();\r\n    this._zAxis = new THREE.Vector3();\r\n    this._xDir = new THREE.Vector3();\r\n    this._yDir = new THREE.Vector3();\r\n    this._zDir = new THREE.Vector3();\r\n  }\r\n\r\n  _prepareAxesAndDirs() {\r\n    const volData = this._volumetricData;\r\n\r\n    const cellSize = volData.getCellSize();\r\n\r\n    // calculate cell axes\r\n    const xAxis = this._xAxis;\r\n    const yAxis = this._yAxis;\r\n    const zAxis = this._zAxis;\r\n    const xDir = this._xDir;\r\n    const yDir = this._yDir;\r\n    const zDir = this._zDir;\r\n\r\n    xAxis.set(cellSize.x, 0, 0);\r\n    yAxis.set(0, cellSize.y, 0);\r\n    zAxis.set(0, 0, cellSize.z);\r\n\r\n    xDir.set(1, 0, 0);\r\n    yDir.set(0, 1, 0);\r\n    zDir.set(0, 0, 1);\r\n\r\n    // flip normals if coordinate system is in the wrong handedness\r\n    const tmp = new THREE.Vector3();\r\n    tmp.crossVectors(xDir, yDir);\r\n    if (tmp.dot(zDir) < 0) {\r\n      xDir.negate();\r\n      yDir.negate();\r\n      zDir.negate();\r\n    }\r\n\r\n    // check that the grid is in the all-positive octant of the coordinate system\r\n    if (xDir.x < 0 || xDir.y < 0 || xDir.z < 0\r\n      || yDir.x < 0 || yDir.y < 0 || yDir.z < 0\r\n      || zDir.x < 0 || zDir.y < 0 || zDir.z < 0) {\r\n      return false;\r\n    }\r\n\r\n    // check that the grid is axis-aligned\r\n    const notZero = (axe) => Math.abs(axe) > Number.EPSILON;\r\n    return !(notZero(xAxis.y) || notZero(xAxis.z)\r\n          || notZero(yAxis.x) || notZero(yAxis.z)\r\n          || notZero(zAxis.x) || notZero(zAxis.y));\r\n  }\r\n\r\n  _vertexInterp(isoLevel, grid, ind1, ind2, vertex, normal) {\r\n    const p1 = grid.p[ind1];\r\n    const p2 = grid.p[ind2];\r\n    const n1 = grid.g[ind1];\r\n    const n2 = grid.g[ind2];\r\n    const valP1 = grid.val[ind1];\r\n    const valP2 = grid.val[ind2];\r\n    const isoDiffP1 = isoLevel - valP1;\r\n    const diffValP2P1 = valP2 - valP1;\r\n\r\n    let mu = 0.0;\r\n\r\n    if (Math.abs(diffValP2P1) > 0.0) {\r\n      mu = isoDiffP1 / diffValP2P1;\r\n    }\r\n    mu = mu > 1.0 ? 1.0 : mu;\r\n    vertex.lerpVectors(p1, p2, mu);\r\n    normal.lerpVectors(n1, n2, mu);\r\n  }\r\n\r\n  static _triTable = IsoSurfaceMarchCube.prototype.striIndicesMarchCube;\r\n\r\n  static _arrSize = 12;\r\n\r\n  static _firstIndices = [0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3];\r\n\r\n  static _secondIndices = [1, 2, 3, 0, 5, 6, 7, 4, 4, 5, 6, 7];\r\n\r\n  static _vertexList = createArray(IsoSurface._arrSize);\r\n\r\n  static _normalList = createArray(IsoSurface._arrSize);\r\n\r\n  _polygonize(grid, isoLevel, triangles) {\r\n    const { cubeIndex } = grid;\r\n    let i = 0;\r\n    const arrSize = IsoSurface._arrSize;\r\n    const firstIndices = IsoSurface._firstIndices;\r\n    const secondIndices = IsoSurface._secondIndices;\r\n    const vertexList = IsoSurface._vertexList;\r\n    const normalList = IsoSurface._normalList;\r\n\r\n    for (; i < arrSize; ++i) {\r\n      if (edgeTable[cubeIndex] & (1 << i)) {\r\n        this._vertexInterp(\r\n          isoLevel,\r\n          grid,\r\n          firstIndices[i],\r\n          secondIndices[i],\r\n          vertexList[i],\r\n          normalList[i],\r\n        );\r\n      }\r\n    }\r\n\r\n    let triCount = 0;\r\n    const triTblIdx = cubeIndex * 16;\r\n    const triTable = IsoSurface._triTable;\r\n\r\n    for (i = 0; triTable[triTblIdx + i] !== -1; i += 3) {\r\n      triangles[triCount].a.p.copy(vertexList[triTable[triTblIdx + i]]);\r\n      triangles[triCount].a.n.copy(normalList[triTable[triTblIdx + i]]);\r\n\r\n      triangles[triCount].b.p.copy(vertexList[triTable[triTblIdx + i + 1]]);\r\n      triangles[triCount].b.n.copy(normalList[triTable[triTblIdx + i + 1]]);\r\n\r\n      triangles[triCount].c.p.copy(vertexList[triTable[triTblIdx + i + 2]]);\r\n      triangles[triCount].c.n.copy(normalList[triTable[triTblIdx + i + 2]]);\r\n      ++triCount;\r\n    }\r\n\r\n    return triCount;\r\n  }\r\n\r\n  _doGridPosNorms(isoValue, step, appendSimple) {\r\n    const vol = this._volumetricData;\r\n    const volData = this._volumetricData.getData();\r\n    const dim = vol.getDimensions();\r\n    const xSize = dim[0];\r\n    const ySize = dim[1];\r\n    const zSize = dim[2];\r\n    const stepX = step * vol.getStrideX();\r\n    const stepY = step * vol.getStrideY();\r\n    const stepZ = step * vol.getStrideZ();\r\n\r\n    const gc = new GridCell();\r\n    const gcVal = gc.val;\r\n    const gcValSize = gc.val.length;\r\n    const additions = [\r\n      new THREE.Vector3(0, 0, 0), // 0\r\n      new THREE.Vector3(step, 0, 0), // 1\r\n      new THREE.Vector3(step, step, 0), // 2\r\n      new THREE.Vector3(0, step, 0), // 3\r\n      new THREE.Vector3(0, 0, step), // 4\r\n      new THREE.Vector3(step, 0, step), // 5\r\n      new THREE.Vector3(step, step, step), // 6\r\n      new THREE.Vector3(0, step, step), // 7\r\n    ];\r\n\r\n    const tmpTriCount = 5;\r\n    const triangles = new Array(tmpTriCount);\r\n    for (let j = 0; j < tmpTriCount; ++j) {\r\n      triangles[j] = new Triangle();\r\n    }\r\n\r\n    let appendVertex;\r\n    const self = this;\r\n    const positions = this._position;\r\n    const normals = this._normals;\r\n    if (appendSimple) {\r\n      // Special case for axis-aligned grid with positive unit vector normals\r\n      appendVertex = (function () {\r\n        const axis = new THREE.Vector3(self._xAxis.x, self._yAxis.y, self._zAxis.z);\r\n        return function (triVertex) {\r\n          const vertex = triVertex.p.clone();\r\n          vertex.multiply(axis);\r\n          positions.push(vertex.add(self._origin));\r\n          normals.push(triVertex.n.clone());\r\n        };\r\n      }());\r\n    } else {\r\n      appendVertex = (function () {\r\n        const posMtx = new THREE.Matrix3();\r\n        posMtx.set(\r\n          self._xAxis.x,\r\n          self._yAxis.x,\r\n          self._zAxis.x,\r\n          self._xAxis.y,\r\n          self._yAxis.y,\r\n          self._zAxis.y,\r\n          self._xAxis.z,\r\n          self._yAxis.z,\r\n          self._zAxis.z,\r\n        );\r\n        const normMtx = new THREE.Matrix3();\r\n        normMtx.set(\r\n          self._xDir.x,\r\n          self._yDir.x,\r\n          self._zDir.x,\r\n          self._xDir.y,\r\n          self._yDir.y,\r\n          self._zDir.y,\r\n          self._xDir.z,\r\n          self._yDir.z,\r\n          self._zDir.z,\r\n        );\r\n\r\n        return function (triVertex) {\r\n          positions.push(triVertex.p.clone().applyMatrix3(posMtx).add(self._origin));\r\n          normals.push(triVertex.n.clone().applyMatrix3(normMtx));\r\n        };\r\n      }());\r\n    }\r\n    const indices = this._indices;\r\n\r\n    let globTriCount = 0;\r\n\r\n    for (let z = 0; z < (zSize - step); z += step) {\r\n      for (let y = 0; y < (ySize - step); y += step) {\r\n        let idx = vol.getDirectIdx(0, y, z);\r\n        for (let x = 0; x < (xSize - step); x += step, idx += stepX) {\r\n          /* eslint-disable no-multi-spaces */\r\n          /* eslint-disable computed-property-spacing */\r\n          gcVal[0] = volData[idx];\r\n          gcVal[1] = volData[idx + stepX];\r\n          gcVal[3] = volData[idx + stepY];\r\n          gcVal[2] = volData[idx + stepX + stepY];\r\n          gcVal[4] = volData[idx + stepZ];\r\n          gcVal[5] = volData[idx + stepX + stepZ];\r\n          gcVal[7] = volData[idx + stepY + stepZ];\r\n          gcVal[6] = volData[idx + stepX + stepY + stepZ];\r\n          /* eslint-enable no-multi-spaces */\r\n          /* eslint-enable computed-property-spacing */\r\n\r\n          // Determine the index into the edge table which\r\n          // tells us which vertices are inside of the surface\r\n          let cubeIndex = 0;\r\n          let i = 0;\r\n          for (; i < gcValSize; ++i) {\r\n            if (gcVal[i] < isoValue) {\r\n              cubeIndex |= (1 << i);\r\n            }\r\n          }\r\n\r\n          if (edgeTable[cubeIndex] === 0) {\r\n            continue;\r\n          }\r\n\r\n          gc.cubeIndex = cubeIndex;\r\n          for (i = 0; i < gcValSize; ++i) {\r\n            gc.p[i].set(x + additions[i].x, y + additions[i].y, z + additions[i].z);\r\n            _voxelGradientFast(this._gradient, gc.p[i], gc.g[i]);\r\n          }\r\n\r\n          // calculate vertices and facets for this cube,\r\n          // calculate normals by interpolating between the negated\r\n          // normalized volume gradients for the 8 reference voxels\r\n          const triCount = this._polygonize(gc, isoValue, triangles);\r\n          globTriCount += triCount;\r\n\r\n          // append triangles using different techniques\r\n          for (i = 0; i < triCount; ++i) {\r\n            indices.push(this._numTriangles * 3);\r\n            indices.push(this._numTriangles * 3 + 1);\r\n            indices.push(this._numTriangles * 3 + 2);\r\n            ++this._numTriangles;\r\n\r\n            appendVertex(triangles[i].a);\r\n            appendVertex(triangles[i].b);\r\n            appendVertex(triangles[i].c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return globTriCount;\r\n  }\r\n\r\n  compute(volData, origin, isoValue, step) {\r\n    this._volumetricData = volData;\r\n    this._origin = origin;\r\n\r\n    this._gradient = volData.computeGradient();\r\n\r\n    this._doGridPosNorms(isoValue, step, this._prepareAxesAndDirs());\r\n  }\r\n\r\n  _remapIndices(vertexMap, idcCount) {\r\n    const indices = this._indices;\r\n    const newIndices = utils.allocateTyped(Uint32Array, idcCount);\r\n    for (let i = 0; i < idcCount; ++i) {\r\n      indices[i] = vertexMap[indices[i]];\r\n      newIndices[i] = indices[i];\r\n    }\r\n    this._indices = newIndices;\r\n  }\r\n\r\n  _remapVertices(vertices, normals, count) {\r\n    const newPositions = utils.allocateTyped(Float32Array, count * 3);\r\n    const newNormals = utils.allocateTyped(Float32Array, count * 3);\r\n    for (let i = 0; i < count; ++i) {\r\n      const pos = vertices[i];\r\n      newPositions[i * 3] = pos.x;\r\n      newPositions[i * 3 + 1] = pos.y;\r\n      newPositions[i * 3 + 2] = pos.z;\r\n      const norm = normals[i].normalize();\r\n      newNormals[i * 3] = norm.x;\r\n      newNormals[i * 3 + 1] = norm.y;\r\n      newNormals[i * 3 + 2] = norm.z;\r\n    }\r\n    this._position = newPositions;\r\n    this._normals = newNormals;\r\n  }\r\n\r\n  vertexFusion(offset, len) {\r\n    const faceVer = this._indices.length;\r\n    const vertices = this._position;\r\n    const normals = this._normals;\r\n    const oldVerCount = vertices.length | 0;\r\n    if (faceVer === 0 || oldVerCount === 0) {\r\n      return;\r\n    }\r\n    const vMap = utils.allocateTyped(Uint32Array, oldVerCount);\r\n    vMap[0] = 0;\r\n    let newVer = 1;\r\n\r\n    let i = 1;\r\n    for (; i < oldVerCount; ++i) {\r\n      const start = newVer - offset < 0 ? 0 : newVer - offset;\r\n      const end = start + len > newVer ? newVer : start + len;\r\n      let matchedIndex = -1;\r\n\r\n      for (let j = start; j < end; ++j) {\r\n        if (Math.abs(vertices[i] - vertices[j]) < Number.EPSILON) {\r\n          matchedIndex = j;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (matchedIndex !== -1) {\r\n        vMap[i] = matchedIndex;\r\n      } else {\r\n        vertices[newVer].copy(vertices[i]);\r\n        normals[newVer].copy(normals[i]);\r\n        vMap[i] = newVer;\r\n        ++newVer;\r\n      }\r\n    }\r\n\r\n    this._remapIndices(vMap, faceVer);\r\n    this._remapVertices(vertices, normals, newVer);\r\n  }\r\n\r\n  // Assign per-vertex colors from a volumetric texture map (same dimensions as the original volumetric data).\r\n  // Along with color dominating atom is determined for each vertex\r\n  // and vertices with atom out of \"visible\" subset get filtered out.\r\n  // XXX only handles orthogonal volumes currently\r\n  setColorVolTex(colorMap, atomMap, atomWeightMap, visibilitySelector) {\r\n    let i;\r\n    let idx;\r\n    const numVerts = this._position.length / 3;\r\n    const vertices = this._position;\r\n    const origin = this._origin;\r\n    const dim = this._volumetricData.getDimensions();\r\n    const xs = dim[0] - 1;\r\n    const ys = dim[1] - 1;\r\n    const zs = dim[2] - 1;\r\n\r\n    const colorData = colorMap.getData();\r\n    const strideX = colorMap.getStrideX();\r\n    const strideY = colorMap.getStrideY();\r\n    const strideZ = colorMap.getStrideZ();\r\n\r\n    let atomWeightData;\r\n    let atomStrideX;\r\n    let atomStrideY;\r\n    let atomStrideZ;\r\n\r\n    if (visibilitySelector !== null) {\r\n      atomWeightData = atomWeightMap.getData();\r\n      atomStrideX = atomWeightMap.getStrideX();\r\n      atomStrideY = atomWeightMap.getStrideY();\r\n      atomStrideZ = atomWeightMap.getStrideZ();\r\n    }\r\n\r\n    const xInv = 1.0 / this._xAxis.x;\r\n    const yInv = 1.0 / this._yAxis.y;\r\n    const zInv = 1.0 / this._zAxis.z;\r\n\r\n    let atomLookup = [];\r\n    let atomWeights = [];\r\n    const colors = utils.allocateTyped(Float32Array, numVerts * 3);\r\n\r\n    function interp(mu, idx1, idx2, c) {\r\n      c[0] = (1 - mu) * colorData[idx1] + mu * colorData[idx2];\r\n      c[1] = (1 - mu) * colorData[idx1 + 1] + mu * colorData[idx2 + 1];\r\n      c[2] = (1 - mu) * colorData[idx1 + 2] + mu * colorData[idx2 + 2];\r\n    }\r\n\r\n    function collectWeight(ai, coefX, coefY, coefZ) {\r\n      const a = atomMap[ai]; // atomWeightMap is a scalar field, so index into atom map should be the same\r\n      if (a != null) {\r\n        atomLookup[a.index] = a;\r\n        const w = coefX * coefY * coefZ * atomWeightData[ai];\r\n        if (typeof atomWeights[a.index] === 'undefined') {\r\n          atomWeights[a.index] = w;\r\n        } else {\r\n          atomWeights[a.index] += w;\r\n        }\r\n      }\r\n    }\r\n\r\n    const vMap = utils.allocateTyped(Int32Array, numVerts);\r\n    let newVerCount = 0;\r\n\r\n    for (i = 0; i < numVerts; i++) {\r\n      const ind = i * 3;\r\n      const vx = (vertices[ind] - origin.x) * xInv;\r\n      const vy = (vertices[ind + 1] - origin.y) * yInv;\r\n      const vz = (vertices[ind + 2] - origin.z) * zInv;\r\n      const x = Math.min(Math.max(vx, 0), xs) | 0;\r\n      const y = Math.min(Math.max(vy, 0), ys) | 0;\r\n      const z = Math.min(Math.max(vz, 0), zs) | 0;\r\n\r\n      const mux = (vx - x);\r\n      const muy = (vy - y);\r\n      const muz = (vz - z);\r\n\r\n      if (visibilitySelector != null) {\r\n        // collect atom weights\r\n        atomLookup = [];\r\n        atomWeights = [];\r\n        idx = atomWeightMap.getDirectIdx(x, y, z);\r\n        collectWeight(idx, 1 - mux, 1 - muy, 1 - muz);\r\n        collectWeight(idx + atomStrideX, mux, 1 - muy, 1 - muz);\r\n        collectWeight(idx + atomStrideY, 1 - mux, muy, 1 - muz);\r\n        collectWeight(idx + atomStrideX + atomStrideY, mux, muy, 1 - muz);\r\n        collectWeight(idx + atomStrideZ, 1 - mux, 1 - muy, muz);\r\n        collectWeight(idx + atomStrideX + atomStrideZ, mux, 1 - muy, muz);\r\n        collectWeight(idx + atomStrideY + atomStrideZ, 1 - mux, muy, muz);\r\n        collectWeight(idx + atomStrideX + atomStrideY + atomStrideZ, mux, muy, muz);\r\n\r\n        // find dominant atom\r\n        let maxWeight = 0.0;\r\n        let dominantIdx = -1;\r\n        for (const atomIdx in atomWeights) {\r\n          if (atomWeights[atomIdx] > maxWeight) {\r\n            dominantIdx = atomIdx;\r\n            maxWeight = atomWeights[atomIdx];\r\n          }\r\n        }\r\n\r\n        if (dominantIdx < 0 || !visibilitySelector.includesAtom(atomLookup[dominantIdx])) {\r\n          // this vertex doesn't belong to visible subset and will be skipped\r\n          vMap[i] = -1;\r\n          continue;\r\n        }\r\n      }\r\n\r\n      vMap[i] = newVerCount++;\r\n\r\n      // color tri-linear interpolation\r\n      const dx = (x < xs) ? strideX : 0;\r\n      const dy = (y < ys) ? strideY : 0;\r\n      const dz = (z < zs) ? strideZ : 0;\r\n\r\n      const c0 = [0, 0, 0];\r\n      const c1 = [0, 0, 0];\r\n      const c2 = [0, 0, 0];\r\n      const c3 = [0, 0, 0];\r\n\r\n      idx = colorMap.getDirectIdx(x, y, z);\r\n      interp(mux, idx, idx + dx, c0);\r\n      interp(mux, idx + dy, idx + dx + dy, c1);\r\n      interp(mux, idx + dz, idx + dx + dz, c2);\r\n      interp(mux, idx + dy + dz, idx + dx + dy + dz, c3);\r\n\r\n      const cz0 = [0, 0, 0];\r\n      cz0[0] = (1 - muy) * c0[0] + muy * c1[0];\r\n      cz0[1] = (1 - muy) * c0[1] + muy * c1[1];\r\n      cz0[2] = (1 - muy) * c0[2] + muy * c1[2];\r\n\r\n      const cz1 = [0, 0, 0];\r\n      cz1[0] = (1 - muy) * c2[0] + muy * c3[0];\r\n      cz1[1] = (1 - muy) * c2[1] + muy * c3[1];\r\n      cz1[2] = (1 - muy) * c2[2] + muy * c3[2];\r\n\r\n      colors[ind] = (1 - muz) * cz0[0] + muz * cz1[0];\r\n      colors[ind + 1] = (1 - muz) * cz0[1] + muz * cz1[1];\r\n      colors[ind + 2] = (1 - muz) * cz0[2] + muz * cz1[2];\r\n    }\r\n    this._colors = colors;\r\n\r\n    if (visibilitySelector != null) {\r\n      // shift visible vertices towards beginning of array\r\n      for (i = 0; i < numVerts; ++i) {\r\n        const j = vMap[i];\r\n        if (j < 0) {\r\n          continue;\r\n        }\r\n\r\n        // assert: j <= i\r\n        this._position[j * 3] = this._position[i * 3];\r\n        this._position[j * 3 + 1] = this._position[i * 3 + 1];\r\n        this._position[j * 3 + 2] = this._position[i * 3 + 2];\r\n        this._normals[j * 3] = this._normals[i * 3];\r\n        this._normals[j * 3 + 1] = this._normals[i * 3 + 1];\r\n        this._normals[j * 3 + 2] = this._normals[i * 3 + 2];\r\n        this._colors[j * 3] = this._colors[i * 3];\r\n        this._colors[j * 3 + 1] = this._colors[i * 3 + 1];\r\n        this._colors[j * 3 + 2] = this._colors[i * 3 + 2];\r\n      }\r\n\r\n      // rebuild index list\r\n      const numTriangles = this._indices.length / 3;\r\n      let newTriCount = 0;\r\n      for (i = 0; i < numTriangles; ++i) {\r\n        const i0 = vMap[this._indices[3 * i]];\r\n        const i1 = vMap[this._indices[3 * i + 1]];\r\n        const i2 = vMap[this._indices[3 * i + 2]];\r\n        if (i0 >= 0 && i1 >= 0 && i2 >= 0) {\r\n          this._indices[3 * newTriCount] = i0;\r\n          this._indices[3 * newTriCount + 1] = i1;\r\n          this._indices[3 * newTriCount + 2] = i2;\r\n          ++newTriCount;\r\n        }\r\n      }\r\n\r\n      // shrink arrays to data size\r\n      this._position = new Float32Array(this._position.buffer.slice(0, newVerCount * 3 * 4));\r\n      this._normals = new Float32Array(this._normals.buffer.slice(0, newVerCount * 3 * 4));\r\n      this._colors = new Float32Array(this._colors.buffer.slice(0, newVerCount * 3 * 4));\r\n      this._indices = new Uint32Array(this._indices.buffer.slice(0, newTriCount * 3 * 4));\r\n    }\r\n  }\r\n\r\n  toMesh() {\r\n    const geo = new THREE.BufferGeometry();\r\n    geo.setIndex(new THREE.BufferAttribute(this._indices, 1));\r\n    geo.setAttribute('position', new THREE.BufferAttribute(this._position, 3));\r\n    geo.setAttribute('normal', new THREE.BufferAttribute(this._normals, 3));\r\n    geo.setAttribute('color', new THREE.BufferAttribute(this._colors, 3));\r\n    geo.computeBoundingSphere();\r\n    return geo;\r\n  }\r\n}\r\nexport default IsoSurface;\r\n","import * as THREE from 'three';\r\nimport IsoSurfaceGeometry from './IsoSurfaceGeometry';\r\nimport IsoSurface from './IsoSurface';\r\nimport utils from '../../utils';\r\n\r\n/**\r\n * This is a base class for volumetric maps based isosurface algorithms.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass VolumeSurfaceGeometry extends IsoSurfaceGeometry {\r\n  _build() {\r\n    const params = this._opts;\r\n    this.numVoxels = [128, 128, 128];\r\n    this.xAxis = new THREE.Vector3(1.0, 0.0, 0.0);\r\n    this.yAxis = new THREE.Vector3(0.0, 1.0, 0.0);\r\n    this.zAxis = new THREE.Vector3(0.0, 0.0, 1.0);\r\n\r\n    this.origin = new THREE.Vector3(0.0, 0.0, 0.0);\r\n    this._visibilitySelector = params.visibilitySelector;\r\n\r\n    this._calcSurface(params);\r\n  }\r\n\r\n  _findMinMax(posRadArray) {\r\n    const itemSize = 4;\r\n    const itemsCount = posRadArray.length / itemSize;\r\n    const maxPosRad = [posRadArray[0], posRadArray[1], posRadArray[2], posRadArray[3]];\r\n    const minPosRad = [posRadArray[0], posRadArray[1], posRadArray[2], posRadArray[3]];\r\n    for (let i = 1; i < itemsCount; ++i) {\r\n      const ind = i * itemSize;\r\n\r\n      for (let itemIdx = 0; itemIdx < itemSize; ++itemIdx) {\r\n        const tmpVal = posRadArray[ind + itemIdx];\r\n        maxPosRad[itemIdx] = Math.max(tmpVal, maxPosRad[itemIdx]);\r\n        minPosRad[itemIdx] = Math.min(tmpVal, minPosRad[itemIdx]);\r\n      }\r\n    }\r\n    return { maxPosRad, minPosRad };\r\n  }\r\n\r\n  _findNumVoxels(posRadArray, params) {\r\n    const { numVoxels } = this;\r\n    const minMaxValues = this._findMinMax(posRadArray);\r\n    const minCoordRad = minMaxValues.minPosRad;\r\n    const maxCoordRad = minMaxValues.maxPosRad;\r\n\r\n    // minrad\r\n    if (minCoordRad[3] > 4.0) {\r\n      params.gridSpacing *= minCoordRad[3];\r\n    }\r\n\r\n    let gridPadding = params.radScale * maxCoordRad[3] * 1.7;\r\n    let padRad = gridPadding;\r\n    padRad = 0.65 * Math.sqrt(4.0 / 3.0 * Math.PI * padRad * padRad * padRad);\r\n    gridPadding = Math.max(gridPadding, padRad);\r\n\r\n    let i = 0;\r\n    for (; i < 3; ++i) {\r\n      minCoordRad[i] -= gridPadding;\r\n      maxCoordRad[i] += gridPadding;\r\n    }\r\n\r\n    for (i = 0; i < 3; ++i) {\r\n      numVoxels[i] = Math.ceil((maxCoordRad[i] - minCoordRad[i]) / params.gridSpacing);\r\n    }\r\n    this.xAxis.x = (numVoxels[0] - 1) * params.gridSpacing;\r\n    this.yAxis.y = (numVoxels[1] - 1) * params.gridSpacing;\r\n    this.zAxis.z = (numVoxels[2] - 1) * params.gridSpacing;\r\n\r\n    [this.origin.x, this.origin.y, this.origin.z] = minCoordRad;\r\n\r\n    return { bbox: minMaxValues, dim: numVoxels };\r\n  }\r\n\r\n  _makeSurface(surface, params) {\r\n    const isoSurf = new IsoSurface();\r\n    isoSurf.compute(surface.volMap, this.origin, params.isoValue, 1);\r\n    isoSurf.vertexFusion(9, 9);// normalization is included\r\n\r\n    if (isoSurf._numTriangles > 0) {\r\n      isoSurf.setColorVolTex(surface.volTexMap, surface.atomMap, surface.atomWeightMap, this._visibilitySelector);\r\n      this.setIndex(new THREE.BufferAttribute(isoSurf._indices, 1));\r\n      this.setAttribute('position', new THREE.BufferAttribute(isoSurf._position, 3));\r\n      this.setAttribute('normal', new THREE.BufferAttribute(isoSurf._normals, 3));\r\n      this.setAttribute('color', new THREE.BufferAttribute(isoSurf._colors, 3));\r\n    } else { // geometry should have at least empty position attributes to be processed in wireframe mode by three.js\r\n      this.setAttribute('position', new THREE.BufferAttribute(utils.allocateTyped(Float32Array, 0), 3));\r\n    }\r\n  }\r\n\r\n  _calcSurface(params) {\r\n    const packedArrays = {\r\n      posRad: this._posRad,\r\n      colors: this._colors,\r\n      atoms: this._opts.atoms,\r\n    };\r\n\r\n    if (packedArrays.posRad.length === 0) {\r\n      return;\r\n    }\r\n    const boundaries = this._findNumVoxels(packedArrays.posRad, params);\r\n\r\n    const box = new THREE.Box3(\r\n      this.origin,\r\n      new THREE.Vector3(this.xAxis.x, this.yAxis.y, this.zAxis.z).add(this.origin),\r\n    );\r\n    const surface = this._computeSurface(packedArrays, box, boundaries, params);\r\n\r\n    this._makeSurface(surface, params);\r\n  }\r\n}\r\n\r\nexport default VolumeSurfaceGeometry;\r\n","import VolumeSurfaceGeometry from './VolumeSurfaceGeometry';\r\nimport chem from '../../chem';\r\n\r\nconst { Volume } = chem;\r\n\r\n/**\r\n * This class implements 'quick' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass QuickSurfGeometry extends VolumeSurfaceGeometry {\r\n  _computeSurface(packedArrays, box, boundaries, params) {\r\n    // beware of shifting this multiple times!\r\n    this._shiftByOrigin(packedArrays.posRad);\r\n\r\n    const surface = {\r\n      volMap: new Volume(Float32Array, this.numVoxels, box),\r\n      volTexMap: new Volume(Float32Array, this.numVoxels, box, 3),\r\n    };\r\n\r\n    if (this._visibilitySelector != null) {\r\n      surface.atomMap = [];\r\n      surface.atomWeightMap = new Volume(Float32Array, this.numVoxels, box);\r\n    }\r\n\r\n    this.gaussdensity(surface, packedArrays, null, params);\r\n    return surface;\r\n  }\r\n\r\n  gaussdensity(surface, packedArrays, atomicNum, params) {\r\n    const numAtoms = packedArrays.posRad.length / 4;\r\n    const { posRad, colors } = packedArrays;\r\n    const { numVoxels } = this;\r\n    const { radScale, gaussLim, gridSpacing } = params;\r\n    const invIsoValue = 1.0 / params.isoValue;\r\n    const invGridSpacing = 1.0 / gridSpacing;\r\n    const maxVoxelX = numVoxels[0] - 1;\r\n    const maxVoxelY = numVoxels[1] - 1;\r\n    const maxVoxelZ = numVoxels[2] - 1;\r\n    // TODO is densityMap and volTexMap initialized?\r\n\r\n    const { volMap, volTexMap } = surface;\r\n    const volData = volMap.getData();\r\n    const strideX = volMap.getStrideX();\r\n\r\n    const volTexData = volTexMap.getData();\r\n    const texStrideX = volTexMap.getStrideX();\r\n\r\n    let atomWeightData;\r\n    if (this._visibilitySelector != null) {\r\n      atomWeightData = surface.atomWeightMap.getData();\r\n    }\r\n\r\n    const { atomMap } = surface;\r\n\r\n    for (let i = 0; i < numAtoms; ++i) {\r\n      const ind = i * 4;\r\n      const scaledRad = posRad[ind + 3] * radScale;\r\n      const atomicNumFactor = atomicNum === null ? 1.0 : atomicNum[i];\r\n      const radInv = 1 / (2 * scaledRad * scaledRad);\r\n      let radLim = gaussLim * scaledRad;\r\n      const radLim2 = radLim * radLim;\r\n      radLim *= invGridSpacing;\r\n\r\n      let tmp = posRad[ind] * invGridSpacing;\r\n      const xMin = Math.max((tmp - radLim) | 0, 0);\r\n      const xMax = Math.min((tmp + radLim) | 0, maxVoxelX);\r\n      tmp = posRad[ind + 1] * invGridSpacing;\r\n      const yMin = Math.max((tmp - radLim) | 0, 0);\r\n      const yMax = Math.min((tmp + radLim) | 0, maxVoxelY);\r\n      tmp = posRad[ind + 2] * invGridSpacing;\r\n      const zMin = Math.max((tmp - radLim) | 0, 0);\r\n      const zMax = Math.min((tmp + radLim) | 0, maxVoxelZ);\r\n\r\n      let dz = zMin * gridSpacing - posRad[ind + 2];\r\n      for (let z = zMin; z <= zMax; ++z, dz += gridSpacing) {\r\n        let dy = yMin * gridSpacing - posRad[ind + 1];\r\n        for (let y = yMin; y <= yMax; ++y, dy += gridSpacing) {\r\n          const dy2dz2 = dy * dy + dz * dz;\r\n\r\n          if (dy2dz2 >= radLim2) {\r\n            continue;\r\n          }\r\n\r\n          let addr = volMap.getDirectIdx(xMin, y, z);\r\n          let texAddr = volTexMap.getDirectIdx(xMin, y, z);\r\n          let dx = xMin * gridSpacing - posRad[ind];\r\n          for (let x = xMin; x <= xMax; ++x, dx += gridSpacing, addr += strideX, texAddr += texStrideX) {\r\n            const r2 = dx * dx + dy2dz2;\r\n            const expVal = -r2 * radInv;\r\n\r\n            let density = Math.exp(expVal) * atomicNumFactor;\r\n\r\n            // store most relevant atom (with highest density)\r\n            if (this._visibilitySelector != null\r\n              && density > atomWeightData[addr]) { // NOSONAR\r\n              atomWeightData[addr] = density;\r\n              // we use same index into atom map and atomWeightMap\r\n              atomMap[addr] = packedArrays.atoms[i];\r\n            }\r\n\r\n            volData[addr] += density;\r\n\r\n            // TODO check for volTexMap routine?\r\n            density *= invIsoValue;\r\n            const colInd = i * 3;\r\n            volTexData[texAddr] += density * colors[colInd];\r\n            volTexData[texAddr + 1] += density * colors[colInd + 1];\r\n            volTexData[texAddr + 2] += density * colors[colInd + 2];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _shiftByOrigin(posRadArray) {\r\n    const originX = this.origin.x;\r\n    const originY = this.origin.y;\r\n    const originZ = this.origin.z;\r\n\r\n    const itemSize = 4;\r\n    const itemsCount = posRadArray.length / itemSize;\r\n    for (let i = 0; i < itemsCount; ++i) {\r\n      const ind = i * itemSize;\r\n\r\n      posRadArray[ind] -= originX;\r\n      posRadArray[ind + 1] -= originY;\r\n      posRadArray[ind + 2] -= originZ;\r\n    }\r\n  }\r\n}\r\n\r\nexport default QuickSurfGeometry;\r\n","import * as THREE from 'three';\r\nimport utils from '../../utils';\r\n\r\n/**\r\n * Modifed from SpatialHash\r\n *\r\n * Main differences are:\r\n * - Optimized grid size to ensure we only ever need to look +/-1 cell\r\n * - Aware of atomic radii and will only output atoms within rAtom + rExtra\r\n *   (see withinRadii method)\r\n *\r\n * (Uses rounding rather than bitshifting as consequence of arbitrary grid size)\r\n * @class\r\n * @param {Float32Array} posRad - x, y, z coordinates and radiuses\r\n * @param {Float32Array} min - xyz min coordinates\r\n * @param {Float32Array} max - xyz max coordinates\r\n * @param {number} maxDistance - max distance\r\n */\r\nfunction AVHash(posRad, min, max, maxDistance) {\r\n  const itemSize = 4;\r\n  const nAtoms = posRad.length / itemSize;\r\n\r\n  const minX = min[0];\r\n  const minY = min[1];\r\n  const minZ = min[2];\r\n\r\n  const maxX = max[0];\r\n  const maxY = max[1];\r\n  const maxZ = max[2];\r\n\r\n  function hashFunc(w, minW) {\r\n    return Math.floor((w - minW) / maxDistance);\r\n  }\r\n\r\n  const iDim = hashFunc(maxX, minX) + 1;\r\n  const jDim = hashFunc(maxY, minY) + 1;\r\n  const kDim = hashFunc(maxZ, minZ) + 1;\r\n\r\n  const nCells = iDim * jDim * kDim;\r\n\r\n  const jkDim = jDim * kDim;\r\n\r\n  /* Get cellID for cartesian x,y,z */\r\n  const cellID = function (x, y, z) {\r\n    return (((hashFunc(x, minX) * jDim) + hashFunc(y, minY)) * kDim) + hashFunc(z, minZ);\r\n  };\r\n\r\n  /* Initial building, could probably be optimized further */\r\n  const preHash = [];\r\n  let i;\r\n  let cid;\r\n  for (i = 0; i < nAtoms; i++) {\r\n    const iIdx = itemSize * i;\r\n    cid = cellID(posRad[iIdx], posRad[iIdx + 1], posRad[iIdx + 2]);\r\n\r\n    if (preHash[cid] === undefined) {\r\n      preHash[cid] = [i];\r\n    } else {\r\n      preHash[cid].push(i);\r\n    }\r\n  }\r\n\r\n  const cellOffsets = utils.allocateTyped(Uint32Array, nCells);\r\n  const cellLengths = utils.allocateTyped(Uint16Array, nCells);\r\n  const data = utils.allocateTyped(Uint32Array, nAtoms);\r\n\r\n  let offset = 0;\r\n  let maxCellLength = 0;\r\n  let j;\r\n  for (i = 0; i < nCells; i++) {\r\n    const start = cellOffsets[i] = offset;\r\n\r\n    const subArray = preHash[i];\r\n\r\n    if (subArray !== undefined) {\r\n      for (j = 0; j < subArray.length; j++) {\r\n        data[offset] = subArray[j];\r\n        offset++;\r\n      }\r\n    }\r\n\r\n    const cellLength = offset - start;\r\n    cellLengths[i] = cellLength;\r\n\r\n    if (cellLength > maxCellLength) {\r\n      maxCellLength = cellLength;\r\n    }\r\n  }\r\n\r\n  // Maximum number of neighbours we could ever produce (27 adjacent cells of equal population)\r\n  this.neighbourListLength = (27 * maxCellLength) + 1;\r\n\r\n  /**\r\n   * Populate the supplied out array with atom indices that are within rAtom + rExtra\r\n   * of x,y,z\r\n   *\r\n   * -1 in out array indicates the end of the list\r\n   *\r\n   * @param  {number} x - x coordinate\r\n   * @param  {number} y - y coordinate\r\n   * @param  {number} z - z coordinate\r\n   * @param  {number} rExtra - additional radius\r\n   * @param  {Float32Array} out - pre-allocated output array\r\n   * @return {undefined}\r\n   */\r\n  this.withinRadii = function (x, y, z, rExtra, out) {\r\n    let outIdx = 0;\r\n\r\n    const nearI = hashFunc(x, minX);\r\n    const nearJ = hashFunc(y, minY);\r\n    const nearK = hashFunc(z, minZ);\r\n\r\n    const loI = Math.max(0, nearI - 1);\r\n    const loJ = Math.max(0, nearJ - 1);\r\n    const loK = Math.max(0, nearK - 1);\r\n\r\n    const hiI = Math.min(iDim - 1, nearI + 1);\r\n    const hiJ = Math.min(jDim - 1, nearJ + 1);\r\n    const hiK = Math.min(kDim - 1, nearK + 1);\r\n\r\n    for (i = loI; i <= hiI; ++i) {\r\n      const iOffset = i * jkDim;\r\n\r\n      for (j = loJ; j <= hiJ; ++j) {\r\n        const jOffset = j * kDim;\r\n\r\n        for (let k = loK; k <= hiK; ++k) {\r\n          cid = iOffset + jOffset + k;\r\n\r\n          const cellStart = cellOffsets[cid];\r\n          const cellEnd = cellStart + cellLengths[cid];\r\n\r\n          for (let dataIndex = cellStart; dataIndex < cellEnd; dataIndex++) {\r\n            const atomIndex = data[dataIndex];\r\n            const baseIndex = itemSize * atomIndex;\r\n            const dx = posRad[baseIndex] - x;\r\n            const dy = posRad[baseIndex + 1] - y;\r\n            const dz = posRad[baseIndex + 2] - z;\r\n            const rSum = posRad[baseIndex + 3] + rExtra;\r\n\r\n            if ((dx * dx + dy * dy + dz * dz) <= (rSum * rSum)) {\r\n              out[outIdx++] = data[dataIndex];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Add terminator\r\n    out[outIdx] = -1;\r\n  };\r\n}\r\nfunction ContactSurface(packedArrays, boundaries, params, _indexList) {\r\n  // Field generation method adapted from AstexViewer (Mike Hartshorn)\r\n  // by Fred Ludlow.\r\n  // Other parts based heavily on NGL (Alexander Rose) EDT Surface class\r\n  //\r\n  // Should work as a drop-in alternative to EDTSurface (though some of\r\n  // the EDT paramters are not relevant in this method).\r\n\r\n  const itemSize = 4;\r\n  const { posRad, colors, atoms } = packedArrays;\r\n  const nAtoms = posRad.length / itemSize;\r\n\r\n  const { bbox } = boundaries;\r\n\r\n  const min = bbox.minPosRad;\r\n  const max = bbox.maxPosRad;\r\n\r\n  let r2; // Atom positions, expanded radii (squared)\r\n  let maxRadius;\r\n\r\n  // Parameters\r\n  let probeRadius;\r\n  let scaleFactor;\r\n  let probePositions;\r\n\r\n  // Cache last value for obscured test\r\n  let lastClip = -1;\r\n\r\n  // Grid params\r\n  let dim;\r\n  let grid;\r\n  let volTex;\r\n  let weights;\r\n  let weightsMap = null;\r\n  let atomMap = null;\r\n  let visibilitySelector = null;\r\n\r\n  // grid indices -> xyz coords\r\n  let gridx;\r\n  let gridy;\r\n  let gridz;\r\n\r\n  // Lookup tables:\r\n  let sinTable;\r\n  let cosTable;\r\n\r\n  // Spatial Hash\r\n  let hash;\r\n\r\n  // Neighbour array to be filled by hash\r\n  let neighbours;\r\n\r\n  // Vectors for Torus Projection\r\n  const mid = new THREE.Vector3(0.0, 0.0, 0.0);\r\n  const n1 = new THREE.Vector3(0.0, 0.0, 0.0);\r\n  const n2 = new THREE.Vector3(0.0, 0.0, 0.0);\r\n\r\n  let ngTorus;\r\n\r\n  function uniformArray(TypeName, n, a) {\r\n    const array = utils.allocateTyped(TypeName, n);\r\n    for (let innI = 0; innI < n; ++innI) {\r\n      array[innI] = a;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  function fillGridDim(a, start, step) {\r\n    for (let innI = 0; innI < a.length; innI++) {\r\n      a[innI] = start + (step * innI);\r\n    }\r\n  }\r\n\r\n  function initializeGrid() {\r\n    ({ scaleFactor } = params);\r\n    ({ dim } = boundaries);\r\n\r\n    ngTorus = Math.min(5, 2 + Math.floor(probeRadius * scaleFactor));\r\n\r\n    const gridSize = dim[0] * dim[1] * dim[2];\r\n    grid = uniformArray(Float32Array, gridSize, -1001.0);\r\n    volTex = utils.allocateTyped(Float32Array, gridSize * 3);\r\n    weights = utils.allocateTyped(Float32Array, gridSize);\r\n    if (visibilitySelector) {\r\n      weightsMap = utils.allocateTyped(Float32Array, gridSize);\r\n      atomMap = [];\r\n    }\r\n\r\n    gridx = utils.allocateTyped(Float32Array, dim[0]);\r\n    gridy = utils.allocateTyped(Float32Array, dim[1]);\r\n    gridz = utils.allocateTyped(Float32Array, dim[2]);\r\n\r\n    fillGridDim(gridx, min[0], 1 / scaleFactor);\r\n    fillGridDim(gridy, min[1], 1 / scaleFactor);\r\n    fillGridDim(gridz, min[2], 1 / scaleFactor);\r\n  }\r\n\r\n  function initializeAngleTables() {\r\n    let theta = 0.0;\r\n    const step = 2 * Math.PI / probePositions;\r\n\r\n    cosTable = utils.allocateTyped(Float32Array, probePositions);\r\n    sinTable = utils.allocateTyped(Float32Array, probePositions);\r\n    for (let innI = 0; innI < probePositions; innI++) {\r\n      cosTable[innI] = Math.cos(theta);\r\n      sinTable[innI] = Math.sin(theta);\r\n      theta += step;\r\n    }\r\n  }\r\n\r\n  function initializeHash() {\r\n    hash = new AVHash(posRad, min, max, 2.01 * maxRadius);\r\n    neighbours = new Int32Array(hash.neighbourListLength);\r\n  }\r\n\r\n  function init() {\r\n    ({\r\n      probeRadius,\r\n      scaleFactor,\r\n      probePositions,\r\n      visibilitySelector,\r\n    } = params);\r\n    r2 = utils.allocateTyped(Float32Array, nAtoms);\r\n    maxRadius = 0;\r\n    for (let innI = 0; innI < nAtoms; ++innI) {\r\n      const rExt = posRad[innI * itemSize + 3] += probeRadius;\r\n      if (rExt > maxRadius) {\r\n        maxRadius = rExt;\r\n      }\r\n      r2[innI] = rExt * rExt;\r\n    }\r\n\r\n    initializeGrid();\r\n    initializeAngleTables();\r\n    initializeHash();\r\n\r\n    lastClip = -1;\r\n  }\r\n\r\n  function singleAtomObscures(ai, innX, innY, innZ) {\r\n    const innCI = itemSize * ai;\r\n    const ra2 = r2[ai];\r\n    const dx = posRad[innCI] - innX;\r\n    const dy = posRad[innCI + 1] - innY;\r\n    const dz = posRad[innCI + 2] - innZ;\r\n    const d2 = dx * dx + dy * dy + dz * dz;\r\n\r\n    return d2 < ra2;\r\n  }\r\n\r\n  function obscured(innX, innY, innZ, a, b) {\r\n    // Is the point at x,y,z obscured by any of the atoms\r\n    // specifeid by indices in neighbours. Ignore indices\r\n    // a and b (these are the relevant atoms in projectPoints/Torii)\r\n\r\n    // Cache the last clipped atom (as very often the same one in\r\n    // subsequent calls)\r\n    let ai;\r\n\r\n    if (lastClip !== -1) {\r\n      ai = lastClip;\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, innX, innY, innZ)) {\r\n        return ai;\r\n      }\r\n      lastClip = -1;\r\n    }\r\n\r\n    let ni = 0;\r\n    ai = neighbours[ni];\r\n    while (ai >= 0) {\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, innX, innY, innZ)) {\r\n        lastClip = ai;\r\n        return ai;\r\n      }\r\n      ai = neighbours[++ni];\r\n    }\r\n\r\n    lastClip = -1;\r\n\r\n    return -1;\r\n  }\r\n\r\n  function projectPoints() {\r\n    // For each atom:\r\n    //     Iterate over a subsection of the grid, for each point:\r\n    //         If current value < 0.0, unvisited, set positive\r\n    //\r\n    //         In any case: Project this point onto surface of the atomic sphere\r\n    //         If this projected point is not obscured by any other atom\r\n    //             Calcualte delta distance and set grid value to minimum of\r\n    //             itself and delta\r\n\r\n    // Should we alias frequently accessed closure constiables??\r\n    // Assume JS engine capable of optimizing this\r\n    // anyway...\r\n    const maxRad = 4.0;\r\n    const sigma = (maxRad) / 3;\r\n    const sigma2Inv = 1 / (2 * sigma * sigma);\r\n\r\n    for (let innI = 0; innI < nAtoms; innI++) {\r\n      const innCI = itemSize * innI;\r\n      const ax = posRad[innCI];\r\n      const ay = posRad[innCI + 1];\r\n      const az = posRad[innCI + 2];\r\n      const ar = posRad[innCI + 3];\r\n      const ar2 = r2[innI];\r\n\r\n      hash.withinRadii(ax, ay, az, ar, neighbours);\r\n\r\n      // Number of grid points, round this up...\r\n      const ng = Math.ceil(ar * scaleFactor);\r\n\r\n      // Center of the atom, mapped to grid points (take floor)\r\n      const iax = Math.floor(scaleFactor * (ax - min[0]));\r\n      const iay = Math.floor(scaleFactor * (ay - min[1]));\r\n      const iaz = Math.floor(scaleFactor * (az - min[2]));\r\n\r\n      // Extents of grid to consider for this atom\r\n      const minx = Math.max(0, iax - ng);\r\n      const miny = Math.max(0, iay - ng);\r\n      const minz = Math.max(0, iaz - ng);\r\n\r\n      // Add two to these points:\r\n      // - iax are floor'd values so this ensures coverage\r\n      // - these are loop limits (exclusive)\r\n      const maxx = Math.min(dim[0], iax + ng + 2);\r\n      const maxy = Math.min(dim[1], iay + ng + 2);\r\n      const maxz = Math.min(dim[2], iaz + ng + 2);\r\n\r\n      const colIdx = innI * 3;\r\n      const cr = colors[colIdx];\r\n      const cg = colors[colIdx + 1];\r\n      const cb = colors[colIdx + 2];\r\n\r\n      for (let iz = minz; iz < maxz; iz++) {\r\n        const dz = gridz[iz] - az;\r\n        const zOffset = dim[1] * dim[0] * iz;\r\n\r\n        for (let iy = miny; iy < maxy; iy++) {\r\n          const dy = gridy[iy] - ay;\r\n          const dzy2 = dz * dz + dy * dy;\r\n          const zyOffset = zOffset + dim[0] * iy;\r\n\r\n          for (let ix = minx; ix < maxx; ix++) {\r\n            const idx = ix + zyOffset;\r\n            const dx = gridx[ix] - ax;\r\n            const d2 = dzy2 + dx * dx;\r\n\r\n            if (d2 < ar2) {\r\n              const w = Math.exp(-d2 * sigma2Inv);\r\n              const cIdx = idx * 3;\r\n              volTex[cIdx] += cr * w;\r\n              volTex[cIdx + 1] += cg * w;\r\n              volTex[cIdx + 2] += cb * w;\r\n              weights[idx] += w;\r\n              if (visibilitySelector !== null && w > weightsMap[idx]) {\r\n                weightsMap[idx] = w;\r\n                atomMap[idx] = atoms[innI];\r\n              }\r\n\r\n              if (grid[idx] < 0.0) {\r\n                // Unvisited, make positive\r\n                grid[idx] = -grid[idx];\r\n              }\r\n              // Project on to the surface of the sphere\r\n              // sp is the projected point ( dx, dy, dz ) * ( ra / d )\r\n              const d = Math.sqrt(d2);\r\n              const ap = ar / d;\r\n              let spx = dx * ap;\r\n              let spy = dy * ap;\r\n              let spz = dz * ap;\r\n\r\n              spx += ax;\r\n              spy += ay;\r\n              spz += az;\r\n\r\n              if (obscured(spx, spy, spz, innI, -1) === -1) {\r\n                const dd = ar - d;\r\n                if (dd < grid[idx]) {\r\n                  grid[idx] = dd;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function normalToLine(out, p) {\r\n    out.x = out.y = out.z = 1.0;\r\n    if (p.x !== 0) {\r\n      out.x = (p.y + p.z) / -p.x;\r\n    } else if (p.y !== 0) {\r\n      out.y = (p.x + p.z) / -p.y;\r\n    } else if (p.z !== 0) {\r\n      out.z = (p.x + p.y) / -p.z;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  function projectTorus(a, b) {\r\n    const aIdx = itemSize * a;\r\n    const bIdx = itemSize * b;\r\n    const xa = posRad[aIdx];\r\n    const ya = posRad[aIdx + 1];\r\n    const za = posRad[aIdx + 2];\r\n    const r1 = posRad[aIdx + 3];\r\n    let dx = mid.x = posRad[bIdx] - xa;\r\n    let dy = mid.y = posRad[bIdx + 1] - ya;\r\n    let dz = mid.z = posRad[bIdx + 2] - za;\r\n    const innR2 = posRad[bIdx + 3];\r\n    let d2 = dx * dx + dy * dy + dz * dz;\r\n\r\n    // This check now redundant as already done in AVHash.withinRadii\r\n    // if( d2 > (( r1 + r2 ) * ( r1 + r2 )) ){ return; }\r\n\r\n    const d = Math.sqrt(d2);\r\n\r\n    // Find angle between a->b vector and the circle\r\n    // of their intersection by cosine rule\r\n    const cosA = (r1 * r1 + d * d - innR2 * innR2) / (2.0 * r1 * d);\r\n\r\n    // distance along a->b at intersection\r\n    const dmp = r1 * cosA;\r\n\r\n    mid.normalize();\r\n\r\n    // Create normal to line\r\n    normalToLine(n1, mid);\r\n    n1.normalize();\r\n\r\n    // Cross together for second normal vector\r\n    n2.crossVectors(mid, n1);\r\n    n2.normalize();\r\n\r\n    // r is radius of circle of intersection\r\n    const rInt = Math.sqrt(r1 * r1 - dmp * dmp);\r\n\r\n    n1.multiplyScalar(rInt);\r\n    n2.multiplyScalar(rInt);\r\n    mid.multiplyScalar(dmp);\r\n\r\n    mid.x += xa;\r\n    mid.y += ya;\r\n    mid.z += za;\r\n\r\n    lastClip = -1;\r\n\r\n    const ng = ngTorus;\r\n\r\n    for (let innI = 0; innI < probePositions; innI++) {\r\n      const cost = cosTable[innI];\r\n      const sint = sinTable[innI];\r\n\r\n      const px = mid.x + cost * n1.x + sint * n2.x;\r\n      const py = mid.y + cost * n1.y + sint * n2.y;\r\n      const pz = mid.z + cost * n1.z + sint * n2.z;\r\n\r\n      if (obscured(px, py, pz, a, b) === -1) {\r\n        // As above, iterate over our grid...\r\n        // px, py, pz in grid coords\r\n        const iax = Math.floor(scaleFactor * (px - min[0]));\r\n        const iay = Math.floor(scaleFactor * (py - min[1]));\r\n        const iaz = Math.floor(scaleFactor * (pz - min[2]));\r\n\r\n        const minx = Math.max(0, iax - ng);\r\n        const miny = Math.max(0, iay - ng);\r\n        const minz = Math.max(0, iaz - ng);\r\n\r\n        const maxx = Math.min(dim[0], iax + ng + 2);\r\n        const maxy = Math.min(dim[1], iay + ng + 2);\r\n        const maxz = Math.min(dim[2], iaz + ng + 2);\r\n\r\n        for (let iz = minz; iz < maxz; iz++) {\r\n          dz = pz - gridz[iz];\r\n          const zOffset = dim[1] * dim[0] * iz;\r\n          for (let iy = miny; iy < maxy; iy++) {\r\n            dy = py - gridy[iy];\r\n            const dzy2 = dz * dz + dy * dy;\r\n            const zyOffset = zOffset + dim[0] * iy;\r\n            for (let ix = minx; ix < maxx; ix++) {\r\n              dx = px - gridx[ix];\r\n              d2 = dzy2 + dx * dx;\r\n              const idx = ix + zyOffset;\r\n              const current = grid[idx];\r\n\r\n              if (current > 0.0 && d2 < (current * current)) {\r\n                grid[idx] = Math.sqrt(d2);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function projectTorii() {\r\n    for (let innI = 0; innI < nAtoms; innI++) {\r\n      const innIdx = itemSize * innI;\r\n      hash.withinRadii(\r\n        posRad[innIdx],\r\n        posRad[innIdx + 1],\r\n        posRad[innIdx + 2],\r\n        posRad[innIdx + 3],\r\n        neighbours,\r\n      );\r\n      let ia = 0;\r\n      let ni = neighbours[ia];\r\n      while (ni >= 0) {\r\n        if (innI < ni) {\r\n          projectTorus(innI, ni);\r\n        }\r\n        ni = neighbours[++ia];\r\n      }\r\n    }\r\n  }\r\n\r\n  function fixNegatives() {\r\n    for (let innI = 0, n = grid.length; innI < n; innI++) {\r\n      if (grid[innI] < 0) grid[innI] = 0;\r\n      let w = weights[innI];\r\n      if (w > 0) {\r\n        w = 1 / w;\r\n        const innInnI = innI * 3;\r\n        volTex[innInnI] *= w;\r\n        volTex[innInnI + 1] *= w;\r\n        volTex[innInnI + 2] *= w;\r\n      }\r\n    }\r\n  }\r\n\r\n  function getVolume() {\r\n    // Basic steps are:\r\n    // 1) Initialize\r\n    // 2) Project points\r\n    // 3) Project torii\r\n    console.time('ContactSurface.getVolume');\r\n\r\n    console.time('ContactSurface.init');\r\n    init();\r\n    console.timeEnd('ContactSurface.init');\r\n\r\n    console.time('ContactSurface.projectPoints');\r\n    projectPoints();\r\n    console.timeEnd('ContactSurface.projectPoints');\r\n\r\n    console.time('ContactSurface.projectTorii');\r\n    projectTorii();\r\n    console.timeEnd('ContactSurface.projectTorii');\r\n    fixNegatives();\r\n    console.timeEnd('ContactSurface.getVolume');\r\n  }\r\n\r\n  this.build = function () {\r\n    // type and cutoff left in for compatibility with EDTSurface.getSurface\r\n    // function signature\r\n    getVolume();\r\n    this.volTexMap = volTex;\r\n    this.weightsMap = weightsMap;\r\n    this.atomMap = atomMap;\r\n    this.volMap = grid;\r\n  };\r\n}\r\nexport default ContactSurface;\r\n","import VolumeSurfaceGeometry from './VolumeSurfaceGeometry';\r\nimport ContactSurface from './ContactSurface';\r\nimport chem from '../../chem';\r\n\r\nconst { Volume } = chem;\r\n\r\n/**\r\n * This class implements 'contact' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass ContactSurfaceGeometry extends VolumeSurfaceGeometry {\r\n  _computeSurface(packedArrays, box, boundaries, params) {\r\n    const contactSurface = new ContactSurface(packedArrays, boundaries, params);\r\n    contactSurface.build();\r\n\r\n    const surface = {\r\n      volMap: new Volume(Float32Array, this.numVoxels, box, 1, contactSurface.volMap),\r\n      volTexMap: new Volume(Float32Array, this.numVoxels, box, 3, contactSurface.volTexMap),\r\n      atomMap: contactSurface.atomMap,\r\n      atomWeightMap: new Volume(Float32Array, this.numVoxels, box, 1, contactSurface.weightsMap),\r\n    };\r\n    return surface;\r\n  }\r\n}\r\n\r\nexport default ContactSurfaceGeometry;\r\n","import * as THREE from 'three';\r\n\r\n/**\r\n * Class for colored atom. Need for atom structure clusterization\r\n *\r\n * @param {Vector3} vCenter   Center of atom\r\n * @param {number}  radiusAt  Radius of atom\r\n */\r\nclass IsoSurfaceAtomColored {\r\n  constructor(vCenter, radiusAt) {\r\n    this.coord = new THREE.Vector3();\r\n    this.coord.copy(vCenter);\r\n    this.radius = radiusAt;\r\n    this.colorX = 0.99999;\r\n    this.colorY = 0.0;\r\n    this.colorZ = 0.0;\r\n    this.atomType = 0;\r\n    this.srcAtom = null;\r\n  }\r\n}\r\nexport default IsoSurfaceAtomColored;\r\n","import * as THREE from 'three';\r\nimport utils from '../../utils';\r\n\r\n// suppress some JSHint warnings\r\n/* jshint bitwise: false */\r\n\r\n/**\r\n * Build normals for isosurface, using atoms information\r\n *\r\n * @param {number} numAtoms     - Number of atoms in molecule\r\n * @param {Element} atoms      - Array of atoms\r\n * @param {Vector3} vBoxMin     - Bounding box min\r\n * @param {Vector3} vBoxMax     - Bounding box max\r\n * @param {number} probeRadius     - Normals for output\r\n *\r\n */\r\nclass IsosurfaceBuildNormals {\r\n  constructor(numAtoms, atoms, vBoxMin, vBoxMax, probeRadius) {\r\n    this._numAtoms = numAtoms;\r\n    this._atoms = atoms;\r\n    this._vBoxMin = new THREE.Vector3();\r\n    this._vBoxMax = new THREE.Vector3();\r\n    this._vBoxMin.copy(vBoxMin);\r\n    this._vBoxMax.copy(vBoxMax);\r\n    this._probeRadius = probeRadius;\r\n\r\n    this._atomsList = null;\r\n    this._voxelList = null;\r\n  }\r\n\r\n  createVoxels() {\r\n    let numAtomsRefs;\r\n    let rad;\r\n    const ATOM_VOXEL_REF_SCALE = 4.5;\r\n\r\n    const numAtoms = this._numAtoms | 0;\r\n    const atoms = this._atoms;\r\n    const dx = this._vBoxMax.x - this._vBoxMin.x;\r\n    const dy = this._vBoxMax.y - this._vBoxMin.y;\r\n    const dz = this._vBoxMax.z - this._vBoxMin.z;\r\n    let w = (dx < dy) ? dx : dy;\r\n    w = (dz < w) ? dz : w;\r\n    let maxRad = 0.0;\r\n    let aveRad = 0.0;\r\n\r\n    let i;\r\n    for (i = 0; i < numAtoms; i++) {\r\n      rad = (atoms[i].radius + this._probeRadius) * 2.0;\r\n      maxRad = (rad > maxRad) ? rad : maxRad;\r\n      aveRad += rad;\r\n    }\r\n    let numCells = Math.floor(w / maxRad);\r\n    if (numCells < 2) {\r\n      numCells = 2;\r\n    }\r\n    aveRad /= numAtoms;\r\n\r\n    this._numCells = numCells;\r\n    this._aveRad = aveRad;\r\n    this._maxRad = maxRad;\r\n\r\n    const side = numCells;\r\n    const side2 = numCells * numCells;\r\n    const side3 = numCells * numCells * numCells;\r\n\r\n    const xScale = this._xScale = 1.0 / (this._vBoxMax.x - this._vBoxMin.x);\r\n    const yScale = this._yScale = 1.0 / (this._vBoxMax.y - this._vBoxMin.y);\r\n    const zScale = this._zScale = 1.0 / (this._vBoxMax.z - this._vBoxMin.z);\r\n\r\n    // estimate number of individual atom refs in each voxel list\r\n    let maxAtomsRefs = 0;\r\n\r\n    const xNumVoxMult = xScale * numCells;\r\n    const yNumVoxMult = yScale * numCells;\r\n    const zNumVoxMult = zScale * numCells;\r\n\r\n    for (i = 0; i < numAtoms; i++) {\r\n      const radAffect = (atoms[i].radius + this._probeRadius) * ATOM_VOXEL_REF_SCALE;\r\n      const diaAffect = radAffect * 2.0;\r\n      let numVoxX = Math.floor(xNumVoxMult * diaAffect + 0.8);\r\n      let numVoxY = Math.floor(yNumVoxMult * diaAffect + 0.8);\r\n      let numVoxZ = Math.floor(zNumVoxMult * diaAffect + 0.8);\r\n      // avoid case numVox? == 0\r\n      // also use loop i <=\r\n      numVoxX++;\r\n      numVoxY++;\r\n      numVoxZ++;\r\n      maxAtomsRefs += numVoxX * numVoxY * numVoxZ;\r\n    } // for (i)\r\n    // maxAtomsRefs = numAtoms * MAX_ATOMS_IN_SINGLE_VOXEL;\r\n\r\n    this._voxelList = utils.allocateTyped(Int32Array, side3);\r\n    const atomsList = [];\r\n    atomsList.length = maxAtomsRefs;\r\n    if ((this._voxelList === null) || (atomsList === null)) {\r\n      return 0 - 1;\r\n    }\r\n    // init voxel list\r\n    for (i = 0; i < side3; i++) {\r\n      this._voxelList[i] = -1;\r\n    }\r\n    numAtomsRefs = 0;\r\n\r\n    // create voxel lists\r\n    for (i = 0; i < numAtoms; i++) {\r\n      // use multiplier 4 to locate this atom in different voxels\r\n      rad = (atoms[i].radius + this._probeRadius) * ATOM_VOXEL_REF_SCALE;\r\n      let xIndMin = Math.floor((atoms[i].coord.x - this._vBoxMin.x - rad) * numCells * xScale);\r\n      let yIndMin = Math.floor((atoms[i].coord.y - this._vBoxMin.y - rad) * numCells * yScale);\r\n      let zIndMin = Math.floor((atoms[i].coord.z - this._vBoxMin.z - rad) * numCells * zScale);\r\n      let xIndMax = Math.floor((atoms[i].coord.x - this._vBoxMin.x + rad) * numCells * xScale);\r\n      let yIndMax = Math.floor((atoms[i].coord.y - this._vBoxMin.y + rad) * numCells * yScale);\r\n      let zIndMax = Math.floor((atoms[i].coord.z - this._vBoxMin.z + rad) * numCells * zScale);\r\n\r\n      xIndMin = (xIndMin >= 0) ? xIndMin : 0;\r\n      yIndMin = (yIndMin >= 0) ? yIndMin : 0;\r\n      zIndMin = (zIndMin >= 0) ? zIndMin : 0;\r\n\r\n      xIndMax = (xIndMax < numCells) ? xIndMax : (numCells - 1);\r\n      yIndMax = (yIndMax < numCells) ? yIndMax : (numCells - 1);\r\n      zIndMax = (zIndMax < numCells) ? zIndMax : (numCells - 1);\r\n\r\n      for (let z = zIndMin; z <= zIndMax; z++) {\r\n        for (let y = yIndMin; y <= yIndMax; y++) {\r\n          for (let x = xIndMin; x <= xIndMax; x++) {\r\n            // add atom with index \"i\" to this voxel list\r\n            const indVoxel = x + y * side + z * side2;\r\n            // assert indVoxel >= 0\r\n            // assert indVoxel < side3\r\n\r\n            // add first\r\n            if (this._voxelList[indVoxel] < 0) {\r\n              atomsList[numAtomsRefs * 2 + 0] = i;\r\n              atomsList[numAtomsRefs * 2 + 1] = 0 - 1;\r\n              this._voxelList[indVoxel] = numAtomsRefs;\r\n              numAtomsRefs++;\r\n              // assert numAtomsRefs < maxAtomsRefs - 1\r\n              continue;\r\n            }\r\n            // insert into head of list\r\n            const indexNext = this._voxelList[indVoxel];\r\n            this._voxelList[indVoxel] = numAtomsRefs;\r\n            atomsList[numAtomsRefs * 2 + 0] = i;\r\n            atomsList[numAtomsRefs * 2 + 1] = indexNext;\r\n            numAtomsRefs++;\r\n          } // for (x)\r\n        } // for (y)\r\n      } // for (z)\r\n    } // for (i)\r\n\r\n    // convert Array to Int32Array\r\n    this._atomsList = Int32Array.from(atomsList);\r\n\r\n    return 0;\r\n  }\r\n\r\n  destroyVoxels() {\r\n    this._atomsList = null;\r\n    this._voxelList = null;\r\n\r\n    this._atoms = null;\r\n    this._vertices = null;\r\n    this._vBoxMin = null;\r\n    this._vBoxMax = null;\r\n  }\r\n\r\n  /**\r\n   * Enumerate all atoms affecting specified point\r\n   *\r\n   * @param {Vector3}    point    - point in 3D\r\n   * @param {func(atom)} process  - function to call for each atom\r\n   */\r\n  forEachRelatedAtom(point, process) {\r\n    // find corresponding voxel\r\n    const xInd = Math.floor((point.x - this._vBoxMin.x) * this._numCells * this._xScale);\r\n    const yInd = Math.floor((point.y - this._vBoxMin.y) * this._numCells * this._yScale);\r\n    const zInd = Math.floor((point.z - this._vBoxMin.z) * this._numCells * this._zScale);\r\n    const indVoxel = xInd + yInd * this._numCells + zInd * this._numCells * this._numCells;\r\n\r\n    // run through atoms affecting this voxel\r\n    const atoms = this._atoms;\r\n    for (let ref = this._voxelList[indVoxel]; ref >= 0; ref = this._atomsList[ref * 2 + 1]) {\r\n      const indexAtom = this._atomsList[ref * 2];\r\n      process(atoms[indexAtom]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get atom closest to specified point\r\n   *\r\n   * @param {Vector3} point  - point in 3D\r\n   *\r\n   * @returns {IsoSurfaceAtomColored} atom, or null if not found\r\n   */\r\n  getClosestAtom(point) {\r\n    let closest = null;\r\n    let minDist2 = Number.MAX_VALUE;\r\n\r\n    this.forEachRelatedAtom(point, (atom) => {\r\n      const dist2 = point.distanceToSquared(atom.coord);\r\n      if (dist2 < minDist2) {\r\n        minDist2 = dist2;\r\n        closest = atom;\r\n      }\r\n    });\r\n\r\n    return closest;\r\n  }\r\n\r\n  /**\r\n   * Build normals for isosurface, using atoms information\r\n   *\r\n   * @param {number} numVertices  - Number of vertices in final geometry (to render)\r\n   * @param {Vector3} vertices    - Geometry vertices (3d coordinates array)\r\n   * @param {Vector3} normals     - Normals for output\r\n   *\r\n   * @returns {number} 0, if success\r\n   */\r\n  buildNormals(numVertices, vertices, normals) {\r\n    const self = this;\r\n    let numCloseAtoms = 0;\r\n    let vx = 0;\r\n    let vy = 0;\r\n    let vz = 0;\r\n    let dist2;\r\n    let vNormalX = 0;\r\n    let vNormalY = 0;\r\n    let vNormalZ = 0;\r\n    let koef = 0;\r\n    let w = 0;\r\n    const r25 = 2.5;\r\n    const r01 = 0.1;\r\n\r\n    const maxRadAffect = this._aveRad * r25;\r\n    const maxRadAffect2 = maxRadAffect * maxRadAffect;\r\n    const expScale = -this._aveRad * r01;\r\n\r\n    // some stats\r\n    // numSlowAtoms = 0;\r\n\r\n    const gatherNormals = function (atom) {\r\n      const dx = vx - atom.coord.x;\r\n      const dy = vy - atom.coord.y;\r\n      const dz = vz - atom.coord.z;\r\n      dist2 = dx * dx + dy * dy + dz * dz;\r\n      if (dist2 > maxRadAffect2) {\r\n        return;\r\n      }\r\n\r\n      // get weight for gaussian smoothing\r\n      const rad = atom.radius + self._probeRadius;\r\n      koef = dist2 - (rad * rad);\r\n      if (koef < 0.0) {\r\n        koef = -koef;\r\n      }\r\n      w = Math.exp(expScale * koef);\r\n\r\n      vNormalX += dx * w;\r\n      vNormalY += dy * w;\r\n      vNormalZ += dz * w;\r\n      numCloseAtoms++;\r\n    };\r\n\r\n    let maxClosedAtoms = 0;\r\n    // process all vertices, one by one\r\n    for (let i = 0; i < numVertices; i++) {\r\n      vx = vertices[i].x;\r\n      vy = vertices[i].y;\r\n      vz = vertices[i].z;\r\n\r\n      numCloseAtoms = 0;\r\n      vNormalX = vNormalY = vNormalZ = 0.0;\r\n\r\n      this.forEachRelatedAtom(vertices[i], gatherNormals);\r\n\r\n      maxClosedAtoms = (numCloseAtoms > maxClosedAtoms) ? numCloseAtoms : maxClosedAtoms;\r\n\r\n      // normalize vNormal\r\n      dist2 = vNormalX * vNormalX + vNormalY * vNormalY + vNormalZ * vNormalZ;\r\n      if (numCloseAtoms > 0) {\r\n        koef = 1.0 / Math.sqrt(dist2);\r\n        vNormalX *= koef;\r\n        vNormalY *= koef;\r\n        vNormalZ *= koef;\r\n      }\r\n      normals[i].x = vNormalX;\r\n      normals[i].y = vNormalY;\r\n      normals[i].z = vNormalZ;\r\n    } // for (i) all vertices\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Build vertex colors for isosurface, using atoms information\r\n   *\r\n   * @param {number} numVertices  - Number of vertices in final geometry (to render)\r\n   * @param {Vector3} vertices    - Geometry vertices (3d coordinates array)\r\n   * @param {Vector3} colors                - Colors for output\r\n   * @param {number} radiusColorSmoothness  - Radius of smoothness sphere\r\n   *\r\n   * @returns {number} 0, if success\r\n   */\r\n  buildColors(numVertices, vertices, colors, radiusColorSmoothness) {\r\n    const self = this;\r\n    let vx = 0.0;\r\n    let vy = 0.0;\r\n    let vz = 0.0;\r\n    let koef = 0.0;\r\n    let w = 0.0;\r\n    const KOEF_ADD = 0.8;\r\n\r\n    const maxRadAffect = radiusColorSmoothness;\r\n    const maxRadAffect2 = maxRadAffect * maxRadAffect;\r\n\r\n    let colorsClose = [];\r\n    let weights = [];\r\n    let weightsSum = 0;\r\n\r\n    const gatherColors = function (atom) {\r\n      const dx = vx - atom.coord.x;\r\n      const dy = vy - atom.coord.y;\r\n      const dz = vz - atom.coord.z;\r\n      const dist2 = dx * dx + dy * dy + dz * dz;\r\n      if (dist2 > maxRadAffect2) {\r\n        return;\r\n      }\r\n\r\n      // get weight for gaussian smoothing\r\n      const rad = atom.radius + self._probeRadius;\r\n      koef = dist2 - (rad * rad);\r\n      if (koef < 0.0) {\r\n        koef = -koef;\r\n      }\r\n      w = 1.0 / (KOEF_ADD + koef);\r\n\r\n      colorsClose.push([atom.colorX, atom.colorY, atom.colorZ]);\r\n      weights.push(w); // save weights for use\r\n      weightsSum += w; // calc sum of weights fo further normalization\r\n    };\r\n\r\n    // process all vertices, one by one\r\n    for (let i = 0; i < numVertices; i++) {\r\n      vx = vertices[i].x;\r\n      vy = vertices[i].y;\r\n      vz = vertices[i].z;\r\n\r\n      colorsClose = [];\r\n      weights = [];\r\n      weightsSum = 0;\r\n\r\n      this.forEachRelatedAtom(vertices[i], gatherColors);\r\n\r\n      // normalized weighted sum of colors\r\n      for (let j = 0; j < colorsClose.length; ++j) {\r\n        const weightNormalized = weights[j] / weightsSum;\r\n        colors[i].x += colorsClose[j][0] * weightNormalized;\r\n        colors[i].y += colorsClose[j][1] * weightNormalized;\r\n        colors[i].z += colorsClose[j][2] * weightNormalized;\r\n      }\r\n    } // for (i) all vertices\r\n    return 0;\r\n  }\r\n}\r\nexport default IsosurfaceBuildNormals;\r\n","import * as THREE from 'three';\r\n\r\n/**\r\n * Class for geometry (triangle mesh) representation\r\n *\r\n *\r\n * @param {number} maxNumVertices Maximum possible number of vertices in mesh\r\n * @param {number} maxNumTriangles Maximum possible number of triangles in mesh\r\n * @param {boolean} needVertexColors Obvious\r\n */\r\nclass IsoSurfaceGeo {\r\n  constructor(maxNumVertices, maxNumTriangles, needVertexColors) {\r\n    this._maxNumVertices = maxNumVertices;\r\n    this._maxNumTriangles = maxNumTriangles;\r\n    this._vertices = new Array(maxNumVertices);\r\n    this._normals = new Array(maxNumVertices);\r\n    this._colors = null;\r\n    if (needVertexColors) {\r\n      this._colors = new Array(maxNumVertices);\r\n    }\r\n    this._indices = new Array(maxNumTriangles * (1 + 2));\r\n    this._numVertices = 0;\r\n    this._numTriangles = 0;\r\n\r\n    let i;\r\n    for (i = 0; i < maxNumVertices; i++) {\r\n      this._vertices[i] = new THREE.Vector3();\r\n      this._normals[i] = new THREE.Vector3();\r\n    }\r\n    for (i = 0; i < maxNumTriangles * (1 + 2); i++) {\r\n      this._indices[i] = -1;\r\n    }\r\n    if (needVertexColors) {\r\n      for (i = 0; i < maxNumVertices; i++) {\r\n        this._colors[i] = new THREE.Vector3();\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this._vertices = null;\r\n    this._normals = null;\r\n    this._indices = null;\r\n  }\r\n}\r\nexport default IsoSurfaceGeo;\r\n","import * as THREE from 'three';\r\nimport IsoSurfaceGeometry from './IsoSurfaceGeometry';\r\nimport IsoSurfaceAtomColored from './IsoSurfaceAtomColored';\r\nimport IsosurfaceBuildNormals from './IsosurfaceBuildNormals';\r\nimport IsoSurfaceMarchCube from './IsoSurfaceMarchCube';\r\nimport IsoSurfaceGeo from './IsoSurfaceGeo';\r\nimport chem from '../../chem';\r\nimport utils from '../../utils';\r\n\r\nconst COLOR_SIZE = 3;\r\nconst HASH_SIZE = 32768;\r\nconst { Element } = chem;\r\n\r\n/**\r\n * This class implements 'quick' isosurface geometry generation algorithm.\r\n * @param spheresCount - number of atoms/spheres\r\n * @param opts - geometry specific options\r\n * @constructor\r\n */\r\n\r\nclass SSIsosurfaceGeometry extends IsoSurfaceGeometry {\r\n  _build() {\r\n    // convert geoOut into arrays of positions, indices, normals\r\n    this._innerBuild();\r\n    const geoOut = this.getGeo();\r\n    this.destroy();\r\n    this._fromGeo(geoOut);\r\n  }\r\n\r\n  _fromGeo(geoOut) {\r\n    let colors = null;\r\n    const positions = utils.allocateTyped(Float32Array, (1 + 2) * geoOut._numVertices);\r\n    const normals = utils.allocateTyped(Float32Array, (1 + 2) * geoOut._numVertices);\r\n    if (geoOut._colors !== null) {\r\n      colors = utils.allocateTyped(Float32Array, (1 + 2) * geoOut._numVertices);\r\n    }\r\n    const indices = utils.allocateTyped(Uint32Array, (1 + 2) * geoOut._numTriangles);\r\n\r\n    for (let i = 0, j = 0; i < geoOut._numVertices; i++) {\r\n      positions[j + 0] = (geoOut._vertices[i].x);\r\n      positions[j + 1] = (geoOut._vertices[i].y);\r\n      positions[j + 2] = (geoOut._vertices[i].z);\r\n      normals[j + 0] = geoOut._normals[i].x;\r\n      normals[j + 1] = geoOut._normals[i].y;\r\n      normals[j + 2] = geoOut._normals[i].z;\r\n      j += 3;\r\n    }\r\n    if (colors !== null) {\r\n      for (let i = 0, j = 0; i < geoOut._numVertices; i++, j += 3) {\r\n        colors[j + 0] = geoOut._colors[i].x;\r\n        colors[j + 1] = geoOut._colors[i].y;\r\n        colors[j + 2] = geoOut._colors[i].z;\r\n      }\r\n    }\r\n\r\n    const numTri3 = geoOut._numTriangles * (1 + 2);\r\n    for (let i = 0; i < numTri3; i++) {\r\n      indices[i] = geoOut._indices[i];\r\n    }\r\n\r\n    this.setIndex(new THREE.BufferAttribute(indices, 1));\r\n    this.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n    this.setAttribute('normal', new THREE.BufferAttribute(normals, 3));\r\n    this.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n    this.computeBoundingBox();\r\n    this.computeBoundingSphere();\r\n\r\n    geoOut.destroy();\r\n  }\r\n\r\n  convertToAtomsColored(packedArrays, atomsColored) {\r\n    const { atoms, colors } = packedArrays;\r\n    for (let i = 0, numAtoms = atoms.length; i < numAtoms; i++) {\r\n      const vCenter = atoms[i].position;\r\n      const { radius } = atoms[i].element;\r\n      atomsColored[i] = new IsoSurfaceAtomColored(vCenter, radius);\r\n      const nm = atoms[i].element.number;\r\n      atomsColored[i].atomType = this.getType(nm);\r\n      let cIdx = COLOR_SIZE * i;\r\n      atomsColored[i].colorX = colors[cIdx++];\r\n      atomsColored[i].colorY = colors[cIdx++];\r\n      atomsColored[i].colorZ = colors[cIdx];\r\n      atomsColored[i].srcAtom = atoms[i];\r\n    }\r\n  }\r\n\r\n  getGeo() {\r\n    return this.geoOut;\r\n  }\r\n\r\n  destroy() {\r\n    this.atoms = null;\r\n\r\n    this.hashLines = null;\r\n    this.hashEntries = null;\r\n  }\r\n\r\n  /**\r\n   * Calculates bounding box for array with spheres (atoms)\r\n   *\r\n   * @param {Object}  atoms      Atoms array\r\n   * @param {Vector3} vBoxMin    Bounding box min point\r\n   * @param {Vector3} vBoxMax    Bounding box max point\r\n   */\r\n  getBoundingBox(atoms, vBoxMin, vBoxMax) {\r\n    const bigNum = 10000000.0;\r\n\r\n    vBoxMin.x = vBoxMin.y = vBoxMin.z = bigNum;\r\n    vBoxMax.x = vBoxMax.y = vBoxMax.z = 0 - bigNum;\r\n\r\n    const probeRadius2 = this.probeRadius * this.atomRadiusScale;\r\n    let radMax = 0.0;\r\n    for (let i = 0, num = atoms.length; i < num; i++) {\r\n      const vCenter = atoms[i].coord;\r\n      const rad = atoms[i].radius + probeRadius2;\r\n      radMax = (rad > radMax) ? rad : radMax;\r\n      if (vCenter.x - rad < vBoxMin.x) {\r\n        vBoxMin.x = vCenter.x - rad;\r\n      }\r\n      if (vCenter.y - rad < vBoxMin.y) {\r\n        vBoxMin.y = vCenter.y - rad;\r\n      }\r\n      if (vCenter.z - rad < vBoxMin.z) {\r\n        vBoxMin.z = vCenter.z - rad;\r\n      }\r\n      if (vCenter.x + rad > vBoxMax.x) {\r\n        vBoxMax.x = vCenter.x + rad;\r\n      }\r\n      if (vCenter.y + rad > vBoxMax.y) {\r\n        vBoxMax.y = vCenter.y + rad;\r\n      }\r\n      if (vCenter.z + rad > vBoxMax.z) {\r\n        vBoxMax.z = vCenter.z + rad;\r\n      }\r\n    }\r\n    vBoxMin.x -= radMax;\r\n    vBoxMin.y -= radMax;\r\n    vBoxMin.z -= radMax;\r\n    vBoxMax.x += radMax;\r\n    vBoxMax.y += radMax;\r\n    vBoxMax.z += radMax;\r\n  }\r\n\r\n  /**\r\n   * Calculate (x,y,z) cordinate of the cell corner point\r\n   *\r\n   * @param {Vector3} vBoxMin Bounding box min point\r\n   * @param {Vector3} vBoxMax Bounding box max point\r\n   * @param {number} x Cell integer x coordinate\r\n   * @param {number} y Cell integer y coordinate\r\n   * @param {number} z Cell integer z coordinate\r\n   * @param {number} numPoints NUm points in cell on side\r\n   * @param {Vector3} vOut Output vector\r\n   */\r\n  getCornerCoord(vBoxMin, vBoxMax, x, y, z, numPoints, vOut) {\r\n    const invNP = 1.0 / (numPoints - 1.0);\r\n    const tx = x * invNP;\r\n    const ty = y * invNP;\r\n    const tz = z * invNP;\r\n\r\n    vOut.x = vBoxMin.x * (1.0 - tx) + vBoxMax.x * tx;\r\n    vOut.y = vBoxMin.y * (1.0 - ty) + vBoxMax.y * ty;\r\n    vOut.z = vBoxMin.z * (1.0 - tz) + vBoxMax.z * tz;\r\n  }\r\n\r\n  /**\r\n   * Calculate point of intersection of sphere surface\r\n   * and cell edge, given by [indexA, indexB] line\r\n   *\r\n   * @param {number} indexA Cell vertex index in [0..11]\r\n   * @param {number} indexB Cell vertex index in [0..11]\r\n   * @param {array}  sign   Sign array for all 8 vertices\r\n   * @param {object} cube   Cube\r\n   * @param {number} indexPointValue for value placement\r\n   * @param {Vector3} vOut  Point of intersection\r\n   */\r\n  buildEdgePoint(indexA, indexB, sign, cube, indexPointValue, vOut) {\r\n    if (sign[indexA] ^ sign[indexB]) {\r\n      const cTwentyFour = 24;\r\n      const t = (0 - cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexA])\r\n        / (cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexB]\r\n          - cube.pointsValuesLinear[indexPointValue + cTwentyFour + indexA]);\r\n      const xa = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 0];\r\n      const ya = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 1];\r\n      const za = cube.pointsValuesLinear[indexPointValue + indexA * (2 + 1) + 2];\r\n      const xb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 0];\r\n      const yb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 1];\r\n      const zb = cube.pointsValuesLinear[indexPointValue + indexB * (2 + 1) + 2];\r\n\r\n      vOut.x = xa * (1.0 - t) + xb * t;\r\n      vOut.y = ya * (1.0 - t) + yb * t;\r\n      vOut.z = za * (1.0 - t) + zb * t;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if triangle is visible (vertices are close to atoms included in visibility set)\r\n   *\r\n   * @param {Vector3} v0 Vertex #0\r\n   * @param {Vector3} v1 Vertex #1\r\n   * @param {Vector3} v2 Vertex #2\r\n   * @returns {boolean} true if triangle is visible\r\n   */\r\n  isTriangleVisible(v0, v1, v2) {\r\n    const a0 = this.voxelWorld.getClosestAtom(v0);\r\n    const a1 = this.voxelWorld.getClosestAtom(v1);\r\n    const a2 = this.voxelWorld.getClosestAtom(v2);\r\n    if (a0 === null || a1 === null || a2 === null\r\n      || a0.srcAtom === null || a1.srcAtom === null || a2.srcAtom === null) {\r\n      return false;\r\n    }\r\n\r\n    return this.visibilitySelector.includesAtom(a0.srcAtom)\r\n      && this.visibilitySelector.includesAtom(a1.srcAtom)\r\n      && this.visibilitySelector.includesAtom(a2.srcAtom);\r\n  }\r\n\r\n  /**\r\n   * Add triangle to result geometry\r\n   *\r\n   * @param {Vector3} v0 Vertex #0\r\n   * @param {Vector3} v1 Vertex #1\r\n   * @param {Vector3} v2 Vertex #2\r\n   * @returns {boolean} false if no more triangles can be added\r\n   */\r\n  addTriangle(v0, v1, v2) {\r\n    if (this.visibilitySelector && !this.isTriangleVisible(v0, v1, v2)) {\r\n      return true;\r\n    }\r\n\r\n    const geo = this.geoOut;\r\n\r\n    if (geo._numTriangles >= this.maxNumTriangles) {\r\n      return false;\r\n    }\r\n\r\n    // Add vertex with optimize\r\n    const indInGeo0 = this.addVertexToGeo(geo, v0);\r\n    const indInGeo1 = this.addVertexToGeo(geo, v1);\r\n    const indInGeo2 = this.addVertexToGeo(geo, v2);\r\n    if ((indInGeo0 | indInGeo1 | indInGeo2) < 0) {\r\n      return false;\r\n    }\r\n\r\n    const itr = 3 * geo._numTriangles;\r\n    geo._indices[itr + 0] = indInGeo0;\r\n    geo._indices[itr + 1] = indInGeo1;\r\n    geo._indices[itr + 2] = indInGeo2;\r\n    geo._numTriangles++;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Build result geometry (triangle mesh) from marching cube cells\r\n   *\r\n   * @param {number} meshRes Marchnig cube vertex count on each side\r\n   * @param {Vector3} vBoxMin Bounding box point min\r\n   * @param {Vector3} vBoxMax Bounding box point max\r\n   * @param {number} corners float values array for each cube point\r\n   * @param {Vector3} vCellStep vector to next cube cell diagonal point\r\n   * @param {object} cube IsoSurfaceMarchCube object\r\n   * @returns {number} 0, if success (<0) is error\r\n   */\r\n  buildGeoFromCorners(meshRes, vBoxMin, vBoxMax, corners, vCellStep, cube) {\r\n    const arrSize = 12;\r\n    const cNumVerts = 8;\r\n    const numCells = meshRes - 1;\r\n    const side = meshRes;\r\n    const side2 = meshRes * meshRes;\r\n\r\n    const vaEdges = new Array(arrSize);\r\n    for (let i = 0; i < arrSize; i++) {\r\n      vaEdges[i] = new THREE.Vector3();\r\n    }\r\n    const sign = [];\r\n    for (let i = 0; i < cNumVerts; i++) {\r\n      sign[i] = 1.0;\r\n    }\r\n    const vCorner = new THREE.Vector3();\r\n    let indCell = 0;\r\n    let indY = 0;\r\n    for (let y = 0; y < numCells; y++, indY += side2) {\r\n      let indZ = 0;\r\n      for (let z = 0; z < numCells; z++, indZ += side) {\r\n        for (let x = 0; x < numCells; x++) {\r\n          if (!cube.hasIntersection[indCell]) {\r\n            // next cell\r\n            indCell++;\r\n            continue;\r\n          }\r\n          const bitsInside = cube.bitsInside[indCell];\r\n\r\n          this.getCornerCoord(vBoxMin, vBoxMax, x, y, z, meshRes, vCorner);\r\n\r\n          const indPointValues = indCell * (2 << (2 + 2));\r\n          for (let i = 0, j = 0; i < cNumVerts; i++) {\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.x;\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.y;\r\n            cube.pointsValuesLinear[indPointValues + j++] = vCorner.z;\r\n          }\r\n\r\n          cube.pointsValuesLinear[indPointValues + 3] += vCellStep.x;\r\n          cube.pointsValuesLinear[indPointValues + 2 * 3] += vCellStep.x;\r\n          cube.pointsValuesLinear[indPointValues + 5 * 3] += vCellStep.x;\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3] += vCellStep.x;\r\n\r\n          cube.pointsValuesLinear[indPointValues + 2 * 3 + 2] += vCellStep.z;\r\n          cube.pointsValuesLinear[indPointValues + 3 * 3 + 2] += vCellStep.z;\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3 + 2] += vCellStep.z;\r\n          cube.pointsValuesLinear[indPointValues + 7 * 3 + 2] += vCellStep.z;\r\n\r\n          cube.pointsValuesLinear[indPointValues + 4 * 3 + 1] += vCellStep.y;\r\n          cube.pointsValuesLinear[indPointValues + 5 * 3 + 1] += vCellStep.y;\r\n          cube.pointsValuesLinear[indPointValues + 6 * 3 + 1] += vCellStep.y;\r\n          cube.pointsValuesLinear[indPointValues + 7 * 3 + 1] += vCellStep.y;\r\n\r\n          // now current cell has intersections (from -x to +x) on some cube edges\r\n          const indValues = indPointValues + 24;\r\n          for (let i = 0; i < cNumVerts; ++i) {\r\n            sign[i] = (cube.pointsValuesLinear[indValues + i] < 0.0) ? 1 : 0;\r\n          }\r\n\r\n          this.buildEdgePoint(0, 1, sign, cube, indPointValues, vaEdges[0]);\r\n          this.buildEdgePoint(1, 2, sign, cube, indPointValues, vaEdges[1]);\r\n          this.buildEdgePoint(2, 3, sign, cube, indPointValues, vaEdges[2]);\r\n          this.buildEdgePoint(3, 0, sign, cube, indPointValues, vaEdges[3]);\r\n\r\n          this.buildEdgePoint(4, 5, sign, cube, indPointValues, vaEdges[4]);\r\n          this.buildEdgePoint(5, 6, sign, cube, indPointValues, vaEdges[5]);\r\n          this.buildEdgePoint(6, 7, sign, cube, indPointValues, vaEdges[6]);\r\n          this.buildEdgePoint(7, 4, sign, cube, indPointValues, vaEdges[7]);\r\n\r\n          this.buildEdgePoint(0, 4, sign, cube, indPointValues, vaEdges[8]);\r\n          this.buildEdgePoint(1, 5, sign, cube, indPointValues, vaEdges[9]);\r\n          this.buildEdgePoint(2, 6, sign, cube, indPointValues, vaEdges[10]);\r\n          this.buildEdgePoint(3, 7, sign, cube, indPointValues, vaEdges[11]);\r\n\r\n          const offs = bitsInside * (2 << (1 + 2));\r\n          for (let numTri = 0, indTri = 0; numTri < (2 + 2 + 2); numTri++, indTri += 3) {\r\n            // s_triIndicesMarchCube is external array, defined in mold_ind.js\r\n            const i0 = cube.striIndicesMarchCube[offs + indTri];\r\n            if (i0 < 0) {\r\n              break;\r\n            }\r\n            const i1 = cube.striIndicesMarchCube[offs + indTri + 1];\r\n            const i2 = cube.striIndicesMarchCube[offs + indTri + 2];\r\n\r\n            if (!this.addTriangle(vaEdges[i0], vaEdges[i1], vaEdges[i2])) {\r\n              return 0 - 2;\r\n            }\r\n          } // for numTri\r\n\r\n          // next cell (cube)\r\n          indCell++;\r\n        } // for (x)\r\n      } // for (z)\r\n    } // for (y)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Returns number of cell with intersection with at least one sphere.\r\n   * Using this number, we can estimate required number of vertices\r\n   * and triangles to build result mesh.\r\n   *\r\n   * @param {number} side Number of points in cube voxels\r\n   * @param {number} numCells Number of cells in cube voxels (per direction)\r\n   * @param {array} corners Array of float values for cube corner points\r\n   * @param {object} cube IsoSurfaceMarchCube object\r\n   * @returns {number} numIntersectedCells\r\n   */\r\n  getNumIntersectedCells(side, numCells, corners, cube) {\r\n    const side2 = side * side;\r\n    const cNumVerts = 8;\r\n    let numIntersectedCells = 0;\r\n\r\n    let indCell = 0;\r\n    let indY = 0;\r\n    for (let y = 0; y < numCells; y++, indY += side2) {\r\n      let indZ = 0;\r\n      for (let z = 0; z < numCells; z++, indZ += side) {\r\n        for (let x = 0; x < numCells; x++) {\r\n          const cubeValuesIndex = indCell * (2 << (2 + 2)) + 24;\r\n          const indCorner = x + indZ + indY;\r\n\r\n          cube.pointsValuesLinear[cubeValuesIndex] = corners[indCorner];\r\n          cube.pointsValuesLinear[cubeValuesIndex + 1] = corners[indCorner + 1];\r\n          cube.pointsValuesLinear[cubeValuesIndex + 2] = corners[indCorner + side + 1];\r\n          cube.pointsValuesLinear[cubeValuesIndex + 3] = corners[indCorner + side];\r\n          cube.pointsValuesLinear[cubeValuesIndex + 4] = corners[side2 + indCorner];\r\n          cube.pointsValuesLinear[cubeValuesIndex + 5] = corners[side2 + indCorner + 1];\r\n          cube.pointsValuesLinear[cubeValuesIndex + 6] = corners[side2 + indCorner + side + 1];\r\n          cube.pointsValuesLinear[cubeValuesIndex + 7] = corners[side2 + indCorner + side];\r\n\r\n          // check read exception\r\n          // assert(side2 + indCorner + side + 1 < side3);\r\n\r\n          // get bit flags inside\r\n          let bitsInside = 0;\r\n          for (let i = 0; i < cNumVerts; ++i) {\r\n            if (cube.pointsValuesLinear[cubeValuesIndex + i] < 0.0) {\r\n              bitsInside |= (1 << i);\r\n            }\r\n          }\r\n\r\n          if ((bitsInside === 0) || (bitsInside === ((1 << cNumVerts) - 1))) {\r\n            cube.hasIntersection[indCell] = false;\r\n          } else {\r\n            cube.hasIntersection[indCell] = true;\r\n            numIntersectedCells++;\r\n          }\r\n          cube.bitsInside[indCell] = bitsInside;\r\n          // next cell\r\n          indCell++;\r\n        } // for (x)\r\n      } // for (z)\r\n    } // for (y)\r\n    return numIntersectedCells;\r\n  }\r\n\r\n  getType(letter) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const atomT = [0, 0, 1, 1, 2, 6, 3, 6, 4, 6, 5, 6, 6, 0, 7, 3, 8, 2, 9, 6, 10, 6, 11, 6, 12, 6, 13, 6, 14, 6, 15, 4,\r\n      16, 5, 17, 6, 18, 6, 19, 6, 20, 6, 21, 6, 22, 6, 23, 6, 24, 6, 25, 6, 26, 6, 27, 6, 28, 6, 29, 6, 30, 6, 31, 6,\r\n      32, 6, 33, 6, 34, 6, 35, 6, 36, 6, 37, 6, 38, 6, 39, 6, 40, 6, 41, 6, 42, 6, 43, 6, 44, 6, 45, 6, 46, 6, 47, 6,\r\n      48, 6, 49, 6, 50, 6, 51, 6, 52, 6, 53, 6, 54, 6, 55, 6, 56, 6, 57, 6, 58, 6, 59, 6, 60, 6, 61, 6, 62, 6, 63, 6,\r\n      64, 6, 65, 6, 66, 6, 67, 6, 68, 6, 69, 6, 70, 6, 71, 6, 72, 6, 73, 6, 74, 6, 75, 6, 76, 6, 77, 6, 78, 6, 79, 6,\r\n      80, 6, 81, 6, 82, 6, 83, 6, 84, 6, 85, 6, 86, 6, 87, 6, 88, 6, 89, 6, 90, 6, 91, 6, 92, 6, 93, 6, 94, 6, 95, 6,\r\n      96, 6, 97, 6, 98, 6, 99, 6, 100, 6, 101, 6, 102, 6, 103, 6, 104, 6, 105, 6, 106, 6, 107, 6, 108, 6, 109, 6];\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    if (letter < 1 || letter > atomT.length / 2\r\n      || (Object.keys(Element.ByAtomicNumber).length * 2) !== atomT.length) {\r\n      throw new Error('atomT.length  should be equal Element.ByAtomicNumber.length * 2');\r\n    }\r\n    return atomT[letter * 2];\r\n  }\r\n\r\n  /**\r\n   * Calculate values for marching cube grid points\r\n   * positive values are outside sphere, negative - is inside\r\n   *\r\n   * @param {array} corners array of float values\r\n   * @param {number} side Number of point in cube in 1 dimennsion\r\n   * @param {Vector3} vBoxMin Bounding box min point\r\n   * @param {Vector3} vBoxMax Bounding box max point\r\n   * @param {array} atoms Array of input atoms\r\n   * @param {number} probeRad radius for atom probing\r\n   */\r\n  calculateGridCorners(corners, side, vBoxMin, vBoxMax, atoms, probeRad) {\r\n    const side2 = side * side;\r\n    const side3 = side2 * side;\r\n    const vCorner = new THREE.Vector3();\r\n    const vDif = new THREE.Vector3();\r\n    /* eslint-disable no-magic-numbers */\r\n    const aLot = +1.0e12;\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    for (let i = 0; i < side3; i++) {\r\n      corners[i] = aLot; // to large value\r\n    }\r\n\r\n    const xScale = (side - 1) / (vBoxMax.x - vBoxMin.x);\r\n    const yScale = (side - 1) / (vBoxMax.y - vBoxMin.y);\r\n    const zScale = (side - 1) / (vBoxMax.z - vBoxMin.z);\r\n\r\n    for (let s = 0, numAtoms = atoms.length; s < numAtoms; s++) {\r\n      const atom = atoms[s];\r\n      const radius = atom.radius + probeRad;\r\n\r\n      const fx = ((atom.coord.x - radius) - vBoxMin.x) * xScale;\r\n      const fy = ((atom.coord.y - radius) - vBoxMin.y) * yScale;\r\n      const fz = ((atom.coord.z - radius) - vBoxMin.z) * zScale;\r\n\r\n      const indXMin = Math.floor(fx);\r\n      const indYMin = Math.floor(fy);\r\n      const indZMin = Math.floor(fz);\r\n\r\n      let indXMax = Math.floor(((atom.coord.x + radius) - vBoxMin.x) * xScale);\r\n      let indYMax = Math.floor(((atom.coord.y + radius) - vBoxMin.y) * yScale);\r\n      let indZMax = Math.floor(((atom.coord.z + radius) - vBoxMin.z) * zScale);\r\n\r\n      indXMax++;\r\n      indYMax++;\r\n      indZMax++;\r\n      indXMax = (indXMax <= (side - 1)) ? indXMax : (side - 1);\r\n      indYMax = (indYMax <= (side - 1)) ? indYMax : (side - 1);\r\n      indZMax = (indZMax <= (side - 1)) ? indZMax : (side - 1);\r\n\r\n      for (let y = indYMin; y <= indYMax; y++) {\r\n        const indY = y * side2;\r\n        for (let z = indZMin; z <= indZMax; z++) {\r\n          const indZ = z * side;\r\n          for (let x = indXMin; x <= indXMax; x++) {\r\n            const ind = indY + indZ + x;\r\n            this.getCornerCoord(vBoxMin, vBoxMax, x, y, z, side, vCorner);\r\n            vDif.x = vCorner.x - atom.coord.x;\r\n            vDif.y = vCorner.y - atom.coord.y;\r\n            vDif.z = vCorner.z - atom.coord.z;\r\n            const distToSphere = Math.sqrt(vDif.x * vDif.x + vDif.y * vDif.y + vDif.z * vDif.z);\r\n            // val: < 0, if inside sphere\r\n            // val: > 0, if outside sphere\r\n            const val = distToSphere - radius;\r\n            if (val < corners[ind]) {\r\n              corners[ind] = val;\r\n            }\r\n          } // for (x)\r\n        } // for (z)\r\n      } // for (y)\r\n    } // for (s)\r\n  }\r\n\r\n  /**\r\n   * Create memory pool for vertex hash management\r\n   *\r\n   * @param {number} maxNumVertices Maximum possible number of vertices (that will be build)\r\n   * @param {number} maxNumTriangles Maximum possible number of triangles (that will be build)\r\n   * @returns {number} 0, if success. (<0) is non memory\r\n   */\r\n  createVertexHash(maxNumVertices, maxNumTriangles) {\r\n    this.hashLines = utils.allocateTyped(Int32Array, HASH_SIZE * 2);\r\n    if (this.hashLines === null) {\r\n      return 0 - 1;\r\n    }\r\n    for (let i = 0, j = 0; i < HASH_SIZE; i++) {\r\n      this.hashLines[j++] = 0; // num vertices in this hash line\r\n      this.hashLines[j++] = 0 - 1; // index of the first entry\r\n    }\r\n\r\n    this.maxNumVertices = maxNumVertices;\r\n    this.maxNumTriangles = maxNumTriangles;\r\n\r\n    this.numHashEtriesAllocated = maxNumVertices;\r\n    this.hashEntries = utils.allocateTyped(Int32Array, 2 * this.numHashEtriesAllocated);\r\n    if (this.hashEntries === null) {\r\n      return 0 - 1;\r\n    }\r\n    for (let i = 0, j = 0; i < this.numHashEtriesAllocated; i++) {\r\n      this.hashEntries[j++] = 0 - 1; // index of vertex\r\n      this.hashEntries[j++] = 0 - 1; // next hash entry index\r\n    }\r\n    this.numHashEntryIndex = 0;\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Allocate and return new hash entry. Just check possible amount.\r\n   *\r\n   * @returns {number} index of hash entry, that can be used for geometry add vertex functionality\r\n   */\r\n  getNewHashEntry() {\r\n    if (this.numHashEntryIndex < this.numHashEtriesAllocated) {\r\n      const i = this.numHashEntryIndex;\r\n      this.numHashEntryIndex++;\r\n      return i;\r\n    }\r\n    return 0 - 1;\r\n  }\r\n\r\n  /**\r\n   * Add vertex to geometry structure\r\n   * using vertex hash table to quickly check, is this vertex already exist in geometry\r\n   *\r\n   * @param {object} geoOut Geometry to build\r\n   * @param {Vector3} vAdd Vertex to add\r\n   * @returns {number} index of added (or existing) vertex in geometry.\r\n   */\r\n  addVertexToGeo(geoOut, vAdd) {\r\n    let entry;\r\n    const oneHynberes = 0.01;\r\n    const n815851 = 815851;\r\n    const n37633 = 37633;\r\n    const n2453543 = 2453543;\r\n    const r106 = 1.0e-6;\r\n\r\n    const hashResolution = this.marCubeResoultion << 2;\r\n    const v = new THREE.Vector3();\r\n    const ix = Math.floor(hashResolution * (vAdd.x - this.vBoxMin.x) / (this.vBoxMax.x + oneHynberes - this.vBoxMin.x));\r\n    const iy = Math.floor(hashResolution * (vAdd.y - this.vBoxMin.y) / (this.vBoxMax.y + oneHynberes - this.vBoxMin.y));\r\n    const iz = Math.floor(hashResolution * (vAdd.z - this.vBoxMin.z) / (this.vBoxMax.z + oneHynberes - this.vBoxMin.z));\r\n    let iHash = ix * n815851 + iz * n37633 + iy * n2453543;\r\n    iHash &= (HASH_SIZE - 1);\r\n    const hLineIndex = iHash + iHash;\r\n\r\n    // search vertex via hash\r\n    // search in hash list\r\n    if (this.vBoxMin !== null && this.vBoxMax !== null) {\r\n      for (entry = this.hashLines[hLineIndex + 1]; entry >= 0; entry = this.hashEntries[entry * 2 + 1]) {\r\n        const ind = this.hashEntries[entry * 2 + 0]; // vertex index\r\n        v.copy(geoOut._vertices[ind]);\r\n        v.x -= vAdd.x;\r\n        v.y -= vAdd.y;\r\n        v.z -= vAdd.z;\r\n        const dot2 = v.x * v.x + v.y * v.y + v.z * v.z;\r\n        if (dot2 < r106) {\r\n          return ind;\r\n        } // if (found)\r\n      } // for (entry)\r\n    } // search\r\n\r\n    // add new vertex to geometry\r\n    if (geoOut._numVertices >= this.maxNumVertices) {\r\n      return 0 - 1;\r\n    }\r\n\r\n    const iVertAdd = geoOut._numVertices;\r\n    geoOut._vertices[iVertAdd].copy(vAdd);\r\n\r\n    // add to hash\r\n    if (this.vBoxMin !== null && this.vBoxMax !== null) {\r\n      entry = this.getNewHashEntry();\r\n      if (entry < 0) {\r\n        return 0 - 1;\r\n      }\r\n      const entryFirst = this.hashLines[hLineIndex + 1];\r\n      this.hashLines[hLineIndex + 1] = entry;\r\n      this.hashEntries[entry * 2 + 0] = iVertAdd;\r\n      this.hashEntries[entry * 2 + 1] = entryFirst;\r\n\r\n      this.hashLines[hLineIndex + 0]++; // num vertices in line ++\r\n    }\r\n    geoOut._numVertices++;\r\n    return iVertAdd;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {number} side some placeholder description\r\n   * @param {number} probeSphereRadius some placeholder description\r\n   * @param {object} vBoxMin some placeholder description\r\n   * @param {object} vBoxMax some placeholder description\r\n   * @param {object} geoOut some placeholder description\r\n   * @param {object} corners some placeholder description\r\n   * @returns {number} always 0\r\n   */\r\n  modifyExcludedFromGeo(\r\n    side,\r\n    probeSphereRadius,\r\n    vBoxMin,\r\n    vBoxMax,\r\n    geoOut,\r\n    corners,\r\n  ) {\r\n    let ind;\r\n    let distToSphere;\r\n    let distToBorder;\r\n    const r11 = 1.1;\r\n\r\n    function innerBlockWorkAround() {\r\n      if (distToBorder > 0.0) {\r\n        // point is inside probe sphere\r\n        if (corners[ind] < 0.0) {\r\n          corners[ind] = distToBorder; // was inside surface, now is oustide ( > 0)\r\n        }\r\n        if (distToBorder > corners[ind]) {\r\n          corners[ind] = distToBorder; // find positive maximum\r\n        }\r\n      } else if (distToBorder > corners[ind]) { // point is outside sphere\r\n        corners[ind] = distToBorder; // find negative maximum\r\n      }\r\n    }\r\n\r\n    const side2 = side * side;\r\n    const xScale = (side - 1) / (vBoxMax.x - vBoxMin.x);\r\n    const yScale = (side - 1) / (vBoxMax.y - vBoxMin.y);\r\n    const zScale = (side - 1) / (vBoxMax.z - vBoxMin.z);\r\n\r\n    const probeSpRad2 = (probeSphereRadius * 2) * (probeSphereRadius * 2);\r\n    const sideInv = 1.0 / (side - 1);\r\n\r\n    for (let i = 0; i < geoOut._numVertices; i++) {\r\n      const vCenter = geoOut._vertices[i];\r\n\r\n      const radEst = probeSphereRadius * r11;\r\n\r\n      let indXMin = Math.floor(((vCenter.x - radEst) - vBoxMin.x) * xScale);\r\n      let indYMin = Math.floor(((vCenter.y - radEst) - vBoxMin.y) * yScale);\r\n      let indZMin = Math.floor(((vCenter.z - radEst) - vBoxMin.z) * zScale);\r\n\r\n      let indXMax = Math.floor(((vCenter.x + radEst) - vBoxMin.x) * xScale);\r\n      let indYMax = Math.floor(((vCenter.y + radEst) - vBoxMin.y) * yScale);\r\n      let indZMax = Math.floor(((vCenter.z + radEst) - vBoxMin.z) * zScale);\r\n\r\n      indXMin = (indXMin >= 0) ? indXMin : 0;\r\n      indYMin = (indYMin >= 0) ? indYMin : 0;\r\n      indZMin = (indZMin >= 0) ? indZMin : 0;\r\n      indXMax = (indXMax <= (side - 1)) ? indXMax : (side - 1);\r\n      indYMax = (indYMax <= (side - 1)) ? indYMax : (side - 1);\r\n      indZMax = (indZMax <= (side - 1)) ? indZMax : (side - 1);\r\n\r\n      for (let iy = indYMin; iy <= indYMax; iy++) {\r\n        const indY = iy * side2;\r\n        for (let iz = indZMin; iz <= indZMax; iz++) {\r\n          const indZ = iz * side;\r\n          for (let ix = indXMin; ix <= indXMax; ix++) {\r\n            ind = indY + indZ + ix;\r\n            // getCornerCoord(vBoxMin, vBoxMax, ix, iy, iz, side, &vCorner);\r\n            let t = ix * sideInv;\r\n            const xCorner = vBoxMin.x * (1.0 - t) + vBoxMax.x * t;\r\n            t = iy * sideInv;\r\n            const yCorner = vBoxMin.y * (1.0 - t) + vBoxMax.y * t;\r\n            t = iz * sideInv;\r\n            const zCorner = vBoxMin.z * (1.0 - t) + vBoxMax.z * t;\r\n\r\n            const dx = xCorner - vCenter.x;\r\n            const dy = yCorner - vCenter.y;\r\n            const dz = zCorner - vCenter.z;\r\n            const dist2 = dx * dx + dy * dy + dz * dz;\r\n            if (dist2 < probeSpRad2) {\r\n              distToSphere = Math.sqrt(dist2);\r\n              distToBorder = -(distToSphere - probeSphereRadius);\r\n              innerBlockWorkAround();\r\n            } // if (dist from corner point to sphere center more 2 radiuses)\r\n          } // for (ix)\r\n        } // for (iz)\r\n      } // for (iy)\r\n    } // for (i) all geo vertices\r\n    return 0;\r\n  }\r\n\r\n  _innerBuild() {\r\n    let ok;\r\n    const expandFactor = 1.2;\r\n\r\n    // performance test\r\n    // this.performanceTest();\r\n\r\n    // Create temporary atoms (but colored)\r\n    const packedArrays = {\r\n      posRad: this._posRad,\r\n      colors: this._colors,\r\n      atoms: this._opts.atoms,\r\n    };\r\n    this.complex = this._opts.parent;\r\n    this.atoms = packedArrays.atoms;\r\n    this.meshResolution = this._opts.gridSpacing;\r\n    this.atomRadiusScale = this._opts.radScale;\r\n    this.colorMode = this._opts.colorMode;\r\n    this.probeRadius = this._opts.probeRadius;\r\n    this.useVertexColors = true;\r\n    this.excludeProbe = this._opts.excludeProbe;\r\n    this.visibilitySelector = this._opts.visibilitySelector;\r\n\r\n    this.geoOut = null;\r\n\r\n    this.hashLines = null;\r\n    this.hashEntries = null;\r\n    this.numHashEtriesAllocated = 0;\r\n    this.numHashEntryIndex = 0;\r\n    this.maxNumVertices = 0;\r\n    this.maxNumTriangles = 0;\r\n\r\n    const atomsColored = new Array(this.atoms.length);\r\n    this.convertToAtomsColored(packedArrays, atomsColored);\r\n\r\n    // find bbox for spheres scene\r\n    const vBoxMin = this.vBoxMin = new THREE.Vector3();\r\n    const vBoxMax = this.vBoxMax = new THREE.Vector3();\r\n    this.getBoundingBox(atomsColored, vBoxMin, vBoxMax);\r\n\r\n    const marCubeResoultion = this.marCubeResoultion = this.meshResolution * (2 + 2);\r\n\r\n    // build grid corners for Marching cube algorithm\r\n    const side = marCubeResoultion;\r\n    const side2 = side * side;\r\n    const side3 = side2 * side;\r\n    const corners = utils.allocateTyped(Float32Array, side3);\r\n    const rProbeRadius = this.probeRadius * this.atomRadiusScale;\r\n\r\n    this.calculateGridCorners(corners, side, vBoxMin, vBoxMax, atomsColored, rProbeRadius);\r\n\r\n    const numCells = marCubeResoultion - 1;\r\n    const cube = new IsoSurfaceMarchCube();\r\n    ok = cube.create(numCells);\r\n    if (ok < 0) {\r\n      return ok;\r\n    }\r\n    // copy corners to cells\r\n    const vCellStep = new THREE.Vector3();\r\n    vCellStep.x = (vBoxMax.x - vBoxMin.x) / numCells;\r\n    vCellStep.y = (vBoxMax.y - vBoxMin.y) / numCells;\r\n    vCellStep.z = (vBoxMax.z - vBoxMin.z) / numCells;\r\n\r\n    let numIntersectedCellsEstim = this.getNumIntersectedCells(side, numCells, corners, cube);\r\n    let maxNumVertices = Math.floor(numIntersectedCellsEstim * expandFactor);\r\n    let maxNumTriangles = Math.floor(numIntersectedCellsEstim * expandFactor * 2);\r\n\r\n    this.geoOut = new IsoSurfaceGeo(maxNumVertices, maxNumTriangles, this.useVertexColors);\r\n\r\n    ok = this.createVertexHash(maxNumVertices, maxNumTriangles);\r\n    if (ok < 0) {\r\n      return ok;\r\n    }\r\n\r\n    // build voxel world (used to check triangle-to-atom tie and to calculate normals and colors)\r\n    let probeRadForNormalsColors = rProbeRadius;\r\n    if (this.excludeProbe) {\r\n      probeRadForNormalsColors = 0.01;\r\n    }\r\n    this.voxelWorld = new IsosurfaceBuildNormals(\r\n      atomsColored.length,\r\n      atomsColored,\r\n      vBoxMin,\r\n      vBoxMax,\r\n      probeRadForNormalsColors,\r\n    );\r\n    this.voxelWorld.createVoxels();\r\n\r\n    ok = this.buildGeoFromCorners(marCubeResoultion, vBoxMin, vBoxMax, corners, vCellStep, cube);\r\n    if (this.excludeProbe) {\r\n      // using 3d mesh (geoOut) as a surface points\r\n      // move probe sphere and try to minimuze corners values\r\n      this.modifyExcludedFromGeo(side, rProbeRadius, vBoxMin, vBoxMax, this.geoOut, corners);\r\n\r\n      // delete old builded geo\r\n      this.geoOut._vertices = null;\r\n      this.geoOut._colors = null;\r\n      this.geoOut._indices = null;\r\n      this.geoOut._normals = null;\r\n      this.geoOut._numVertices = 0;\r\n      this.geoOut._numTriangles = 0;\r\n      this.geoOut = null;\r\n\r\n      // estimage geo vertices budget again\r\n      numIntersectedCellsEstim = this.getNumIntersectedCells(side, numCells, corners, cube);\r\n      maxNumVertices = Math.floor(numIntersectedCellsEstim * expandFactor);\r\n      maxNumTriangles = Math.floor(numIntersectedCellsEstim * expandFactor * 2);\r\n\r\n      // creates empty new geometry\r\n      this.geoOut = new IsoSurfaceGeo(maxNumVertices, maxNumTriangles, this.useVertexColors);\r\n      ok = this.createVertexHash(maxNumVertices, maxNumTriangles);\r\n      if (ok < 0) {\r\n        return ok;\r\n      }\r\n      // build vertices and triangles from corners values\r\n      ok = this.buildGeoFromCorners(side, vBoxMin, vBoxMax, corners, vCellStep, cube);\r\n    }\r\n\r\n    // build vertex normals\r\n    this.voxelWorld.buildNormals(this.geoOut._vertices.length, this.geoOut._vertices, this.geoOut._normals);\r\n    // More value : more smooth color mixing\r\n    // value about 0.7: very rough colors borders\r\n    let radiusColorSmoothness = 6.5;\r\n    if (this.excludeProbe) {\r\n      radiusColorSmoothness -= 1.5;\r\n    }\r\n    if (this.useVertexColors) {\r\n      this.voxelWorld.buildColors(\r\n        this.geoOut._vertices.length,\r\n        this.geoOut._vertices,\r\n        this.geoOut._colors,\r\n        radiusColorSmoothness,\r\n      );\r\n    }\r\n    this.voxelWorld.destroyVoxels();\r\n    this.voxelWorld = null;\r\n\r\n    // remove objects\r\n    cube.destroy();\r\n\r\n    return ok;\r\n  }\r\n}\r\n\r\n// All code below must be erased from every device and each developer's memory\r\n\r\nexport default SSIsosurfaceGeometry;\r\n","import * as THREE from 'three';\r\nimport EventDispatcher from '../../utils/EventDispatcher';\r\n\r\nfunction createLabel(fieldTxt, className) {\r\n  const text = document.createElement('div');\r\n  text.className = className;\r\n\r\n  if (typeof fieldTxt === 'string') {\r\n    const spanText = document.createElement('span');\r\n    spanText.style.fontSize = '150%';\r\n    const strings = fieldTxt.split('\\n');\r\n\r\n    for (let i = 0, n = strings.length; i < n; ++i) {\r\n      const spanNodeP = document.createElement('span');\r\n      const spanNodeText = document.createTextNode(strings[i]);\r\n      spanNodeP.appendChild(spanNodeText);\r\n      spanText.appendChild(spanNodeP);\r\n      if (i < n - 1) {\r\n        spanText.appendChild(document.createElement('br'));\r\n      }\r\n    }\r\n\r\n    text.appendChild(spanText);\r\n  } else {\r\n    text.appendChild(fieldTxt);\r\n  }\r\n  text.worldPos = new THREE.Vector3();\r\n  return text;\r\n}\r\nclass LabelsGeometry extends EventDispatcher {\r\n  constructor(instanceCount, opts) {\r\n    super();\r\n    this._opts = opts;\r\n    this.items = [];\r\n    this.needsUpdate = false;\r\n\r\n    let xTranslation = -50;\r\n    let yTranslation = -50;\r\n    switch (opts.horizontalAlign) {\r\n      case 'left':\r\n        xTranslation = 0;\r\n        break;\r\n      case 'right':\r\n        xTranslation = -100;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    switch (opts.verticalAlign) {\r\n      case 'top':\r\n        yTranslation = -100;\r\n        break;\r\n      case 'bottom':\r\n        yTranslation = 0;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const deltaPos = new THREE.Vector3(opts.dx || 0, opts.dy || 0, opts.dz || 0);\r\n    this.userData = {\r\n      translation: `translate(${xTranslation}%, ${yTranslation}%)`,\r\n      offset: deltaPos,\r\n    };\r\n  }\r\n\r\n  setItem(itemIdx, itemPos, fieldTxt) {\r\n    const opts = this._opts;\r\n    const text = this.items[itemIdx] || createLabel(fieldTxt, 'label');\r\n\r\n    text.worldPos.copy(itemPos);\r\n    text.style.textAlign = opts.horizontalAlign;\r\n    text.style.verticalAlign = opts.verticalAlign;\r\n    this.items[itemIdx] = text;\r\n  }\r\n\r\n  setColor(itemIdx, fColor, bColor) {\r\n    const text = this.items[itemIdx];\r\n    text.opts = {\r\n      color: fColor,\r\n      background: bColor,\r\n    };\r\n  }\r\n\r\n  startUpdate() {\r\n    return true;\r\n  }\r\n\r\n  finishUpdate() {\r\n    this.needsUpdate = true;\r\n    this.dispatchEvent({ type: 'update' });\r\n  }\r\n\r\n  finalize() {\r\n    this.finishUpdate();\r\n  }\r\n\r\n  // unimplemented functions\r\n  raycast() {\r\n  }\r\n\r\n  setOpacity() {\r\n\r\n  }\r\n\r\n  getSubset() {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport default LabelsGeometry;\r\n","import InstancedSpheresGeometry from './InstancedSpheresGeometry';\r\nimport SimpleSpheresGeometry from './SimpleSpheresGeometry';\r\nimport Simple2CCylindersGeometry from './Simple2CCylindersGeometry';\r\nimport Instanced2CCylindersGeometry from './Instanced2CCylindersGeometry';\r\nimport ExtrudedObjectsGeometry from './ExtrudedObjectsGeometry';\r\nimport ChunkedLinesGeometry from './ChunkedLinesGeometry';\r\nimport TwoColorLinesGeometry from './TwoColorLinesGeometry';\r\nimport CrossGeometry from './CrossGeometry';\r\nimport QuickSurfGeometry from './QuickSurfGeometry';\r\nimport ContactSurfaceGeometry from './ContactSurfaceGeometry';\r\nimport SSIsosurfaceGeometry from './SSIsosurfaceGeometry';\r\nimport LabelsGeometry from './LabelsGeometry';\r\n\r\nexport default {\r\n  InstancedSpheresGeometry,\r\n  SimpleSpheresGeometry,\r\n  Simple2CCylindersGeometry,\r\n  Instanced2CCylindersGeometry,\r\n  ExtrudedObjectsGeometry,\r\n  ChunkedLinesGeometry,\r\n  TwoColorLinesGeometry,\r\n  CrossGeometry,\r\n  QuickSurfGeometry,\r\n  ContactSurfaceGeometry,\r\n  SSIsosurfaceGeometry,\r\n  LabelsGeometry,\r\n};\r\n","export default {\r\n\r\n  precision: 'mediump',\r\n\r\n  /**\r\n   *\r\n   * @param {THREE.WebGLRenderer} renderer\r\n   */\r\n  init(renderer) {\r\n    this.precision = renderer.capabilities.getMaxPrecision('highp');\r\n  },\r\n};\r\n","import * as THREE from 'three';\r\n\r\nconst noiseWidth = 4;\r\nconst noiseHeight = 4;\r\nconst _noiseData = new Uint8Array([\r\n  24, 52, 0, 255, 254, 145, 0, 255, 122, 0, 0, 255, 7, 170, 0, 255,\r\n  34, 214, 0, 255, 173, 8, 0, 255, 86, 249, 0, 255, 160, 4, 0, 255,\r\n  226, 46, 0, 255, 224, 211, 0, 255, 3, 157, 0, 255, 174, 247, 0, 255,\r\n  12, 182, 0, 255, 220, 216, 0, 255, 1, 109, 0, 255, 253, 154, 0, 255,\r\n]);\r\nconst _noiseWrapS = THREE.RepeatWrapping;\r\nconst _noiseWrapT = THREE.RepeatWrapping;\r\nconst _noiseMinFilter = THREE.NearestFilter;\r\nconst _noiseMagFilter = THREE.NearestFilter;\r\nconst _noiseMapping = THREE.UVMapping;\r\nconst noiseTexture = new THREE.DataTexture(\r\n  _noiseData,\r\n  noiseWidth,\r\n  noiseHeight,\r\n  THREE.RGBAFormat,\r\n  THREE.UnsignedByteType,\r\n  _noiseMapping,\r\n  _noiseWrapS,\r\n  _noiseWrapT,\r\n  _noiseMagFilter,\r\n  _noiseMinFilter,\r\n  1,\r\n);\r\nnoiseTexture.needsUpdate = true;\r\n\r\nexport default {\r\n  noiseWidth,\r\n  noiseHeight,\r\n  noiseTexture,\r\n};\r\n","/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport * as THREE from 'three';\r\nimport vertexShader from './Uber.vert';\r\nimport fragmentShader from './Uber.frag';\r\nimport capabilities from '../capabilities';\r\nimport noise from '../noiseTexture';\r\n\r\n// Length of _samplesKernel is used in Uber.frag\r\n// If you want to change length of _samplesKernel, please, remember change it in Uber.frag too.\r\n// You can easy find places for replace using word:_samplesKernel\r\nconst _samplesKernel = [\r\n  new THREE.Vector2(-0.541978, 0.840393),\r\n  new THREE.Vector2(0.125533, -0.992089),\r\n  new THREE.Vector2(0.374329, 0.927296),\r\n  new THREE.Vector2(-0.105475, 0.994422),\r\n];\r\n\r\nconst defaultUniforms = THREE.UniformsUtils.merge([\r\n\r\n  THREE.UniformsLib.fog,\r\n  THREE.UniformsLib.lights,\r\n\r\n  {\r\n    // are updated automatically by three.js (see THREE.ShaderLib.common)\r\n    diffuse: { value: new THREE.Color(0xeeeeee) },\r\n    opacity: { value: 1.0 },\r\n\r\n    specular: { type: 'c', value: new THREE.Color(0x111111) },\r\n    shininess: { type: 'f', value: 30 },\r\n    fixedColor: { type: 'c', value: new THREE.Color(0xffffff) },\r\n    zOffset: { type: 'f', value: 0.0 },\r\n    zClipValue: { type: 'f', value: 0.0 },\r\n    clipPlaneValue: { type: 'f', value: 0.0 },\r\n    nearPlaneValue: { type: 'f', value: -0.5 },\r\n    invModelViewMatrix: { type: '4fv', value: new THREE.Matrix4() },\r\n    world2colorMatrix: { type: '4fv', value: new THREE.Matrix4() },\r\n    dashedLineSize: { type: 'f', value: 0.1 },\r\n    dashedLinePeriod: { type: 'f', value: 0.2 },\r\n    projMatrixInv: { type: '4fv', value: new THREE.Matrix4() },\r\n    viewport: { type: 'v2', value: new THREE.Vector2() },\r\n    lineWidth: { type: 'f', value: 2.0 },\r\n    // default value must be the same as settings\r\n    fogAlpha: { type: 'f', value: 1.0 },\r\n    samplesKernel: { type: 'v2v', value: null },\r\n    noiseTex: { type: 't', value: null },\r\n    noiseTexelSize: { type: 'v2', value: null },\r\n    srcTexelSize: { type: 'v2', value: null },\r\n  },\r\n\r\n]);\r\n\r\nconst uberOptionNames = [\r\n  'shininess',\r\n  'opacity',\r\n  'zOffset',\r\n  'diffuse',\r\n  'specular',\r\n  'fixedColor',\r\n  'zClipCoef',\r\n  'zClipValue',\r\n  'clipPlaneValue',\r\n  'world2colorMatrix',\r\n  'dashedLineSize',\r\n  'dashedLinePeriod',\r\n  'projMatrixInv',\r\n  'viewport',\r\n  'lineWidth',\r\n  'fogAlpha',\r\n  'samplesKernel',\r\n  'noiseTex',\r\n  'noiseTexelSize',\r\n  'srcTexelSize',\r\n];\r\n\r\n// properties that convert to uniforms\r\nconst uberOptions = {\r\n  diffuse: new THREE.Color(0xffffff), // used in phong lighting\r\n  specular: new THREE.Color(0x111111), // used in phong lighting\r\n  shininess: 30, // used in phong lighting\r\n  opacity: 1, // set mesh opacity\r\n  fixedColor: new THREE.Color(0xffffff), // color to override (see OVERRIDE_COLOR)\r\n  zOffset: 0.0, // used fo zsprites (see SPHERE_SPRITE CYLINDER_SPRITE)\r\n  zClipCoef: 2.0, // use for Surfs clipping (mesh param, isn't used in shader)  FIXME move to representation param\r\n  zClipValue: 0.0, //  value to clip Surfs in shader  (see ZCLIP)\r\n  clipPlaneValue: 0.0, // value to clip scene globally (see CLIPPLANE)\r\n  world2colorMatrix: new THREE.Matrix4(),\r\n  dashedLineSize: 0.1,\r\n  dashedLinePeriod: 0.3,\r\n  projMatrixInv: new THREE.Matrix4(),\r\n  viewport: new THREE.Vector2(800, 600),\r\n  lineWidth: 2.0,\r\n  fogAlpha: 1.0,\r\n  samplesKernel: _samplesKernel,\r\n  noiseTex: noise.noiseTexture,\r\n  noiseTexelSize: new THREE.Vector2(1.0 / noise.noiseWidth, 1.0 / noise.noiseHeight),\r\n  srcTexelSize: new THREE.Vector2(1.0 / 800.0, 1.0 / 600.0),\r\n  copy(source) {\r\n    this.diffuse.copy(source.diffuse);\r\n    this.specular.copy(source.specular);\r\n    this.shininess = source.shininess;\r\n    this.opacity = source.opacity;\r\n    this.fixedColor.copy(source.fixedColor);\r\n    this.zOffset = source.zOffset;\r\n    this.zClipCoef = source.zClipCoef;\r\n    this.zClipValue = source.zClipValue;\r\n    this.clipPlaneValue = source.clipPlaneValue;\r\n    this.world2colorMatrix.copy(source.world2colorMatrix);\r\n    this.dashedLineSize = source.dashedLineSize;\r\n    this.dashedLinePeriod = source.dashedLinePeriod;\r\n    this.projMatrixInv = source.projMatrixInv;\r\n    this.viewport = source.viewport;\r\n    this.lineWidth = source.lineWidth; // used for thick lines only\r\n    this.toonShading = source.toonShading;\r\n    this.fogAlpha = source.fogAlpha;\r\n    this.samplesKernel = source.samplesKernel;\r\n    this.noiseTex = source.noiseTex;\r\n    this.noiseTexelSize = source.noiseTexelSize;\r\n    this.srcTexelSize = source.srcTexelSize;\r\n  },\r\n};\r\n\r\nclass UberMaterial extends THREE.RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    // add fog\r\n    this.fog = true;\r\n    // used for instanced geometry\r\n    this.instancedPos = false;\r\n    this.instancedMatrix = false;\r\n    // atoms and links color\r\n    this.attrColor = false;\r\n    // second link color for cylinders\r\n    this.attrColor2 = false;\r\n    //\r\n    this.attrAlphaColor = false;\r\n    // overrides color for all vertices (used in selection)\r\n    this.overrideColor = false;\r\n    // zsrpites\r\n    this.sphereSprite = false;\r\n    this.cylinderSprite = false;\r\n    // clip Surfs individually\r\n    this.zClip = false;\r\n    // clip scene with global clip plane\r\n    this.clipPlane = false;\r\n    // enable fake (chess-like) opacity\r\n    this.fakeOpacity = false;\r\n    // render only depth, don't take care about the pixel color (used for transparency depth prepass)\r\n    this.prepassTransparancy = false;\r\n    // used to render pixel positions\r\n    this.colorFromPos = false;\r\n    // used to render shadowmap\r\n    this.shadowmap = false;\r\n    // used to describe shadowmap type\r\n    this.shadowmapType = 'random';\r\n    // used to render pixel view deph\r\n    this.colorFromDepth = false;\r\n    // mark that rendering is for orthographic camera\r\n    this.orthoCam = false;\r\n    // used to render dashed line\r\n    this.dashedLine = false;\r\n    // mark as transparent\r\n    this.transparent = true;\r\n    // mark as thick lines\r\n    this.thickLine = false;\r\n    // makes fog begin transparency (required for transparent background)\r\n    this.fogTransparent = false;\r\n    // used to render surface normals to G buffer for ssao effect\r\n    this.normalsToGBuffer = false;\r\n    // used for toon material\r\n    this.toonShading = false;\r\n\r\n    // uber options of \"root\" materials are inherited from single uber-options object that resides in prototype\r\n    this.uberOptions = Object.create(UberMaterial.prototype.uberOptions);\r\n\r\n    // set default values\r\n    super.setValues({\r\n      uniforms: THREE.UniformsUtils.clone(defaultUniforms),\r\n      vertexShader: this.precisionString() + vertexShader,\r\n      fragmentShader: this.precisionString() + fragmentShader,\r\n      lights: true,\r\n      fog: true,\r\n      side: THREE.DoubleSide,\r\n    });\r\n\r\n    this.setValues(params);\r\n  }\r\n\r\n  precisionString() {\r\n    const { precision } = capabilities;\r\n    const str = `precision ${precision} float;\\n`\r\n      + `precision ${precision} int;\\n\\n`;\r\n    return str;\r\n  }\r\n\r\n  copy(source) {\r\n    super.copy(source);\r\n\r\n    this.fragmentShader = source.fragmentShader;\r\n    this.vertexShader = source.vertexShader;\r\n\r\n    this.uniforms = THREE.UniformsUtils.clone(source.uniforms);\r\n    this.defines = { ...source.defines };\r\n    this.extensions = source.extensions;\r\n\r\n    this.fog = source.fog;\r\n    this.instancedPos = source.instancedPos;\r\n    this.instancedMatrix = source.instancedMatrix;\r\n    this.attrColor = source.attrColor;\r\n    this.attrColor2 = source.attrColor2;\r\n    this.attrAlphaColor = source.attrAlphaColor;\r\n    this.overrideColor = source.overrideColor;\r\n    this.sphereSprite = source.sphereSprite;\r\n    this.cylinderSprite = source.cylinderSprite;\r\n    this.zClip = source.zClip;\r\n    this.clipPlane = source.clipPlane;\r\n    this.fakeOpacity = source.fakeOpacity;\r\n    this.colorFromPos = source.colorFromPos;\r\n    this.shadowmap = source.shadowmap;\r\n    this.shadowmapType = source.shadowmapType;\r\n    this.colorFromDepth = source.colorFromDepth;\r\n    this.orthoCam = source.orthoCam;\r\n    this.prepassTransparancy = source.prepassTransparancy;\r\n    this.dashedLine = source.dashedLine;\r\n    this.thickLine = source.thickLine;\r\n    this.fogTransparent = source.fogTransparent;\r\n    this.normalsToGBuffer = source.normalsToGBuffer;\r\n    this.toonShading = source.toonShading;\r\n\r\n    this.uberOptions.copy(source.uberOptions);\r\n\r\n    return this;\r\n  }\r\n\r\n  // create copy of this material\r\n  // its options are prototyped after this material's options\r\n  createInstance() {\r\n    const inst = new UberMaterial();\r\n    inst.copy(this);\r\n    inst.uberOptions = Object.create(this.uberOptions);\r\n    return inst;\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values);\r\n\r\n    const defines = {};\r\n    const extensions = {};\r\n\r\n    if (this.fog) {\r\n      defines.USE_FOG = 1;\r\n    }\r\n    if (this.instancedPos) {\r\n      defines.INSTANCED_POS = 1;\r\n    }\r\n    if (this.instancedMatrix) {\r\n      defines.INSTANCED_MATRIX = 1;\r\n    }\r\n    if (this.attrColor) {\r\n      defines.ATTR_COLOR = 1;\r\n    }\r\n    if (this.attrColor2) {\r\n      defines.ATTR_COLOR2 = 1;\r\n    }\r\n    if (this.attrAlphaColor) {\r\n      defines.ATTR_ALPHA_COLOR = 1;\r\n    }\r\n    if (this.overrideColor) {\r\n      defines.OVERRIDE_COLOR = 1;\r\n    }\r\n    if (this.sphereSprite) {\r\n      defines.SPHERE_SPRITE = 1;\r\n      extensions.fragDepth = true;\r\n    }\r\n    if (this.cylinderSprite) {\r\n      defines.CYLINDER_SPRITE = 1;\r\n      extensions.fragDepth = true;\r\n    }\r\n    if (this.zClip) {\r\n      defines.ZCLIP = 1;\r\n    }\r\n    if (this.clipPlane) {\r\n      defines.CLIP_PLANE = 1;\r\n    }\r\n    if (this.fakeOpacity) {\r\n      defines.FAKE_OPACITY = 1;\r\n    }\r\n    if (this.lights) {\r\n      defines.USE_LIGHTS = 1;\r\n    }\r\n    if (this.colorFromPos) {\r\n      defines.COLOR_FROM_POS = 1;\r\n    }\r\n    if (this.shadowmap) {\r\n      defines.SHADOWMAP = 1;\r\n      if (this.shadowmapType === 'pcf') {\r\n        defines.SHADOWMAP_PCF_SHARP = 1;\r\n      } else if (this.shadowmapType === 'random') {\r\n        defines.SHADOWMAP_PCF_RAND = 1;\r\n      } else {\r\n        defines.SHADOWMAP_BASIC = 1;\r\n      }\r\n    }\r\n    if (this.colorFromDepth) {\r\n      defines.COLOR_FROM_DEPTH = 1;\r\n    }\r\n    if (this.orthoCam) {\r\n      defines.ORTHOGRAPHIC_CAMERA = 1;\r\n    }\r\n    if (this.prepassTransparancy) {\r\n      defines.PREPASS_TRANSP = 1;\r\n    }\r\n    if (this.dashedLine) {\r\n      defines.DASHED_LINE = 1;\r\n    }\r\n    if (this.thickLine) {\r\n      defines.THICK_LINE = 1;\r\n    }\r\n    if (this.fogTransparent) {\r\n      defines.FOG_TRANSPARENT = 1;\r\n    }\r\n    if (this.normalsToGBuffer) {\r\n      extensions.drawBuffers = true;\r\n      defines.NORMALS_TO_G_BUFFER = 1;\r\n    }\r\n    if (this.toonShading) {\r\n      defines.TOON_SHADING = 1;\r\n    }\r\n    // set dependent values\r\n    this.defines = defines;\r\n    this.extensions = extensions;\r\n  }\r\n\r\n  setUberOptions(values) {\r\n    if (typeof values === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    for (const key in values) {\r\n      if (!values.hasOwnProperty(key)) {\r\n        continue;\r\n      }\r\n\r\n      if (this.uberOptions[key] instanceof THREE.Color) {\r\n        this.uberOptions[key] = values[key].clone();\r\n      } else {\r\n        this.uberOptions[key] = values[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  clone(shallow) {\r\n    if (!shallow) {\r\n      return super.clone();\r\n    }\r\n    return this.createInstance();\r\n  }\r\n\r\n  updateUniforms() {\r\n    const self = this;\r\n\r\n    uberOptionNames.forEach((p) => {\r\n      if (self.uniforms.hasOwnProperty(p)) {\r\n        if (self.uberOptions[p] instanceof THREE.Color\r\n              || self.uberOptions[p] instanceof THREE.Matrix4) {\r\n          self.uniforms[p].value = self.uberOptions[p].clone();\r\n        } else {\r\n          self.uniforms[p].value = self.uberOptions[p];\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nUberMaterial.prototype.uberOptions = uberOptions;\r\n\r\nexport default UberMaterial;\r\n","import UberMaterial from '../shaders/UberMaterial';\r\n\r\nexport default function (SuperClass) {\r\n  class NewObjectType extends SuperClass {\r\n    constructor(...rest) {\r\n      super(...rest);\r\n      this.onBeforeRender = NewObjectType.prototype.onBeforeRender;\r\n    }\r\n\r\n    onBeforeRender(renderer, scene, camera, geometry, material, group) {\r\n      this._onBeforeRender(renderer, scene, camera, geometry, material, group);\r\n      this._update();\r\n    }\r\n\r\n    _onBeforeRender() {\r\n    }\r\n\r\n    _update() {\r\n      const { material } = this;\r\n      if (!material) {\r\n        return;\r\n      }\r\n\r\n      if (material instanceof UberMaterial) {\r\n        material.updateUniforms();\r\n      }\r\n    }\r\n  }\r\n\r\n  return NewObjectType;\r\n}\r\n","import * as THREE from 'three';\r\nimport UberObject from './UberObject';\r\n\r\nconst Mesh = UberObject(THREE.Mesh);\r\n\r\nclass ZSpriteMesh extends Mesh {\r\n  constructor(...rest) {\r\n    super(...rest);\r\n    this.castShadow = true;\r\n    this.receiveShadow = true;\r\n  }\r\n\r\n  _onBeforeRender(renderer, scene, camera, _geometry, _material, _group) {\r\n    Mesh.prototype._onBeforeRender.call(this, renderer, scene, camera);\r\n    const { material } = this;\r\n    if (!material) {\r\n      return;\r\n    }\r\n\r\n    if (material.uniforms.invModelViewMatrix) {\r\n      // NOTE: update of modelViewMatrix inside threejs is done after onBeforeRender call,\r\n      // so we have to do it manually in that place\r\n      this.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, this.matrixWorld);\r\n      // get inverse matrix\r\n      material.uniforms.invModelViewMatrix.value.copy(this.modelViewMatrix).invert();\r\n      material.uniforms.nearPlaneValue.value = camera.near;\r\n      material.uniformsNeedUpdate = true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ZSpriteMesh;\r\n","import * as THREE from 'three';\r\nimport UberObject from './UberObject';\r\n\r\nconst Mesh = UberObject(THREE.Mesh);\r\n\r\nclass ZClippedMesh extends Mesh {\r\n  constructor(geometry, material) {\r\n    super(geometry, material);\r\n    this.castShadow = true;\r\n    this.receiveShadow = true;\r\n  }\r\n\r\n  static _mvLength = new THREE.Vector3();\r\n\r\n  static _center = new THREE.Vector3();\r\n\r\n  static _modelView = new THREE.Matrix4();\r\n\r\n  _onBeforeRender(renderer, scene, camera) {\r\n    Mesh.prototype._onBeforeRender.call(this, renderer, scene, camera);\r\n\r\n    const geo = this.geometry;\r\n    const { material } = this;\r\n    if (!geo.zClip || !material.uberOptions) {\r\n      return;\r\n    }\r\n\r\n    const zClipCoef = 0.5;\r\n\r\n    const modelView = ZClippedMesh._modelView;\r\n    const mvLength = ZClippedMesh._mvLength;\r\n    const center = ZClippedMesh._center;\r\n\r\n    modelView.multiplyMatrices(this.matrixWorld, camera.matrixWorldInverse);\r\n    const s = mvLength.setFromMatrixColumn(modelView, 0).length();\r\n    center.copy(geo.boundingSphere.center);\r\n\r\n    this.localToWorld(center);\r\n    material.uberOptions.zClipValue = camera.position.z - center.z\r\n      - s * (zClipCoef * geo.boundingSphere.radius);\r\n  }\r\n}\r\n\r\nexport default ZClippedMesh;\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport CSS2DObject from '../CSS2DObject';\r\nimport utils from '../../utils';\r\n\r\nclass TextMesh extends THREE.Group {\r\n  constructor(geometry, _material) {\r\n    super();\r\n    this.geometry = geometry;\r\n\r\n    const self = this;\r\n    self.initialized = false;\r\n    this.geometry.addEventListener('update', () => {\r\n      self.update();\r\n    });\r\n  }\r\n\r\n  init() {\r\n    const { children } = this;\r\n    for (let i = children.length - 1; i >= 0; --i) {\r\n      this.remove(children[i]);\r\n    }\r\n\r\n    const { items, userData } = this.geometry;\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      const srcItem = items[i];\r\n      if (!srcItem) {\r\n        continue;\r\n      }\r\n      const item = utils.shallowCloneNode(srcItem);\r\n      const label = new CSS2DObject(item);\r\n      label.userData = _.clone(userData);\r\n      const el = label.getElement();\r\n      el.style.visibility = 'visible';\r\n      label.source = srcItem;\r\n      this.add(label);\r\n    }\r\n    this.initialized = true;\r\n  }\r\n\r\n  update() {\r\n    const geo = this.geometry;\r\n    if (!geo.needsUpdate) {\r\n      return;\r\n    }\r\n    const { children } = this;\r\n    if (!this.initialized) {\r\n      this.init();\r\n    }\r\n\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      const child = children[i];\r\n      const item = child.source;\r\n      child.position.copy(item.worldPos);\r\n      child.userData.color = item.opts.color;\r\n      child.userData.background = item.opts.background;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextMesh;\r\n","import * as THREE from 'three';\r\nimport UberObject from './UberObject';\r\n\r\nconst Mesh = UberObject(THREE.Mesh);\r\n\r\nclass SimpleMesh extends Mesh {\r\n  constructor(geometry, material) {\r\n    super(geometry, material);\r\n    this.castShadow = true;\r\n    this.receiveShadow = true;\r\n  }\r\n}\r\n\r\nexport default SimpleMesh;\r\n","import * as THREE from 'three';\r\nimport UberObject from './UberObject';\r\n\r\nconst Mesh = UberObject(THREE.Mesh);\r\nconst _viewport = new THREE.Vector2();\r\n\r\nclass ThickLineMesh extends Mesh {\r\n  _onBeforeRender(renderer, scene, camera, _geometry, _material, _group) {\r\n    const { material } = this;\r\n    if (!material.uberOptions) {\r\n      return;\r\n    }\r\n\r\n    material.uberOptions.projMatrixInv.copy(camera.projectionMatrix).invert();\r\n    renderer.getSize(_viewport);\r\n    material.uberOptions.viewport.set(_viewport.width, _viewport.height);\r\n  }\r\n}\r\n\r\nexport default ThickLineMesh;\r\n","import * as THREE from 'three';\r\nimport UberObject from './UberObject';\r\n\r\nconst Mesh = UberObject(THREE.Mesh);\r\n\r\nclass InstancedMesh extends Mesh {\r\n  constructor(...rest) {\r\n    super(...rest);\r\n    this.castShadow = true;\r\n    this.receiveShadow = true;\r\n  }\r\n}\r\n\r\nexport default InstancedMesh;\r\n","import * as THREE from 'three';\r\nimport UberObject from './UberObject';\r\nimport ZSpriteMesh from './ZSpriteMesh';\r\nimport ZClippedMesh from './ZClippedMesh';\r\nimport TextMesh from './TextMesh';\r\nimport SimpleMesh from './SimpleMesh';\r\nimport ThickLineMesh from './ThickLineMesh';\r\nimport InstancedMesh from './InstancedMesh';\r\n\r\nexport default {\r\n  ZClipped: ZClippedMesh,\r\n  ZSprite: ZSpriteMesh,\r\n  Text: TextMesh,\r\n  Line: UberObject(THREE.Line),\r\n  LineSegments: UberObject(THREE.LineSegments),\r\n  Mesh: SimpleMesh,\r\n  ThickLineMesh,\r\n  Instanced: InstancedMesh,\r\n};\r\n","import geometries from '../geometries/geometries';\r\nimport meshes from './meshes';\r\nimport ThickLinesGeometry from '../geometries/ThickLinesGeometry';\r\n\r\nfunction setMatParams(params, uniforms) {\r\n  return function (material) {\r\n    material.setValues(params);\r\n    material.setUberOptions(uniforms);\r\n  };\r\n}\r\n\r\nfunction _createInstancedCylinders(useZSprites, openEnded) {\r\n  function Geometry(a, b) {\r\n    return new geometries.Instanced2CCylindersGeometry(a, b, useZSprites, openEnded);\r\n  }\r\n  return {\r\n    Geometry,\r\n    Object: useZSprites ? meshes.ZSprite : meshes.Instanced,\r\n    initMaterial: setMatParams({\r\n      instancedMatrix: true,\r\n      attrColor: true,\r\n      attrColor2: true,\r\n      attrAlphaColor: true,\r\n      cylinderSprite: useZSprites,\r\n    }),\r\n  };\r\n}\r\n\r\nfunction _createLineSegmentsGeoTriplet(geo, renderParams) {\r\n  const thickLines = geo.prototype instanceof ThickLinesGeometry;\r\n  const lineWidth = renderParams.lineWidth || 0;\r\n  return {\r\n    Geometry: geo,\r\n    Object: thickLines ? meshes.ThickLineMesh : meshes.LineSegments,\r\n    initMaterial: setMatParams({\r\n      lights: false,\r\n      attrColor: true,\r\n      attrAlphaColor: true,\r\n      thickLine: thickLines,\r\n    }, {\r\n      lineWidth,\r\n    }),\r\n  };\r\n}\r\n\r\nfunction _createSimpleGeoTriplet(geoClass) {\r\n  return {\r\n    Geometry: geoClass,\r\n    Object: meshes.Mesh,\r\n    initMaterial: setMatParams({\r\n      attrColor: true,\r\n      attrAlphaColor: true,\r\n    }),\r\n  };\r\n}\r\n\r\nfunction _createIsoSurfaceGeoTriplet(geoClass, caps, settings, renderParams) {\r\n  const surfaceOpts = {\r\n    wireframe: !!renderParams.wireframe,\r\n    fakeOpacity: settings.now.isoSurfaceFakeOpacity,\r\n    zClip: renderParams.zClip,\r\n  };\r\n  return {\r\n    Geometry: geoClass,\r\n    Object: meshes.ZClipped,\r\n    initMaterial: setMatParams({\r\n      attrColor: true,\r\n      attrAlphaColor: false,\r\n      wireframe: surfaceOpts.wireframe,\r\n      fakeOpacity: surfaceOpts.fakeOpacity,\r\n      zClip: surfaceOpts.zClip,\r\n    }),\r\n  };\r\n}\r\n\r\nclass MeshCreator {\r\n  static createSpheres(caps, settings) {\r\n    const useZSprites = settings.now.zSprites;\r\n    function Geometry(a, b) {\r\n      return new geometries.InstancedSpheresGeometry(a, b, useZSprites);\r\n    }\r\n    return {\r\n      Geometry,\r\n      Object: useZSprites ? meshes.ZSprite : meshes.Instanced,\r\n      initMaterial: setMatParams({\r\n        instancedPos: true,\r\n        attrColor: true,\r\n        attrAlphaColor: true,\r\n        sphereSprite: useZSprites,\r\n      }),\r\n    };\r\n  }\r\n\r\n  static create2CClosedCylinders(_caps, _settings) {\r\n    return _createInstancedCylinders(false, false);\r\n  }\r\n\r\n  static create2CCylinders(caps, settings) {\r\n    return _createInstancedCylinders(settings.now.zSprites, true);\r\n  }\r\n\r\n  static create2CLines(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(geometries.TwoColorLinesGeometry, renderParams);\r\n  }\r\n\r\n  static createCrosses(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(geometries.CrossGeometry, renderParams);\r\n  }\r\n\r\n  static createExtrudedChains(_caps, _settings) {\r\n    return _createSimpleGeoTriplet(geometries.ExtrudedObjectsGeometry);\r\n  }\r\n\r\n  static createChunkedLines(_caps, _settings, renderParams) {\r\n    return _createLineSegmentsGeoTriplet(geometries.ChunkedLinesGeometry, renderParams);\r\n  }\r\n\r\n  static createQuickSurface(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(geometries.QuickSurfGeometry, caps, settings, renderParams);\r\n  }\r\n\r\n  static createContactSurface(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(geometries.ContactSurfaceGeometry, caps, settings, renderParams);\r\n  }\r\n\r\n  static createSASSES(caps, settings, renderParams) {\r\n    return _createIsoSurfaceGeoTriplet(geometries.SSIsosurfaceGeometry, caps, settings, renderParams);\r\n  }\r\n\r\n  static createLabels(_caps, _settings) {\r\n    return {\r\n      Geometry: geometries.LabelsGeometry,\r\n      Object: meshes.Text,\r\n      initMaterial() {\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nexport default MeshCreator;\r\n","import * as THREE from 'three';\r\nimport gfxutils from '../gfxutils';\r\n\r\nclass TransformGroup extends THREE.Object3D {\r\n  static _inverseMatrix = new THREE.Matrix4();\r\n\r\n  static _ray = new THREE.Ray();\r\n\r\n  constructor(geometry, geoParams, material, transforms) {\r\n    super();\r\n    this._geometry = geometry;\r\n    this._geoParams = geoParams;\r\n    const mat = material.createInstance();\r\n    geoParams.initMaterial(mat);\r\n    this._material = mat;\r\n    this._transforms = transforms.length > 0 ? transforms : [new THREE.Matrix4()];\r\n    const meshes = this._createMeshes(geometry);\r\n    for (let i = 0, n = meshes.length; i < n; ++i) {\r\n      this.add(meshes[i]);\r\n    }\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const ray = TransformGroup._ray;\r\n    const inverseMatrix = TransformGroup._inverseMatrix;\r\n    const { children } = this;\r\n    ray.copy(raycaster.ray);\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      const child = children[i];\r\n\r\n      if (!gfxutils.belongToSelectLayers(child)) {\r\n        continue;\r\n      }\r\n\r\n      child.updateMatrixWorld();\r\n      const mtx = child.matrixWorld;\r\n      inverseMatrix.copy(mtx).invert();\r\n      raycaster.ray.copy(ray).applyMatrix4(inverseMatrix);\r\n      const childIntersects = [];\r\n      this._geometry.raycast(raycaster, childIntersects);\r\n\r\n      for (let j = 0, ciCount = childIntersects.length; j < ciCount; ++j) {\r\n        const inters = childIntersects[j];\r\n        if (inters.point) {\r\n          inters.point.applyMatrix4(mtx);\r\n          inters.distance = ray.origin.distanceTo(inters.point);\r\n        }\r\n        inters.object = child;\r\n        intersects[intersects.length] = inters;\r\n      }\r\n    }\r\n    raycaster.ray.copy(ray);\r\n  }\r\n\r\n  getSubset(chunkIndices) {\r\n    const geos = this._geometry.getSubset(chunkIndices);\r\n    const subset = [];\r\n    let subIdx = 0;\r\n\r\n    for (let i = 0, n = geos.length; i < n; ++i) {\r\n      const meshes = this._createMeshes(geos[i]);\r\n      for (let j = 0, meshCnt = meshes.length; j < meshCnt; ++j) {\r\n        subset[subIdx++] = meshes[j];\r\n      }\r\n    }\r\n\r\n    return subset;\r\n  }\r\n\r\n  _createMeshes(geometry) {\r\n    const transforms = this._transforms;\r\n    const Mesh = this._geoParams.Object;\r\n    const material = this._material;\r\n    const meshes = [];\r\n    for (let i = 0, n = transforms.length; i < n; ++i) {\r\n      const mesh = new Mesh(geometry, material);\r\n      mesh.applyMatrix4(transforms[i]);\r\n      meshes[i] = mesh;\r\n    }\r\n\r\n    return meshes;\r\n  }\r\n}\r\n\r\nexport default TransformGroup;\r\n","import RCGroup from '../../RCGroup';\r\nimport TransformGroup from '../../meshes/TransformGroup';\r\n\r\nfunction wrapper(Name, args) {\r\n  const params = [Name].concat(args);\r\n  return Name.bind(...params);\r\n}\r\n\r\nclass ChemGroup extends RCGroup {\r\n  constructor(geoParams, selection, colorer, mode, transforms, polyComplexity, material) {\r\n    super();\r\n    if (this.constructor === ChemGroup) {\r\n      throw new Error('Can not instantiate abstract class!');\r\n    }\r\n    this._selection = selection;\r\n    this._mode = mode;\r\n    this._colorer = colorer;\r\n    this._chunksIdc = selection.chunks;\r\n    this._polyComplexity = polyComplexity;\r\n    this._geo = new (wrapper(geoParams.Geometry, this._makeGeoArgs()))();\r\n    this._mesh = new TransformGroup(this._geo, geoParams, material, transforms);\r\n    this.add(this._mesh);\r\n    this._build();\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    throw new Error('ChemGroup subclass must override _makeGeoArgs() method');\r\n  }\r\n\r\n  /**\r\n   * Builds subset geometry by ATOMS index list\r\n   *\r\n   * @param {Number} mask - Representation mask\r\n   * @param {Boolean} innerOnly - if true returns inner bonds only - without halves\r\n   * @returns {Array} Subset geometry\r\n   */\r\n  getSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : false;\r\n    const chunksList = this._calcChunksList(mask, innerOnly);\r\n    if (chunksList.length === 0) {\r\n      return [];\r\n    }\r\n    return this._mesh.getSubset(chunksList);\r\n  }\r\n\r\n  _changeSubsetOpacity(mask, value, innerOnly) {\r\n    const chunksList = this._calcChunksList(mask, innerOnly);\r\n    if (chunksList.length === 0) {\r\n      return;\r\n    }\r\n    this._geo.setOpacity(chunksList, value);\r\n  }\r\n\r\n  enableSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : true;\r\n    this._changeSubsetOpacity(mask, 1.0, innerOnly);\r\n  }\r\n\r\n  disableSubset(mask, innerOnly) {\r\n    innerOnly = innerOnly !== undefined ? innerOnly : true;\r\n    this._changeSubsetOpacity(mask, 0.0, innerOnly);\r\n  }\r\n}\r\n\r\nexport default ChemGroup;\r\n","import ChemGroup from './ChemGroup';\r\n\r\nclass AtomsGroup extends ChemGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { atoms } = this._selection;\r\n    const inters = [];\r\n    this._mesh.raycast(raycaster, inters);\r\n    const atomsIdc = this._chunksIdc;\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue;\r\n      }\r\n      const atomIdx = atomsIdc[inters[i].chunkIdx];\r\n      if (atomIdx < atoms.length) {\r\n        inters[i].atom = atoms[atomIdx];\r\n        intersects.push(inters[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = [];\r\n    const { atoms } = this._selection;\r\n    const atomsIdc = this._chunksIdc;\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]];\r\n      if ((atom.mask & mask) !== 0) {\r\n        chunksList.push(i);\r\n      }\r\n    }\r\n    return chunksList;\r\n  }\r\n}\r\n\r\nexport default AtomsGroup;\r\n","import AtomsGroup from './AtomsGroup';\r\n\r\nclass AtomsSphereGroup extends AtomsGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length, this._polyComplexity];\r\n  }\r\n\r\n  _build() {\r\n    const atomsIdc = this._selection.chunks;\r\n    const { atoms, parent } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]];\r\n      geo.setItem(i, atom.position, mode.calcAtomRadius(atom));\r\n      geo.setColor(i, colorer.getAtomColor(atom, parent));\r\n    }\r\n    geo.finalize();\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const atomsIdc = this._selection.chunks;\r\n    const { atoms } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const updateColor = frameData.needsColorUpdate(colorer);\r\n    const geo = this._geo;\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]];\r\n      geo.setItem(i, frameData.getAtomPos(atomsIdc[i]), mode.calcAtomRadius(atom));\r\n      if (updateColor) {\r\n        geo.setColor(i, frameData.getAtomColor(colorer, atom));\r\n      }\r\n    }\r\n    geo.finalize();\r\n  }\r\n}\r\n\r\nexport default AtomsSphereGroup;\r\n","import AtomsSphereGroup from './AtomsSphereGroup';\r\n\r\nclass AtomsSurfaceGroup extends AtomsSphereGroup {\r\n  _makeGeoArgs() {\r\n    const selectedAtoms = [];\r\n    const { atoms, chunks } = this._selection;\r\n    const n = chunks.length;\r\n    for (let i = 0; i < n; ++i) {\r\n      selectedAtoms[i] = atoms[chunks[i]];\r\n    }\r\n    const opts = this._mode.getSurfaceOpts();\r\n    opts.atoms = selectedAtoms;\r\n    return [n, opts];\r\n  }\r\n}\r\nexport default AtomsSurfaceGroup;\r\n","/* This is a stub class keep it until SAS/SES is refactored */\r\n\r\nimport AtomsSphereGroup from './AtomsSphereGroup';\r\n\r\nclass AtomsSASSESGroupStub extends AtomsSphereGroup {\r\n  _makeGeoArgs() {\r\n    const selectedAtoms = [];\r\n    const { atoms, chunks } = this._selection;\r\n    const n = chunks.length;\r\n    for (let i = 0; i < n; ++i) {\r\n      selectedAtoms[i] = atoms[chunks[i]];\r\n    }\r\n    const opts = this._mode.getSurfaceOpts();\r\n    opts.atoms = selectedAtoms;\r\n    opts.selection = this._selection;\r\n    opts.colorMode = this._colorer;\r\n    return [n, opts];\r\n  }\r\n}\r\n\r\nexport default AtomsSASSESGroupStub;\r\n","import AtomsGroup from './AtomsGroup';\r\nimport utils from '../../../utils';\r\n\r\nfunction adjustColor(color) {\r\n  let r = (color >> 16) & 255;\r\n  let g = (color >> 8) & 255;\r\n  let b = color & 255;\r\n\r\n  if (0.2126 * r + 0.7152 * g + 0.0722 * b > 127) {\r\n    r = r * 3 / 10;\r\n    g = g * 3 / 10;\r\n    b = b * 3 / 10;\r\n  } else {\r\n    r = 255 - ((255 - r) * 3 / 10);\r\n    g = 255 - ((255 - g) * 3 / 10);\r\n    b = 255 - ((255 - b) * 3 / 10);\r\n  }\r\n\r\n  return (r << 16) | (g << 8) | b;\r\n}\r\n\r\nfunction inverseColor(color) {\r\n  const r = (color >> 16) & 255;\r\n  const g = (color >> 8) & 255;\r\n  const b = color & 255;\r\n\r\n  return ((255 - r) << 16) | ((255 - g) << 8) | (255 - b);\r\n}\r\n\r\nfunction getAtomText(atom) {\r\n  if (atom.name.getNode() !== null) {\r\n    return atom.name.getNode();\r\n  }\r\n\r\n  return atom.getVisualName();\r\n}\r\n\r\nconst colorMappings = {\r\n  none(c) {\r\n    return c;\r\n  },\r\n  adjust: adjustColor,\r\n  inverse: inverseColor,\r\n};\r\n\r\nfunction propagateColor(color, rule) {\r\n  let result;\r\n  if (colorMappings.hasOwnProperty(rule)) {\r\n    result = utils.hexColor(colorMappings[rule](color));\r\n  } else {\r\n    const val = parseInt(rule, 16);\r\n    if (!Number.isNaN(val) && rule.toLowerCase().startsWith('0x')) {\r\n      result = utils.hexColor(val);\r\n    } else {\r\n      result = '#000000';\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nconst templateMappings = {\r\n  serial(a) {\r\n    return a.serial;\r\n  },\r\n  name(a) {\r\n    return a.getVisualName();\r\n  },\r\n  elem(a) {\r\n    return a.element.name;\r\n  },\r\n  residue(a) {\r\n    return a.residue.getType().getName();\r\n  },\r\n  sequence(a) {\r\n    return a.residue.getSequence();\r\n  },\r\n  chain(a) {\r\n    return a.residue.getChain().getName();\r\n  },\r\n  hetatm(a) {\r\n    return a.isHet();\r\n  },\r\n  water(a) {\r\n    return a.residue.getType().getName() === 'HOH' || a.residue.getType().getName() === 'WAT';\r\n  },\r\n};\r\n\r\nconst parseTemplate = function (atom, str) {\r\n  return str.replace(/\\{\\{(\\s*\\w+\\s*)\\}\\}/g, (m) => {\r\n    let key = m.replace(/\\s+/g, '');\r\n    key = key.substring(2, key.length - 2).toLowerCase();\r\n\r\n    if (templateMappings.hasOwnProperty(key)) {\r\n      return templateMappings[key](atom);\r\n    }\r\n    return 'null';\r\n  });\r\n};\r\n\r\nclass AtomsTextGroup extends AtomsGroup {\r\n  _makeGeoArgs() {\r\n    const opts = this._mode.getLabelOpts();\r\n    return [this._selection.chunks.length, opts];\r\n  }\r\n\r\n  _build() {\r\n    const opts = this._mode.getLabelOpts();\r\n    const atomsIdc = this._selection.chunks;\r\n    const { atoms, parent } = this._selection;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]];\r\n      const text = opts.template ? parseTemplate(atom, opts.template) : getAtomText(atom);\r\n      if (!text) {\r\n        continue;\r\n      }\r\n      const color = colorer.getAtomColor(atom, parent);\r\n      const fgColor = parseInt(propagateColor(color, opts.fg).substring(1), 16);\r\n      const bgColor = opts.showBg ? parseInt(propagateColor(color, opts.bg).substring(1), 16) : 'transparent';\r\n      geo.setItem(i, atom.position, text);\r\n      geo.setColor(i, fgColor, bgColor);\r\n    }\r\n    geo.finalize();\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const opts = this._mode.getLabelOpts();\r\n    const atomsIdc = this._selection.chunks;\r\n    const { atoms } = this._selection;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    const updateColor = frameData.needsColorUpdate(colorer);\r\n    for (let i = 0, n = atomsIdc.length; i < n; ++i) {\r\n      const atom = atoms[atomsIdc[i]];\r\n      const text = opts.template ? parseTemplate(atom, opts.template) : getAtomText(atom);\r\n      if (!text) {\r\n        continue;\r\n      }\r\n      const color = frameData.getAtomColor(colorer, atom);\r\n      const fgColor = parseInt(propagateColor(color, opts.fg).substring(1), 16);\r\n      const bgColor = opts.showBg ? parseInt(propagateColor(color, opts.bg).substring(1), 16) : 'transparent';\r\n      geo.setItem(i, frameData.getAtomPos(atomsIdc[i]), text);\r\n      if (updateColor) {\r\n        geo.setColor(i, fgColor, bgColor);\r\n      }\r\n    }\r\n    geo.finalize();\r\n  }\r\n}\r\n\r\nexport default AtomsTextGroup;\r\n","import * as THREE from 'three';\r\nimport AtomsGroup from './AtomsGroup';\r\n\r\nfunction _slerp(omega, v1, v2, t) {\r\n  const oSin = Math.sin(omega);\r\n  return v1.clone().multiplyScalar(Math.sin((1 - t) * omega) / oSin).addScaledVector(v2, Math.sin(t * omega) / oSin);\r\n}\r\n\r\nclass AromaticGroup extends AtomsGroup {\r\n  _buildInner(radOffset, addChunk) {\r\n    const chunksToIdx = this._selection.chunks;\r\n\r\n    const prevVector = new THREE.Vector3();\r\n    const currVector = new THREE.Vector3();\r\n    const segmentsHeight = this._segmentsHeight;\r\n    const leprStep = 1.0 / segmentsHeight;\r\n    const colorer = this._colorer;\r\n\r\n    const { cycles, parent } = this._selection;\r\n    let chunkIdx = 0;\r\n    let currAtomIdx = chunksToIdx[chunkIdx];\r\n\r\n    for (let cIdx = 0, cCount = cycles.length; cIdx < cCount; ++cIdx) {\r\n      const cycle = cycles[cIdx];\r\n      const cycAtoms = cycle.atoms;\r\n      const chunkPoints = [];\r\n      const tmpDir = [];\r\n      const { center } = cycle;\r\n      const cycleRad = cycle.radius - radOffset;\r\n      const n = cycAtoms.length;\r\n      let i = 0;\r\n      const prevPos = cycAtoms[n - 1].position;\r\n      let currPos = cycAtoms[i].position;\r\n      prevVector.subVectors(prevPos, center);\r\n      currVector.subVectors(currPos, center);\r\n      const upDir = currVector.clone().cross(prevVector).normalize();\r\n\r\n      for (; i < n; ++i) {\r\n        const omega = prevVector.angleTo(currVector);\r\n        tmpDir[i] = _slerp(omega, prevVector, currVector, 0.5).normalize();\r\n        currPos = cycAtoms[(i + 1) % n].position;\r\n        prevVector.copy(currVector);\r\n        currVector.subVectors(currPos, center);\r\n      }\r\n\r\n      for (i = 0; i < n; ++i) {\r\n        if (cycAtoms[i].index !== currAtomIdx) {\r\n          continue;\r\n        }\r\n        const start = tmpDir[i];\r\n        const end = tmpDir[(i + 1) % n];\r\n        const color = colorer.getAtomColor(cycAtoms[i], parent);\r\n        const currAngle = start.angleTo(end);\r\n\r\n        for (let j = 0; j <= segmentsHeight; ++j) {\r\n          chunkPoints[j] = _slerp(currAngle, start, end, j * leprStep).multiplyScalar(cycleRad).add(center);\r\n        }\r\n\r\n        addChunk(chunkIdx++, color, chunkPoints, center, upDir);\r\n        currAtomIdx = chunksToIdx[chunkIdx];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default AromaticGroup;\r\n","import * as THREE from 'three';\r\nimport gfxutils from '../../gfxutils';\r\nimport AromaticGroup from './AromaticGroup';\r\n\r\nfunction _createShape(rad, parts) {\r\n  const pts = [];\r\n  for (let i = 0; i < parts; ++i) {\r\n    const a = -2 * i / parts * Math.PI;\r\n    pts.push(new THREE.Vector3(Math.cos(a) * rad, Math.sin(a) * rad, 0));\r\n  }\r\n  return pts;\r\n}\r\nconst { calcChunkMatrix } = gfxutils;\r\n\r\nclass AromaticTorusGroup extends AromaticGroup {\r\n  _build() {\r\n    const segmentsHeight = this._segmentsHeight;\r\n    const torusRad = this._mode.getAromRadius();\r\n    const radiusV = new THREE.Vector2(torusRad, torusRad);\r\n    const radOffset = this._mode.calcStickRadius() + 2 * torusRad;\r\n    const lookAtVector = new THREE.Vector3();\r\n    const mtc = [];\r\n    const geo = this._geo;\r\n    this._buildInner(radOffset, (chunkIdx, color, points, center, upDir) => {\r\n      for (let j = 0; j <= segmentsHeight; ++j) {\r\n        const currPoint = points[j];\r\n        const currDir = currPoint.clone().sub(center).cross(upDir);\r\n        lookAtVector.addVectors(currPoint, currDir);\r\n        mtc[j] = calcChunkMatrix(currPoint, lookAtVector, upDir, radiusV);\r\n      }\r\n      geo.setItem(chunkIdx, mtc);\r\n      geo.setColor(chunkIdx, color);\r\n    });\r\n    geo.finalize();\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    this._segmentsHeight = this._polyComplexity;\r\n    return [_createShape(1.0, this._polyComplexity), this._segmentsHeight + 1, this._selection.chunks.length];\r\n  }\r\n}\r\n\r\nexport default AromaticTorusGroup;\r\n","import AromaticGroup from './AromaticGroup';\r\n\r\nclass AromaticLinesGroup extends AromaticGroup {\r\n  _build() {\r\n    const geo = this._geo;\r\n    const radOffset = this._mode.getAromaticOffset();\r\n    this._buildInner(radOffset, (chunkIdx, color, points) => {\r\n      let prevPt = points[0];// do not replace with start\r\n      for (let j = 1; j <= this._segmentsHeight; ++j) {\r\n        const currPoint = points[j];\r\n        geo.setSegment(chunkIdx, j - 1, prevPt, currPoint);\r\n        prevPt = currPoint;\r\n      }\r\n      geo.setColor(chunkIdx, color);\r\n    });\r\n    geo.finalize();\r\n  }\r\n\r\n  _makeGeoArgs() {\r\n    this._segmentsHeight = this._mode.getAromaticArcChunks();\r\n    return [this._selection.chunks.length, this._segmentsHeight, true];\r\n  }\r\n}\r\n\r\nexport default AromaticLinesGroup;\r\n","import ChemGroup from './ChemGroup';\r\n\r\nclass ResiduesGroup extends ChemGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { residues } = this._selection;\r\n    const inters = [];\r\n    this._mesh.raycast(raycaster, inters);\r\n    const chunksIdc = this._chunksIdc;\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue;\r\n      }\r\n      const resIdx = chunksIdc[inters[i].chunkIdx];\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx];\r\n        intersects.push(inters[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = [];\r\n    const { residues } = this._selection;\r\n    const resIdc = this._chunksIdc;\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]];\r\n      if ((res._mask & mask) !== 0) {\r\n        chunksList.push(i);\r\n      }\r\n    }\r\n    return chunksList;\r\n  }\r\n}\r\n\r\nexport default ResiduesGroup;\r\n","import ResiduesGroup from './ResiduesGroup';\r\n\r\nclass NucleicItemGroup extends ResiduesGroup {\r\n  raycast(raycaster, intersects) {\r\n    const { residues } = this._selection;\r\n    const inters = [];\r\n    this._mesh.raycast(raycaster, inters);\r\n    const chunksIdc = this._chunksIdc;\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue;\r\n      }\r\n      const resIdx = chunksIdc[Math.floor(inters[i].chunkIdx / 2)];\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx];\r\n        intersects.push(inters[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    const stickRad = this._mode.calcStickRadius();\r\n    let chunkIdx = 0;\r\n\r\n    const resIdc = this._selection.chunks;\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]];\r\n      const color = colorer.getResidueColor(res, parent);\r\n      this._processItem(chunkIdx++, res._cylinders[0], res._cylinders[1], stickRad, color);\r\n    }\r\n    geo.finalize();\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = [];\r\n    let chunkIdx = 0;\r\n    const { residues } = this._selection;\r\n    const resIdc = this._chunksIdc;\r\n\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]];\r\n      if ((res._mask & mask) !== 0) {\r\n        chunksList[chunkIdx++] = 2 * i;\r\n        chunksList[chunkIdx++] = 2 * i + 1;\r\n      }\r\n    }\r\n    return chunksList;\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const residues = frameData.getResidues();\r\n    const { parent } = this._selection;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    const stickRad = this._mode.calcStickRadius();\r\n    let chunkIdx = 0;\r\n\r\n    const resIdc = this._selection.chunks;\r\n    for (let i = 0, n = resIdc.length; i < n; ++i) {\r\n      const res = residues[resIdc[i]];\r\n      const color = colorer.getResidueColor(res, parent);\r\n      this._processItem(chunkIdx++, res._cylinders[0], res._cylinders[1], stickRad, color);\r\n    }\r\n    geo.finishUpdate();\r\n  }\r\n}\r\n\r\nexport default NucleicItemGroup;\r\n","import NucleicItemGroup from './NucleicItemGroup';\r\n\r\nclass NucleicCylindersGroup extends NucleicItemGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length, this._polyComplexity];\r\n  }\r\n\r\n  _processItem(chunkIdx, cyl1, cyl2, stickRad, color) {\r\n    const geo = this._geo;\r\n    geo.setItem(chunkIdx, cyl1, cyl2, stickRad);\r\n    geo.setColor(chunkIdx, color, color);\r\n  }\r\n}\r\n\r\nexport default NucleicCylindersGroup;\r\n","import NucleicItemGroup from './NucleicItemGroup';\r\n\r\nclass NucleicSpheresGroup extends NucleicItemGroup {\r\n  _makeGeoArgs() {\r\n    return [this._selection.chunks.length * 2, this._polyComplexity];\r\n  }\r\n\r\n  _processItem(chunkIdx, cyl1, cyl2, stickRad, color) {\r\n    const geo = this._geo;\r\n    let idx = chunkIdx * 2;\r\n    geo.setItem(idx, cyl1, stickRad);\r\n    geo.setColor(idx, color);\r\n    idx++;\r\n    geo.setItem(idx, cyl2, stickRad);\r\n    geo.setColor(idx, color);\r\n  }\r\n}\r\n\r\nexport default NucleicSpheresGroup;\r\n","import * as THREE from 'three';\r\nimport { Smooth } from '../../../../vendor/js/Smooth';\r\nimport gfxutils from '../../gfxutils';\r\nimport chem from '../../../chem';\r\n\r\nconst { ResidueType } = chem;\r\n\r\nconst calcMatrix = gfxutils.calcChunkMatrix;\r\n\r\nfunction _buildStructureInterpolator(points, tension) {\r\n  const path = Smooth(points, {\r\n    method: Smooth.METHOD_CUBIC,\r\n    clip: Smooth.CLIP_CLAMP,\r\n    cubicTension: tension,\r\n    scaleTo: 1,\r\n  });\r\n\r\n  return function (t, argTrans) {\r\n    let transformT = argTrans;\r\n    if (transformT === null) {\r\n      // map our range to the [second .. last but one]\r\n      transformT = function (tt) {\r\n        return (tt * ((points.length - 1) - 2) + 1) / (points.length - 1);\r\n      };\r\n    }\r\n    const newt = transformT(t);\r\n    const ans = path(newt);\r\n    return new THREE.Vector3(ans[0], ans[1], ans[2]);\r\n  };\r\n}\r\n\r\nfunction _addPoints(centerPoints, topPoints, idx, residue) {\r\n  if (!residue._isValid) {\r\n    centerPoints[idx] = centerPoints[idx - 1];\r\n    topPoints[idx] = topPoints[idx - 1];\r\n    return;\r\n  }\r\n  const cp = residue._controlPoint;\r\n  centerPoints[idx] = [cp.x, cp.y, cp.z];\r\n  const tp = cp.clone().add(residue._wingVector);\r\n  topPoints[idx] = [tp.x, tp.y, tp.z];\r\n}\r\n\r\nfunction _addPointsForLoneResidue(centerPoints, topPoints, idx, residue) {\r\n  const nucleic = (residue._type.flags & ResidueType.Flags.NUCLEIC) !== 0;\r\n  const nameFrom = nucleic ? 'C5\\'' : 'N';\r\n  const nameTo = nucleic ? 'C3\\'' : 'C';\r\n\r\n  let posFrom;\r\n  let posTo;\r\n  residue.forEachAtom((atom) => {\r\n    const name = atom.getVisualName();\r\n    if (!posFrom && name === nameFrom) {\r\n      posFrom = atom.position;\r\n    } else if (!posTo && name === nameTo) {\r\n      posTo = atom.position;\r\n    }\r\n  });\r\n\r\n  // provide a fallback for unknown residues\r\n  if (!(posFrom && posTo)) {\r\n    posFrom = residue._firstAtom.position;\r\n    posTo = residue._lastAtom.position;\r\n  }\r\n\r\n  if (posFrom && posTo) {\r\n    const shift = posTo.clone().sub(posFrom);\r\n\r\n    const wing = residue._wingVector;\r\n    const cp = residue._controlPoint;\r\n    const tp = cp.clone().add(wing);\r\n\r\n    const cpPrev = cp.clone().sub(shift);\r\n    const tpPrev = cpPrev.clone().add(wing);\r\n    centerPoints[idx] = [cpPrev.x, cpPrev.y, cpPrev.z];\r\n    topPoints[idx] = [tpPrev.x, tpPrev.y, tpPrev.z];\r\n    ++idx;\r\n    centerPoints[idx] = [cpPrev.x, cpPrev.y, cpPrev.z];\r\n    topPoints[idx] = [tpPrev.x, tpPrev.y, tpPrev.z];\r\n    ++idx;\r\n\r\n    centerPoints[idx] = [cp.x, cp.y, cp.z];\r\n    topPoints[idx] = [tp.x, tp.y, tp.z];\r\n    ++idx;\r\n\r\n    const cpNext = cp.clone().add(shift);\r\n    const tpNext = cpNext.clone().add(wing);\r\n    centerPoints[idx] = [cpNext.x, cpNext.y, cpNext.z];\r\n    topPoints[idx] = [tpNext.x, tpNext.y, tpNext.z];\r\n    ++idx;\r\n    centerPoints[idx] = [cpNext.x, cpNext.y, cpNext.z];\r\n    topPoints[idx] = [tpNext.x, tpNext.y, tpNext.z];\r\n  }\r\n}\r\n\r\nfunction _calcPoints(residues, firstIdx, lastIdx, boundaries) {\r\n  const left = boundaries.start;\r\n  const right = boundaries.end;\r\n  function _prevIdx(idx) {\r\n    return idx > left && residues[idx - 1]._isValid ? idx - 1 : idx;\r\n  }\r\n  function _nextIdx(idx) {\r\n    return idx < right && residues[idx + 1]._isValid ? idx + 1 : idx;\r\n  }\r\n\r\n  const topPoints = [];\r\n  const centerPoints = [];\r\n  let arrIdx = 0;\r\n  function _extrapolate2(currIdx, otherIdx) {\r\n    const cp = residues[currIdx]._controlPoint.clone().lerp(residues[otherIdx]._controlPoint, -0.25);\r\n    const tp = cp.clone().add(residues[currIdx]._wingVector);\r\n    centerPoints[arrIdx] = [cp.x, cp.y, cp.z];\r\n    topPoints[arrIdx++] = [tp.x, tp.y, tp.z];\r\n    centerPoints[arrIdx] = [cp.x, cp.y, cp.z];\r\n    topPoints[arrIdx++] = [tp.x, tp.y, tp.z];\r\n  }\r\n\r\n  // a single disconnected residue\r\n  const prevIdx = _prevIdx(firstIdx);\r\n  const nextIdx = _nextIdx(lastIdx);\r\n  if (prevIdx === nextIdx) {\r\n    _addPointsForLoneResidue(centerPoints, topPoints, arrIdx, residues[firstIdx]);\r\n    return { centerPoints, topPoints };\r\n  }\r\n\r\n  // Two points (prev-prev and next-next) are added to support edge conditions for cubic splines, they are ignored\r\n  // Another two (prev and next) were added to support the outside of the sub chain\r\n\r\n  // prev and prev-prev\r\n  if (firstIdx === prevIdx) {\r\n    // do the extrapolation\r\n    _extrapolate2(firstIdx, _nextIdx(firstIdx));\r\n  } else {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[_prevIdx(prevIdx)]);\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[prevIdx]);\r\n  }\r\n\r\n  // main loop\r\n  for (let idx = firstIdx; idx <= lastIdx; ++idx) {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[idx]);\r\n  }\r\n\r\n  // next and next-next\r\n  if (nextIdx === _nextIdx(nextIdx)) {\r\n    // do the extrapolation\r\n    _extrapolate2(lastIdx, _prevIdx(lastIdx));\r\n  } else {\r\n    _addPoints(centerPoints, topPoints, arrIdx++, residues[nextIdx]);\r\n    _addPoints(centerPoints, topPoints, arrIdx, residues[_nextIdx(nextIdx)]);\r\n  }\r\n  return { centerPoints, topPoints };\r\n}\r\n\r\nclass CartoonHelper {\r\n  constructor(residues, startIdx, endIdx, segmentsCount, tension, boundaries) {\r\n    const pointsArrays = _calcPoints(residues, startIdx, endIdx, boundaries);\r\n    this._topInterp = _buildStructureInterpolator(pointsArrays.topPoints, tension);\r\n    this._centerInterp = _buildStructureInterpolator(pointsArrays.centerPoints, tension);\r\n\r\n    this._shift = 0.5 / (endIdx - startIdx + 2);\r\n    this._valueStep = (1.0 - 2 * this._shift) / (2 * (endIdx - startIdx + 1) * (segmentsCount - 1));\r\n    this._segmentsCount = segmentsCount;\r\n  }\r\n\r\n  prepareMatrices(idx, firstRad, secondRad) {\r\n    const mtcCount = this._segmentsCount;\r\n    const outMtc = new Array(mtcCount);\r\n    const currRad = new THREE.Vector2(0, 0);\r\n\r\n    const topInterp = this._topInterp;\r\n    const cenInterp = this._centerInterp;\r\n\r\n    let currentValue = this._shift + this._valueStep * (mtcCount - 1) * idx;\r\n\r\n    for (let mtxIdx = 0; mtxIdx < mtcCount; ++mtxIdx) {\r\n      const lerpVal = Math.min(1.0, mtxIdx / (mtcCount - 1));\r\n      currRad.lerpVectors(firstRad, secondRad, lerpVal);\r\n\r\n      const currTop = topInterp(currentValue, null);\r\n      const currCenter = cenInterp(currentValue, null);\r\n      currentValue += this._valueStep;\r\n      const nextCenter = cenInterp(currentValue, null);\r\n\r\n      outMtc[mtxIdx] = calcMatrix(currCenter.clone(), nextCenter.clone(), currTop.clone().sub(currCenter), currRad);\r\n    }\r\n\r\n    return outMtc;\r\n  }\r\n}\r\n\r\nexport default CartoonHelper;\r\n","import * as THREE from 'three';\r\nimport ResiduesGroup from './ResiduesGroup';\r\nimport CartoonHelper from './CartoonHelper';\r\n\r\nfunction _createShape(rad, parts) {\r\n  const pts = [];\r\n\r\n  for (let i = 0; i < parts; ++i) {\r\n    // starts from pi/2 because it's important that points are lied on the angles of arrows (visual issues if not)\r\n    const a = Math.PI / 2.0 - 2 * Math.PI * i / parts;\r\n\r\n    pts.push(new THREE.Vector3(Math.cos(a) * rad, Math.sin(a) * rad, 0));\r\n  }\r\n  return pts;\r\n}\r\n\r\nfunction _loopThrough(subDiv, residues, segmentsHeight, tension, mode, callback) {\r\n  for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\r\n    const subs = subDiv[subDivI].arr;\r\n    const { boundaries } = subDiv[subDivI];\r\n    for (let i = 0, n = subs.length; i < n; ++i) {\r\n      const idc = [subs[i].start, subs[i].end];\r\n      const matrixHelper = new CartoonHelper(residues, idc[0], idc[1], segmentsHeight, tension, boundaries);\r\n      let prevLast = null;\r\n      const startIdx = subs[i].start * 2;\r\n      const endIdx = subs[i].end * 2 + 1;\r\n      let prevSecondRad = mode.getResidueRadius(residues[0], 0);\r\n      for (let idx = startIdx; idx <= endIdx; ++idx) {\r\n        const resIdx = (idx / 2 | 0);\r\n        const currRes = residues[resIdx];\r\n        const firstRad = mode.getResidueRadius(currRes, idx % 2);\r\n        const secondRad = mode.getResidueRadius(currRes, 1 + (idx % 2));\r\n\r\n        const mtc = matrixHelper.prepareMatrices(idx - idc[0] * 2, firstRad, secondRad);\r\n        mtc.unshift(prevLast === null ? mtc[0] : prevLast);\r\n\r\n        // Slope - radius is changed along this residue part\r\n        const hasSlope = (firstRad.x !== secondRad.x) || (firstRad.y !== secondRad.y);\r\n        // Cut - end radius of previous part not equal to start radius of this part. First section of this part lies in the orthogonal plane\r\n        const hasCut = (firstRad.x !== prevSecondRad.x) || (firstRad.y !== prevSecondRad.y);\r\n\r\n        callback(currRes, mtc, hasSlope, hasCut);\r\n\r\n        prevLast = mtc[segmentsHeight];\r\n        prevSecondRad = secondRad;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass ResiduesSubseqGroup extends ResiduesGroup {\r\n  _makeGeoArgs() {\r\n    const cmpMultiplier = this._mode.getHeightSegmentsRatio();\r\n    this._segmentsHeight = this._polyComplexity * cmpMultiplier | 0;\r\n    return [_createShape(1.0, this._polyComplexity), this._segmentsHeight + 1, this._selection.chunks.length * 2];\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const tension = mode.getTension();\r\n    const geo = this._geo;\r\n    let chunkIdx = 0;\r\n    const chunkIdc = [];\r\n    _loopThrough(this._selection.subdivs, residues, this._segmentsHeight, tension, mode, (currRes, mtc, hasSlope = false, hasCut = false) => {\r\n      const color = colorer.getResidueColor(currRes, parent);\r\n      chunkIdc[chunkIdx] = currRes._index;\r\n      geo.setItem(chunkIdx, mtc, hasSlope, hasCut);\r\n      geo.setColor(chunkIdx++, color);\r\n    });\r\n    this._chunksIdc = chunkIdc;\r\n    geo.finalize();\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const { parent } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const tension = mode.getTension();\r\n    const geo = this._geo;\r\n    const frameRes = frameData.getResidues();\r\n    let chunkIdx = 0;\r\n    const updateColor = frameData.needsColorUpdate(colorer);\r\n    _loopThrough(this._selection.subdivs, frameRes, this._segmentsHeight, tension, mode, (currRes, mtc) => {\r\n      geo.setItem(chunkIdx, mtc);\r\n      if (updateColor) {\r\n        geo.setColor(chunkIdx, colorer.getResidueColor(currRes, parent));\r\n      }\r\n      chunkIdx++;\r\n    });\r\n    geo.finalize();\r\n  }\r\n}\r\n\r\nexport default ResiduesSubseqGroup;\r\n","import ChemGroup from './ChemGroup';\r\n\r\nclass ResiduesTraceGroup extends ChemGroup {\r\n  _makeGeoArgs() {\r\n    const subDiv = this._selection.subdivs;\r\n    let chunksCount = 0;\r\n    for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\r\n      const subs = subDiv[subDivI].arr;\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        chunksCount += subs[i].end - subs[i].start;\r\n      }\r\n    }\r\n    return [chunksCount, this._polyComplexity];\r\n  }\r\n\r\n  _build() {\r\n    const { residues, parent } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    let chunkIdx = 0;\r\n    const chunkIdc = [];\r\n    const subDiv = this._selection.subdivs;\r\n    const stickRad = mode.calcStickRadius();\r\n\r\n    for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\r\n      const subs = subDiv[subDivI].arr;\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        const startIdx = subs[i].start;\r\n        const endIdx = subs[i].end;\r\n        let prevRes = residues[startIdx];\r\n        for (let idx = startIdx + 1; idx <= endIdx; ++idx) {\r\n          const currRes = residues[idx];\r\n          chunkIdc[chunkIdx] = { first: prevRes._index, second: currRes._index };\r\n          geo.setItem(chunkIdx, prevRes._controlPoint, currRes._controlPoint, stickRad);\r\n          geo.setColor(chunkIdx, colorer.getResidueColor(prevRes, parent), colorer.getResidueColor(currRes, parent));\r\n          chunkIdx++;\r\n          prevRes = currRes;\r\n        }\r\n      }\r\n    }\r\n\r\n    this._chunksIdc = chunkIdc;\r\n    geo.finalize();\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n\r\n    const residues = frameData.getResidues();\r\n    const { parent } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    let chunkIdx = 0;\r\n    const subDiv = this._selection.subdivs;\r\n    const stickRad = mode.calcStickRadius();\r\n    const updateColor = frameData.needsColorUpdate(colorer);\r\n\r\n    for (let subDivI = 0, subDivN = subDiv.length; subDivI < subDivN; ++subDivI) {\r\n      const subs = subDiv[subDivI].arr;\r\n      for (let i = 0, n = subs.length; i < n; ++i) {\r\n        const startIdx = subs[i].start;\r\n        const endIdx = subs[i].end;\r\n        let prevRes = residues[startIdx];\r\n        for (let idx = startIdx + 1; idx <= endIdx; ++idx) {\r\n          const currRes = residues[idx];\r\n          geo.setItem(chunkIdx, prevRes._controlPoint, currRes._controlPoint, stickRad);\r\n          if (updateColor) {\r\n            geo.setColor(chunkIdx, colorer.getResidueColor(prevRes, parent), colorer.getResidueColor(currRes, parent));\r\n          }\r\n          chunkIdx++;\r\n          prevRes = currRes;\r\n        }\r\n      }\r\n    }\r\n\r\n    geo.finalize();\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const inters = [];\r\n    const { residues } = this._selection;\r\n    this._mesh.raycast(raycaster, inters);\r\n    const chunksToIdx = this._chunksIdc;\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue;\r\n      }\r\n      const { chunkIdx } = inters[i];\r\n      const chunk = chunksToIdx[Math.floor(chunkIdx / 2)];\r\n      const resIdx = chunkIdx % 2 === 0 ? chunk.first : chunk.second;\r\n      if (resIdx < residues.length) {\r\n        inters[i].residue = residues[resIdx];\r\n        intersects.push(inters[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask) {\r\n    const chunksList = [];\r\n    const chunksToIdx = this._chunksIdc;\r\n    const { residues } = this._selection;\r\n    for (let i = 0, n = chunksToIdx.length; i < n; ++i) {\r\n      const chunk = chunksToIdx[i];\r\n      if (residues[chunk.first]._mask & mask) {\r\n        chunksList.push(i * 2);\r\n      }\r\n      if (residues[chunk.second]._mask & mask) {\r\n        chunksList.push(i * 2 + 1);\r\n      }\r\n    }\r\n    return chunksList;\r\n  }\r\n}\r\n\r\nexport default ResiduesTraceGroup;\r\n","import ChemGroup from './ChemGroup';\r\nimport Bond from '../../../chem/Bond';\r\n\r\nfunction getCylinderCount(bondOrder) {\r\n  return bondOrder < 2 ? 1 : bondOrder;\r\n}\r\n\r\nclass BondsGroup extends ChemGroup {\r\n  _makeGeoArgs() {\r\n    const drawMultiple = this._mode.drawMultiorderBonds();\r\n    const showAromatic = this._mode.showAromaticLoops();\r\n    const bondsIdc = this._selection.chunks;\r\n    const { bonds } = this._selection;\r\n    let bondsCount = 0;\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      bondsCount += this.getBondOrder(bonds[bondsIdc[i]], drawMultiple, showAromatic);\r\n    }\r\n    return [bondsCount, this._polyComplexity];\r\n  }\r\n\r\n  getBondOrder(bond, drawMultiple, showAromatic) {\r\n    let bondOrder = 1;\r\n    if (drawMultiple && (!showAromatic || bond._type !== Bond.BondType.AROMATIC)) {\r\n      bondOrder = getCylinderCount(bond._order);\r\n    }\r\n    return bondOrder;\r\n  }\r\n\r\n  raycast(raycaster, intersects) {\r\n    const { bonds } = this._selection;\r\n    const inters = [];\r\n    this._mesh.raycast(raycaster, inters);\r\n    const bondsIdc = this._chunksIdc;\r\n    // process inters array - arr object references\r\n    for (let i = 0, n = inters.length; i < n; ++i) {\r\n      if (!inters[i].hasOwnProperty('chunkIdx')) {\r\n        continue;\r\n      }\r\n      const { chunkIdx } = inters[i];\r\n      const bondIdx = bondsIdc[Math.floor(chunkIdx / 2)];\r\n      if (bondIdx < bonds.length) {\r\n        const bond = bonds[bondIdx];\r\n        inters[i].atom = chunkIdx % 2 === 0 ? bond._left : bond._right;\r\n        intersects.push(inters[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  _calcChunksList(mask, innerOnly) {\r\n    const chunksList = [];\r\n    const { bonds } = this._selection;\r\n    const chunksToIdx = this._chunksIdc;\r\n    for (let i = 0, n = chunksToIdx.length; i < n; ++i) {\r\n      const bond = bonds[chunksToIdx[i]];\r\n      if ((bond._left.mask & mask) && (!innerOnly || (bond._right.mask & mask))) {\r\n        chunksList.push(2 * i);\r\n      }\r\n      if ((bond._right.mask & mask) && (!innerOnly || (bond._left.mask & mask))) {\r\n        chunksList.push(2 * i + 1);\r\n      }\r\n    }\r\n    return chunksList;\r\n  }\r\n}\r\n\r\nexport default BondsGroup;\r\n","import * as THREE from 'three';\r\nimport BondsGroup from './BondsGroup';\r\n\r\nclass BondsCylinderGroup extends BondsGroup {\r\n  _build() {\r\n    const bondsIdc = this._selection.chunks;\r\n    const { bonds, parent } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    const drawMultiple = mode.drawMultiorderBonds();\r\n    const showAromatic = mode.showAromaticLoops();\r\n\r\n    const stickRad = mode.calcStickRadius();\r\n    const emptyOffset = mode.calcSpaceFraction();\r\n    let normDir;\r\n    const leftPos = new THREE.Vector3();\r\n    const rightPos = new THREE.Vector3();\r\n    let currBondIdx = 0;\r\n    const chunksToIdx = [];\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]];\r\n      const atom1 = bond._left;\r\n      const atom2 = bond._right;\r\n      const a1Pos = atom1.position;\r\n      const a2Pos = atom2.position;\r\n      normDir = bond.calcNormalDir();\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic);\r\n      const minRad = Math.min(mode.calcAtomRadius(atom1), mode.calcAtomRadius(atom2));\r\n      const dist = 2 * minRad / order;\r\n      const currStickRad = drawMultiple ? Math.min(stickRad, dist * 0.5 * (1.0 - emptyOffset)) : stickRad;\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        const scale = dist * (order % 2 === 0\r\n          ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n          : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)));\r\n        chunksToIdx[currBondIdx] = bond._index;\r\n        leftPos.copy(a1Pos);\r\n        leftPos.addScaledVector(normDir, scale);\r\n        rightPos.copy(a2Pos);\r\n        rightPos.addScaledVector(normDir, scale);\r\n        geo.setItem(currBondIdx, leftPos, rightPos, currStickRad);\r\n        geo.setColor(currBondIdx++, colorer.getAtomColor(atom1, parent), colorer.getAtomColor(atom2, parent));\r\n      }\r\n    }\r\n\r\n    geo.finalize();\r\n    this._chunksIdc = chunksToIdx;\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    const bondsIdc = this._selection.chunks;\r\n    const { bonds } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    const drawMultiple = mode.drawMultiorderBonds();\r\n    const showAromatic = mode.showAromaticLoops();\r\n\r\n    const stickRad = mode.calcStickRadius();\r\n    const emptyOffset = mode.calcSpaceFraction();\r\n    let normDir;\r\n    const leftPos = new THREE.Vector3();\r\n    const rightPos = new THREE.Vector3();\r\n    let currBondIdx = 0;\r\n    const updateColor = frameData.needsColorUpdate(colorer);\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]];\r\n      const atom1 = bond._left;\r\n      const atom2 = bond._right;\r\n      const a1Pos = frameData.getAtomPos(atom1.index).clone();\r\n      const a2Pos = frameData.getAtomPos(atom2.index);\r\n      normDir = bond.calcNormalDir();\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic);\r\n      const minRad = Math.min(mode.calcAtomRadius(atom1), mode.calcAtomRadius(atom2));\r\n      const dist = 2 * minRad / order;\r\n      const currStickRad = drawMultiple ? Math.min(stickRad, dist * 0.5 * (1.0 - emptyOffset)) : stickRad;\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        const scale = dist * (order % 2 === 0\r\n          ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n          : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)));\r\n        leftPos.copy(a1Pos);\r\n        leftPos.addScaledVector(normDir, scale);\r\n        rightPos.copy(a2Pos);\r\n        rightPos.addScaledVector(normDir, scale);\r\n        geo.setItem(currBondIdx, leftPos, rightPos, currStickRad);\r\n        if (updateColor) {\r\n          geo.setColor(currBondIdx, frameData.getAtomColor(colorer, atom1), frameData.getAtomColor(colorer, atom2));\r\n        }\r\n        currBondIdx++;\r\n      }\r\n    }\r\n    geo.finalize();\r\n  }\r\n}\r\n\r\nexport default BondsCylinderGroup;\r\n","import * as THREE from 'three';\r\nimport BondsGroup from './BondsGroup';\r\n\r\nconst STEP_SIZE = 0.15;\r\n\r\nclass BondsLinesGroup extends BondsGroup {\r\n  _build() {\r\n    const bondsIdc = this._selection.chunks;\r\n    const { bonds, parent } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    const drawMultiple = mode.drawMultiorderBonds();\r\n    const showAromatic = mode.showAromaticLoops();\r\n\r\n    const bondDir = new THREE.Vector3();\r\n\r\n    const leftPos = new THREE.Vector3();\r\n    const rightPos = new THREE.Vector3();\r\n    let currBondIdx = 0;\r\n    const chunksToIdx = [];\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]];\r\n      const atom1 = bond._left;\r\n      const atom2 = bond._right;\r\n      const a1Pos = atom1.position;\r\n      const a2Pos = atom2.position;\r\n      const a1Hangs = atom1.bonds.length === 1;\r\n      const a2Hangs = atom2.bonds.length === 1;\r\n      bondDir.subVectors(a2Pos, a1Pos);\r\n      const len = bondDir.length();\r\n      const normDir = bond.calcNormalDir();\r\n\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic);\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        leftPos.copy(a1Pos);\r\n        rightPos.copy(a2Pos);\r\n        let scale = (order % 2 === 0\r\n          ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n          : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)));\r\n        chunksToIdx[currBondIdx] = bond._index;\r\n        if (order === 2 && (!a1Hangs && !a2Hangs)) {\r\n          scale -= 0.5;\r\n          scale *= -1;\r\n        }\r\n\r\n        if (!a1Hangs && !a2Hangs && order > 1 && scale !== 0) {\r\n          leftPos.lerpVectors(a1Pos, a2Pos, STEP_SIZE / (len));\r\n          rightPos.lerpVectors(a1Pos, a2Pos, 1.0 - STEP_SIZE / (len));\r\n        }\r\n\r\n        scale *= STEP_SIZE;\r\n\r\n        leftPos.addScaledVector(normDir, scale);\r\n        rightPos.addScaledVector(normDir, scale);\r\n        geo.setItem(currBondIdx, leftPos, rightPos);\r\n        geo.setColor(currBondIdx++, colorer.getAtomColor(atom1, parent), colorer.getAtomColor(atom2, parent));\r\n      }\r\n    }\r\n    geo.finalize();\r\n    this._chunksIdc = chunksToIdx;\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    // This method looks like a copy paste. However, it\r\n    // was decided to postpone animation refactoring until GFX is fixed.\r\n    const bondsIdc = this._selection.chunks;\r\n    const { bonds } = this._selection;\r\n    const mode = this._mode;\r\n    const colorer = this._colorer;\r\n    const geo = this._geo;\r\n    const drawMultiple = mode.drawMultiorderBonds();\r\n    const showAromatic = mode.showAromaticLoops();\r\n\r\n    const bondDir = new THREE.Vector3();\r\n\r\n    const leftPos = new THREE.Vector3();\r\n    const rightPos = new THREE.Vector3();\r\n    let currBondIdx = 0;\r\n    const updateColor = frameData.needsColorUpdate(colorer);\r\n    for (let i = 0, n = bondsIdc.length; i < n; ++i) {\r\n      const bond = bonds[bondsIdc[i]];\r\n      const atom1 = bond._left;\r\n      const atom2 = bond._right;\r\n      const a1Pos = frameData.getAtomPos(atom1.index).clone();\r\n      const a2Pos = frameData.getAtomPos(atom2.index);\r\n      const a1Hangs = atom1.bonds.length === 1;\r\n      const a2Hangs = atom2.bonds.length === 1;\r\n      bondDir.subVectors(a2Pos, a1Pos);\r\n      const len = bondDir.length();\r\n      const normDir = bond.calcNormalDir();\r\n\r\n      const order = this.getBondOrder(bond, drawMultiple, showAromatic);\r\n\r\n      for (let j = 0; j < order; ++j) {\r\n        leftPos.copy(a1Pos);\r\n        rightPos.copy(a2Pos);\r\n        let scale = (order % 2 === 0\r\n          ? (((j / 2) | 0) + 0.5) * (1 - 2 * (j % 2))\r\n          : (((j + 1) / 2) | 0) * (-1 + 2 * (j % 2)));\r\n        if (order === 2 && (!a1Hangs && !a2Hangs)) {\r\n          scale -= 0.5;\r\n          scale *= -1;\r\n        }\r\n\r\n        if (!a1Hangs && !a2Hangs && order > 1 && scale !== 0) {\r\n          leftPos.lerpVectors(a1Pos, a2Pos, STEP_SIZE / (len));\r\n          rightPos.lerpVectors(a1Pos, a2Pos, 1.0 - STEP_SIZE / (len));\r\n        }\r\n\r\n        scale *= STEP_SIZE;\r\n\r\n        leftPos.addScaledVector(normDir, scale);\r\n        rightPos.addScaledVector(normDir, scale);\r\n        geo.setItem(currBondIdx, leftPos, rightPos);\r\n        if (updateColor) {\r\n          geo.setColor(currBondIdx, frameData.getAtomColor(colorer, atom1), frameData.getAtomColor(colorer, atom2));\r\n        }\r\n        currBondIdx++;\r\n      }\r\n    }\r\n    geo.finalize();\r\n  }\r\n}\r\n\r\nexport default BondsLinesGroup;\r\n","import AtomsSphereGroup from './AtomsSphereGroup';\r\nimport AtomsSurfaceGroup from './AtomsSurfaceGroup';\r\nimport AtomsSASSESGroupStub from './AtomsSASSESGroupStub';\r\nimport AtomsTextGroup from './AtomsTextGroup';\r\nimport AromaticTorusGroup from './AromaticTorusGroup';\r\nimport AromaticLinesGroup from './AromaticLinesGroup';\r\nimport NucleicCylindersGroup from './NucleicCylindersGroup';\r\nimport NucleicSpheresGroup from './NucleicSpheresGroup';\r\nimport ResiduesSubseqGroup from './ResiduesSubseqGroup';\r\nimport ResiduesTraceGroup from './ResiduesTraceGroup';\r\nimport BondsCylinderGroup from './BondsCylinderGroup';\r\nimport BondsLinesGroup from './BondsLinesGroup';\r\n\r\nexport default {\r\n  AtomsSphereGroup,\r\n  AtomsSurfaceGroup,\r\n  AtomsSASSESGroupStub,\r\n  AtomsTextGroup,\r\n  AromaticTorusGroup,\r\n  AromaticLinesGroup,\r\n  NucleicCylindersGroup,\r\n  NucleicSpheresGroup,\r\n  ResiduesSubseqGroup,\r\n  ResiduesTraceGroup,\r\n  BondsCylinderGroup,\r\n  BondsLinesGroup,\r\n};\r\n","import RCGroup from '../../RCGroup';\r\n\r\nclass AtomsProcessor extends RCGroup {\r\n  constructor(AtomsGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\r\n    super();\r\n    const self = this;\r\n    this._complex = complex;\r\n    this._mode = mode;\r\n    const atoms = complex.getAtoms();\r\n    const transforms = complex.getTransforms();\r\n\r\n    complex.forEachComponent((component) => {\r\n      const atomsIdc = [];\r\n      let atomCount = 0;\r\n      component.forEachAtom((atom) => {\r\n        if (!self._checkAtom(atom, mask)) {\r\n          return;\r\n        }\r\n        atomsIdc[atomCount++] = atom.index;\r\n      });\r\n      if (atomCount === 0) {\r\n        return;\r\n      }\r\n      const atomsGroup = new AtomsGroup(geoParams, {\r\n        atoms,\r\n        chunks: atomsIdc,\r\n        parent: complex,\r\n      }, colorer, mode, transforms, polyComplexity, material);\r\n      atomsGroup._component = component;\r\n      self.add(atomsGroup);\r\n    });\r\n  }\r\n\r\n  _checkAtom(atom, mask) {\r\n    return atom.mask & mask;\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = [];\r\n    const { children } = this;\r\n    let meshIdx = 0;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly);\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j];\r\n          subsetEl._component = children[i]._component;\r\n          totalSubset[meshIdx++] = subsetEl;\r\n        }\r\n      }\r\n    }\r\n    return totalSubset;\r\n  }\r\n}\r\n\r\nexport default AtomsProcessor;\r\n","import AtomsProcessor from './AtomsProcessor';\r\n\r\nclass OrphanAtomsProcessor extends AtomsProcessor {\r\n  _checkAtom(atom, mask) {\r\n    if (!(atom.mask & mask)) {\r\n      return false;\r\n    }\r\n\r\n    const { bonds } = atom;\r\n    for (let i = 0, n = bonds.length; i < n; ++i) {\r\n      if ((bonds[i]._left.mask & mask) && (bonds[i]._right.mask & mask)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default OrphanAtomsProcessor;\r\n","import RCGroup from '../../RCGroup';\r\n\r\nclass ResiduesProcessor extends RCGroup {\r\n  constructor(ResidueGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\r\n    super();\r\n    const self = this;\r\n    this._complex = complex;\r\n    const residues = complex.getResidues();\r\n    const transforms = complex.getTransforms();\r\n\r\n    complex.forEachComponent((component) => {\r\n      let chunksCount = 0;\r\n      const resIdc = [];\r\n      component.forEachResidue((residue) => {\r\n        if (self._checkResidue(residue, mask)) {\r\n          resIdc[chunksCount++] = residue._index;\r\n        }\r\n      });\r\n\r\n      if (chunksCount === 0) {\r\n        return;\r\n      }\r\n      const residuesGroup = new ResidueGroup(geoParams, {\r\n        residues,\r\n        chunks: resIdc,\r\n        parent: complex,\r\n      }, colorer, mode, transforms, polyComplexity, material);\r\n      residuesGroup._component = component;\r\n      self.add(residuesGroup);\r\n    });\r\n  }\r\n\r\n  checkResidue(residue, mask) {\r\n    return residue._mask & mask;\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = [];\r\n    const { children } = this;\r\n    let meshIdx = 0;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly);\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j];\r\n          subsetEl._component = children[i]._component;\r\n          totalSubset[meshIdx++] = subsetEl;\r\n        }\r\n      }\r\n    }\r\n    return totalSubset;\r\n  }\r\n}\r\n\r\nexport default ResiduesProcessor;\r\n","import ResidueProcessor from './ResiduesProcessor';\r\n\r\nclass NucleicProcessor extends ResidueProcessor {\r\n  _checkResidue(residue, mask) {\r\n    return mask & residue._mask && residue._cylinders !== null;\r\n  }\r\n}\r\nexport default NucleicProcessor;\r\n","import RCGroup from '../../RCGroup';\r\n\r\nclass SubseqsProcessor extends RCGroup {\r\n  constructor(ResidueGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\r\n    super();\r\n    const self = this;\r\n    this._complex = complex;\r\n    const residues = complex.getResidues();\r\n    const transforms = complex.getTransforms();\r\n\r\n    complex.forEachComponent((component) => {\r\n      const subDivs = component.getMaskedSubdivSequences(mask);\r\n\r\n      let chunksCount = 0;\r\n      const resIdc = [];\r\n      for (let subDivI = 0, subDivN = subDivs.length; subDivI < subDivN; ++subDivI) {\r\n        const subs = subDivs[subDivI].arr;\r\n        for (let i = 0, n = subs.length; i < n; ++i) {\r\n          for (let j = subs[i].start, jEnd = subs[i].end; j <= jEnd; ++j) {\r\n            resIdc[chunksCount++] = residues[j]._index;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (chunksCount === 0) {\r\n        return;\r\n      }\r\n      const residuesGroup = new ResidueGroup(geoParams, {\r\n        residues,\r\n        chunks: resIdc,\r\n        subdivs: subDivs,\r\n        parent: complex,\r\n      }, colorer, mode, transforms, polyComplexity, material);\r\n      residuesGroup._component = component;\r\n      self.add(residuesGroup);\r\n    });\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = [];\r\n    const { children } = this;\r\n    let meshIdx = 0;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly);\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j];\r\n          subsetEl._component = children[i]._component;\r\n          totalSubset[meshIdx++] = subsetEl;\r\n        }\r\n      }\r\n    }\r\n    return totalSubset;\r\n  }\r\n}\r\n\r\nexport default SubseqsProcessor;\r\n","import RCGroup from '../../RCGroup';\r\n\r\nclass BondsProcessor extends RCGroup {\r\n  constructor(BondsGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\r\n    super();\r\n    const self = this;\r\n    this._complex = complex;\r\n    const bonds = complex.getBonds();\r\n    const transforms = complex.getTransforms();\r\n\r\n    complex.forEachComponent((component) => {\r\n      const bondsIdc = [];\r\n      let bondsCount = 0;\r\n      component.forEachBond((bond) => {\r\n        const atom1 = bond._left;\r\n        const atom2 = bond._right;\r\n        if (!(atom1.mask & mask) || !(atom2.mask & mask)) {\r\n          return;\r\n        }\r\n        bondsIdc[bondsCount++] = bond._index;\r\n      });\r\n      if (bondsCount === 0) {\r\n        return;\r\n      }\r\n      const bondsGroup = new BondsGroup(geoParams, {\r\n        bonds,\r\n        chunks: bondsIdc,\r\n        parent: complex,\r\n      }, colorer, mode, transforms, polyComplexity, material);\r\n      bondsGroup._component = component;\r\n      self.add(bondsGroup);\r\n    });\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = [];\r\n    const { children } = this;\r\n    let meshIdx = 0;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly);\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j];\r\n          subsetEl._component = children[i]._component;\r\n          totalSubset[meshIdx++] = subsetEl;\r\n        }\r\n      }\r\n    }\r\n    return totalSubset;\r\n  }\r\n}\r\n\r\nexport default BondsProcessor;\r\n","import RCGroup from '../../RCGroup';\r\n\r\nclass AromaticProcessor extends RCGroup {\r\n  constructor(AromaticGroup, geoParams, complex, colorer, mode, polyComplexity, mask, material) {\r\n    super();\r\n    const self = this;\r\n    this._complex = complex;\r\n    const atoms = complex.getAtoms();\r\n    const transforms = complex.getTransforms();\r\n    if (!mode.showAromaticLoops()) {\r\n      return;\r\n    }\r\n\r\n    complex.forEachComponent((component) => {\r\n      const atomsIdc = [];\r\n      let chunksCount = 0;\r\n      const cycles = [];\r\n      let cycleIdx = 0;\r\n      component.forEachCycle((cycle) => {\r\n        const cycAtoms = cycle.atoms;\r\n        let perCycle = 0;\r\n        for (let i = 0, n = cycAtoms.length; i < n; ++i) {\r\n          if ((cycAtoms[i].mask & mask) !== 0) {\r\n            ++perCycle;\r\n            atomsIdc[chunksCount++] = cycAtoms[i].index;\r\n          }\r\n        }\r\n        if (perCycle > 0) {\r\n          cycles[cycleIdx++] = cycle;\r\n        }\r\n      });\r\n\r\n      const atomsGroup = new AromaticGroup(geoParams, {\r\n        cycles,\r\n        atoms,\r\n        chunks: atomsIdc,\r\n        parent: complex,\r\n      }, colorer, mode, transforms, polyComplexity, material);\r\n      atomsGroup._component = component;\r\n      self.add(atomsGroup);\r\n    });\r\n  }\r\n\r\n  getSubset(mask, innerOnly) {\r\n    const totalSubset = [];\r\n    const { children } = this;\r\n    let meshIdx = 0;\r\n    for (let i = 0, n = children.length; i < n; ++i) {\r\n      if (children[i].getSubset) {\r\n        const chSubset = children[i].getSubset(mask, innerOnly);\r\n        for (let j = 0, m = chSubset.length; j < m; ++j) {\r\n          const subsetEl = chSubset[j];\r\n          subsetEl._component = children[i]._component;\r\n          totalSubset[meshIdx++] = subsetEl;\r\n        }\r\n      }\r\n    }\r\n    return totalSubset;\r\n  }\r\n}\r\n\r\nexport default AromaticProcessor;\r\n","import AtomsProcessor from './AtomsProcessor';\r\nimport OrphanAtomsProcessor from './OrphanAtomsProcessor';\r\nimport ResiduesProcessor from './ResiduesProcessor';\r\nimport NucleicProcessor from './NucleicProcessor';\r\nimport SubseqsProcessor from './SubseqsProcessor';\r\nimport BondsProcessor from './BondsProcessor';\r\nimport AromaticProcessor from './AromaticProcessor';\r\n\r\nexport default {\r\n  Atoms: AtomsProcessor,\r\n  OrphanAtoms: OrphanAtomsProcessor,\r\n  Residues: ResiduesProcessor,\r\n  Nucleic: NucleicProcessor,\r\n  Subseqs: SubseqsProcessor,\r\n  Bonds: BondsProcessor,\r\n  Aromatic: AromaticProcessor,\r\n};\r\n","import MeshCreator from '../../meshes/MeshCreator';\r\nimport groups from './groups';\r\nimport processors from '../processors/processors';\r\n\r\nfunction _bakeGroup(triplet, Processor, Group) {\r\n  return function (complex, colorer, mode, polyComplexity, mask, material) {\r\n    return new Processor(Group, triplet, complex, colorer, mode, polyComplexity, mask, material);\r\n  };\r\n}\r\n\r\nclass GroupsFactory {\r\n  static AtomsSpheres(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createSpheres(caps, settings);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSphereGroup);\r\n  }\r\n\r\n  static OrphanedAtomsCrosses(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createCrosses(caps, settings, renderParams);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.OrphanAtoms, groups.AtomsSphereGroup);\r\n  }\r\n\r\n  static BondsCylinders(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CCylinders(caps, settings);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Bonds, groups.BondsCylinderGroup);\r\n  }\r\n\r\n  static BondsLines(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.create2CLines(caps, settings, renderParams);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Bonds, groups.BondsLinesGroup);\r\n  }\r\n\r\n  static CartoonChains(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createExtrudedChains(caps, settings);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Subseqs, groups.ResiduesSubseqGroup);\r\n  }\r\n\r\n  static TraceChains(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CClosedCylinders(caps, settings);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Subseqs, groups.ResiduesTraceGroup);\r\n  }\r\n\r\n  static NucleicSpheres(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createSpheres(caps, settings);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Nucleic, groups.NucleicSpheresGroup);\r\n  }\r\n\r\n  static NucleicCylinders(caps, settings) {\r\n    const gfxTriplet = MeshCreator.create2CCylinders(caps, settings);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Nucleic, groups.NucleicCylindersGroup);\r\n  }\r\n\r\n  static ALoopsTorus(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createExtrudedChains(caps, settings);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Aromatic, groups.AromaticTorusGroup);\r\n  }\r\n\r\n  static ALoopsLines(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createChunkedLines(caps, settings, renderParams);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Aromatic, groups.AromaticLinesGroup);\r\n  }\r\n\r\n  static QuickSurfGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createQuickSurface(caps, settings, renderParams);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSurfaceGroup);\r\n  }\r\n\r\n  static ContactSurfaceGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createContactSurface(caps, settings, renderParams);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSurfaceGroup);\r\n  }\r\n\r\n  static SASSESSurfaceGeo(caps, settings, renderParams) {\r\n    const gfxTriplet = MeshCreator.createSASSES(caps, settings, renderParams);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsSASSESGroupStub);\r\n  }\r\n\r\n  static TextLabelsGeo(caps, settings) {\r\n    const gfxTriplet = MeshCreator.createLabels(caps, settings);\r\n\r\n    return _bakeGroup(gfxTriplet, processors.Atoms, groups.AtomsTextGroup);\r\n  }\r\n}\r\n\r\nexport default GroupsFactory;\r\n","import _ from 'lodash';\r\nimport makeContextDependent from '../../utils/makeContextDependent';\r\nimport utils from '../../utils';\r\nimport gfxutils from '../gfxutils';\r\nimport factory from './groups/GroupsFactory';\r\n\r\n/**\r\n * Create new mode.\r\n *\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the mode after its creation.\r\n *\r\n * @exports Mode\r\n * @this Mode\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all available modes used for building and displaying molecule geometry.\r\n */\r\nclass Mode {\r\n  constructor(opts) {\r\n    if (this.constructor === Mode) {\r\n      throw new Error('Can not instantiate abstract class!');\r\n    }\r\n    /**\r\n     * Mode options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.opts = _.merge(utils.deriveDeep(this.settings.now.modes[this.id], true), opts);\r\n  }\r\n\r\n  /**\r\n   * Get mode identification, probably with options.\r\n   * @returns {string|Array} Mode identifier string ({@link Mode#id}) or two-element array containing both mode\r\n   *   identifier and options ({@link Mode#opts}).\r\n   * Options are returned if they were changed during or after the mode creation.\r\n   */\r\n  identify() {\r\n    const diff = utils.objectsDiff(this.opts, this.settings.now.modes[this.id]);\r\n    if (!_.isEmpty(diff)) {\r\n      return [this.id, diff];\r\n    }\r\n    return this.id;\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const polyComplexity = this.opts.polyComplexity ? this.opts.polyComplexity[this.settings.now.resolution] : 0;\r\n    const groupList = this.depGroups;\r\n    const groupCount = groupList.length;\r\n    const group = new gfxutils.RCGroup();\r\n    const self = this;\r\n    for (let i = 0; i < groupCount; ++i) {\r\n      let currGroup = groupList[i];\r\n      let renderParams = {};\r\n      if (_.isArray(currGroup)) {\r\n        renderParams = currGroup[1].call(this);\r\n        [currGroup] = currGroup;\r\n      }\r\n      const Group = factory[currGroup](null, this.settings, renderParams);\r\n      const newGroup = new Group(complex, colorer, self, polyComplexity, mask, material);\r\n      if (newGroup.children.length > 0) {\r\n        group.add(newGroup);\r\n      }\r\n    }\r\n    return group;\r\n  }\r\n}\r\n\r\nmakeContextDependent(Mode.prototype);\r\n\r\n/**\r\n* Mode identifier.\r\n* @type {string}\r\n*/\r\nMode.prototype.id = '__';\r\n\r\n/**\r\n * Mode geo groups.\r\n * @type {Array}\r\n */\r\nMode.prototype.depGroups = [];\r\n\r\nexport default Mode;\r\n","import Mode from './Mode';\r\n\r\nfunction getRenderParams() {\r\n  return {\r\n    lineWidth: this.opts.lineWidth,\r\n  };\r\n}\r\n\r\nclass LinesMode extends Mode {\r\n  static id = 'LN';\r\n\r\n  constructor(opts) {\r\n    super(opts);\r\n    this.depGroups = this.depGroups.slice(0); // clone depGroups to prevent prototype edits\r\n    const groups = this.depGroups;\r\n    for (let i = 0, n = groups.length; i < n; ++i) {\r\n      groups[i] = [groups[i], getRenderParams];\r\n    }\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond;\r\n  }\r\n\r\n  calcAtomRadius() {\r\n    return this.opts.atom;\r\n  }\r\n\r\n  getAromaticOffset() {\r\n    return this.opts.offsarom;\r\n  }\r\n\r\n  getAromaticArcChunks() {\r\n    return this.opts.chunkarom;\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom;\r\n  }\r\n}\r\n\r\nLinesMode.prototype.id = 'LN';\r\nLinesMode.prototype.name = 'Lines';\r\nLinesMode.prototype.shortName = 'Lines';\r\nLinesMode.prototype.depGroups = [\r\n  'ALoopsLines',\r\n  'BondsLines',\r\n  'OrphanedAtomsCrosses',\r\n];\r\n\r\nexport default LinesMode;\r\n","/* eslint-disable no-magic-numbers */\r\nimport Mode from './Mode';\r\n\r\nclass LicoriceMode extends Mode {\r\n  static id = 'LC';\r\n\r\n  calcAtomRadius(_atom) {\r\n    return this.opts.bond;\r\n  }\r\n\r\n  calcStickRadius() {\r\n    return this.opts.bond;\r\n  }\r\n\r\n  calcSpaceFraction() {\r\n    return this.opts.space;\r\n  }\r\n\r\n  getAromRadius() {\r\n    return this.opts.aromrad;\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom;\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond;\r\n  }\r\n}\r\n\r\nLicoriceMode.prototype.id = 'LC';\r\nLicoriceMode.prototype.name = 'Licorice';\r\nLicoriceMode.prototype.shortName = 'Licorice';\r\nLicoriceMode.prototype.depGroups = [\r\n  'AtomsSpheres',\r\n  'BondsCylinders',\r\n  'ALoopsTorus',\r\n];\r\n\r\nexport default LicoriceMode;\r\n","/* eslint-disable no-magic-numbers */\r\nimport Mode from './Mode';\r\n\r\nclass BallsAndSticksMode extends Mode {\r\n  static id = 'BS';\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius * this.opts.atom;\r\n  }\r\n\r\n  calcStickRadius() {\r\n    return this.opts.bond;\r\n  }\r\n\r\n  getAromRadius() {\r\n    return this.opts.aromrad;\r\n  }\r\n\r\n  showAromaticLoops() {\r\n    return this.opts.showarom;\r\n  }\r\n\r\n  calcSpaceFraction() {\r\n    return this.opts.space;\r\n  }\r\n\r\n  drawMultiorderBonds() {\r\n    return this.opts.multibond;\r\n  }\r\n}\r\n\r\nBallsAndSticksMode.prototype.id = 'BS';\r\nBallsAndSticksMode.prototype.name = 'Balls and Sticks';\r\nBallsAndSticksMode.prototype.shortName = 'Balls';\r\nBallsAndSticksMode.prototype.depGroups = [\r\n  'AtomsSpheres',\r\n  'BondsCylinders',\r\n  'ALoopsTorus',\r\n];\r\n\r\nexport default BallsAndSticksMode;\r\n","import Mode from './Mode';\r\n\r\nclass VanDerWaalsMode extends Mode {\r\n  static id = 'VW';\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius;\r\n  }\r\n}\r\n\r\nVanDerWaalsMode.prototype.id = 'VW';\r\nVanDerWaalsMode.prototype.name = 'Van der Waals';\r\nVanDerWaalsMode.prototype.shortName = 'VDW';\r\nVanDerWaalsMode.prototype.depGroups = ['AtomsSpheres'];\r\n\r\nexport default VanDerWaalsMode;\r\n","import Mode from './Mode';\r\n\r\nclass TraceMode extends Mode {\r\n  static id = 'TR';\r\n\r\n  calcStickRadius() {\r\n    return this.opts.radius;\r\n  }\r\n}\r\n\r\nTraceMode.prototype.id = 'TR';\r\nTraceMode.prototype.name = 'Trace';\r\nTraceMode.prototype.shortName = 'Trace';\r\nTraceMode.prototype.depGroups = ['TraceChains'];\r\n\r\nexport default TraceMode;\r\n","import * as THREE from 'three';\r\nimport Mode from './Mode';\r\n\r\nclass TubeMode extends Mode {\r\n  static id = 'TU';\r\n\r\n  getResidueRadius(_residue) {\r\n    return this.TUBE_RADIUS;\r\n  }\r\n\r\n  getHeightSegmentsRatio() {\r\n    return this.opts.heightSegmentsRatio;\r\n  }\r\n\r\n  getTension() {\r\n    return this.opts.tension;\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const rad = this.opts.radius;\r\n    this.TUBE_RADIUS = new THREE.Vector2(rad, rad);\r\n\r\n    return Mode.prototype.buildGeometry.call(this, complex, colorer, mask, material);\r\n  }\r\n}\r\n\r\nTubeMode.prototype.id = 'TU';\r\nTubeMode.prototype.name = 'Tube';\r\nTubeMode.prototype.shortName = 'Tube';\r\nTubeMode.prototype.depGroups = ['CartoonChains'];\r\n\r\nexport default TubeMode;\r\n","import * as THREE from 'three';\r\nimport Mode from './Mode';\r\n\r\nclass CartoonMode extends Mode {\r\n  static id = 'CA';\r\n\r\n  constructor(opts) {\r\n    super(opts);\r\n    // cache for secondary structure options\r\n    this.secCache = {};\r\n  }\r\n\r\n  getResidueStartRadius(residue) {\r\n    const second = residue.getSecondary();\r\n    if (!second || !second.generic) {\r\n      return this.TUBE_RADIUS;\r\n    }\r\n    const secOpts = this.secCache[second.generic];\r\n    if (!secOpts) {\r\n      return this.TUBE_RADIUS;\r\n    }\r\n    if (second.term === residue) {\r\n      return secOpts.start;\r\n    }\r\n    return secOpts.center;\r\n  }\r\n\r\n  getResidueEndRadius(residue) {\r\n    const second = residue.getSecondary();\r\n    if (second === null || !second.generic) {\r\n      return this.TUBE_RADIUS;\r\n    }\r\n    const secOpts = this.secCache[second.generic];\r\n    if (!secOpts) {\r\n      return this.TUBE_RADIUS;\r\n    }\r\n    if (second.term === residue) {\r\n      return this.ARROW_END;\r\n    }\r\n    return secOpts.center;\r\n  }\r\n\r\n  getResidueRadius(residue, val) {\r\n    const startRad = this.getResidueStartRadius(residue);\r\n    if (val === 0) {\r\n      return startRad;\r\n    }\r\n\r\n    const endRad = this.getResidueEndRadius(residue);\r\n    if (val === 2) {\r\n      return endRad;\r\n    }\r\n\r\n    return startRad.clone().lerp(endRad, val / 2.0);\r\n  }\r\n\r\n  calcStickRadius(_res) {\r\n    return this.opts.radius;\r\n  }\r\n\r\n  getHeightSegmentsRatio() {\r\n    return this.opts.heightSegmentsRatio;\r\n  }\r\n\r\n  getTension() {\r\n    return this.opts.tension;\r\n  }\r\n\r\n  buildGeometry(complex, colorer, mask, material) {\r\n    const tubeRad = this.opts.radius;\r\n    const secHeight = this.opts.depth;\r\n\r\n    this.TUBE_RADIUS = new THREE.Vector2(tubeRad, tubeRad);\r\n    this.ARROW_END = new THREE.Vector2(secHeight, tubeRad);\r\n    const secCache = {};\r\n    const secData = this.opts.ss;\r\n    /* eslint-disable guard-for-in */\r\n    for (const prop in secData) {\r\n      secCache[prop] = {\r\n        center: new THREE.Vector2(secHeight, secData[prop].width),\r\n        start: new THREE.Vector2(secHeight, secData[prop].arrow),\r\n      };\r\n    }\r\n    this.secCache = secCache;\r\n    /* eslint-enable guard-for-in */\r\n\r\n    return Mode.prototype.buildGeometry.call(this, complex, colorer, mask, material);\r\n  }\r\n}\r\n\r\nCartoonMode.prototype.id = 'CA';\r\nCartoonMode.prototype.name = 'Cartoon';\r\nCartoonMode.prototype.shortName = 'Cartoon';\r\nCartoonMode.prototype.depGroups = [\r\n  'CartoonChains',\r\n  'NucleicSpheres',\r\n  'NucleicCylinders',\r\n];\r\n\r\nexport default CartoonMode;\r\n","import chem from '../../chem';\r\nimport Mode from './Mode';\r\n\r\nconst { selectors } = chem;\r\n\r\nfunction getRenderParams() {\r\n  return {\r\n    wireframe: this.opts.wireframe,\r\n    zClip: this.opts.zClip,\r\n  };\r\n}\r\n\r\nclass SurfaceMode extends Mode {\r\n  constructor(opts) {\r\n    super(opts);\r\n    this.depGroups = this.depGroups.slice(0); // clone depGroups to prevent prototype edits\r\n    const surfaces = this.surfaceNames;\r\n    const groups = this.depGroups;\r\n    for (let i = 0, n = surfaces.length; i < n; ++i) {\r\n      groups[groups.length] = [surfaces[i], getRenderParams];\r\n    }\r\n  }\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius;\r\n  }\r\n\r\n  getVisibilitySelector() {\r\n    let visibilitySelector = null;\r\n    if (this.opts.subset !== '') {\r\n      const res = selectors.parse(this.opts.subset);\r\n      if (!res.error) {\r\n        visibilitySelector = res.selector;\r\n      }\r\n    }\r\n    return visibilitySelector;\r\n  }\r\n}\r\n\r\nSurfaceMode.prototype.isSurface = true;\r\nSurfaceMode.prototype.surfaceNames = [];\r\n\r\nexport default SurfaceMode;\r\n","import SurfaceMode from './SurfaceMode';\r\n\r\nclass QuickSurfaceMode extends SurfaceMode {\r\n  static id = 'QS';\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      useBeads: false,\r\n      isoValue: this.opts.isoValue,\r\n      gaussLim: this.opts.gaussLim[this.settings.now.resolution],\r\n      radScale: this.opts.scale,\r\n      gridSpacing: this.opts.gridSpacing[this.settings.now.resolution],\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector(),\r\n    };\r\n  }\r\n}\r\n\r\nQuickSurfaceMode.prototype.id = 'QS';\r\nQuickSurfaceMode.prototype.name = 'Quick Surface';\r\nQuickSurfaceMode.prototype.shortName = 'Quick Surf';\r\nQuickSurfaceMode.prototype.surfaceNames = ['QuickSurfGeo'];\r\n\r\nexport default QuickSurfaceMode;\r\n","import SurfaceMode from './SurfaceMode';\r\n\r\nclass IsoSurfaceMode extends SurfaceMode {\r\n  constructor(excludeProbe, opts) {\r\n    super(opts);\r\n    this._excludeProbe = excludeProbe;\r\n  }\r\n\r\n  calcAtomRadius(atom) {\r\n    return atom.element.radius;\r\n  }\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      gridSpacing: this.opts.polyComplexity[this.settings.now.resolution],\r\n      radScale: this._radScale,\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector(),\r\n      probeRadius: this.opts.probeRadius,\r\n      excludeProbe: this._excludeProbe,\r\n    };\r\n  }\r\n}\r\n\r\nIsoSurfaceMode.prototype.id = 'SU';\r\nIsoSurfaceMode.prototype.name = 'Surface';\r\nIsoSurfaceMode.prototype.shortName = 'Surface';\r\nIsoSurfaceMode.prototype.surfaceNames = ['SASSESSurfaceGeo'];\r\n\r\nIsoSurfaceMode.prototype._radScale = 1;\r\nIsoSurfaceMode.prototype._excludeProbe = false;\r\n\r\nexport default IsoSurfaceMode;\r\n","import IsoSurfaceMode from './IsoSurfaceMode';\r\n\r\nclass IsoSurfaceSASMode extends IsoSurfaceMode {\r\n  static id = 'SA';\r\n\r\n  constructor(opts) {\r\n    super(false, opts);\r\n  }\r\n}\r\n\r\nIsoSurfaceSASMode.prototype.id = 'SA';\r\nIsoSurfaceSASMode.prototype.name = 'Solvent Accessible Surface';\r\nIsoSurfaceSASMode.prototype.shortName = 'SAS';\r\n\r\nexport default IsoSurfaceSASMode;\r\n","import IsoSurfaceMode from './IsoSurfaceMode';\r\n\r\nclass IsoSurfaceSESMode extends IsoSurfaceMode {\r\n  static id = 'SE';\r\n\r\n  constructor(opts) {\r\n    super(true, opts);\r\n  }\r\n}\r\n\r\nIsoSurfaceSESMode.prototype.id = 'SE';\r\nIsoSurfaceSESMode.prototype.name = 'Solvent Excluded Surface';\r\nIsoSurfaceSESMode.prototype.shortName = 'SES';\r\n\r\nexport default IsoSurfaceSESMode;\r\n","import SurfaceMode from './SurfaceMode';\r\n\r\nclass ContactSurfaceMode extends SurfaceMode {\r\n  static id = 'CS';\r\n\r\n  getSurfaceOpts() {\r\n    return {\r\n      probeRadius: this.opts.probeRadius,\r\n      radScale: this.opts.polyComplexity[this.settings.now.resolution],\r\n      scaleFactor: this.opts.polyComplexity[this.settings.now.resolution],\r\n      gridSpacing: 1.0 / this.opts.polyComplexity[this.settings.now.resolution],\r\n      isoValue: this.opts.isoValue,\r\n      probePositions: this.opts.probePositions,\r\n      zClip: this.opts.zClip,\r\n      visibilitySelector: this.getVisibilitySelector(),\r\n    };\r\n  }\r\n}\r\n\r\nContactSurfaceMode.prototype.id = 'CS';\r\nContactSurfaceMode.prototype.name = 'Contact Surface';\r\nContactSurfaceMode.prototype.shortName = 'Contact Surf';\r\nContactSurfaceMode.prototype.isSurface = true;\r\nContactSurfaceMode.prototype.surfaceNames = ['ContactSurfaceGeo'];\r\n\r\nexport default ContactSurfaceMode;\r\n","import _ from 'lodash';\r\nimport Mode from './Mode';\r\n\r\nclass TextMode extends Mode {\r\n  static id = 'TX';\r\n\r\n  getTemplateOptions() {\r\n    return this.opts.template;\r\n  }\r\n\r\n  getLabelOpts() {\r\n    return _.merge(this.opts, {\r\n      colors: true,\r\n      adjustColor: true,\r\n      transparent: true,\r\n    });\r\n  }\r\n}\r\n\r\nTextMode.prototype.id = 'TX';\r\nTextMode.prototype.name = 'Text mode';\r\nTextMode.prototype.shortName = 'Text';\r\nTextMode.prototype.depGroups = ['TextLabelsGeo'];\r\n\r\nexport default TextMode;\r\n","import EntityList from '../utils/EntityList';\r\n\r\nimport LinesMode from './modes/LinesMode';\r\nimport LicoriceMode from './modes/LicoriceMode';\r\nimport BallsAndSticksMode from './modes/BallsAndSticksMode';\r\nimport VanDerWaalsMode from './modes/VanDerWaalsMode';\r\nimport TraceMode from './modes/TraceMode';\r\nimport TubeMode from './modes/TubeMode';\r\nimport CartoonMode from './modes/CartoonMode';\r\nimport QuickSurfaceMode from './modes/QuickSurfaceMode';\r\nimport IsoSurfaceSASMode from './modes/IsoSurfaceSASMode';\r\nimport IsoSurfaceSESMode from './modes/IsoSurfaceSESMode';\r\nimport ContactSurfaceMode from './modes/ContactSurfaceMode';\r\nimport TextMode from './modes/TextMode';\r\n\r\nconst modes = new EntityList([\r\n  LinesMode,\r\n  LicoriceMode,\r\n  BallsAndSticksMode,\r\n  VanDerWaalsMode,\r\n  TraceMode,\r\n  TubeMode,\r\n  CartoonMode,\r\n  QuickSurfaceMode,\r\n  IsoSurfaceSASMode,\r\n  IsoSurfaceSESMode,\r\n  ContactSurfaceMode,\r\n  TextMode,\r\n]);\r\n\r\nexport default modes;\r\n","import _ from 'lodash';\r\n\r\nfunction clamp(x, a, b) {\r\n  return x <= b ? x < 0 ? 0 : x : b;\r\n}\r\n\r\nfunction lerpColor(c1, c2, alpha) {\r\n  const beta = 1 - alpha;\r\n  const r1 = (c1 >> 16) & 0xff;\r\n  const g1 = (c1 >> 8) & 0xff;\r\n  const b1 = c1 & 0xff;\r\n  const r2 = (c2 >> 16) & 0xff;\r\n  const g2 = (c2 >> 8) & 0xff;\r\n  const b2 = c2 & 0xff;\r\n  const r = beta * r1 + alpha * r2;\r\n  const g = beta * g1 + alpha * g2;\r\n  const b = beta * b1 + alpha * b2;\r\n  return (r << 16) | (g << 8) | b;\r\n}\r\n\r\nclass Palette {\r\n  constructor(name, id) {\r\n    this.name = name || 'Custom';\r\n    this.id = id || 'CP';\r\n  }\r\n\r\n  getElementColor(name, asIs = false) {\r\n    const color = this.elementColors[name];\r\n    return color === undefined && !asIs ? this.defaultElementColor : color;\r\n  }\r\n\r\n  getResidueColor(name, asIs = false) {\r\n    const color = this.residueColors[name];\r\n    return color === undefined && !asIs ? this.defaultResidueColor : color;\r\n  }\r\n\r\n  getChainColor(name) {\r\n    let chain = name.charCodeAt(0);\r\n    chain = ((chain < 0 ? 0 : chain >= 256 ? chain - 256 : chain) & 0x1F)\r\n      % this.chainColors.length;\r\n    return this.chainColors[chain];\r\n  }\r\n\r\n  getSecondaryColor(type, asIs = false) {\r\n    const color = this.secondaryColors[type];\r\n    return color === undefined && !asIs ? this.defaultSecondaryColor : color;\r\n  }\r\n\r\n  getSequentialColor(index) {\r\n    const { colors } = this;\r\n    const len = colors.length;\r\n    return index < 0 ? colors[(index % len) + len] : colors[index % len];\r\n  }\r\n\r\n  getGradientColor(value, gradientName) {\r\n    const gradient = this.gradients[gradientName];\r\n    if (!gradient) {\r\n      return this.defaultNamedColor;\r\n    }\r\n    const count = gradient.length;\r\n    const index = value * (count - 1);\r\n    let left = Math.floor(index);\r\n    const right = clamp(left + 1, 0, count - 1);\r\n    left = clamp(left, 0, count - 1);\r\n    return lerpColor(gradient[left], gradient[right], index - left);\r\n  }\r\n\r\n  getNamedColor(name, asIs = false) {\r\n    const color = this.namedColors[name];\r\n    return color === undefined && !asIs ? this.defaultNamedColor : color;\r\n  }\r\n}\r\n\r\n_.assign(Palette.prototype, {\r\n  colors: [0xFFFFFF, 0xFF0000, 0x00FF00, 0x0000FF, 0x808080],\r\n\r\n  minRangeColor: 0x000000,\r\n  midRangeColor: 0x7F7F7F,\r\n  maxRangeColor: 0xFFFFFF,\r\n\r\n  defaultElementColor: 0xFFFFFF,\r\n  elementColors: {},\r\n\r\n  defaultResidueColor: 0xFFFFFF,\r\n  residueColors: {},\r\n\r\n  chainColors: [0xFFFFFF],\r\n\r\n  defaultSecondaryColor: 0xFFFFFF,\r\n  secondaryColors: {},\r\n\r\n  defaultGradientColor: 0x000000,\r\n\r\n  defaultNamedColor: 0xFFFFFF,\r\n  namedColorsArray: [\r\n    /* eslint-disable no-multi-spaces */\r\n    ['indianred',               0xcd5c5c],\r\n    ['lightcoral',              0xf08080],\r\n    ['salmon',                  0xfa8072],\r\n    ['darksalmon',              0xe9967a],\r\n    ['lightsalmon',             0xffa07a],\r\n    ['crimson',                 0xdc143c],\r\n    ['red',                     0xff0000],\r\n    ['firebrick',               0xb22222],\r\n    ['darkred',                 0x8b0000],\r\n    ['pink',                    0xffc0cb],\r\n    ['lightpink',               0xffb6c1],\r\n    ['hotpink',                 0xff69b4],\r\n    ['deeppink',                0xff1493],\r\n    ['mediumvioletred',         0xc71585],\r\n    ['palevioletred',           0xdb7093],\r\n    ['coral',                   0xff7f50],\r\n    ['tomato',                  0xff6347],\r\n    ['orangered',               0xff4500],\r\n    ['darkorange',              0xff8c00],\r\n    ['orange',                  0xffa500],\r\n    ['gold',                    0xffd700],\r\n    ['yellow',                  0xffff00],\r\n    ['lightyellow',             0xffffe0],\r\n    ['lemonchiffon',            0xfffacd],\r\n    ['lightgoldenrodyellow',    0xfafad2],\r\n    ['papayawhip',              0xffefd5],\r\n    ['moccasin',                0xffe4b5],\r\n    ['peachpuff',               0xffdab9],\r\n    ['palegoldenrod',           0xeee8aa],\r\n    ['khaki',                   0xf0e68c],\r\n    ['darkkhaki',               0xbdb76b],\r\n    ['lavender',                0xe6e6fa],\r\n    ['thistle',                 0xd8bfd8],\r\n    ['plum',                    0xdda0dd],\r\n    ['violet',                  0xee82ee],\r\n    ['orchid',                  0xda70d6],\r\n    ['fuchsia',                 0xff00ff],\r\n    ['magenta',                 0xff00ff],\r\n    ['mediumorchid',            0xba55d3],\r\n    ['mediumpurple',            0x9370db],\r\n    ['rebeccapurple',           0x663399],\r\n    ['blueviolet',              0x8a2be2],\r\n    ['darkviolet',              0x9400d3],\r\n    ['darkorchid',              0x9932cc],\r\n    ['darkmagenta',             0x8b008b],\r\n    ['purple',                  0x800080],\r\n    ['indigo',                  0x4b0082],\r\n    ['slateblue',               0x6a5acd],\r\n    ['mediumslateblue',         0x7b68ee],\r\n    ['darkslateblue',           0x483d8b],\r\n    ['greenyellow',             0xadff2f],\r\n    ['chartreuse',              0x7fff00],\r\n    ['lawngreen',               0x7cfc00],\r\n    ['lime',                    0x00ff00],\r\n    ['limegreen',               0x32cd32],\r\n    ['palegreen',               0x98fb98],\r\n    ['lightgreen',              0x90ee90],\r\n    ['mediumspringgreen',       0x00fa9a],\r\n    ['springgreen',             0x00ff7f],\r\n    ['mediumseagreen',          0x3cb371],\r\n    ['seagreen',                0x2e8b57],\r\n    ['forestgreen',             0x228b22],\r\n    ['green',                   0x008000],\r\n    ['darkgreen',               0x006400],\r\n    ['yellowgreen',             0x9acd32],\r\n    ['olivedrab',               0x6b8e23],\r\n    ['olive',                   0x808000],\r\n    ['darkolivegreen',          0x556b2f],\r\n    ['mediumaquamarine',        0x66cdaa],\r\n    ['darkseagreen',            0x8fbc8f],\r\n    ['lightseagreen',           0x20b2aa],\r\n    ['darkcyan',                0x008b8b],\r\n    ['teal',                    0x008080],\r\n    ['aqua',                    0x00ffff],\r\n    ['cyan',                    0x00ffff],\r\n    ['lightcyan',               0xe0ffff],\r\n    ['paleturquoise',           0xafeeee],\r\n    ['aquamarine',              0x7fffd4],\r\n    ['turquoise',               0x40e0d0],\r\n    ['mediumturquoise',         0x48d1cc],\r\n    ['darkturquoise',           0x00ced1],\r\n    ['cadetblue',               0x5f9ea0],\r\n    ['steelblue',               0x4682b4],\r\n    ['lightsteelblue',          0xb0c4de],\r\n    ['powderblue',              0xb0e0e6],\r\n    ['lightblue',               0xadd8e6],\r\n    ['skyblue',                 0x87ceeb],\r\n    ['lightskyblue',            0x87cefa],\r\n    ['deepskyblue',             0x00bfff],\r\n    ['dodgerblue',              0x1e90ff],\r\n    ['cornflowerblue',          0x6495ed],\r\n    ['royalblue',               0x4169e1],\r\n    ['blue',                    0x0000ff],\r\n    ['mediumblue',              0x0000cd],\r\n    ['darkblue',                0x00008b],\r\n    ['navy',                    0x000080],\r\n    ['midnightblue',            0x191970],\r\n    ['cornsilk',                0xfff8dc],\r\n    ['blanchedalmond',          0xffebcd],\r\n    ['bisque',                  0xffe4c4],\r\n    ['navajowhite',             0xffdead],\r\n    ['wheat',                   0xf5deb3],\r\n    ['burlywood',               0xdeb887],\r\n    ['tan',                     0xd2b48c],\r\n    ['rosybrown',               0xbc8f8f],\r\n    ['sandybrown',              0xf4a460],\r\n    ['goldenrod',               0xdaa520],\r\n    ['darkgoldenrod',           0xb8860b],\r\n    ['peru',                    0xcd853f],\r\n    ['chocolate',               0xd2691e],\r\n    ['saddlebrown',             0x8b4513],\r\n    ['sienna',                  0xa0522d],\r\n    ['brown',                   0xa52a2a],\r\n    ['maroon',                  0x800000],\r\n    ['white',                   0xffffff],\r\n    ['snow',                    0xfffafa],\r\n    ['honeydew',                0xf0fff0],\r\n    ['mintcream',               0xf5fffa],\r\n    ['azure',                   0xf0ffff],\r\n    ['aliceblue',               0xf0f8ff],\r\n    ['ghostwhite',              0xf8f8ff],\r\n    ['whitesmoke',              0xf5f5f5],\r\n    ['seashell',                0xfff5ee],\r\n    ['beige',                   0xf5f5dc],\r\n    ['oldlace',                 0xfdf5e6],\r\n    ['floralwhite',             0xfffaf0],\r\n    ['ivory',                   0xfffff0],\r\n    ['antiquewhite',            0xfaebd7],\r\n    ['linen',                   0xfaf0e6],\r\n    ['lavenderblush',           0xfff0f5],\r\n    ['mistyrose',               0xffe4e1],\r\n    ['gainsboro',               0xdcdcdc],\r\n    ['lightgray',               0xd3d3d3],\r\n    ['silver',                  0xc0c0c0],\r\n    ['darkgray',                0xa9a9a9],\r\n    ['gray',                    0x808080],\r\n    ['dimgray',                 0x696969],\r\n    ['lightslategray',          0x778899],\r\n    ['slategray',               0x708090],\r\n    ['darkslategray',           0x2f4f4f],\r\n    ['black',                   0x000000],\r\n    /* eslint-enable no-multi-spaces */\r\n  ],\r\n\r\n  namedColors: {},\r\n  /* eslint-enable no-magic-numbers */\r\n\r\n  gradients: {\r\n    rainbow: [\r\n      0x0000ff, // blue\r\n      0x00ffff, // cyan\r\n      0x00ff00, // green\r\n      0xffff00, // yellow\r\n      0xff0000, // red\r\n    ],\r\n    temp: [\r\n      0x0000ff, // blue\r\n      0x007fff, // light-blue\r\n      0xffffff, // white\r\n      0xff7f00, // orange\r\n      0xff0000, // red\r\n    ],\r\n    hot: [\r\n      0xffffff, // white\r\n      0xff7f00, // orange\r\n      0xff0000, // red\r\n    ],\r\n    cold: [\r\n      0xffffff, // white\r\n      0x007fff, // light-blue\r\n      0x0000ff, // blue\r\n    ],\r\n    'blue-red': [\r\n      0x0000ff, // blue\r\n      0xffffff, // white\r\n      0xff0000, // red\r\n    ],\r\n    reds: [\r\n      0xffffff, // white\r\n      0xff0000, // red\r\n    ],\r\n    blues: [\r\n      0xffffff, // white\r\n      0x0000ff, // blue\r\n    ],\r\n  },\r\n});\r\n\r\nconst { namedColorsArray, namedColors } = Palette.prototype;\r\n\r\nfor (let i = 0, { length } = namedColorsArray; i < length; ++i) {\r\n  const [name, value] = namedColorsArray[i];\r\n  namedColors[name] = value;\r\n}\r\n\r\nexport default Palette;\r\n","import Palette from './Palette';\r\n\r\nconst palette = new Palette('CPK', 'CP');\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xFFFFFF,\r\n  C: 0x202020,\r\n  N: 0x2060FF,\r\n  O: 0xEE2010,\r\n  F: 0x00FF00,\r\n  P: 0x8020FF,\r\n  S: 0xFFFF00,\r\n  CL: 0x00BB00,\r\n  FE: 0xD0D0D0,\r\n  CO: 0xD0D0D0,\r\n  NI: 0xD0D0D0,\r\n  CU: 0xD0D0D0,\r\n  BR: 0x008800,\r\n  I: 0x005500,\r\n  /* eslint-enable no-magic-numbers */\r\n};\r\n\r\nexport default palette;\r\n","import Palette from './Palette';\r\nimport StructuralElement from '../../chem/StructuralElement';\r\n\r\nconst palette = new Palette('Jmol', 'JM');\r\n\r\npalette.colors = [\r\n  /* eslint-disable no-magic-numbers */\r\n  0x0000FF, // blue\r\n  0x0055FF, //\r\n  0x00ABFF, //\r\n  0x00FFFF, // cyan\r\n  0x00FFAB, //\r\n  0x00FF55, //\r\n  0x00FF00, // green\r\n  0x55FF00, //\r\n  0xABFF00, //\r\n  0xFFFF00, // yellow\r\n  0xFFAB00, //\r\n  0xFF5500, //\r\n  0xFF0000, // red\r\n  0xFF0055, //\r\n  0xFF00AB, //\r\n  0xFF00FF, // magenta\r\n  0xAB00FF, //\r\n  0x5500FF, //\r\n  /* eslint-enable no-magic-numbers */\r\n];\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xFFFFFF,\r\n  D: 0xFFFFC0,\r\n  T: 0xFFFFA0,\r\n  HE: 0xD9FFFF,\r\n  LI: 0xCC80FF,\r\n  BE: 0xC2FF00,\r\n  B: 0xFFB5B5,\r\n  C: 0x909090,\r\n  N: 0x3050F8,\r\n  O: 0xFF0D0D,\r\n  F: 0x90E050,\r\n  NE: 0xB3E3F5,\r\n  NA: 0xAB5CF2,\r\n  MG: 0x8AFF00,\r\n  AL: 0xBFA6A6,\r\n  SI: 0xF0C8A0,\r\n  P: 0xFF8000,\r\n  S: 0xFFFF30,\r\n  CL: 0x1FF01F,\r\n  AR: 0x80D1E3,\r\n  K: 0x8F40D4,\r\n  CA: 0x3DFF00,\r\n  SC: 0xE6E6E6,\r\n  TI: 0xBFC2C7,\r\n  V: 0xA6A6AB,\r\n  CR: 0x8A99C7,\r\n  MN: 0x9C7AC7,\r\n  FE: 0xE06633,\r\n  CO: 0xF090A0,\r\n  NI: 0x50D050,\r\n  CU: 0xC88033,\r\n  ZN: 0x7D80B0,\r\n  GA: 0xC28F8F,\r\n  GE: 0x668F8F,\r\n  AS: 0xBD80E3,\r\n  SE: 0xFFA100,\r\n  BR: 0xA62929,\r\n  KR: 0x5CB8D1,\r\n  RB: 0x702EB0,\r\n  SR: 0x00FF00,\r\n  Y: 0x94FFFF,\r\n  ZR: 0x94E0E0,\r\n  NB: 0x73C2C9,\r\n  MO: 0x54B5B5,\r\n  TC: 0x3B9E9E,\r\n  RU: 0x248F8F,\r\n  RH: 0x0A7D8C,\r\n  PD: 0x006985,\r\n  AG: 0xC0C0C0,\r\n  CD: 0xFFD98F,\r\n  IN: 0xA67573,\r\n  SN: 0x668080,\r\n  SB: 0x9E63B5,\r\n  TE: 0xD47A00,\r\n  I: 0x940094,\r\n  XE: 0x429EB0,\r\n  CS: 0x57178F,\r\n  BA: 0x00C900,\r\n  LA: 0x70D4FF,\r\n  CE: 0xFFFFC7,\r\n  PR: 0xD9FFC7,\r\n  ND: 0xC7FFC7,\r\n  PM: 0xA3FFC7,\r\n  SM: 0x8FFFC7,\r\n  EU: 0x61FFC7,\r\n  GD: 0x45FFC7,\r\n  TB: 0x30FFC7,\r\n  DY: 0x1FFFC7,\r\n  HO: 0x00FF9C,\r\n  ER: 0x00E675,\r\n  TM: 0x00D452,\r\n  YB: 0x00BF38,\r\n  LU: 0x00AB24,\r\n  HF: 0x4DC2FF,\r\n  TA: 0x4DA6FF,\r\n  W: 0x2194D6,\r\n  RE: 0x267DAB,\r\n  OS: 0x266696,\r\n  IR: 0x175487,\r\n  PT: 0xD0D0E0,\r\n  AU: 0xFFD123,\r\n  HG: 0xB8B8D0,\r\n  TL: 0xA6544D,\r\n  PB: 0x575961,\r\n  BI: 0x9E4FB5,\r\n  PO: 0xAB5C00,\r\n  AT: 0x754F45,\r\n  RN: 0x428296,\r\n  FR: 0x420066,\r\n  RA: 0x007D00,\r\n  AC: 0x70ABFA,\r\n  TH: 0x00BAFF,\r\n  PA: 0x00A1FF,\r\n  U: 0x008FFF,\r\n  NP: 0x0080FF,\r\n  PU: 0x006BFF,\r\n  AM: 0x545CF2,\r\n  CM: 0x785CE3,\r\n  BK: 0x8A4FE3,\r\n  CF: 0xA136D4,\r\n  ES: 0xB31FD4,\r\n  FM: 0xB31FBA,\r\n  MD: 0xB30DA6,\r\n  NO: 0xBD0D87,\r\n  LR: 0xC70066,\r\n  RF: 0xCC0059,\r\n  DB: 0xD1004F,\r\n  SG: 0xD90045,\r\n  BH: 0xE00038,\r\n  HS: 0xE6002E,\r\n  MT: 0xEB0026,\r\n  /* eslint-enable no-magic-numbers */\r\n};\r\n\r\npalette.defaultResidueColor = 0xBEA06E;\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\npalette.residueColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  ALA: 0xC8C8C8,\r\n  ARG: 0x145AFF,\r\n  ASN: 0x00DCDC,\r\n  ASP: 0xE60A0A,\r\n  CYS: 0xE6E600,\r\n  GLN: 0x00DCDC,\r\n  GLU: 0xE60A0A,\r\n  GLY: 0xEBEBEB,\r\n  HIS: 0x8282D2,\r\n  ILE: 0x0F820F,\r\n  LEU: 0x0F820F,\r\n  LYS: 0x145AFF,\r\n  MET: 0xE6E600,\r\n  PHE: 0x3232AA,\r\n  PRO: 0xDC9682,\r\n  SER: 0xFA9600,\r\n  THR: 0xFA9600,\r\n  TRP: 0xB45AB4,\r\n  TYR: 0x3232AA,\r\n  VAL: 0x0F820F,\r\n  A: 0xA0A0FF,\r\n  C: 0xFF8C4B,\r\n  G: 0xFF7070,\r\n  I: 0x80FFFF,\r\n  T: 0xA0FFA0,\r\n  U: 0xFF8080,\r\n  DA: 0xA0A0FF,\r\n  DC: 0xFF8C4B,\r\n  DG: 0xFF7070,\r\n  DI: 0x80FFFF,\r\n  DT: 0xA0FFA0,\r\n  DU: 0xFF8080,\r\n  '+A': 0xA0A0FF,\r\n  '+C': 0xFF8C4B,\r\n  '+G': 0xFF7070,\r\n  '+I': 0x80FFFF,\r\n  '+T': 0xA0FFA0,\r\n  '+U': 0xFF8080,\r\n  /* eslint-enable no-magic-numbers */\r\n};\r\n\r\npalette.chainColors = [\r\n  // ' '->0 'A'->1, 'B'->2\r\n  0xFFffffff, // ' ' & '0' white\r\n  //\r\n  0xFFC0D0FF, // skyblue\r\n  0xFFB0FFB0, // pastel green\r\n  0xFFFFC0C8, // pink\r\n  0xFFFFFF80, // pastel yellow\r\n  0xFFFFC0FF, // pastel magenta\r\n  0xFFB0F0F0, // pastel cyan\r\n  0xFFFFD070, // pastel gold\r\n  0xFFF08080, // lightcoral\r\n\r\n  0xFFF5DEB3, // wheat\r\n  0xFF00BFFF, // deepskyblue\r\n  0xFFCD5C5C, // indianred\r\n  0xFF66CDAA, // mediumaquamarine\r\n  0xFF9ACD32, // yellowgreen\r\n  0xFFEE82EE, // violet\r\n  0xFF00CED1, // darkturquoise\r\n  0xFF00FF7F, // springgreen\r\n  0xFF3CB371, // mediumseagreen\r\n\r\n  0xFF00008B, // darkblue\r\n  0xFFBDB76B, // darkkhaki\r\n  0xFF006400, // darkgreen\r\n  0xFF800000, // maroon\r\n  0xFF808000, // olive\r\n  0xFF800080, // purple\r\n  0xFF008080, // teal\r\n  0xFFB8860B, // darkgoldenrod\r\n  0xFFB22222, // firebrick\r\n];\r\n\r\nconst StructuralElementType = StructuralElement.Type;\r\n\r\npalette.secondaryColors = {\r\n  [StructuralElementType.HELIX_ALPHA]: 0xFF0080,\r\n  [StructuralElementType.HELIX_PI]: 0x600080,\r\n  [StructuralElementType.HELIX_310]: 0xA00080,\r\n  [StructuralElementType.STRAND]: 0xFFC800,\r\n  [StructuralElementType.TURN]: 0x6080FF,\r\n  dna: 0xAE00FE,\r\n  rna: 0xFD0162,\r\n};\r\n\r\nexport default palette;\r\n","import Palette from './Palette';\r\nimport StructuralElement from '../../chem/StructuralElement';\r\n\r\nconst palette = new Palette('VMD', 'VM');\r\n\r\npalette.colors = [\r\n  /* eslint-disable no-magic-numbers */\r\n  0x0000FF, // blue\r\n  0xFF0000, // red\r\n  0x606060, // gray\r\n  0xFF8000, // orange\r\n  0xFFFF00, // yellow\r\n  0x808033, // tan\r\n  0x999999, // silver\r\n  0x00FF00, // green\r\n  0xFFFFFF, // white\r\n  0xFF9999, // pink\r\n  0x40C0C0, // cyan\r\n  0xA600A6, // purple\r\n  0x80E666, // lime\r\n  0xE666B3, // mauve\r\n  0x804D00, // ochre\r\n  0x8080C0, // ice blue\r\n  /* eslint-enable no-magic-numbers */\r\n];\r\n\r\npalette.defaultElementColor = 0x804D00;\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from atom_types.csv by atom_types.py.\r\npalette.elementColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  H: 0xFFFFFF,\r\n  C: 0x40BFBF,\r\n  N: 0x0000FF,\r\n  O: 0xFF0000,\r\n  P: 0x808033,\r\n  S: 0xFFFF00,\r\n  /* eslint-enable no-magic-numbers */\r\n};\r\n\r\npalette.defaultResidueColor = 0x40C0C0;\r\n\r\n// DO NOT EDIT MANUALLY! Autogenerated from residue_types.csv by residue_types.py.\r\npalette.residueColors = {\r\n  /* eslint-disable no-magic-numbers */\r\n  ALA: 0x0000FF,\r\n  ARG: 0xFFFFFF,\r\n  ASN: 0x808033,\r\n  ASP: 0xFF0000,\r\n  CYS: 0xFFFF00,\r\n  GLN: 0xFF8000,\r\n  GLU: 0xFF9999,\r\n  GLY: 0xFFFFFF,\r\n  HIS: 0x40C0C0,\r\n  ILE: 0x00FF00,\r\n  LEU: 0xFF9999,\r\n  LYS: 0x40C0C0,\r\n  MET: 0xFFFF00,\r\n  PHE: 0xA600A6,\r\n  PRO: 0x804C00,\r\n  SER: 0xFFFF00,\r\n  THR: 0xE666B3,\r\n  TRP: 0x999999,\r\n  TYR: 0x00FF00,\r\n  VAL: 0x808033,\r\n  A: 0x0000FF,\r\n  C: 0xFF8000,\r\n  G: 0xFFFF00,\r\n  T: 0xA600A6,\r\n  U: 0x00FF00,\r\n  DA: 0x0000FF,\r\n  DC: 0xFF8000,\r\n  DG: 0xFFFF00,\r\n  DT: 0xA600A6,\r\n  DU: 0x00FF00,\r\n  '+A': 0x0000FF,\r\n  '+C': 0xFF8000,\r\n  '+G': 0xFFFF00,\r\n  '+T': 0xA600A6,\r\n  '+U': 0x00FF00,\r\n  WAT: 0x40C0C0,\r\n  H2O: 0x40C0C0,\r\n  HOH: 0x40C0C0,\r\n  /* eslint-enable no-magic-numbers */\r\n};\r\n\r\npalette.chainColors = [0xFFFFFF].concat(palette.colors);\r\n\r\nconst StructuralElementType = StructuralElement.Type;\r\n\r\npalette.secondaryColors = {\r\n  [StructuralElementType.HELIX_ALPHA]: 0xA600A6,\r\n  [StructuralElementType.HELIX_310]: 0x0000FF,\r\n  [StructuralElementType.HELIX_PI]: 0xFF0000,\r\n  [StructuralElementType.STRAND]: 0xFFFF00,\r\n  [StructuralElementType.BRIDGE]: 0x808033,\r\n  [StructuralElementType.TURN]: 0x40C0C0,\r\n};\r\n\r\nexport default palette;\r\n","import EntityList from '../utils/EntityList';\r\n\r\nimport cpkPalette from './palettes/cpkPalette';\r\nimport jmolPalette from './palettes/jmolPalette';\r\nimport vmdPalette from './palettes/vmdPalette';\r\n\r\nconst palettes = new EntityList([\r\n  cpkPalette,\r\n  jmolPalette,\r\n  vmdPalette,\r\n]);\r\n\r\nexport default palettes;\r\n","import _ from 'lodash';\r\nimport settings from '../../settings';\r\nimport utils from '../../utils';\r\nimport palettes from '../palettes';\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the colorer after its creation.\r\n *\r\n * @exports Colorer\r\n * @this Colorer\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all available coloring algorithms used for building and displaying molecule geometry.\r\n */\r\nclass Colorer {\r\n  constructor(opts) {\r\n    if (this.constructor === Colorer) {\r\n      throw new Error('Can not instantiate abstract class!');\r\n    }\r\n    /**\r\n     * Colorer options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.opts = _.merge(utils.deriveDeep(settings.now.colorers[this.id], true), opts);\r\n    /**\r\n     * Palette in use.\r\n     * @type {Palette}\r\n     */\r\n    this.palette = palettes.first;\r\n  }\r\n\r\n  /**\r\n   * Get Colorer identification, probably with options.\r\n   * @returns {string|Array} Colorer identifier string ({@link Colorer#id}) or two-element array containing both colorer\r\n   *   identifier and options ({@link Colorer#opts}).\r\n   * Options are returned if they were changed during or after colorer creation.\r\n   */\r\n  identify() {\r\n    const diff = utils.objectsDiff(this.opts, settings.now.colorers[this.id]);\r\n    if (!_.isEmpty(diff)) {\r\n      return [this.id, diff];\r\n    }\r\n    return this.id;\r\n  }\r\n}\r\n\r\n/**\r\n * Colorer identifier.\r\n * @type {string}\r\n */\r\n\r\nColorer.prototype.id = '__';\r\n\r\nexport default Colorer;\r\n","import Colorer from './Colorer';\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Element\r\n *\r\n * @exports ElementColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Coloring algorithm based on chemical element.\r\n */\r\nclass ElementColorer extends Colorer {\r\n  static id = 'EL';\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const type = atom.element.name;\r\n    if (type === 'C' && this.opts.carbon >= 0) {\r\n      return this.opts.carbon;\r\n    }\r\n    return this.palette.getElementColor(type);\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.palette.defaultResidueColor;\r\n  }\r\n}\r\n\r\nElementColorer.prototype.id = 'EL';\r\nElementColorer.prototype.name = 'Element';\r\nElementColorer.prototype.shortName = 'Element';\r\n\r\nexport default ElementColorer;\r\n","import Colorer from './Colorer';\r\n\r\n/**\r\n * Coloring algorithm based on residue type.\r\n *\r\n * @see ResidueType\r\n *\r\n * @exports ResidueTypeColorer\r\n * @constructor\r\n */\r\nclass ResidueTypeColorer extends Colorer {\r\n  static id = 'RT';\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex);\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    return this.palette.getResidueColor(residue._type._name);\r\n  }\r\n}\r\n\r\nResidueTypeColorer.prototype.id = 'RT';\r\nResidueTypeColorer.prototype.name = 'Residue Type';\r\nResidueTypeColorer.prototype.shortName = 'Residue';\r\n\r\nexport default ResidueTypeColorer;\r\n","import Colorer from './Colorer';\r\n\r\nclass SequenceColorer extends Colorer {\r\n  static id = 'SQ';\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex);\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const chain = residue._chain;\r\n    if (chain.minSequence === Number.POSITIVE_INFINITY && chain.maxSequence === Number.NEGATIVE_INFINITY) {\r\n      return this.palette.defaultNamedColor;\r\n    }\r\n    const min = chain.minSequence;\r\n    const max = chain.maxSequence > min ? chain.maxSequence : min + 1;\r\n    return this.palette.getGradientColor((residue._sequence - min) / (max - min), this.opts.gradient);\r\n  }\r\n}\r\n\r\nSequenceColorer.prototype.id = 'SQ';\r\nSequenceColorer.prototype.name = 'Sequence';\r\nSequenceColorer.prototype.shortName = 'Sequence';\r\n\r\nexport default SequenceColorer;\r\n","import Colorer from './Colorer';\r\n\r\nclass ChainColorer extends Colorer {\r\n  static id = 'CH';\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex);\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    return this.palette.getChainColor(residue.getChain()._name);\r\n  }\r\n}\r\n\r\nChainColorer.prototype.id = 'CH';\r\nChainColorer.prototype.name = 'Chain';\r\nChainColorer.prototype.shortName = 'Chain';\r\n\r\nexport default ChainColorer;\r\n","import Colorer from './Colorer';\r\nimport ResidueType from '../../chem/ResidueType';\r\n\r\nclass SecondaryStructureColorer extends Colorer {\r\n  static id = 'SS';\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex);\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    if (residue._type.flags & ResidueType.Flags.DNA) {\r\n      return this.palette.getSecondaryColor('dna');\r\n    }\r\n    if (residue._type.flags & ResidueType.Flags.RNA) {\r\n      return this.palette.getSecondaryColor('rna');\r\n    }\r\n    const secondary = residue.getSecondary();\r\n    if (secondary) {\r\n      let color = this.palette.getSecondaryColor(secondary.type, true);\r\n      if (color === undefined) {\r\n        color = this.palette.getSecondaryColor(secondary.generic);\r\n      }\r\n      return color;\r\n    }\r\n    return this.palette.defaultSecondaryColor;\r\n  }\r\n}\r\n\r\nSecondaryStructureColorer.prototype.id = 'SS';\r\nSecondaryStructureColorer.prototype.name = 'Secondary Structure';\r\nSecondaryStructureColorer.prototype.shortName = 'Structure';\r\n\r\nexport default SecondaryStructureColorer;\r\n","import Colorer from './Colorer';\r\n\r\nclass UniformColorer extends Colorer {\r\n  static id = 'UN';\r\n\r\n  getAtomColor(_atom, _complex) {\r\n    return this.opts.color;\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.opts.color;\r\n  }\r\n}\r\n\r\nUniformColorer.prototype.id = 'UN';\r\nUniformColorer.prototype.name = 'Uniform';\r\nUniformColorer.prototype.shortName = 'Uniform';\r\n\r\nexport default UniformColorer;\r\n","import Colorer from './Colorer';\r\nimport selectors from '../../chem/selectors';\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @exports ConditionalColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Bicolor coloring algorithm based on a selector string used as a condition.\r\n */\r\nclass ConditionalColorer extends Colorer {\r\n  static id = 'CO';\r\n\r\n  constructor(opts) {\r\n    super(opts);\r\n    const parsed = selectors.parse(this.opts.subset);\r\n    this._subsetCached = parsed.error ? selectors.none() : parsed.selector;\r\n  }\r\n\r\n  getAtomColor(atom, _complex) {\r\n    return this._subsetCached.includesAtom(atom) ? this.opts.color : this.opts.baseColor;\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const subset = this._subsetCached;\r\n    const atoms = residue._atoms;\r\n    for (let i = 0, n = atoms.length; i < n; ++i) {\r\n      if (!subset.includesAtom(atoms[i])) {\r\n        return this.opts.baseColor;\r\n      }\r\n    }\r\n    return this.opts.color;\r\n  }\r\n}\r\n\r\nConditionalColorer.prototype.id = 'CO';\r\nConditionalColorer.prototype.name = 'Conditional';\r\nConditionalColorer.prototype.shortName = 'Conditional';\r\n\r\nexport default ConditionalColorer;\r\n","import Colorer from './Colorer';\r\n\r\nclass ConformationColorer extends Colorer {\r\n  static id = 'CF';\r\n\r\n  getAtomColor(atom, _complex) {\r\n    return this.palette.getChainColor(String.fromCharCode(atom.location));\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.palette.defaultResidueColor;\r\n  }\r\n}\r\n\r\nConformationColorer.prototype.id = 'CF';\r\nConformationColorer.prototype.name = 'Conformation';\r\nConformationColorer.prototype.shortName = 'Conformation';\r\n\r\nexport default ConformationColorer;\r\n","import Colorer from './Colorer';\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Temperature\r\n *\r\n * @exports TemperatureColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Coloring algorithm based on temperature of chemical element.\r\n */\r\nclass TemperatureColorer extends Colorer {\r\n  static id = 'TM';\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const { opts } = this;\r\n    let factor = 1;\r\n    if (atom.temperature && opts) {\r\n      if (opts.min === opts.max) {\r\n        factor = atom.temperature > opts.max ? 1 : 0;\r\n      } else {\r\n        factor = (atom.temperature - opts.min) / (opts.max - opts.min);\r\n      }\r\n      return this.palette.getGradientColor(factor, opts.gradient);\r\n    }\r\n    return this.palette.defaultGradientColor;\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const { opts } = this;\r\n    if (!opts) {\r\n      return this.palette.defaultGradientColor;\r\n    }\r\n    if (residue.temperature) {\r\n      let factor = 0;\r\n      if (opts.min === opts.max) {\r\n        factor = residue.temperature > opts.max ? 1 : 0;\r\n      } else {\r\n        factor = (residue.temperature - opts.min) / (opts.max - opts.min);\r\n      }\r\n      return this.palette.getGradientColor(factor, opts.gradient);\r\n    }\r\n    return this.palette.defaultGradientColor;\r\n  }\r\n}\r\n\r\nTemperatureColorer.prototype.id = 'TM'; // [T]e[M]perature\r\nTemperatureColorer.prototype.name = 'Temperature';\r\nTemperatureColorer.prototype.shortName = 'Temperature';\r\n\r\nexport default TemperatureColorer;\r\n","import Colorer from './Colorer';\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @see Occupancy\r\n *\r\n * @exports OccupancyColorer\r\n * @augments Occupancy\r\n * @constructor\r\n * @classdesc Coloring algorithm based on occupancy of chemical element.\r\n */\r\nclass OccupancyColorer extends Colorer {\r\n  static id = 'OC';\r\n\r\n  _getColorByOccupancy(occupancy, opts) {\r\n    if (occupancy !== undefined) {\r\n      const factor = 1 - occupancy;\r\n      return this.palette.getGradientColor(factor, opts.gradient);\r\n    }\r\n    return this.palette.defaultGradientColor;\r\n  }\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const { opts } = this;\r\n    return this._getColorByOccupancy(atom.occupancy, opts);\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const { opts } = this;\r\n    return this._getColorByOccupancy(residue.occupancy, opts);\r\n  }\r\n}\r\n\r\nOccupancyColorer.prototype.id = 'OC'; // [OC]cupancy\r\nOccupancyColorer.prototype.name = 'Occupancy';\r\nOccupancyColorer.prototype.shortName = 'Occupancy';\r\n\r\nexport default OccupancyColorer;\r\n","import Colorer from './Colorer';\r\n\r\nclass HydrophobicityColorer extends Colorer {\r\n  static id = 'HY';\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex);\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    let color = this.palette.defaultResidueColor;\r\n    if (residue._type.hydrophobicity !== undefined) {\r\n      // Kyte Doolitle hydro [-4.5,4.5]->[0.1]\r\n      const min = -4.5;\r\n      const max = 4.5;\r\n      color = this.palette.getGradientColor((residue._type.hydrophobicity - min) / (max - min), this.opts.gradient);\r\n    }\r\n    return color;\r\n  }\r\n}\r\n\r\nHydrophobicityColorer.prototype.id = 'HY';\r\nHydrophobicityColorer.prototype.name = 'Hydrophobicity';\r\nHydrophobicityColorer.prototype.shortName = 'Hydrophobicity';\r\n\r\nexport default HydrophobicityColorer;\r\n","import Colorer from './Colorer';\r\n\r\nclass MoleculeColorer extends Colorer {\r\n  static id = 'MO';\r\n\r\n  getAtomColor(atom, complex) {\r\n    return this.getResidueColor(atom.residue, complex);\r\n  }\r\n\r\n  getResidueColor(residue, _complex) {\r\n    const molecule = residue._molecule;\r\n    const count = _complex.getMoleculeCount();\r\n    if (count > 1) {\r\n      return this.palette.getGradientColor((molecule.index - 1) / (count - 1), this.opts.gradient);\r\n    }\r\n    return this.palette.getGradientColor(0, this.opts.gradient);\r\n  }\r\n}\r\n\r\nMoleculeColorer.prototype.id = 'MO';\r\nMoleculeColorer.prototype.name = 'Molecule';\r\nMoleculeColorer.prototype.shortName = 'Molecule';\r\n\r\nexport default MoleculeColorer;\r\n","import Colorer from './Colorer';\r\nimport Atom from '../../chem/Atom';\r\n\r\nfunction scaleColor(c, factor) {\r\n  const r1 = (c >> 16) & 0xff;\r\n  const g1 = (c >> 8) & 0xff;\r\n  const b1 = c & 0xff;\r\n  const r = factor * r1;\r\n  const g = factor * g1;\r\n  const b = factor * b1;\r\n  return (r << 16) | (g << 8) | b;\r\n}\r\n\r\n/**\r\n * Create new colorer.\r\n *\r\n * @param {object=} opts - Options to override defaults with. See {@link Colorer}.\r\n *\r\n * @exports CarbonColorer\r\n * @augments Colorer\r\n * @constructor\r\n * @classdesc Bicolor coloring algorithm based on selection carbon atoms.\r\n */\r\nclass CarbonColorer extends Colorer {\r\n  static id = 'CB';\r\n\r\n  getAtomColor(atom, _complex) {\r\n    const colorCarbon = this.opts.color;\r\n    const colorNotCarbon = scaleColor(colorCarbon, this.opts.factor);\r\n    return (atom.flags & Atom.Flags.CARBON) ? colorCarbon : colorNotCarbon;\r\n  }\r\n\r\n  getResidueColor(_residue, _complex) {\r\n    return this.opts.color;\r\n  }\r\n}\r\n\r\nCarbonColorer.prototype.id = 'CB';\r\nCarbonColorer.prototype.name = 'Carbon';\r\nCarbonColorer.prototype.shortName = 'Carbon';\r\n\r\nexport default CarbonColorer;\r\n","import EntityList from '../utils/EntityList';\r\n\r\nimport ElementColorer from './colorers/ElementColorer';\r\nimport ResidueTypeColorer from './colorers/ResidueTypeColorer';\r\nimport SequenceColorer from './colorers/SequenceColorer';\r\nimport ChainColorer from './colorers/ChainColorer';\r\nimport SecondaryStructureColorer from './colorers/SecondaryStructureColorer';\r\nimport UniformColorer from './colorers/UniformColorer';\r\nimport ConditionalColorer from './colorers/ConditionalColorer';\r\nimport ConformationColorer from './colorers/ConformationColorer';\r\nimport TemperatureColorer from './colorers/TemperatureColorer';\r\nimport OccupancyColorer from './colorers/OccupancyColorer';\r\nimport HydrophobicityColorer from './colorers/HydrophobicityColorer';\r\nimport MoleculeColorer from './colorers/MoleculeColorer';\r\nimport CarbonColorer from './colorers/CarbonColorer';\r\n\r\nconst colorers = new EntityList([\r\n  ElementColorer,\r\n  ResidueTypeColorer,\r\n  SequenceColorer,\r\n  ChainColorer,\r\n  SecondaryStructureColorer,\r\n  UniformColorer,\r\n  ConditionalColorer,\r\n  ConformationColorer,\r\n  TemperatureColorer,\r\n  OccupancyColorer,\r\n  HydrophobicityColorer,\r\n  MoleculeColorer,\r\n  CarbonColorer,\r\n]);\r\n\r\nexport default colorers;\r\n","import * as THREE from 'three';\r\nimport EntityList from '../utils/EntityList';\r\n\r\nfunction neutralColor(intensity) {\r\n  return new THREE.Color(intensity, intensity, intensity);\r\n}\r\n\r\nconst materialList = [\r\n  {\r\n    id: 'DF',\r\n    name: 'Diffuse',\r\n    shortName: 'Diffuse',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0,\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false,\r\n    },\r\n  }, {\r\n    id: 'SF',\r\n    name: 'Soft Plastic',\r\n    shortName: 'Soft',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.1),\r\n      shininess: 30,\r\n      opacity: 1.0,\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false,\r\n    },\r\n  }, {\r\n    id: 'PL',\r\n    name: 'Glossy Plastic',\r\n    shortName: 'Glossy',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.56),\r\n      specular: neutralColor(0.28),\r\n      shininess: 100,\r\n      opacity: 1.0,\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false,\r\n    },\r\n  }, {\r\n    id: 'ME',\r\n    name: 'Metal',\r\n    shortName: 'Metal',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.56),\r\n      specular: neutralColor(0.55),\r\n      shininess: 30,\r\n      opacity: 1.0,\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: false,\r\n    },\r\n  }, {\r\n    id: 'TR',\r\n    name: 'Transparent',\r\n    shortName: 'Transparent',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 0.5,\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: true,\r\n      toonShading: false,\r\n    },\r\n  }, {\r\n    id: 'GL',\r\n    name: 'Glass',\r\n    shortName: 'Glass',\r\n    uberOptions: {\r\n      diffuse: neutralColor(0.50),\r\n      specular: neutralColor(0.65),\r\n      shininess: 100,\r\n      opacity: 0.5,\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: true,\r\n      toonShading: false,\r\n    },\r\n  }, {\r\n    id: 'BA',\r\n    name: 'Backdrop',\r\n    shortName: 'Backdrop',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0,\r\n    },\r\n    values: {\r\n      lights: false,\r\n      fog: false,\r\n      depthWrite: false,\r\n      transparent: false,\r\n      toonShading: false,\r\n    },\r\n  }, {\r\n    id: 'TN',\r\n    name: 'Toon',\r\n    shortName: 'Toon',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 1,\r\n      opacity: 1.0,\r\n    },\r\n    values: {\r\n      lights: true,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n      toonShading: true,\r\n    },\r\n  }, {\r\n    id: 'FL',\r\n    name: 'Flat',\r\n    shortName: 'Flat',\r\n    uberOptions: {\r\n      diffuse: neutralColor(1.0),\r\n      specular: neutralColor(0.0),\r\n      shininess: 0,\r\n      opacity: 1.0,\r\n    },\r\n    values: {\r\n      lights: false,\r\n      fog: true,\r\n      depthWrite: true,\r\n      transparent: false,\r\n    },\r\n  },\r\n];\r\n\r\nconst materials = new EntityList(materialList);\r\n\r\nexport default materials;\r\n","/**\r\n * Utils functions which is worked with meshes\r\n *\r\n * functions for doing something with all/specified meshes\r\n * functions for traversihg tree and create auxiliary meshes for transparency/shadowmaps...\r\n * functions for calculating data connected with meshes\r\n */\r\nimport * as THREE from 'three';\r\nimport UberMaterial from './shaders/UberMaterial';\r\nimport gfxutils from './gfxutils';\r\n\r\nfunction _gatherObjects(root, meshTypes) {\r\n  const meshes = [];\r\n  root.traverse((object) => {\r\n    for (let i = 0; i < meshTypes.length; i++) {\r\n      if (object instanceof meshTypes[i]) {\r\n        meshes[meshes.length] = object;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  return meshes;\r\n}\r\n\r\n// new mesh with the same geometry and specified material values and layer\r\nfunction createDerivativeMesh(mesh, values, layer) {\r\n  const material = mesh.material.createInstance();\r\n  material.setValues(values);\r\n\r\n  const newMesh = new mesh.constructor(mesh.geometry, material);\r\n  newMesh.material.needsUpdate = true;\r\n  newMesh.applyMatrix4(mesh.matrix);\r\n  newMesh.layers.set(layer);\r\n  return newMesh;\r\n}\r\n\r\nfunction traverseMeshes(root, meshTypes, func) {\r\n  const meshes = _gatherObjects(root, meshTypes);\r\n\r\n  for (let i = 0, n = meshes.length; i < n; ++i) {\r\n    const mesh = meshes[i];\r\n    if (!mesh.parent) {\r\n      continue;\r\n    }\r\n    func(mesh);\r\n  }\r\n}\r\n\r\nfunction applyTransformsToMeshes(root, mtc) {\r\n  const mtcCount = mtc.length;\r\n  if (mtcCount < 1) {\r\n    return;\r\n  }\r\n\r\n  const meshTypes = [THREE.Mesh, THREE.LineSegments, THREE.Line];\r\n  traverseMeshes(root, meshTypes, (mesh) => {\r\n    mesh.applyMatrix4(mtc[0]);\r\n    for (let j = 1; j < mtcCount; ++j) {\r\n      const newMesh = new mesh.constructor(mesh.geometry, mesh.material);\r\n      mesh.parent.add(newMesh);\r\n      newMesh.applyMatrix4(mtc[j]);\r\n    }\r\n  });\r\n}\r\n\r\nconst processTransparentMaterial = (function () {\r\n  const matValues = {\r\n    prepassTransparancy: true,\r\n    fakeOpacity: false,\r\n    transparent: false,\r\n    colorFromDepth: false,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false,\r\n  };\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return;\r\n    }\r\n\r\n    traverseMeshes(root, [THREE.Mesh, THREE.LineSegments], (mesh) => {\r\n      mesh.material.setValues({ prepassTransparancy: false, fakeOpacity: false });\r\n      mesh.material.needsUpdate = true;\r\n      mesh.layers.set(gfxutils.LAYERS.TRANSPARENT);\r\n\r\n      const prepassTranspMesh = createDerivativeMesh(mesh, matValues, gfxutils.LAYERS.PREPASS_TRANSPARENT);\r\n      mesh.parent.add(prepassTranspMesh);\r\n    });\r\n  };\r\n}());\r\n\r\nconst processColFromPosMaterial = (function () {\r\n  const matValues = {\r\n    colorFromPos: true,\r\n    transparent: false,\r\n    colorFromDepth: false,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false,\r\n    overrideColor: false,\r\n    fogTransparent: false,\r\n    attrColor: false,\r\n    attrColor2: false,\r\n    attrAlphaColor: false,\r\n    fakeOpacity: false,\r\n  };\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return;\r\n    }\r\n\r\n    traverseMeshes(root, [THREE.Mesh, THREE.LineSegments], (mesh) => {\r\n      const colFromPosMesh = createDerivativeMesh(mesh, matValues, gfxutils.LAYERS.COLOR_FROM_POSITION);\r\n      mesh.parent.add(colFromPosMesh);\r\n    });\r\n  };\r\n}());\r\n\r\nconst createShadowmapMaterial = (function () {\r\n  const matValues = {\r\n    colorFromDepth: true,\r\n    orthoCam: true,\r\n    lights: false,\r\n    shadowmap: false,\r\n    fog: false,\r\n  };\r\n\r\n  return function (root, material) {\r\n    if (!(material instanceof UberMaterial)) {\r\n      return;\r\n    }\r\n    traverseMeshes(root, [THREE.Mesh, THREE.LineSegments], (mesh) => {\r\n      if (!mesh.receiveShadow && mesh.material.shadowmap) { // remove shadow from non-receivers\r\n        mesh.material.setValues({ shadowmap: false });\r\n      }\r\n      if (!mesh.material.lights) { // skip creating shadowmap meshes for materials without lighting\r\n        return;\r\n      }\r\n      if (!mesh.castShadow) { // skip creating shadowmap meshes for non-casters\r\n        return;\r\n      }\r\n      if (!gfxutils.belongToSelectLayers(mesh)) { // skip creating shadowmap meshes for selection layer\r\n        return;\r\n      }\r\n\r\n      const shadowmapMesh = createDerivativeMesh(mesh, matValues, gfxutils.LAYERS.SHADOWMAP);\r\n      shadowmapMesh.isShadowmapMesh = true;\r\n      mesh.parent.add(shadowmapMesh);\r\n    });\r\n  };\r\n}());\r\n\r\nfunction removeShadowmapMaterial(root, material) {\r\n  if (!(material instanceof UberMaterial)) {\r\n    return;\r\n  }\r\n\r\n  traverseMeshes(root, [THREE.Mesh, THREE.LineSegments], (mesh) => {\r\n    if (mesh.isShadowmapMesh) {\r\n      mesh.parent.remove(mesh);\r\n    }\r\n  });\r\n}\r\n\r\nfunction forEachMeshInGroup(group, process) {\r\n  function processObj(object) {\r\n    if (object instanceof THREE.Mesh) {\r\n      process(object);\r\n    }\r\n    for (let i = 0, l = object.children.length; i < l; i++) {\r\n      processObj(object.children[i]);\r\n    }\r\n  }\r\n  processObj(group);\r\n}\r\n\r\nfunction _countMeshTriangles(mesh) {\r\n  const geom = mesh.geometry;\r\n  if (geom instanceof THREE.InstancedBufferGeometry) {\r\n    const attribs = geom.attributes;\r\n    for (const property in attribs) {\r\n      if (attribs.hasOwnProperty(property) && attribs[property] instanceof THREE.InstancedBufferAttribute) {\r\n        const currAttr = attribs[property];\r\n        const indexSize = geom.index ? geom.index.array.length / 3 : 0;\r\n        return indexSize * currAttr.array.length / currAttr.itemSize;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n  if (geom instanceof THREE.BufferGeometry) {\r\n    return geom.index ? geom.index.array.length / 3 : 0;\r\n  }\r\n  return geom.faces ? geom.faces.length : 0;\r\n}\r\n\r\nfunction countTriangles(group) {\r\n  let totalCount = 0;\r\n  forEachMeshInGroup(group, (mesh) => {\r\n    totalCount += _countMeshTriangles(mesh);\r\n  });\r\n  return totalCount;\r\n}\r\n\r\nexport default {\r\n  applyTransformsToMeshes,\r\n  processTransparentMaterial,\r\n  processColFromPosMaterial,\r\n  createShadowmapMaterial,\r\n  removeShadowmapMaterial,\r\n  forEachMeshInGroup,\r\n  countTriangles,\r\n};\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport UberMaterial from './shaders/UberMaterial';\r\nimport gfxutils from './gfxutils';\r\nimport meshutils from './meshutils';\r\nimport settings from '../settings';\r\nimport materials from './materials';\r\nimport chem from '../chem';\r\n\r\nconst { selectors } = chem;\r\n\r\nclass Representation {\r\n  constructor(index, mode, colorer, selector) {\r\n    const startMaterialValues = {\r\n      clipPlane: settings.now.draft.clipPlane,\r\n      fogTransparent: settings.now.bg.transparent,\r\n      shadowmap: settings.now.shadow.on,\r\n      shadowmapType: settings.now.shadow.type,\r\n    };\r\n    this.index = index;\r\n    this.mode = mode;\r\n    this.colorer = colorer;\r\n    this.selector = selector;\r\n    this.selectorString = '';\r\n    this.count = 0;\r\n    this.material = new UberMaterial();\r\n    this.material.setValues(startMaterialValues);\r\n    this.material.setUberOptions({ fogAlpha: settings.now.fogAlpha });\r\n    this.materialPreset = materials.first;\r\n    this.needsRebuild = true;\r\n    this.visible = true;\r\n\r\n    // apply mode params & preset\r\n    this.setMode(mode);\r\n  }\r\n\r\n  markAtoms(complex) {\r\n    this.count = complex.markAtoms(this.selector, 1 << this.index);\r\n    this.needsRebuild = true;\r\n    return this.count;\r\n  }\r\n\r\n  unmarkAtoms(complex) {\r\n    complex.clearAtomBits(1 << this.index);\r\n    this.count = 0;\r\n  }\r\n\r\n  setMode(mode) {\r\n    this.mode = mode;\r\n  }\r\n\r\n  setMaterialPreset(preset) {\r\n    this.materialPreset = preset;\r\n    this.material.setUberOptions(preset.uberOptions);\r\n    this.material.setValues(preset.values);\r\n  }\r\n\r\n  reset() {\r\n    this.geo = null;\r\n    this.selectionGeo = null;\r\n  }\r\n\r\n  buildGeometry(complex) {\r\n    this.reset();\r\n    this.needsRebuild = false;\r\n\r\n    if (settings.now.ao) {\r\n      this.material.setValues({ normalsToGBuffer: settings.now.ao });\r\n    }\r\n\r\n    this.geo = this.mode.buildGeometry(complex, this.colorer, 1 << this.index, this.material);\r\n\r\n    if (this.material.uberOptions.opacity < 0.99 && settings.now.transparency === 'prepass') {\r\n      meshutils.processTransparentMaterial(this.geo, this.material);\r\n    }\r\n    this.geo.visible = this.visible;\r\n\r\n    gfxutils.processObjRenderOrder(this.geo, this.materialPreset.id);\r\n    meshutils.processColFromPosMaterial(this.geo, this.material);\r\n\r\n    if (settings.now.shadow.on) {\r\n      meshutils.createShadowmapMaterial(this.geo, this.material);\r\n    }\r\n\r\n    return this.geo;\r\n  }\r\n\r\n  buildSelectionGeometry(mask) {\r\n    let sg = null;\r\n\r\n    if (this.geo && ('getSubset' in this.geo)) {\r\n      const meshes = this.geo.getSubset(mask);\r\n      if (meshes && meshes.length > 0) {\r\n        sg = new THREE.Group();\r\n        sg.matrixAutoUpdate = false;\r\n        sg.matrix = this.geo.matrix;\r\n\r\n        for (let j = 0; j < meshes.length; j++) {\r\n          const m = meshes[j];\r\n          sg.add(m);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (sg) {\r\n      sg.visible = this.visible;\r\n    }\r\n\r\n    this.selectionGeo = sg;\r\n    return this.selectionGeo;\r\n  }\r\n\r\n  /**\r\n   * Create object that represents difference between current and another rep\r\n   * anotherRep could be undefined. In this case everything is reported.\r\n   */\r\n  compare(repSettings) {\r\n    const diff = {};\r\n\r\n    const selStr = String(this.selector);\r\n    if (!repSettings || selStr.valueOf() !== String(repSettings.selector).valueOf()) {\r\n      diff.selector = selStr;\r\n    }\r\n\r\n    const modeDiff = this.mode.identify();\r\n    if (!repSettings || Array.isArray(modeDiff) || modeDiff !== repSettings.mode) {\r\n      diff.mode = modeDiff;\r\n    }\r\n\r\n    const colorerDiff = this.colorer.identify();\r\n    if (!repSettings || Array.isArray(colorerDiff) || colorerDiff !== repSettings.colorer) {\r\n      diff.colorer = colorerDiff;\r\n    }\r\n\r\n    if (!repSettings || this.materialPreset.id !== repSettings.material) {\r\n      diff.material = this.materialPreset.id;\r\n    }\r\n\r\n    return diff;\r\n  }\r\n\r\n  /**\r\n   * Change representation. Write fields what was changed into new object, return it.\r\n   */\r\n  change(repSettings, complex, mode, color) {\r\n    const diff = {};\r\n\r\n    // modify selector\r\n    if (repSettings.selector) {\r\n      const newSelectorObject = selectors.parse(repSettings.selector).selector;\r\n      const newSelector = String(newSelectorObject);\r\n      if (this.selectorString !== newSelector) {\r\n        diff.selector = newSelector;\r\n        this.selectorString = newSelector;\r\n        this.selector = newSelectorObject;\r\n        this.markAtoms(complex);\r\n      }\r\n    }\r\n\r\n    // modify mode\r\n    if (repSettings.mode) {\r\n      const newMode = repSettings.mode;\r\n      if (!_.isEqual(this.mode.identify(), newMode)) {\r\n        diff.mode = newMode;\r\n        this.setMode(mode);\r\n      }\r\n    }\r\n\r\n    // modify colorer\r\n    if (repSettings.colorer) {\r\n      const newColorer = repSettings.colorer;\r\n      if (!_.isEqual(this.colorer.identify(), newColorer)) {\r\n        diff.colorer = newColorer;\r\n        this.colorer = color;\r\n      }\r\n    }\r\n\r\n    // modify material\r\n    if (repSettings.material) {\r\n      const newMaterial = repSettings.material;\r\n      if (!_.isEqual(this.materialPreset.id, newMaterial)) {\r\n        diff.material = newMaterial;\r\n        this.setMaterialPreset(materials.get(repSettings.material));\r\n      }\r\n    }\r\n\r\n    return diff;\r\n  }\r\n\r\n  show(visible) {\r\n    this.visible = visible;\r\n    if (this.geo) {\r\n      this.geo.visible = visible;\r\n    }\r\n    if (this.selectionGeo) {\r\n      this.selectionGeo.visible = visible;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Representation;\r\n","import * as THREE from 'three';\r\nimport logger from './utils/logger';\r\nimport gfxutils from './gfx/gfxutils';\r\nimport './gfx/modes';\r\n\r\nfunction _traverseComponentGroups(root, component, callback) {\r\n  const { children } = root;\r\n  if (!children) {\r\n    return;\r\n  }\r\n\r\n  for (let i = 0, n = children.length; i < n; ++i) {\r\n    const child = children[i];\r\n    if (child._component === component) {\r\n      callback(child);\r\n    }\r\n    if (child instanceof gfxutils.RCGroup) {\r\n      _traverseComponentGroups(child, component, callback);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ComplexEditor() {\r\n}\r\n\r\nclass ComplexComponentEditor extends ComplexEditor {\r\n  constructor(complexVisual) {\r\n    super();\r\n    this._complexVisual = complexVisual;\r\n    this._inProgress = false;\r\n  }\r\n\r\n  begin() {\r\n    const complex = this._complexVisual.getComplex();\r\n\r\n    // init component matrices\r\n    this._componentTransforms = [];\r\n    for (let i = 0; i < complex._components.length; ++i) {\r\n      const component = complex._components[i];\r\n      this._componentTransforms[component._index] = new THREE.Object3D();\r\n    }\r\n\r\n    this._inProgress = true;\r\n\r\n    return true;\r\n  }\r\n\r\n  apply() {\r\n    if (!this._inProgress) {\r\n      return;\r\n    }\r\n\r\n    const complex = this._complexVisual.getComplex();\r\n\r\n    for (let i = 0; i < complex._components.length; ++i) {\r\n      this._bakeComponentTransform(complex._components[i]);\r\n    }\r\n\r\n    complex.onAtomPositionChanged();\r\n\r\n    this._resetComponentTransform();\r\n\r\n    this._complexVisual.finalizeEdit();\r\n  }\r\n\r\n  discard() {\r\n    if (!this._inProgress) {\r\n      return;\r\n    }\r\n\r\n    this._resetComponentTransform();\r\n\r\n    this._complexVisual.finalizeEdit();\r\n  }\r\n\r\n  getAltObj() {\r\n    const res = {\r\n      objects: [],\r\n      pivot: new THREE.Vector3(0, 0, 0),\r\n    };\r\n\r\n    const visual = this._complexVisual;\r\n    const component = visual.getSelectedComponent();\r\n\r\n    if (component === null) {\r\n      return res;\r\n    }\r\n\r\n    const selection = this._complexVisual.getSelectionGeo();\r\n    const selectionMask = 1 << visual.getSelectionBit();\r\n    let i;\r\n    let j;\r\n    let reprNode;\r\n    let geo;\r\n\r\n    // find all geo nodes for this component\r\n    _traverseComponentGroups(visual, component, (child) => {\r\n      res.objects.push(child);\r\n    });\r\n\r\n    // find all selection nodes for this component\r\n    for (i = 0; i < selection.children.length; ++i) {\r\n      reprNode = selection.children[i];\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j];\r\n        if (geo.hasOwnProperty('_component') && geo._component === component) {\r\n          res.objects.push(geo);\r\n        }\r\n      }\r\n    }\r\n\r\n    // add dummy object that stores component transformation\r\n    res.objects.push(this._componentTransforms[component._index]);\r\n\r\n    const bbmin = new THREE.Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\r\n    const bbmax = new THREE.Vector3(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\r\n\r\n    component.forEachResidue((residue) => {\r\n      const atoms = residue._atoms;\r\n      for (j = 0; j < atoms.length; ++j) {\r\n        if (atoms[j].mask & selectionMask) {\r\n          bbmin.min(atoms[j].position);\r\n          bbmax.max(atoms[j].position);\r\n        }\r\n      }\r\n    });\r\n\r\n    res.pivot.lerpVectors(bbmin, bbmax, 0.5);\r\n    return res;\r\n  }\r\n\r\n  _bakeComponentTransform(component) {\r\n    const t = this._componentTransforms[component._index];\r\n    if (t && (!(t.position.x === 0 && t.position.y === 0 && t.position.z === 0)\r\n      || !(t.quaternion.x === 0 && t.quaternion.y === 0 && t.quaternion.z === 0 && t.quaternion.w === 1))) {\r\n      t.updateMatrix();\r\n\r\n      component.forEachResidue((residue) => {\r\n        const atoms = residue._atoms;\r\n        for (let j = 0; j < atoms.length; ++j) {\r\n          atoms[j].position.applyMatrix4(t.matrix);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _resetComponentTransform() {\r\n    const visual = this._complexVisual;\r\n    const selection = this._complexVisual.getSelectionGeo();\r\n    let i;\r\n    let j;\r\n    let reprNode;\r\n    let geo;\r\n\r\n    for (i = 0; i < this._componentTransforms.length; ++i) {\r\n      geo = this._componentTransforms[i];\r\n      geo.position.set(0, 0, 0);\r\n      geo.quaternion.set(0, 0, 0, 1);\r\n    }\r\n\r\n    // reset all geo nodes\r\n    for (i = 0; i < visual.children.length; ++i) {\r\n      reprNode = visual.children[i];\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j];\r\n        if (geo.hasOwnProperty('_component')) {\r\n          geo.position.set(0, 0, 0);\r\n          geo.quaternion.set(0, 0, 0, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    // reset all selection nodes\r\n    for (i = 0; i < selection.children.length; ++i) {\r\n      reprNode = selection.children[i];\r\n      for (j = 0; j < reprNode.children.length; ++j) {\r\n        geo = reprNode.children[j];\r\n        if (geo.hasOwnProperty('_component')) {\r\n          geo.position.set(0, 0, 0);\r\n          geo.quaternion.set(0, 0, 0, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass ComplexFragmentEditor extends ComplexEditor {\r\n  constructor(complexVisual) {\r\n    super();\r\n    this._complexVisual = complexVisual;\r\n    this._inProgress = false;\r\n  }\r\n\r\n  begin() {\r\n    const visual = this._complexVisual;\r\n    const selection = this._complexVisual.getSelectionGeo();\r\n\r\n    const atoms = this._getSelectionBorderAtoms();\r\n    if (atoms.length < 1 || atoms.length > 2) {\r\n      logger.error('Can only edit fragments with one or two bound atoms.');\r\n      return false;\r\n    }\r\n\r\n    this._fragmentBoundAtoms = atoms;\r\n\r\n    const selectionMask = 1 << visual.getSelectionBit();\r\n\r\n    // hide selected fragment in main model\r\n    visual.disableSubset(selectionMask, true);\r\n\r\n    // hide selection geo in main model\r\n    for (let k = 0; k < selection.children.length; ++k) {\r\n      selection.children[k].visible = false;\r\n    }\r\n\r\n    // create visible fragment representation to rotate\r\n    const pivotPos = atoms[0].position.clone();\r\n\r\n    if (atoms.length === 2) {\r\n      pivotPos.lerp(atoms[1].position, 0.5);\r\n    }\r\n\r\n    this._fragmentGeo = new THREE.Group();\r\n    visual.add(this._fragmentGeo);\r\n    this._fragmentGeo.position.copy(pivotPos);\r\n\r\n    this._fragmentSelectionGeo = new THREE.Group();\r\n    selection.add(this._fragmentSelectionGeo);\r\n    this._fragmentSelectionGeo.position.copy(pivotPos);\r\n\r\n    const offset = pivotPos.clone();\r\n    offset.negate();\r\n\r\n    for (let i = 0; i < visual.children.length; ++i) {\r\n      const g = visual.children[i];\r\n      if (!('getSubset' in g)) {\r\n        continue;\r\n      }\r\n\r\n      const vg = new THREE.Group();\r\n      this._fragmentGeo.add(vg);\r\n\r\n      const sg = new THREE.Group();\r\n      this._fragmentSelectionGeo.add(sg);\r\n\r\n      const meshes = g.getSubset(selectionMask, true);\r\n      for (let j = 0; j < meshes.length; j++) {\r\n        const m = meshes[j];\r\n        vg.add(m);\r\n        m.position.copy(offset);\r\n      }\r\n\r\n      const smeshes = g.getSubset(selectionMask, true);\r\n      for (let h = 0; h < smeshes.length; h++) {\r\n        const sm = smeshes[h];\r\n        sg.add(sm);\r\n        sm.position.copy(offset);\r\n      }\r\n    }\r\n\r\n    gfxutils.applySelectionMaterial(this._fragmentSelectionGeo);\r\n\r\n    this._inProgress = true;\r\n    return true;\r\n  }\r\n\r\n  apply() {\r\n    if (!this._inProgress) {\r\n      return;\r\n    }\r\n\r\n    const visual = this._complexVisual;\r\n    const selectionBit = visual.getSelectionBit();\r\n\r\n    const p = this._fragmentGeo.position;\r\n    const m = this._fragmentGeo.matrix.clone();\r\n    m.multiply(new THREE.Matrix4().makeTranslation(-p.x, -p.y, -p.z));\r\n\r\n    this._bakeAtomTransform(m, 1 << selectionBit);\r\n\r\n    // show selected fragment in main model\r\n    visual.enableSubset(1 << selectionBit, true);\r\n\r\n    visual.getComplex().onAtomPositionChanged();\r\n\r\n    visual.finalizeEdit();\r\n  }\r\n\r\n  discard() {\r\n    if (!this._inProgress) {\r\n      return;\r\n    }\r\n\r\n    const visual = this._complexVisual;\r\n    const selection = this._complexVisual.getSelectionGeo();\r\n\r\n    this._fragmentGeo.parent.remove(this._fragmentGeo);\r\n\r\n    // show selected fragment in main model\r\n    visual.enableSubset(1 << visual.getSelectionBit(), true);\r\n\r\n    // show selection geo in main model (+ remove fragment selection geo)\r\n    for (let i = 0; i < selection.children.length; ++i) {\r\n      const node = selection.children[i];\r\n      if (node.visible) {\r\n        selection.remove(node);\r\n      } else {\r\n        node.visible = true;\r\n      }\r\n    }\r\n\r\n    visual.finalizeEdit();\r\n  }\r\n\r\n  isFreeRotationAllowed() {\r\n    return (this._fragmentBoundAtoms.length < 2);\r\n  }\r\n\r\n  getAltObj() {\r\n    const res = {\r\n      objects: [],\r\n      pivot: new THREE.Vector3(0, 0, 0),\r\n    };\r\n\r\n    res.objects.push(this._fragmentGeo, this._fragmentSelectionGeo);\r\n\r\n    const boundAtoms = this._fragmentBoundAtoms;\r\n    if (boundAtoms.length === 1) {\r\n      if (boundAtoms[0].bonds.length === 1) {\r\n        // single external bond allows rotation about bond axis\r\n        const bond = boundAtoms[0].bonds[0];\r\n        res.axis = new THREE.Vector3().subVectors(bond._right.position, bond._left.position);\r\n        res.axis.normalize();\r\n        res.axis.transformDirection(this._complexVisual.matrixWorld);\r\n      }\r\n    } else if (boundAtoms.length === 2) {\r\n      // two bound atoms allow rotation only about axis running through their centers\r\n      res.axis = new THREE.Vector3().subVectors(boundAtoms[1].position, boundAtoms[0].position);\r\n      res.axis.normalize();\r\n      res.axis.transformDirection(this._complexVisual.matrixWorld);\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  _getSelectionBorderAtoms() {\r\n    const complex = this._complexVisual.getComplex();\r\n\r\n    const selectionMask = 1 << this._complexVisual.getSelectionBit();\r\n    const atomHash = {};\r\n\r\n    complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          atomHash[bond._left.index] = 1;\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        atomHash[bond._right.index] = 1;\r\n      }\r\n    });\r\n\r\n    const atoms = [];\r\n    const keys = Object.keys(atomHash);\r\n    for (let i = 0, n = keys.length; i < n; ++i) {\r\n      const idx = keys[i];\r\n      atoms.push(complex._atoms[idx]);\r\n    }\r\n\r\n    return atoms;\r\n  }\r\n\r\n  _bakeAtomTransform(matrix, mask) {\r\n    this._complexVisual.getComplex().forEachAtom((atom) => {\r\n      if (atom.mask & mask) {\r\n        atom.position.applyMatrix4(matrix);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default {\r\n  ComponentEditor: ComplexComponentEditor,\r\n  FragmentEditor: ComplexFragmentEditor,\r\n};\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport utils from './utils';\r\nimport logger from './utils/logger';\r\nimport chem from './chem';\r\nimport settings from './settings';\r\nimport gfxutils from './gfx/gfxutils';\r\nimport modes from './gfx/modes';\r\nimport colorers from './gfx/colorers';\r\nimport palettes from './gfx/palettes';\r\nimport materials from './gfx/materials';\r\nimport Representation from './gfx/Representation';\r\nimport Visual from './Visual';\r\nimport ComplexVisualEdit from './ComplexVisualEdit';\r\nimport meshutils from './gfx/meshutils';\r\n\r\nconst { selectors } = chem;\r\n\r\nfunction lookupAndCreate(entityList, specs) {\r\n  if (!Array.isArray(specs)) {\r\n    specs = [specs];\r\n  }\r\n  const [id, opts] = specs;\r\n  const Entity = entityList.get(id) || entityList.first;\r\n  return new Entity(opts);\r\n}\r\n\r\nclass ComplexVisual extends Visual {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource);\r\n    this._complex = dataSource;\r\n\r\n    /** @type {Representation[]} */\r\n    this._reprList = [];\r\n    /** @type {?Representation} */\r\n    this._repr = null;\r\n    this._reprListChanged = true;\r\n\r\n    this._selectionBit = 0;\r\n    this._reprUsedBits = 0;\r\n    this._selectionCount = 0;\r\n\r\n    this._selectionGeometry = new THREE.Group();\r\n  }\r\n\r\n  getBoundaries() {\r\n    return this._complex.getBoundaries();\r\n  }\r\n\r\n  release() {\r\n    if (this._selectionGeometry.parent) {\r\n      this._selectionGeometry.remove(this._selectionGeometry);\r\n    }\r\n    Visual.prototype.release.call(this);\r\n  }\r\n\r\n  getComplex() {\r\n    return this._complex;\r\n  }\r\n\r\n  getSelectionCount() {\r\n    return this._selectionCount;\r\n  }\r\n\r\n  getSelectionGeo() {\r\n    return this._selectionGeometry;\r\n  }\r\n\r\n  getSelectionBit() {\r\n    return this._selectionBit;\r\n  }\r\n\r\n  getEditor() {\r\n    return this._editor;\r\n  }\r\n\r\n  resetReps(reps) {\r\n    // Create all necessary representations\r\n    if (this._complex) {\r\n      this._complex.clearAtomBits(~0);\r\n    }\r\n    this._reprListChanged = true;\r\n    this._reprUsedBits = 0;\r\n    this._reprList.length = reps.length;\r\n    for (let i = 0, n = reps.length; i < n; ++i) {\r\n      const rep = reps[i];\r\n\r\n      let selector;\r\n      let selectorString;\r\n      if (typeof rep.selector === 'string') {\r\n        selectorString = rep.selector;\r\n        ({ selector } = selectors.parse(selectorString));\r\n      } else if (typeof rep.selector === 'undefined') {\r\n        selectorString = settings.now.presets.default[0].selector;\r\n        ({ selector } = selectors.parse(selectorString));\r\n      } else {\r\n        ({ selector } = rep);\r\n        selectorString = selector.toString();\r\n      }\r\n      const mode = lookupAndCreate(modes, rep.mode);\r\n      const colorer = lookupAndCreate(colorers, rep.colorer);\r\n      const material = materials.get(rep.material) || materials.first;\r\n\r\n      this._reprList[i] = new Representation(i, mode, colorer, selector);\r\n      this._reprList[i].setMaterialPreset(material);\r\n      this._reprList[i].selectorString = selectorString;\r\n\r\n      if (this._complex) {\r\n        this._complex.markAtoms(selector, 1 << i);\r\n      }\r\n\r\n      this._reprUsedBits |= 1 << i;\r\n    }\r\n    this._repr = reps.length > 0 ? this._reprList[0] : null;\r\n\r\n    this._selectionBit = reps.length;\r\n    this._reprUsedBits |= 1 << this._selectionBit; // selection uses one bit\r\n    this._selectionCount = 0;\r\n\r\n    if (this._complex) {\r\n      this._complex.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get number of representations created so far.\r\n   * @returns {number} Number of reps.\r\n   */\r\n  repCount() {\r\n    return this._reprList.length;\r\n  }\r\n\r\n  /**\r\n   * Get or set the current representation index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @returns {number} The current index.\r\n   */\r\n  repCurrent(index) {\r\n    if (index >= 0 && index < this._reprList.length) {\r\n      this._repr = this._reprList[index];\r\n    } else {\r\n      index = this._reprList.indexOf(this._repr);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Get or set representation by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @param {object=} rep - Optional representation description.\r\n   * @param {string=} rep.selector - Selector string.\r\n   * @param {string=} rep.mode - Mode id.\r\n   * @param {string=} rep.colorer - Colorer id.\r\n   * @param {string=} rep.material - Material id.\r\n   * @returns {Object} {desc, index, status} field desc contains rep description, index - index of correspondent rep,\r\n   * status - one of three strings: 'created', 'changed', ''. 'created' means new rep was created during this function,\r\n   * 'changed' - rep was changed during this function. '' - something else.\r\n   */\r\n  rep(index, rep) {\r\n    // if index is missing then it is the current\r\n    if (!rep && (index === undefined || index instanceof Object)) {\r\n      rep = index;\r\n      index = this.repCurrent();\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index > this._reprList.length) {\r\n      logger.error(`Rep ${index} does not exist!`);\r\n      return null;\r\n    }\r\n\r\n    // a special case of adding just after the end\r\n    if (index === this._reprList.length) {\r\n      const res = this.repAdd(rep);\r\n      logger.warn(`Rep ${index} does not exist! New representation was created.`);\r\n      return { desc: res.desc, index, status: 'created' };\r\n    }\r\n\r\n    // gather description\r\n    const target = this._reprList[index];\r\n    const desc = {\r\n      selector: target.selectorString,\r\n      mode: target.mode.identify(),\r\n      colorer: target.colorer.identify(),\r\n      material: target.materialPreset.id,\r\n    };\r\n\r\n    // modification is requested\r\n    if (rep) {\r\n      // modify\r\n      const diff = target.change(\r\n        rep,\r\n        this._complex,\r\n        lookupAndCreate(modes, rep.mode),\r\n        lookupAndCreate(colorers, rep.colorer),\r\n      );\r\n\r\n      // something was changed\r\n      if (!_.isEmpty(diff)) {\r\n        target.needsRebuild = true;\r\n        for (const key in diff) {\r\n          if (diff.hasOwnProperty(key)) {\r\n            desc[key] = diff[key];\r\n            logger.debug(`rep[${index}].${key} changed to ${diff[key]}`);\r\n          }\r\n        }\r\n\r\n        // safety trick: lower resolution for surface modes\r\n        if (diff.mode && target.mode.isSurface\r\n          && (settings.now.resolution === 'ultra' || settings.now.resolution === 'high')) {\r\n          logger.report('Surface resolution was changed to \"medium\" to avoid hang-ups.');\r\n          settings.set('resolution', 'medium');\r\n        }\r\n        return { desc, index, status: 'changed' };\r\n      }\r\n    }\r\n    return { desc, index, status: '' };\r\n  }\r\n\r\n  /**\r\n   * Get representation (not just description) by index.\r\n   * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n   * @returns {?object} Representation.\r\n   */\r\n  repGet(index) {\r\n    // if index is missing then it is the current\r\n    if (index === undefined || index instanceof Object) {\r\n      index = this.repCurrent();\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index >= this._reprList.length) {\r\n      return null;\r\n    }\r\n\r\n    return this._reprList[index];\r\n  }\r\n\r\n  _getFreeReprIdx() {\r\n    let bits = this._reprUsedBits;\r\n    for (let i = 0; i <= ComplexVisual.NUM_REPRESENTATION_BITS; ++i, bits >>= 1) {\r\n      if ((bits & 1) === 0) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Add new representation.\r\n   * @param {object=} rep - Representation description.\r\n   * @returns {Object} {desc, index} field desc contains added rep description, index - index of this rep.\r\n   */\r\n  repAdd(rep) {\r\n    if (this._reprList.length >= ComplexVisual.NUM_REPRESENTATION_BITS) {\r\n      return null;\r\n    }\r\n\r\n    const newSelectionBit = this._getFreeReprIdx();\r\n    if (newSelectionBit < 0) {\r\n      return null; // no more slots for representations\r\n    }\r\n\r\n    const originalSelection = this.buildSelectorFromMask(1 << this._selectionBit);\r\n\r\n    // Fill in default values\r\n    const def = settings.now.presets.default[0];\r\n    const desc = _.merge({\r\n      selector: def.selector,\r\n      mode: def.mode,\r\n      colorer: def.colorer,\r\n      material: def.material,\r\n    }, rep);\r\n\r\n    const selector = (typeof desc.selector === 'string') ? selectors.parse(desc.selector).selector : desc.selector;\r\n    const target = new Representation(\r\n      this._selectionBit,\r\n      lookupAndCreate(modes, desc.mode),\r\n      lookupAndCreate(colorers, desc.colorer),\r\n      selector,\r\n    );\r\n    target.selectorString = selector.toString();\r\n    target.setMaterialPreset(materials.get(desc.material));\r\n    target.markAtoms(this._complex);\r\n    this._reprList.push(target);\r\n\r\n    // change selection bit\r\n    this._selectionBit = newSelectionBit;\r\n    this._reprUsedBits |= 1 << this._selectionBit;\r\n\r\n    // restore selection using new selection bit\r\n    this._complex.markAtoms(originalSelection, 1 << this._selectionBit);\r\n\r\n    return { desc, index: this._reprList.length - 1 };\r\n  }\r\n\r\n  /**\r\n   * Remove representation.\r\n   * @param {number=} index - Zero-based representation index.\r\n   */\r\n  repRemove(index) {\r\n    if (index === undefined) {\r\n      index = this.repCurrent();\r\n    }\r\n\r\n    // catch out of bounds case\r\n    let count = this._reprList.length;\r\n    if (index < 0 || index >= count || count <= 1) { // do not allow to remove the single rep\r\n      return;\r\n    }\r\n\r\n    const target = this._reprList[index];\r\n    target.unmarkAtoms(this._complex);\r\n    this._reprUsedBits &= ~(1 << target.index);\r\n\r\n    this._reprList.splice(index, 1);\r\n\r\n    // update current rep\r\n    if (target === this._repr) {\r\n      --count;\r\n      index = index < count ? index : count - 1;\r\n      this._repr = this._reprList[index];\r\n    }\r\n    this._reprListChanged = true;\r\n  }\r\n\r\n  /**\r\n   * Hide representation.\r\n   * @param {number} index - Zero-based representation index.\r\n   * @param {boolean=} hide - Specify false to make rep visible, true to hide (by default).\r\n   */\r\n  repHide(index, hide) {\r\n    if (hide === undefined) {\r\n      hide = true;\r\n    }\r\n\r\n    // fail if out of bounds\r\n    if (index < 0 || index >= this._reprList.length) {\r\n      return;\r\n    }\r\n\r\n    const target = this._reprList[index];\r\n    target.show(!hide);\r\n  }\r\n\r\n  /**\r\n   * Select atoms with selector\r\n   * @param {Selector} selector - selector\r\n   * @param {boolean=} append - true to append selection atoms to current selection, false to rewrite selection\r\n   */\r\n  select(selector, append) {\r\n    if (append) {\r\n      this._selectionCount += this._complex.markAtomsAdditionally(selector, 1 << this._selectionBit);\r\n    } else {\r\n      this._selectionCount = this._complex.markAtoms(selector, 1 << this._selectionBit);\r\n    }\r\n    this._complex.updateStructuresMask();\r\n    this.rebuildSelectionGeometry();\r\n  }\r\n\r\n  resetSelectionMask() {\r\n    if (this._selectionCount !== 0) {\r\n      this._selectionCount = 0;\r\n      if (this._complex) {\r\n        this._complex.clearAtomBits(1 << this._selectionBit);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSelectionMask(pickedObj) {\r\n    const self = this;\r\n    const { atom } = pickedObj;\r\n    let { residue, chain, molecule } = pickedObj;\r\n    const setMask = 1 << this._selectionBit;\r\n    const clearMask = ~setMask;\r\n\r\n    if (atom) {\r\n      residue = atom.residue;\r\n      chain = residue._chain;\r\n      molecule = residue._molecule;\r\n\r\n      if (atom.mask & setMask) {\r\n        atom.mask &= clearMask;\r\n        residue._mask &= clearMask;\r\n        chain._mask &= clearMask;\r\n        if (molecule) {\r\n          molecule.mask &= clearMask;\r\n        }\r\n        this._selectionCount--;\r\n      } else {\r\n        atom.mask |= setMask;\r\n        this._selectionCount++;\r\n\r\n        // select residue if all atoms in it are selected\r\n        residue.collectMask();\r\n        // select chain and molecule if all residues in it are selected\r\n        chain.collectMask();\r\n        if (molecule) {\r\n          molecule.collectMask();\r\n        }\r\n      }\r\n    } else if (residue) {\r\n      chain = residue._chain;\r\n      molecule = residue._molecule;\r\n\r\n      if (residue._mask & setMask) {\r\n        residue._mask &= clearMask;\r\n        chain._mask &= clearMask;\r\n        residue.forEachAtom((a) => {\r\n          if (a.mask & setMask) {\r\n            a.mask &= clearMask;\r\n            self._selectionCount--;\r\n          }\r\n        });\r\n      } else {\r\n        residue._mask |= setMask;\r\n        residue.forEachAtom((a) => {\r\n          if (!(a.mask & setMask)) {\r\n            a.mask |= setMask;\r\n            self._selectionCount++;\r\n          }\r\n        });\r\n\r\n        // select chain and molecule if all residues in it are selected\r\n        chain.collectMask();\r\n        if (molecule) {\r\n          molecule.collectMask();\r\n        }\r\n      }\r\n    } else if (chain || molecule) {\r\n      const obj = chain || molecule;\r\n      if (obj._mask & setMask) {\r\n        obj._mask &= clearMask;\r\n        obj.forEachResidue((r) => {\r\n          if (r._mask & setMask) {\r\n            r._mask &= clearMask;\r\n            r.forEachAtom((a) => {\r\n              if (a.mask & setMask) {\r\n                a.mask &= clearMask;\r\n                self._selectionCount--;\r\n              }\r\n            });\r\n            r._mask &= clearMask;\r\n          }\r\n        });\r\n      } else {\r\n        obj._mask |= setMask;\r\n        obj.forEachResidue((r) => {\r\n          if (!(r._mask & setMask)) {\r\n            r._mask |= setMask;\r\n            r.forEachAtom((a) => {\r\n              if (!(a.mask & setMask)) {\r\n                a.mask |= setMask;\r\n                self._selectionCount++;\r\n              }\r\n            });\r\n            const otherObj = chain ? r.getMolecule() : r.getChain();\r\n            if (otherObj) {\r\n              otherObj.collectMask();\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.resetSelectionMask();\r\n    }\r\n  }\r\n\r\n  expandSelection() {\r\n    const self = this;\r\n    const selectionMask = 1 << this._selectionBit;\r\n    const tmpMask = 1 << 31;\r\n\r\n    // mark atoms to add\r\n    this._complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          bond._right.mask |= tmpMask;\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        bond._left.mask |= tmpMask;\r\n      }\r\n    });\r\n\r\n    // select marked atoms\r\n    const deselectionMask = ~tmpMask;\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & tmpMask) {\r\n        atom.mask = (atom.mask & deselectionMask) | selectionMask;\r\n        ++self._selectionCount;\r\n      }\r\n    });\r\n\r\n    this._complex.updateStructuresMask();\r\n  }\r\n\r\n  shrinkSelection() {\r\n    const self = this;\r\n    const selectionMask = 1 << this._selectionBit;\r\n    const tmpMask = 1 << 31;\r\n\r\n    // mark atoms neighbouring to unselected ones\r\n    this._complex.forEachBond((bond) => {\r\n      if (bond._left.mask & selectionMask) {\r\n        if ((bond._right.mask & selectionMask) === 0) {\r\n          bond._left.mask |= tmpMask;\r\n        }\r\n      } else if (bond._right.mask & selectionMask) {\r\n        bond._right.mask |= tmpMask;\r\n      }\r\n    });\r\n\r\n    // mark hanging atoms\r\n    this._complex.forEachAtom((atom) => {\r\n      if ((atom.mask & selectionMask) && (atom.bonds.length === 1)) {\r\n        atom.mask |= tmpMask;\r\n      }\r\n    });\r\n\r\n    // deselect marked atoms\r\n    const deselectionMask = ~(selectionMask | tmpMask);\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & tmpMask) {\r\n        atom.mask &= deselectionMask;\r\n        --self._selectionCount;\r\n      }\r\n    });\r\n\r\n    this._complex.updateStructuresMask();\r\n  }\r\n\r\n  getSelectedComponent() {\r\n    const selectionMask = 1 << this._selectionBit;\r\n\r\n    let component = null;\r\n    let multiple = false;\r\n\r\n    // find which component is selected (exclusively)\r\n    this._complex.forEachAtom((atom) => {\r\n      if (atom.mask & selectionMask) {\r\n        if (component === null) {\r\n          component = atom.residue._component;\r\n        } else if (component !== atom.residue._component) {\r\n          multiple = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    return multiple ? null : component;\r\n  }\r\n\r\n  getSelectionCenter(center, includesAtom, selRule) {\r\n    center.set(0.0, 0.0, 0.0);\r\n    let count = 0;\r\n\r\n    this._complex.forEachAtom((atom) => {\r\n      if (includesAtom(atom, selRule)) {\r\n        center.add(atom.position);\r\n        count++;\r\n      }\r\n    });\r\n    if (count === 0) {\r\n      return false;\r\n    }\r\n    center.divideScalar(count);\r\n    center.applyMatrix4(this.matrix);\r\n    return true;\r\n  }\r\n\r\n  needsRebuild() {\r\n    if (this._reprListChanged) {\r\n      return true;\r\n    }\r\n    const reprList = this._reprList;\r\n    for (let i = 0, n = reprList.length; i < n; ++i) {\r\n      const repr = reprList[i];\r\n      if (repr.needsRebuild) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Rebuild molecule geometry asynchronously.\r\n   */\r\n  rebuild() {\r\n    const self = this;\r\n\r\n    // Destroy current geometry\r\n    gfxutils.clearTree(this);\r\n\r\n    return new Promise(((resolve) => {\r\n      // Nothing to do?\r\n      const complex = self._complex;\r\n      if (!complex) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      let errorOccured = false;\r\n      setTimeout(() => {\r\n        console.time('build');\r\n        const reprList = self._reprList;\r\n        const palette = palettes.get(settings.now.palette) || palettes.first;\r\n        let hasGeometry = false;\r\n        for (let i = 0, n = reprList.length; i < n; ++i) {\r\n          const repr = reprList[i];\r\n          repr.colorer.palette = palette;\r\n\r\n          if (repr.needsRebuild) {\r\n            repr.reset();\r\n\r\n            try {\r\n              repr.buildGeometry(complex);\r\n            } catch (e) {\r\n              if (e instanceof utils.OutOfMemoryError) {\r\n                repr.needsRebuild = false;\r\n                repr.reset();\r\n                logger.error(`Not enough memory to build geometry for representation ${repr.index + 1}`);\r\n                errorOccured = true;\r\n              } else {\r\n                throw e;\r\n              }\r\n            }\r\n\r\n            if (DEBUG && !errorOccured) {\r\n              logger.debug(`Triangles count: ${meshutils.countTriangles(repr.geo)}`);\r\n            }\r\n          }\r\n\r\n          hasGeometry = errorOccured || hasGeometry || gfxutils.groupHasGeometryToRender(repr.geo);\r\n\r\n          if (repr.geo) {\r\n            self.add(repr.geo);\r\n          }\r\n        }\r\n\r\n        self._reprListChanged = false;\r\n\r\n        console.timeEnd('build');\r\n        resolve();\r\n      }, 10);\r\n    }));\r\n  }\r\n\r\n  setNeedsRebuild() {\r\n    // invalidate all representations\r\n    const reprList = this._reprList;\r\n    for (let i = 0, n = reprList.length; i < n; ++i) {\r\n      reprList[i].needsRebuild = true;\r\n    }\r\n  }\r\n\r\n  rebuildSelectionGeometry() {\r\n    const mask = 1 << this._selectionBit;\r\n\r\n    gfxutils.clearTree(this._selectionGeometry);\r\n\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const repr = this._reprList[i];\r\n      const sg = repr.buildSelectionGeometry(mask);\r\n      if (!sg) {\r\n        continue;\r\n      }\r\n\r\n      this._selectionGeometry.add(sg);\r\n      for (let j = 0; j < sg.children.length; j++) {\r\n        const m = sg.children[j];\r\n\r\n        // copy component transform (that's not applied yet)\r\n        // TODO make this code obsolete, accessing editor is bad\r\n        if (this._editor && this._editor._componentTransforms) {\r\n          const t = this._editor._componentTransforms[m._component._index];\r\n          if (t) {\r\n            m.position.copy(t.position);\r\n            m.quaternion.copy(t.quaternion);\r\n          }\r\n        }\r\n      }\r\n\r\n      gfxutils.applySelectionMaterial(sg);\r\n    }\r\n  }\r\n\r\n  _buildSelectorFromSortedLists(atoms, residues, chains) {\r\n    const complex = this._complex;\r\n\r\n    function optimizeList(list) {\r\n      const result = [];\r\n      let k = 0;\r\n      let first = NaN;\r\n      let last = NaN;\r\n      for (let i = 0, n = list.length; i < n; ++i) {\r\n        const value = list[i];\r\n        if (value === last + 1) {\r\n          last = value;\r\n        } else {\r\n          if (!Number.isNaN(first)) {\r\n            result[k++] = new selectors.Range(first, last);\r\n          }\r\n          first = last = value;\r\n        }\r\n      }\r\n      if (!Number.isNaN(first)) {\r\n        result[k] = new selectors.Range(first, last);\r\n      }\r\n      return result;\r\n    }\r\n\r\n    let expression = null;\r\n    if (chains.length === complex._chains.length) {\r\n      expression = selectors.all();\r\n    } else {\r\n      let selector;\r\n      if (chains.length > 0) {\r\n        selector = selectors.chain(chains);\r\n        expression = expression ? selectors.or(expression, selector) : selector;// NOSONAR\r\n      }\r\n      if (Object.keys(residues).length > 0) {\r\n        for (const ch in residues) {\r\n          if (residues.hasOwnProperty(ch)) {\r\n            selector = selectors.and(\r\n              selectors.chain(ch),\r\n              selectors.residx(optimizeList(residues[ch])),\r\n            );\r\n            expression = expression ? selectors.or(expression, selector) : selector;\r\n          }\r\n        }\r\n      }\r\n      if (atoms.length > 0) {\r\n        selector = selectors.serial(optimizeList(atoms));\r\n        expression = expression ? selectors.or(expression, selector) : selector;\r\n      }\r\n\r\n      if (!expression) {\r\n        expression = selectors.none();\r\n      }\r\n    }\r\n\r\n    return expression;\r\n  }\r\n\r\n  buildSelectorFromMask(mask) {\r\n    const complex = this._complex;\r\n    const chains = [];\r\n    const residues = {};\r\n    const atoms = [];\r\n\r\n    complex.forEachChain((chain) => {\r\n      if (chain._mask & mask) {\r\n        chains.push(chain._name);\r\n      }\r\n    });\r\n\r\n    complex.forEachResidue((residue) => {\r\n      if (residue._mask & mask && !(residue._chain._mask & mask)) {\r\n        const c = residue._chain._name;\r\n        if (!(c in residues)) {\r\n          residues[c] = [residue._index];\r\n        } else {\r\n          residues[c].push(residue._index);\r\n        }\r\n      }\r\n    });\r\n\r\n    complex.forEachAtom((atom) => {\r\n      if (atom.mask & mask && !(atom.residue._mask & mask)) {\r\n        atoms.push(atom.serial);\r\n      }\r\n    });\r\n\r\n    return this._buildSelectorFromSortedLists(atoms, residues, chains);\r\n  }\r\n\r\n  forSelectedResidues(process) {\r\n    const selectionMask = 1 << this._selectionBit;\r\n    this._complex.forEachResidue((residue) => {\r\n      if (residue._mask & selectionMask) {\r\n        process(residue);\r\n      }\r\n    });\r\n  }\r\n\r\n  beginComponentEdit() {\r\n    if (this._editor) {\r\n      return null;\r\n    }\r\n\r\n    const editor = new ComplexVisualEdit.ComponentEditor(this);\r\n    if (!editor.begin()) {\r\n      return null;\r\n    }\r\n\r\n    this._editor = editor;\r\n    return editor;\r\n  }\r\n\r\n  beginFragmentEdit() {\r\n    if (this._editor) {\r\n      return null;\r\n    }\r\n\r\n    const editor = new ComplexVisualEdit.FragmentEditor(this);\r\n    if (!editor.begin()) {\r\n      return null;\r\n    }\r\n\r\n    this._editor = editor;\r\n    return editor;\r\n  }\r\n\r\n  // should only be called by editors\r\n  finalizeEdit() {\r\n    this._editor = null;\r\n  }\r\n\r\n  setMaterialValues(values, needTraverse = false, process = undefined) {\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const rep = this._reprList[i];\r\n      rep.material.setValues(values);\r\n      if (needTraverse) {\r\n        rep.geo.traverse((object) => {\r\n          if (object instanceof THREE.Mesh) {\r\n            object.material.setValues(values);\r\n\r\n            if (process !== undefined) {\r\n              process(object);\r\n            }\r\n\r\n            object.material.needsUpdate = true;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  setUberOptions(values) {\r\n    for (let i = 0, n = this._reprList.length; i < n; ++i) {\r\n      const rep = this._reprList[i];\r\n      rep.material.setUberOptions(values);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build selector that contains all atoms within given distance from group of atoms\r\n   * @param {Selector} selector - selector describing source group of atoms\r\n   * @param {number} radius - distance\r\n   * @returns {Selector} selector describing result group of atoms\r\n   */\r\n  within(selector, radius) {\r\n    const vw = this._complex.getVoxelWorld();\r\n    if (vw === null) {\r\n      return false;\r\n    }\r\n\r\n    // mark atoms of the group as selected\r\n    const selectionMask = 1 << this._selectionBit;\r\n    this._complex.markAtoms(selector, selectionMask);\r\n\r\n    // mark all atoms within distance as selected\r\n    if (vw) {\r\n      vw.forEachAtomWithinDistFromMasked(this._complex, selectionMask, Number(radius), (atom) => {\r\n        atom.mask |= selectionMask;\r\n      });\r\n    }\r\n\r\n    // update selection count\r\n    this._selectionCount = this._complex.countAtomsByMask(selectionMask);\r\n\r\n    // update secondary structure mask\r\n    this._complex.updateStructuresMask();\r\n\r\n    return this.buildSelectorFromMask(selectionMask);\r\n  }\r\n}\r\n// 32 bits = 30 bits for reps + 1 for selection + 1 for selection expansion\r\nComplexVisual.NUM_REPRESENTATION_BITS = 30;\r\n\r\nexport default ComplexVisual;\r\n","/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport * as THREE from 'three';\r\nimport vertexVolumeFaces from './VolumeFaces.vert';\r\nimport fragmentVolumeFaces from './VolumeFaces.frag';\r\nimport vertexVolume from './Volume.vert';\r\nimport fragmentVolume from './Volume.frag';\r\nimport vertexFarPlane from './VolumeFarPlane.vert';\r\nimport fragmentFarPlane from './VolumeFarPlane.frag';\r\nimport settings from '../../settings';\r\n\r\nconst volumeUniforms = THREE.UniformsUtils.merge([\r\n  {\r\n    volumeDim: { type: 'v3', value: new THREE.Vector3(512, 512, 512) },\r\n    tileTex: { type: 't', value: null },\r\n    tileTexSize: { type: 'v2', value: new THREE.Vector2(512, 512) },\r\n    tileStride: { type: 'v2', value: new THREE.Vector2(512, 512) },\r\n\r\n    boxAngles: { type: 'v3', value: new THREE.Vector3(1, 1, 1) },\r\n    delta: { type: 'v3', value: new THREE.Vector3(0, 0, 0) },\r\n\r\n    _isoLevel0: { type: 'v2', value: new THREE.Vector3(0.5, 0.75, 1.0) },\r\n    _flipV: { type: 'f', value: 0.0 },\r\n    _BFLeft: { type: 't', value: null },\r\n    _BFRight: { type: 't', value: null },\r\n    _FFLeft: { type: 't', value: null },\r\n    _FFRight: { type: 't', value: null },\r\n    _WFFLeft: { type: 't', value: null },\r\n    _WFFRight: { type: 't', value: null },\r\n  },\r\n]);\r\n\r\nfunction overrideUniforms(params, defUniforms) {\r\n  const uniforms = THREE.UniformsUtils.clone(defUniforms);\r\n  for (const p in params) {\r\n    if (uniforms.hasOwnProperty(p)) {\r\n      uniforms[p].value = params[p];\r\n    }\r\n  }\r\n  return uniforms;\r\n}\r\n\r\nfunction facesPosMaterialParams(params, sideType) {\r\n  return {\r\n    uniforms: overrideUniforms(params, {}),\r\n    vertexShader: vertexVolumeFaces,\r\n    fragmentShader: fragmentVolumeFaces,\r\n    transparent: false,\r\n    depthTest: false,\r\n    depthWrite: false,\r\n    side: sideType,\r\n  };\r\n}\r\n\r\nclass BackFacePosMaterial extends THREE.ShaderMaterial {\r\n  constructor(params) {\r\n    const backFaceParams = facesPosMaterialParams(params, THREE.BackSide);\r\n    super(backFaceParams);\r\n  }\r\n}\r\n\r\nclass ShaderParams {\r\n  constructor(params, uniforms, vertexShader, fragmentShader) {\r\n    this.uniforms = overrideUniforms(params, uniforms);\r\n    this.vertexShader = vertexShader;\r\n    this.fragmentShader = fragmentShader;\r\n    this.transparent = false;\r\n    this.depthTest = false;\r\n    this.depthWrite = false;\r\n    this.side = THREE.FrontSide;\r\n  }\r\n}\r\n\r\nclass BackFacePosMaterialFarPlane extends THREE.ShaderMaterial {\r\n  constructor(params) {\r\n    const matUniforms = THREE.UniformsUtils.merge([\r\n      {\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        farZ: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        matWorld2Volume: { type: '4fv', value: new THREE.Matrix4() },\r\n      },\r\n    ]);\r\n\r\n    const shaderParams = new ShaderParams(params, matUniforms, vertexFarPlane, fragmentFarPlane);\r\n    super(shaderParams);\r\n  }\r\n}\r\n\r\nclass FrontFacePosMaterial extends THREE.ShaderMaterial {\r\n  constructor(params) {\r\n    const frontFaceParams = facesPosMaterialParams(params, THREE.FrontSide);\r\n    super(frontFaceParams);\r\n  }\r\n}\r\n\r\nclass VolumeMaterial extends THREE.ShaderMaterial {\r\n  constructor(params) {\r\n    const shaderParams = new ShaderParams(params, volumeUniforms, vertexVolume, fragmentVolume);\r\n    shaderParams.transparent = true;\r\n    shaderParams.depthTest = true;\r\n\r\n    super(shaderParams);\r\n    this.updateDefines();\r\n  }\r\n\r\n  updateDefines() {\r\n    this.defines = {\r\n      ISO_MODE: settings.now.modes.VD.isoMode,\r\n      STEPS_COUNT: settings.now.modes.VD.polyComplexity[settings.now.resolution] * 100,\r\n    };\r\n    this.needsUpdate = true;\r\n  }\r\n}\r\n\r\nexport default {\r\n  BackFacePosMaterial,\r\n  BackFacePosMaterialFarPlane,\r\n  FrontFacePosMaterial,\r\n  VolumeMaterial,\r\n};\r\n","import * as THREE from 'three';\r\nimport VolumeMaterial from './shaders/VolumeMaterial';\r\nimport settings from '../settings';\r\n\r\nclass VolumeMesh extends THREE.Mesh {\r\n  volumeInfo = {}; // data for noise filter\r\n\r\n  constructor() {\r\n    const geo = new THREE.BufferGeometry();\r\n    super(geo);\r\n    this.clipPlane = new THREE.Plane();\r\n    const size = new THREE.Vector3(0.5, 0.5, 0.5);\r\n    this.size = size;\r\n\r\n    this.cullFlag = [\r\n      true, true, true, true,\r\n      true, true, true, true,\r\n      false, false, false, false, false, false,\r\n    ];\r\n\r\n    this.faces = [\r\n      { indices: [], norm: new THREE.Vector3(0, 0, -1) },\r\n      { indices: [], norm: new THREE.Vector3(0, 0, 1) },\r\n      { indices: [], norm: new THREE.Vector3(0, -1, 0) },\r\n      { indices: [], norm: new THREE.Vector3(0, 1, 0) },\r\n      { indices: [], norm: new THREE.Vector3(-1, 0, 0) },\r\n      { indices: [], norm: new THREE.Vector3(1, 0, 0) },\r\n      { indices: [], norm: new THREE.Vector3(0, 0, 0) },\r\n    ];\r\n\r\n    this.vertices = [\r\n      new THREE.Vector3(-size.x, -size.y, -size.z),\r\n      new THREE.Vector3(-size.x, size.y, -size.z),\r\n      new THREE.Vector3(size.x, -size.y, -size.z),\r\n      new THREE.Vector3(size.x, size.y, -size.z),\r\n      new THREE.Vector3(-size.x, -size.y, size.z),\r\n      new THREE.Vector3(-size.x, size.y, size.z),\r\n      new THREE.Vector3(size.x, -size.y, size.z),\r\n      new THREE.Vector3(size.x, size.y, size.z),\r\n      new THREE.Vector3(0.0, 0.0, 0.0), // Placeholder for section\r\n      new THREE.Vector3(0.0, 0.0, 0.0),\r\n      new THREE.Vector3(0.0, 0.0, 0.0),\r\n      new THREE.Vector3(0.0, 0.0, 0.0),\r\n      new THREE.Vector3(0.0, 0.0, 0.0),\r\n      new THREE.Vector3(0.0, 0.0, 0.0),\r\n    ];\r\n\r\n    geo.setAttribute('position', new THREE.BufferAttribute(new Float32Array(this.vertices.length * 3), 3));\r\n\r\n    this.name = 'VolumeMesh';\r\n  }\r\n\r\n  static _corners = [\r\n    // x, y, z, edge1, edge2, edge3\r\n    [-1, -1, -1, 0, 4, 8],\r\n    [1, -1, -1, 0, 5, 9],\r\n    [1, 1, -1, 1, 5, 10],\r\n    [-1, 1, -1, 1, 4, 11],\r\n    [-1, -1, 1, 2, 6, 8],\r\n    [1, -1, 1, 2, 7, 9],\r\n    [1, 1, 1, 3, 7, 10],\r\n    [-1, 1, 1, 3, 6, 11],\r\n  ];\r\n\r\n  static _edges = [\r\n    // corner1, corner2, center_x, center_y, center_z\r\n    [0, 1, 0, -1, -1],\r\n    [2, 3, 0, 1, -1],\r\n    [4, 5, 0, -1, 1],\r\n    [6, 7, 0, 1, 1],\r\n    [0, 3, -1, 0, -1],\r\n    [1, 2, 1, 0, -1],\r\n    [4, 7, -1, 0, 1],\r\n    [5, 6, 1, 0, 1],\r\n    [0, 4, -1, -1, 0],\r\n    [1, 5, 1, -1, 0],\r\n    [2, 6, -1, 1, 0],\r\n    [3, 7, 1, 1, 0],\r\n  ];\r\n\r\n  static _edgeIntersections = (function () {\r\n    const edgeIntersections = [];\r\n    for (let j = 0; j < 12; ++j) {\r\n      edgeIntersections.push(new THREE.Vector3());\r\n    }\r\n    return edgeIntersections;\r\n  }());\r\n\r\n  _updateVertices() {\r\n    // Algorithm:\r\n    // 1. Get plane parameters\r\n    // 2. Compute culling flags for all vertices\r\n    // 3. If intersection occurs => compute from 3 to 6 intersection points\r\n    const corners = VolumeMesh._corners;\r\n    const edges = VolumeMesh._edges;\r\n    const edgeIntersections = VolumeMesh._edgeIntersections;\r\n\r\n    let i;\r\n\r\n    const norm = this.clipPlane.normal;\r\n    const D = this.clipPlane.constant;\r\n\r\n    const vert = this.vertices;\r\n    const { size } = this;\r\n\r\n    const cornerMark = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    const edgeMark = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\r\n\r\n    const curEdge = new THREE.Vector3();\r\n    let curEdgeInter = null;\r\n\r\n    function CheckX() {\r\n      if (norm.x === 0) return 0;\r\n      const x = -(norm.dot(curEdge) + D) / norm.x;\r\n      if (-size.x <= x && x <= size.x) {\r\n        curEdgeInter.set(x, curEdge.y, curEdge.z);\r\n        if (x === size.x) return 2;\r\n        if (x === -size.x) return -2;\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    function CheckY() {\r\n      if (norm.y === 0) return 0;\r\n      const y = -(norm.dot(curEdge) + D) / norm.y;\r\n      if (-size.y <= y && y <= size.y) {\r\n        curEdgeInter.set(curEdge.x, y, curEdge.z);\r\n        if (y === size.y) return 2;\r\n        if (y === -size.y) return -2;\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    function CheckZ() {\r\n      if (norm.z === 0) return 0;\r\n      const z = -(norm.dot(curEdge) + D) / norm.z;\r\n      if (-size.z <= z && z <= size.z) {\r\n        curEdgeInter.set(curEdge.x, curEdge.y, z);\r\n        if (z === size.z) return 2;\r\n        if (z === -size.z) return -2;\r\n        return 1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    // for each edge\r\n    for (let curEdgeIdx = 0; curEdgeIdx < 12; ++curEdgeIdx) {\r\n      const curEdgeSource = edges[curEdgeIdx];\r\n      curEdgeInter = edgeIntersections[curEdgeIdx];\r\n\r\n      curEdge.set(curEdgeSource[2], curEdgeSource[3], curEdgeSource[4]);\r\n      curEdge.multiply(size);\r\n\r\n      // calculate intersection point\r\n      let flag = 0;\r\n      if (curEdgeSource[2] === 0) flag = CheckX();\r\n      if (curEdgeSource[3] === 0) flag = CheckY();\r\n      if (curEdgeSource[4] === 0) flag = CheckZ();\r\n\r\n      // mark corresponding corner (if plane cuts through one)\r\n      if (flag === -2) {\r\n        cornerMark[curEdgeSource[0]] = 1;\r\n      } else if (flag === 2) {\r\n        cornerMark[curEdgeSource[1]] = 1;\r\n      } else if (flag === 0) {\r\n        // edge is not intersected by the plane (doesn't produce a vertex)\r\n        edgeMark[curEdgeIdx] = 0;\r\n      }\r\n    }\r\n\r\n    const face = {\r\n      indices: [],\r\n      norm: norm.clone().negate(),\r\n    };\r\n\r\n    let nextVertex = 8;\r\n\r\n    // for each marked corner\r\n    for (i = 0; i < 8; ++i) {\r\n      if (cornerMark[i] === 1) {\r\n        // add corner as vertex to the face\r\n        vert[nextVertex].set(corners[i][0], corners[i][1], corners[i][2]).multiply(size);\r\n        face.indices.push(nextVertex++);\r\n        // skip adjacent edges\r\n        edgeMark[corners[i][3]] = 0;\r\n        edgeMark[corners[i][4]] = 0;\r\n        edgeMark[corners[i][5]] = 0;\r\n      }\r\n    }\r\n\r\n    // for each edge that has internal intersection\r\n    for (i = 0; i < 12; ++i) {\r\n      if (edgeMark[i] === 1) {\r\n        // add intersection point as vertex to the face\r\n        vert[nextVertex].copy(edgeIntersections[i]);\r\n        face.indices.push(nextVertex++);\r\n      }\r\n    }\r\n\r\n    this.faces[6] = face;\r\n\r\n    const diff = new THREE.Vector3();\r\n    const coplanarPoint = new THREE.Vector3();\r\n    this.clipPlane.coplanarPoint(coplanarPoint);\r\n    for (i = 0; i < vert.length; ++i) {\r\n      this.cullFlag[i] = false;\r\n      if (i < 8) {\r\n        // corners should be culled by clipping plane\r\n        diff.subVectors(vert[i], coplanarPoint);\r\n        this.cullFlag[i] = (norm.dot(diff) >= 0.0);\r\n      } else if (i < 8 + face.indices.length) {\r\n        // cross section vertices don't get culled\r\n        this.cullFlag[i] = true;\r\n      }\r\n    }\r\n\r\n    // write data to vertex buffer\r\n    const positions = this.geometry.getAttribute('position');\r\n    let idx = 0;\r\n    for (i = 0; i < vert.length; ++i) {\r\n      positions.array[idx++] = vert[i].x;\r\n      positions.array[idx++] = vert[i].y;\r\n      positions.array[idx++] = vert[i].z;\r\n    }\r\n    positions.needsUpdate = true;\r\n  }\r\n\r\n  _collectVertices(face, filter) {\r\n    let i;\r\n    const vert = this.vertices;\r\n    face.indices = [];\r\n    for (i = 0; i < vert.length; ++i) {\r\n      if (this.cullFlag[i] && filter(vert[i])) {\r\n        face.indices.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  _sortIndices(face, right) {\r\n    let i;\r\n    let j;\r\n    const vert = this.vertices;\r\n    const angle = [];\r\n\r\n    const dir = new THREE.Vector3();\r\n    for (i = 1; i < face.indices.length; ++i) {\r\n      dir.subVectors(vert[face.indices[i]], vert[face.indices[0]]);\r\n      dir.normalize();\r\n      dir.cross(right);\r\n      dir.negate();\r\n      angle[i] = face.norm.dot(dir);\r\n    }\r\n\r\n    // Exchange sort\r\n    for (i = 1; i < face.indices.length - 1; ++i) {\r\n      for (j = i + 1; j < face.indices.length; ++j) {\r\n        if (angle[j] < angle[i]) {\r\n          // swap\r\n          let t = angle[i];\r\n          angle[i] = angle[j];\r\n          angle[j] = t;\r\n\r\n          t = face.indices[i];\r\n          face.indices[i] = face.indices[j];\r\n          face.indices[j] = t;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateIndices() {\r\n    // Algorithm:\r\n    // 1. Get plane vertices (from 3 to 6 vertices)\r\n    // 2. Get \"right\" vector in plane\r\n    // 3. Sort vertices using Graham-like method\r\n    // 4. Create indices\r\n\r\n    let i;\r\n    let faceIdx;\r\n    let face;\r\n    const vert = this.vertices;\r\n    const { size } = this;\r\n\r\n    this._collectVertices(this.faces[0], (vertex) => vertex.z === -size.z);\r\n    this._collectVertices(this.faces[1], (vertex) => vertex.z === size.z);\r\n    this._collectVertices(this.faces[2], (vertex) => vertex.y === -size.y);\r\n    this._collectVertices(this.faces[3], (vertex) => vertex.y === size.y);\r\n    this._collectVertices(this.faces[4], (vertex) => vertex.x === -size.x);\r\n    this._collectVertices(this.faces[5], (vertex) => vertex.x === size.x);\r\n\r\n    const vCenter = new THREE.Vector3();\r\n    const vRight = new THREE.Vector3();\r\n    const vDir = new THREE.Vector3();\r\n\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx];\r\n\r\n      if (face.indices.length === 0) continue;\r\n\r\n      vCenter.set(0, 0, 0);\r\n      for (i = 0; i < face.indices.length; ++i) {\r\n        vCenter.add(vert[face.indices[i]]);\r\n      }\r\n      vCenter.multiplyScalar(1.0 / face.indices.length);\r\n      vRight.subVectors(vert[face.indices[0]], vCenter);\r\n      vRight.normalize();\r\n\r\n      const rightProj = [];\r\n      for (i = 0; i < face.indices.length; ++i) {\r\n        vDir.subVectors(vert[face.indices[i]], vCenter);\r\n        rightProj[i] = vDir.dot(vRight);\r\n      }\r\n      for (i = 1; i < face.indices.length; ++i) {\r\n        if (rightProj[i] < rightProj[0]) {\r\n          // swap\r\n          let t = rightProj[0];\r\n          rightProj[0] = rightProj[i];\r\n          rightProj[i] = t;\r\n\r\n          [t] = face.indices;\r\n          face.indices[0] = face.indices[i];\r\n          face.indices[i] = t;\r\n        }\r\n      }\r\n\r\n      this._sortIndices(face, vRight);\r\n    }\r\n\r\n    let numIndices = 0;\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx];\r\n      if (face.indices.length >= 3) {\r\n        numIndices += 3 * (face.indices.length - 2);\r\n      }\r\n    }\r\n    let offset = 0;\r\n    const indices = new Uint16Array(numIndices);\r\n    for (faceIdx = 0; faceIdx < this.faces.length; ++faceIdx) {\r\n      face = this.faces[faceIdx];\r\n      for (i = 0; i < face.indices.length - 2; ++i) {\r\n        indices[offset] = face.indices[0]; // eslint-disable-line prefer-destructuring\r\n        indices[offset + 1] = face.indices[i + 1];\r\n        indices[offset + 2] = face.indices[i + 2];\r\n        offset += 3;\r\n      }\r\n    }\r\n\r\n    this.geometry.setIndex(new THREE.BufferAttribute(indices, 1));\r\n  }\r\n\r\n  setDataSource(dataSource) {\r\n    const vm = new VolumeMaterial.VolumeMaterial();\r\n    const dim = dataSource.getDimensions();\r\n    const stride = dataSource.getTiledTextureStride();\r\n    const texture = dataSource.buildTiledTexture();\r\n    const bbox = dataSource.getBox();\r\n    vm.uniforms.volumeDim.value.set(dim[0], dim[1], dim[2]);\r\n    vm.uniforms.tileTex.value = texture;\r\n    vm.uniforms.tileTexSize.value.set(texture.image.width, texture.image.height);\r\n    vm.uniforms.tileStride.value.set(stride[0], stride[1]);\r\n    Object.assign(this.volumeInfo, dataSource.getVolumeInfo());\r\n\r\n    const volInfo = this.volumeInfo;\r\n    vm.uniforms.delta.value.copy(volInfo.delta);\r\n    vm.uniforms.boxAngles.value.set(volInfo.obtuseAngle[0], volInfo.obtuseAngle[1], volInfo.obtuseAngle[2]);\r\n\r\n    this.material = vm;\r\n\r\n    bbox.getSize(this.scale);\r\n    bbox.getCenter(this.position);\r\n  }\r\n\r\n  _updateIsoLevel() {\r\n    const { kSigma, kSigmaMed, kSigmaMax } = settings.now.modes.VD;\r\n    const volInfo = this.volumeInfo;\r\n    const mean = volInfo.dmean - volInfo.dmin;\r\n    const span = volInfo.dmax - volInfo.dmin;\r\n    const level = (k) => (mean + k * volInfo.sd) / span;\r\n    this.material.uniforms._isoLevel0.value.set(level(kSigma), level(kSigmaMed), level(kSigmaMax));\r\n  }\r\n\r\n  static _nearClipPlaneOffset = 0.2;\r\n\r\n  static _pos = new THREE.Vector3();\r\n\r\n  static _norm = new THREE.Vector3();\r\n\r\n  static _norm4D = new THREE.Vector4();\r\n\r\n  static _matrixWorldToLocal = new THREE.Matrix4();\r\n\r\n  static _clipPlane = new THREE.Plane();\r\n\r\n  rebuild(camera) {\r\n    const nearClipPlaneOffset = VolumeMesh._nearClipPlaneOffset;\r\n    const pos = VolumeMesh._pos;\r\n    const norm = VolumeMesh._norm;\r\n    const norm4D = VolumeMesh._norm4D;\r\n    const matrixWorldToLocal = VolumeMesh._matrixWorldToLocal;\r\n    const clipPlane = VolumeMesh._clipPlane;\r\n\r\n    this._updateIsoLevel();\r\n\r\n    // get clip plane in local space\r\n    camera.getWorldDirection(norm);\r\n    camera.getWorldPosition(pos);\r\n    pos.addScaledVector(norm, camera.near + nearClipPlaneOffset);\r\n\r\n    // transform pos to local CS\r\n    matrixWorldToLocal.copy(this.matrixWorld).invert();\r\n    pos.applyMatrix4(matrixWorldToLocal);\r\n\r\n    // transform norm to local CS\r\n    norm4D.set(norm.x, norm.y, norm.z, 0.0); // NOTE: use homogeneous norm for proper transformation\r\n    norm4D.applyMatrix4(matrixWorldToLocal);\r\n    norm.copy(norm4D);\r\n    norm.normalize();\r\n\r\n    clipPlane.setFromNormalAndCoplanarPoint(norm, pos);\r\n\r\n    if (!this.clipPlane.equals(clipPlane)) {\r\n      this.clipPlane = clipPlane.clone();\r\n      this._updateVertices();\r\n      this._updateIndices();\r\n    }\r\n  }\r\n}\r\n\r\nexport default VolumeMesh;\r\n","import * as THREE from 'three';\r\nimport gfxutils from './gfxutils';\r\n\r\nfunction _flattenArray(input) {\r\n  const n = input.length;\r\n  const output = new Float32Array(n * 3);\r\n  for (let i = 0; i < n; ++i) {\r\n    const j = 3 * i;\r\n    const v = input[i];\r\n    output[j] = v.x;\r\n    output[j + 1] = v.y;\r\n    output[j + 2] = v.z;\r\n  }\r\n  return output;\r\n}\r\n\r\nclass VolumeBounds {\r\n  static _projectionTable = { // corresponds between (origin axes and angles between them) and between saving vector coordinates\r\n    XY: ['x', 2],\r\n    XZ: ['y', 1],\r\n    YZ: ['z', 0],\r\n  };\r\n\r\n  constructor(bBox, volInfo) {\r\n    const { delta } = volInfo; // {x: XY, y : XZ, z: YZ}\r\n    const { obtuseAngle } = volInfo; // 1 - obtuse, 0 - acute\r\n\r\n    const bSize = new THREE.Vector3();\r\n    bBox.getSize(bSize);\r\n    bSize.multiplyScalar(0.5);\r\n\r\n    const offsetVert = this._getBaseVertices(delta, obtuseAngle);\r\n\r\n    const geometry = new THREE.BufferGeometry();\r\n    const vertices = [];\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      vertices.push(offsetVert[i].clone().multiply(bSize));\r\n      vertices.push(offsetVert[(i + 1) % 4].clone().multiply(bSize));\r\n    }\r\n    const translation = new THREE.Vector3(2 * bSize.x * (1 - delta.x - delta.y), 0, 0);\r\n    for (let i = 0; i < 8; i++) {\r\n      vertices.push(vertices[i].clone().add(translation));\r\n    }\r\n    for (let i = 0; i < 4; i++) {\r\n      vertices.push(vertices[i * 2].clone());\r\n      vertices.push(vertices[i * 2 + 8].clone());\r\n    }\r\n    const center = new THREE.Vector3();\r\n    bBox.getCenter(center);\r\n    vertices.forEach((vertex) => vertex.add(center)); // pivot shift\r\n\r\n    const flatVertices = _flattenArray(vertices);\r\n    geometry.setAttribute('position', new THREE.BufferAttribute(flatVertices, 3));\r\n\r\n    this._lines = new THREE.LineSegments(geometry, new THREE.LineBasicMaterial({ color: 0xFFFFFF }));\r\n    this._lines.layers.set(gfxutils.LAYERS.VOLUME);\r\n  }\r\n\r\n  // Set one edge (4 points) of frame, from which with parallel transfer  the rest of the frame points can be obtained\r\n  _getBaseVertices(delta, obtuseAngle) {\r\n    const projTable = VolumeBounds._projectionTable;\r\n\r\n    const proj = ((index, inv) => { // tricky function to take account of projections: their position(related to box) and sign\r\n      const currDelta = delta[projTable[index][0]];\r\n      const angleValue = -0.5 * (inv - 1) + inv * obtuseAngle[projTable[index][1]];// inv = 1: alpha; inv = -1: 1 - alpha\r\n      return angleValue * currDelta;\r\n    });\r\n\r\n    const offsetVert = [\r\n      new THREE.Vector3(-1 + 2 * (proj('XZ', 1) + proj('XY', 1)), -1 + 2 * proj('YZ', 1), -1),\r\n      new THREE.Vector3(-1 + 2 * (proj('XZ', -1) + proj('XY', 1)), -1 + 2 * proj('YZ', -1), 1),\r\n      new THREE.Vector3(-1 + 2 * (proj('XZ', -1) + proj('XY', -1)), 1 - 2 * proj('YZ', 1), 1),\r\n      new THREE.Vector3(-1 + 2 * (proj('XZ', 1) + proj('XY', -1)), 1 - 2 * proj('YZ', -1), -1),\r\n    ];\r\n\r\n    return offsetVert;\r\n  }\r\n\r\n  getMesh() {\r\n    return this._lines;\r\n  }\r\n}\r\n\r\nexport default VolumeBounds;\r\n","import * as THREE from 'three';\r\nimport VolumeMaterial from './shaders/VolumeMaterial';\r\nimport meshes from './meshes/meshes';\r\nimport gfxutils from './gfxutils';\r\n\r\n// Thes geometric far plane is required for correct filling in the BFTexture in case, when far plane cuts the volume\r\n// cube. In cut place of cube there is no correct data in BFTexture and volume rendering integral is calculated\r\n// with errors.\r\n// Far plane cuts the cube in case of large volume scale (zoom), because farplane doesn't change\r\nclass VolumeFarPlane {\r\n  // create plane with unit corners coords (for future rescale in vshader according to camera properties)\r\n  constructor(volume, width, height) {\r\n    const planeGeo = this._initPlaneGeo(width, height);\r\n\r\n    const mat = new VolumeMaterial.BackFacePosMaterialFarPlane();\r\n    this._plane = new meshes.Mesh(planeGeo, mat);\r\n    this._plane.frustumCulled = false;\r\n    this._plane.doubleSided = true;\r\n    const matWorldToVolume = new THREE.Matrix4();\r\n\r\n    this._plane._onBeforeRender = function (_renderer, _scene, camera, _geometry, _material, _group) {\r\n      const { material } = this;\r\n      if (!volume || !material) {\r\n        return;\r\n      }\r\n\r\n      // count point in world at farplane place\r\n      const planeCamPos = new THREE.Vector4(0, 0, -(camera.far - 0.1), 1);\r\n      planeCamPos.applyMatrix4(camera.matrixWorld);\r\n\r\n      // recalc matrices to make plane be placed as farplane in the World relative to camera\r\n      this.matrix.identity();\r\n      this.matrix.makeTranslation(planeCamPos.x, planeCamPos.y, planeCamPos.z);\r\n      this.matrixWorld.copy(this.matrix);\r\n      this.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, this.matrixWorld);\r\n      this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\r\n\r\n      // build worldToVolume matrix to transform plane into volumeCS (volumeCS coords are written to BackFaceTexture)\r\n      const volumeMatrix = volume.matrixWorld;\r\n      matWorldToVolume.copy(volumeMatrix).invert();\r\n\r\n      // update material props\r\n      material.uniforms.aspectRatio.value = camera.aspect;\r\n      material.uniforms.farZ.value = camera.far;\r\n      material.uniforms.tanHalfFOV.value = Math.tan(THREE.MathUtils.DEG2RAD * 0.5 * camera.fov);\r\n      material.uniforms.matWorld2Volume.value = matWorldToVolume;\r\n    };\r\n\r\n    // set it to special layer to draw only into BFTexture\r\n    this._plane.layers.set(gfxutils.LAYERS.VOLUME_BFPLANE);\r\n  }\r\n\r\n  _initPlaneGeo(width, height) {\r\n    const planeGeo = new THREE.BufferGeometry();\r\n\r\n    width = width || 1;\r\n    height = height || 1;\r\n\r\n    const vertices = new Float32Array([\r\n      -0.5 * width, 0.5 * height, 0,\r\n      0.5 * width, 0.5 * height, 0,\r\n      -0.5 * width, -0.5 * height, 0,\r\n      0.5 * width, -0.5 * height, 0,\r\n    ]);\r\n\r\n    planeGeo.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n    planeGeo.setIndex([0, 2, 1, 2, 3, 1]);\r\n\r\n    return planeGeo;\r\n  }\r\n\r\n  getMesh() {\r\n    return this._plane;\r\n  }\r\n}\r\n\r\nexport default VolumeFarPlane;\r\n","import * as THREE from 'three';\r\nimport VolumeMesh from './gfx/VolumeMesh';\r\nimport VolumeBounds from './gfx/VolumeBounds';\r\nimport VolumeFarPlane from './gfx/VolumeFarPlane';\r\nimport Visual from './Visual';\r\nimport settings from './settings';\r\n\r\nclass VolumeVisual extends Visual {\r\n  constructor(name, dataSource) {\r\n    super(name, dataSource);\r\n    this._mesh = new VolumeMesh();\r\n    this._mesh.setDataSource(dataSource);\r\n    this.add(this._mesh);\r\n\r\n    this._frame = new VolumeBounds(this.getBoundaries().boundingBox, this._mesh.volumeInfo);\r\n    this.add(this._frame.getMesh());\r\n    this.showFrame(settings.now.modes.VD.frame);\r\n\r\n    this._farPlane = new VolumeFarPlane(this._mesh, 2, 2);\r\n    this.add(this._farPlane.getMesh());\r\n  }\r\n\r\n  getBoundaries() {\r\n    const box = this._dataSource.getBox();\r\n    const sphere = new THREE.Sphere();\r\n    box.getBoundingSphere(sphere);\r\n\r\n    return {\r\n      boundingBox: box,\r\n      boundingSphere: sphere,\r\n    };\r\n  }\r\n\r\n  getMesh() {\r\n    return this._mesh;\r\n  }\r\n\r\n  showFrame(needShow) {\r\n    this._frame.getMesh().material.visible = needShow;\r\n  }\r\n}\r\n\r\nexport default VolumeVisual;\r\n","import EntityList from '../../utils/EntityList';\r\n\r\n/**\r\n * A list of available loaders.\r\n * @extends EntityList\r\n */\r\nclass LoaderList extends EntityList {\r\n  /**\r\n   * Create a list of loaders.\r\n   * The loaders are indexed by supported source types (`.types` property of a Loader\r\n   * subclass).\r\n   * The loaders can be retrieved later by matching against specs (see {@link LoaderList#find}).\r\n   *\r\n   * @param {!Array<function(new:Loader)>=} someLoaders A list of {@link Loader} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see LoaderList#register\r\n   */\r\n  constructor(someLoaders = []) {\r\n    super(someLoaders, ['types']);\r\n  }\r\n\r\n  /**\r\n   * Find a suitable loader for a source type.\r\n   *\r\n   * @param {Object} specs Loader specifications.\r\n   * @param {string=} specs.type Supported source type.\r\n   * @param {*=} specs.source Source to load from.\r\n   */\r\n  find(specs) {\r\n    let list = [];\r\n    if (specs.type) {\r\n      list = this._dict.types[specs.type.toLowerCase()] || [];\r\n    } else if (specs.source) {\r\n      return this._list.filter((SomeLoader) => SomeLoader.canProbablyLoad && SomeLoader.canProbablyLoad(specs.source));\r\n    }\r\n    return [...list];\r\n  }\r\n}\r\n\r\nexport default LoaderList;\r\n","import EventDispatcher from '../../utils/EventDispatcher';\r\nimport makeContextDependent from '../../utils/makeContextDependent';\r\n\r\nexport default class Loader extends EventDispatcher {\r\n  constructor(source, options) {\r\n    super();\r\n    this._source = source;\r\n    this._options = options || {};\r\n    this._abort = false;\r\n    this._agent = null;\r\n  }\r\n\r\n  load() {\r\n    return Promise.reject(new Error('Loading from this source is not implemented'));\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true;\r\n    if (this._agent) {\r\n      this._agent.abort();\r\n    }\r\n  }\r\n\r\n  static extractName(_source) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nmakeContextDependent(Loader.prototype);\r\n","import Loader from './Loader';\r\n\r\nexport default class FileLoader extends Loader {\r\n  constructor(source, options) {\r\n    super(source, options);\r\n\r\n    options = this._options;\r\n    this._binary = options.binary === true;\r\n  }\r\n\r\n  load() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted');\r\n      }\r\n\r\n      const blob = this._source;\r\n      const reader = this._agent = new FileReader();\r\n\r\n      reader.addEventListener('load', () => {\r\n        resolve(reader.result);\r\n      });\r\n      reader.addEventListener('error', () => {\r\n        reject(reader.error);\r\n      });\r\n      reader.addEventListener('abort', () => {\r\n        reject(new Error('Loading aborted'));\r\n      });\r\n      reader.addEventListener('progress', (event) => {\r\n        this.dispatchEvent(event);\r\n      });\r\n\r\n      if (this._binary) {\r\n        reader.readAsArrayBuffer(blob);\r\n      } else {\r\n        reader.readAsText(blob);\r\n      }\r\n    });\r\n  }\r\n\r\n  static canProbablyLoad(source) {\r\n    return (File && source instanceof File) || (Blob && source instanceof Blob);\r\n  }\r\n\r\n  static extractName(source) {\r\n    return source && source.name;\r\n  }\r\n}\r\n\r\nFileLoader.types = ['file', 'blob'];\r\n","import _ from 'lodash';\r\nimport Loader from './Loader';\r\n\r\n// we don't need to detect all kinds of URLs, just the evident ones\r\nconst urlStartRegexp = /^(https?|ftp):\\/\\//i;\r\n\r\nexport default class XHRLoader extends Loader {\r\n  constructor(source, options) {\r\n    super(source, options);\r\n\r\n    options = this._options;\r\n    this._binary = (options.binary === true);\r\n  }\r\n\r\n  load() {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted');\r\n      }\r\n\r\n      const url = this._source;\r\n      const request = this._agent = new XMLHttpRequest();\r\n\r\n      request.addEventListener('load', () => {\r\n        if (request.status === 200) {\r\n          resolve(request.response);\r\n        } else {\r\n          reject(new Error(`HTTP ${request.status} while fetching ${url}`));\r\n        }\r\n      });\r\n      request.addEventListener('error', () => {\r\n        reject(new Error('HTTP request failed'));\r\n      });\r\n      request.addEventListener('abort', () => {\r\n        reject(new Error('Loading aborted'));\r\n      });\r\n      request.addEventListener('progress', (event) => {\r\n        this.dispatchEvent(event);\r\n      });\r\n\r\n      request.open('GET', url);\r\n      if (this._binary) {\r\n        request.responseType = 'arraybuffer';\r\n      } else {\r\n        request.responseType = 'text';\r\n      }\r\n      request.send();\r\n    });\r\n  }\r\n\r\n  static canProbablyLoad(source) {\r\n    return _.isString(source) && urlStartRegexp.test(source);\r\n  }\r\n\r\n  static extractName(source) {\r\n    if (source) {\r\n      const last = (source.indexOf('?') + 1 || source.lastIndexOf('#') + 1 || source.length + 1) - 1;\r\n      return source.slice(source.lastIndexOf('/', last) + 1, last);\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nXHRLoader.types = ['url'];\r\n","import Loader from './Loader';\r\n\r\nexport default class ImmediateLoader extends Loader {\r\n  load() {\r\n    return new Promise((resolve) => {\r\n      if (this._abort) {\r\n        throw new Error('Loading aborted');\r\n      }\r\n      resolve(this._source);\r\n    });\r\n  }\r\n\r\n  static canProbablyLoad(_source) {\r\n    return false;\r\n  }\r\n}\r\n\r\nImmediateLoader.types = ['immediate'];\r\n","import LoaderList from './loaders/LoaderList';\r\n\r\nimport FileLoader from './loaders/FileLoader';\r\nimport XHRLoader from './loaders/XHRLoader';\r\nimport ImmediateLoader from './loaders/ImmediateLoader';\r\n\r\nexport default new LoaderList([\r\n  // note: order might be important\r\n  FileLoader,\r\n  XHRLoader,\r\n  ImmediateLoader,\r\n]);\r\n","import EntityList from '../../utils/EntityList';\r\n\r\n/**\r\n * A list of available parsers.\r\n * @extends EntityList\r\n */\r\nclass ParserList extends EntityList {\r\n  /**\r\n   * Create a list of parsers.\r\n   * The parsers are indexed by supported data formats and file extensions (`.formats` and\r\n   * `.extensions` properties of a Parser subclass).\r\n   * The parsers can be retrieved later by matching against specs (see {@link ParsrerList#find}).\r\n   *\r\n   * @param {!Array<function(new:Parser)>=} someParsers A list of {@link Parser} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see ParserList#register\r\n   */\r\n  constructor(someParsers = []) {\r\n    super(someParsers, ['formats', 'extensions']);\r\n  }\r\n\r\n  /**\r\n   * Find a suitable parser for data.\r\n   *\r\n   * @param {Object} specs Parser specifications.\r\n   * @param {string=} specs.format Supported data format.\r\n   * @param {string=} specs.ext Supported filename extension.\r\n   * @param {*=} specs.data Data to parse.\r\n   */\r\n  find(specs) {\r\n    let list = [];\r\n    if (specs.format) {\r\n      list = this._dict.formats[specs.format.toLowerCase()] || [];\r\n    } else if (specs.ext) {\r\n      list = this._dict.extensions[specs.ext.toLowerCase()] || [];\r\n    }\r\n    // autodetect only if no format is forced\r\n    if (list.length === 0 && !specs.format && specs.data) {\r\n      return this._list.filter((SomeParser) => SomeParser.canProbablyParse && SomeParser.canProbablyParse(specs.data));\r\n    }\r\n    return [...list];\r\n  }\r\n}\r\n\r\nexport default ParserList;\r\n","import makeContextDependent from '../../utils/makeContextDependent';\r\n\r\nexport default class Parser {\r\n  constructor(data, options) {\r\n    this._data = data;\r\n    this._options = options || {};\r\n    this._abort = false;\r\n  }\r\n\r\n  parseSync() {\r\n    throw new Error('Parsing this type of data is not implemented');\r\n  }\r\n\r\n  parse() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        try {\r\n          if (this._abort) {\r\n            return reject(new Error('Parsing aborted'));\r\n          }\r\n          return resolve(this.parseSync());\r\n        } catch (error) {\r\n          return reject(error);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // only for volume Parsers\r\n  getModel() {\r\n    this.model._parseHeader(this._data);\r\n    return this.model;\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true;\r\n  }\r\n}\r\n\r\nmakeContextDependent(Parser.prototype);\r\n","import * as THREE from 'three';\r\n\r\n/**\r\n * Parser helper for PDB tag \"REMARK 290\".\r\n *\r\n * @exports Remark290\r\n * @constructor\r\n */\r\nclass Remark290 {\r\n  constructor() {\r\n    /** @type {THREE.Matrix4[]} */\r\n    this.matrices = [];\r\n\r\n    /** @type {?THREE.Matrix4} */\r\n    this._matrix = null;\r\n    /** @type {number} */\r\n    this._matrixIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Parse a single line of a stream.\r\n   * @param {PDBStream} stream - stream to parse\r\n   */\r\n\r\n  parse(stream) {\r\n    /** @type {?THREE.Matrix4} */\r\n    let matrix = this._matrix;\r\n\r\n    if (stream.readString(12, 18) === '  SMTRY') {\r\n      const matrixRow = stream.readCharCode(19) - 49; // convert '1', '2', or '3' -> 0, 1, or 2\r\n      const matrixData = stream.readString(20, 80).trim().split(/\\s+/);\r\n      const matrixIndex = parseInt(matrixData[0], 10);\r\n      if (this._matrix === null || matrixIndex !== this._matrixIndex) {\r\n        // TODO: assert(matrixIndex === this.matrices.length + 1);\r\n        this._matrixIndex = matrixIndex;\r\n        this._matrix = matrix = new THREE.Matrix4();\r\n        this.matrices[this.matrices.length] = matrix;\r\n      }\r\n\r\n      const { elements } = matrix;\r\n      elements[matrixRow] = parseFloat(matrixData[1]);\r\n      elements[matrixRow + 4] = parseFloat(matrixData[2]);\r\n      elements[matrixRow + 8] = parseFloat(matrixData[3]);\r\n      elements[matrixRow + 12] = parseFloat(matrixData[4]);\r\n    }\r\n  }\r\n}\r\n\r\nRemark290.prototype.id = 290;\r\n\r\nexport default Remark290;\r\n","import * as THREE from 'three';\r\nimport chem from '../../../chem';\r\n\r\nconst { Assembly } = chem;\r\n\r\n/**\r\n * Parser helper for PDB tag \"REMARK 350\".\r\n *\r\n * @exports Remark350\r\n * @constructor\r\n */\r\nclass Remark350 {\r\n  constructor(complex) {\r\n    /** @type {Complex} */\r\n    this._complex = complex;\r\n    /** @type {Assembly[]} */\r\n    this.assemblies = [];\r\n\r\n    /** @type {?Assembly} */\r\n    this._assembly = null;\r\n    /** @type {?THREE.Matrix4} */\r\n    this._matrix = null;\r\n    /** @type {number} */\r\n    this._matrixIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Parse a single line of a stream.\r\n   * @param {PDBStream} stream - stream to parse\r\n   */\r\n\r\n  parse(stream) {\r\n    /** @type {?Assembly} */\r\n    let assembly = this._assembly;\r\n    /** @type {?THREE.Matrix4} */\r\n    let matrix = this._matrix;\r\n\r\n    if (assembly && stream.readString(12, 18) === '  BIOMT') {\r\n      const matrixRow = stream.readCharCode(19) - 49; // convert '1', '2', or '3' -> 0, 1, or 2\r\n      const matrixData = stream.readString(20, 80).trim().split(/\\s+/);\r\n      const matrixIndex = parseInt(matrixData[0], 10);\r\n      if (this._matrix === null || matrixIndex !== this._matrixIndex) {\r\n        // TODO: assert(matrixIndex === assembly.matrices.length + 1);\r\n        this._matrixIndex = matrixIndex;\r\n        this._matrix = matrix = new THREE.Matrix4();\r\n        assembly.addMatrix(matrix);\r\n      }\r\n\r\n      const { elements } = matrix;\r\n      elements[matrixRow] = parseFloat(matrixData[1]);\r\n      elements[matrixRow + 4] = parseFloat(matrixData[2]);\r\n      elements[matrixRow + 8] = parseFloat(matrixData[3]);\r\n      elements[matrixRow + 12] = parseFloat(matrixData[4]);\r\n    } else if (assembly && stream.readString(35, 41) === 'CHAINS:') {\r\n      const entries = stream.readString(42, 80).split(',');\r\n      for (let i = 0, n = entries.length; i < n; ++i) {\r\n        const chain = entries[i].trim();\r\n        if (chain.length > 0) {\r\n          assembly.addChain(chain);\r\n        }\r\n      }\r\n    } else if (stream.readString(12, 23) === 'BIOMOLECULE:') {\r\n      // assert molIndex === this.assemblies.length + 1\r\n      this._matrix = null;\r\n      this._matrixIndex = -1;\r\n      this._assembly = assembly = new Assembly(this._complex);\r\n      this.assemblies.push(assembly);\r\n    }\r\n  }\r\n}\r\n\r\nRemark350.prototype.id = 350;\r\n\r\nexport default Remark350;\r\n","/** Helper class for stream-like reading input files. */\r\nclass PDBStream {\r\n  /**\r\n   * Create a stream\r\n   * @param {String} data Input data\r\n   */\r\n  constructor(data) {\r\n    /** @type String */\r\n    this._data = data; // Input file\r\n    /** @type Number */\r\n    this._start = 0; // Starting position of line\r\n    /** @type Number */\r\n    this._nextCR = -1; // Position of next CR (0x0D)\r\n    /** @type Number */\r\n    this._nextLF = -1; // Position of next LF (0x0A)\r\n    /** @type Number */\r\n    this._next = -1; // End position of line\r\n    /** @type Number */\r\n    this._end = data.length; // End of data\r\n\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Reading next line.\r\n   * @returns {String} Next line in data (ending with LF or CR)\r\n   */\r\n  readLine() {\r\n    return this._data.slice(this._start, this._next);\r\n  }\r\n\r\n  /**\r\n   * Reading character from position.\r\n   * @param {Number} pos - Position in current line.\r\n   * @returns {String} Character from position\r\n   */\r\n  readChar(pos) {\r\n    pos = this._start + pos - 1;\r\n    return pos < this._next ? this._data[pos] : ' ';\r\n  }\r\n\r\n  /**\r\n   * Reading character code from position.\r\n   * @param {Number} pos - Position in current line.\r\n   * @returns {Number} Character code from position\r\n   */\r\n  readCharCode(pos) {\r\n    pos = this._start + pos - 1;\r\n    return pos < this._next ? this._data.charCodeAt(pos) : 32;\r\n  }\r\n\r\n  /**\r\n   * Reading string from begin to end points.\r\n   * For a reason unknown, numbering assumed not to start from 0, but from 1.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {String} String from begin to end\r\n   */\r\n  readString(begin, end) {\r\n    const from = this._start + begin - 1;\r\n    const to = this._start + end;\r\n    return this._data.slice(from, to < this._next ? to : this._next);\r\n  }\r\n\r\n  /**\r\n   * Reading integer from begin to end points.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {Number} Integer from begin to end\r\n   */\r\n  readInt(begin, end) {\r\n    return parseInt(this.readString(begin, end), 10);\r\n  }\r\n\r\n  /**\r\n   * Reading float from begin to end points.\r\n   * @param {Number} begin - Begin point in current line.\r\n   * @param {Number} end - End point in current line.\r\n   * @returns {Number} Float from begin to end\r\n   */\r\n  readFloat(begin, end) {\r\n    return parseFloat(this.readString(begin, end));\r\n  }\r\n\r\n  /**\r\n   * Checking for end of data.\r\n   * @returns {boolean} True if data is ended, false otherwise\r\n   */\r\n  end() {\r\n    return this._start >= this._end;\r\n  }\r\n\r\n  /**\r\n   * Procedure to re-arrange current pointers in data.\r\n   */\r\n  next() {\r\n    const start = this._next + 1;\r\n    this._start = start < this._end ? start : this._end;\r\n\r\n    // support CR, LF, CR+LF line endings\r\n    // do not support LF+CR, CR+CR+LF, and other strange combinations\r\n\r\n    if (this._start > this._nextCR) {\r\n      this._nextCR = (this._data.indexOf('\\r', this._start) + 1 || this._end + 1) - 1;\r\n    }\r\n    if (this._start > this._nextLF) {\r\n      this._nextLF = (this._data.indexOf('\\n', this._start) + 1 || this._end + 1) - 1;\r\n    }\r\n    this._next = this._nextCR + 1 < this._nextLF ? this._nextCR : this._nextLF;\r\n  }\r\n}\r\n\r\nexport default PDBStream;\r\n","import * as THREE from 'three';\r\nimport _ from 'lodash';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\nimport Remark290 from './pdb/Remark290';\r\nimport Remark350 from './pdb/Remark350';\r\nimport PDBStream from './PDBStream';\r\n\r\nconst {\r\n  Complex,\r\n  Element,\r\n  Helix,\r\n  Sheet,\r\n  Strand,\r\n  Bond,\r\n  Molecule,\r\n} = chem;\r\n\r\nconst TAG_LENGTH = 6;\r\n\r\nfunction nameToElement(name) {\r\n  // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n  //\r\n  // http://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#note1\r\n  //\r\n  // Atom names start with element symbols right-justified in columns 13-14\r\n  // as permitted by the length of the name. For example, the symbol FE for\r\n  // iron appears in columns 13-14, whereas the symbol C for carbon appears\r\n  // in column 14 (see Misaligned Atom Names). If an atom name has four\r\n  // characters, however, it must start in column 13 even if the element\r\n  // symbol is a single character (for example, see Hydrogen Atoms).\r\n\r\n  const veryLong = name.trim().length === 4;\r\n  return name.slice(0, veryLong ? 1 : 2).trim();\r\n}\r\n\r\n// the most frequently used beginnings; although HEADER is mandatory, it is often missing in handmade files\r\nconst pdbStartRegexp = /^(HEADER\\s|COMPND\\s|REMARK\\s|ATOM {2}|HETATM|MODEL )/i;\r\n\r\nconst remarkParsers = {\r\n  // NOTE: please forget the idea to build the method name in runtime, it can be obfuscated.\r\n  290: Remark290,\r\n  350: Remark350,\r\n};\r\n\r\nclass PDBParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n\r\n    this._complex = null;\r\n    this._chain = null;\r\n    this._residue = null;\r\n    this._sheet = null;\r\n    this._serialAtomMap = null;\r\n    this._modelId = 1;\r\n    this._compaundFound = false;\r\n    this._biomoleculeFound = false;\r\n    this._allowedChainsIDs = null;\r\n    this._lastMolId = -1;\r\n\r\n    this._remarks = {};\r\n    this._remark = null;\r\n\r\n    this._molecules = [];\r\n    this._molecule = null;\r\n    this._compndCurrToken = '';\r\n\r\n    this._options.fileType = 'pdb';\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return _.isString(data) && pdbStartRegexp.test(data);\r\n  }\r\n\r\n  _finalize() {\r\n    this._fixBondsArray();\r\n    this._fixChains();\r\n\r\n    // keep crystallographic symmetry transformations\r\n    const remark290 = this._remarks[290];\r\n    this._complex.symmetry = _.isUndefined(remark290) ? [] : remark290.matrices;\r\n\r\n    // add loaded biological assemblies\r\n    const remark350 = this._remarks[350];\r\n    this._complex.units = this._complex.units.concat(_.isUndefined(remark350) ? [] : remark350.assemblies);\r\n\r\n    // add loaded macromolecules\r\n    this._finalizeMolecules();\r\n\r\n    // create secondary structure etc.\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap,\r\n    });\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // get chains from complex\r\n    const chainDict = {};\r\n    let i;\r\n    const chains = this._complex._chains;\r\n    for (i = 0; i < chains.length; ++i) {\r\n      const chainObj = chains[i];\r\n      const chainName = chainObj._name;\r\n      chainDict[chainName] = chainObj;\r\n    }\r\n\r\n    // aggregate residues from chains\r\n    for (i = 0; i < this._molecules.length; i++) {\r\n      const m = this._molecules[i];\r\n      let residues = [];\r\n      for (let j = 0; j < m._chains.length; j++) {\r\n        const name = m._chains[j];\r\n        const chain = chainDict[name];\r\n        residues = residues.concat(chain._residues.slice());\r\n      }\r\n      const molecule = new Molecule(this._complex, m._name, i + 1);\r\n      molecule.residues = residues;\r\n      this._complex._molecules[i] = molecule;\r\n    }\r\n  }\r\n\r\n  _fixChains() {\r\n    const idChainMap = {};\r\n    const complex = this._complex;\r\n\r\n    // prepare\r\n    for (let i = 0; i < complex._chains.length; i++) {\r\n      const chain = complex._chains[i];\r\n      idChainMap[chain._name.charCodeAt(0)] = chain;\r\n    }\r\n  }\r\n\r\n  // FIXME: This function is redundant, CONECT records always follow ATOM and HETATM. Build the map online.\r\n  _fixBondsArray() {\r\n    const serialAtomMap = this._serialAtomMap = {};\r\n    const complex = this._complex;\r\n\r\n    const atoms = complex._atoms;\r\n    for (let i = 0, ni = atoms.length; i < ni; ++i) {\r\n      const atom = atoms[i];\r\n      serialAtomMap[atom.serial] = atom;\r\n    }\r\n\r\n    const bonds = complex._bonds;\r\n    const { logger } = this;\r\n    for (let j = 0, nj = bonds.length; j < nj; ++j) {\r\n      const bond = bonds[j];\r\n      if (bond._right < bond._left) {\r\n        logger.debug('_fixBondsArray: Logic error.');\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null;\r\n      bond._right = serialAtomMap[bond._right] || null;\r\n    }\r\n  }\r\n\r\n  _parseATOM(stream) {\r\n    if (this._modelId !== 1) {\r\n      return;\r\n    }\r\n\r\n    /* eslint-disable no-magic-numbers */\r\n    const het = stream.readCharCode(1) === 0x48;\r\n\r\n    // field names according to wwPDB Format\r\n    // NOTE: Chimera allows (nonstandard) use of columns 6-11 for the integer atom serial number in ATOM records.\r\n    const serial = het ? stream.readInt(7, 11) : stream.readInt(6, 11);\r\n    let name = stream.readString(13, 16);\r\n    const altLoc = stream.readChar(17);\r\n    const resName = stream.readString(18, 20).trim();\r\n    const chainID = stream.readChar(22);\r\n    const resSeq = stream.readInt(23, 26);\r\n    const iCode = stream.readChar(27);\r\n    const x = stream.readFloat(31, 38);\r\n    const y = stream.readFloat(39, 46);\r\n    const z = stream.readFloat(47, 54);\r\n    const occupancy = stream.readFloat(55, 60);\r\n    const tempFactor = stream.readFloat(61, 66);\r\n    const element = stream.readString(77, 78).trim() || nameToElement(name);\r\n    const charge = stream.readInt(79, 80) || 0;\r\n    /* eslint-enable no-magic-numbers */\r\n    // skip waters (there may be lots of them)\r\n    if (this.settings.now.nowater) {\r\n      if (resName === 'HOH' || resName === 'WAT') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // PDB uses positional system for atom names. It helps derive element type from the name\r\n    // but names may include extra spaces. From this point on we don't need those spaces anymore.\r\n    name = name.trim();\r\n\r\n    const type = Element.getByName(element);\r\n    const role = Element.Role[name]; // FIXME: Maybe should use type as additional index (\" CA \" vs. \"CA  \")\r\n\r\n    // NOTE: Residues of a particular chain are not required to be listed next to each other.\r\n    // https://github.com/biasmv/pv/commit/7319b898b7473ba380c26699e3b028b2b1a7e1a1\r\n    let chain = this._chain;\r\n    if (!chain || chain.getName() !== chainID) {\r\n      this._chain = chain = this._complex.getChain(chainID) || this._complex.addChain(chainID);\r\n      this._residue = null;\r\n    }\r\n\r\n    let residue = this._residue;\r\n    if (!residue || residue.getSequence() !== resSeq || residue.getICode() !== iCode) {\r\n      this._residue = residue = chain.addResidue(resName, resSeq, iCode);\r\n    }\r\n\r\n    const xyz = new THREE.Vector3(x, y, z);\r\n    residue.addAtom(name, type, xyz, role, het, serial, altLoc, occupancy, tempFactor, charge);\r\n  }\r\n\r\n  _parseENDMDL() {\r\n    this._modelId += 1;\r\n  }\r\n\r\n  _parseCONECT(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const serial0 = stream.readInt(7, 11);\r\n    const serial1 = stream.readInt(12, 16);\r\n    const serial2 = stream.readInt(17, 21);\r\n    const serial3 = stream.readInt(22, 26);\r\n    const serial4 = stream.readInt(27, 31);\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    const complex = this._complex;\r\n\r\n    // Keep bonds ordered by atom serial\r\n    if (serial1 && serial1 > serial0) {\r\n      complex.addBond(serial0, serial1, 0, Bond.BondType.UNKNOWN, true);\r\n    }\r\n    if (serial2 && serial2 > serial0) {\r\n      complex.addBond(serial0, serial2, 0, Bond.BondType.UNKNOWN, true);\r\n    }\r\n    if (serial3 && serial3 > serial0) {\r\n      complex.addBond(serial0, serial3, 0, Bond.BondType.UNKNOWN, true);\r\n    }\r\n    if (serial4 && serial4 > serial0) {\r\n      complex.addBond(serial0, serial4, 0, Bond.BondType.UNKNOWN, true);\r\n    }\r\n  }\r\n\r\n  _parseCOMPND(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const str = stream.readString(11, 80);\r\n    const tokenIdx = str.indexOf(':');\r\n    this._compndCurrToken = tokenIdx > 0 ? str.substring(0, tokenIdx).trim() : this._compndCurrToken;\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // start reading new molecule\r\n    if (this._compndCurrToken === 'MOL_ID') {\r\n      this._molecule = { _index: '', _chains: [] };\r\n      this._molecule._index = parseInt(str.substring(tokenIdx + 1, str.indexOf(';')), 10);\r\n      this._molecules.push(this._molecule);\r\n      // parse molecule name\r\n    } else if (this._compndCurrToken === 'MOLECULE' && this._molecule != null) {\r\n      this._molecule._name = str.substring(tokenIdx + 1, str.indexOf(';')).trim();\r\n      // parse molecule chains\r\n    } else if (this._compndCurrToken === 'CHAIN' && this._molecule != null) {\r\n      let chainStr = str.substring(tokenIdx + 1, 80).trim();\r\n      const lastChar = chainStr[chainStr.length - 1];\r\n      if (lastChar === ';' || lastChar === ',') {\r\n        chainStr = chainStr.slice(0, -1);\r\n      }\r\n      chainStr = chainStr.replace(/\\s+/g, '');\r\n      const chains = chainStr.split(',');\r\n      this._molecule._chains = this._molecule._chains.concat(chains);\r\n    }\r\n  }\r\n\r\n  _parseREMARK(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const remarkNum = stream.readInt(8, 10);\r\n    /* eslint-enable no-magic-numbers */\r\n\r\n    // create remark parser if needed\r\n    let remark = this._remarks[remarkNum];\r\n    if (_.isUndefined(remark)) {\r\n      const RemarkParser = remarkParsers[remarkNum];\r\n      if (_.isFunction(RemarkParser)) {\r\n        this._remarks[remarkNum] = remark = new RemarkParser(this._complex);\r\n      }\r\n    }\r\n\r\n    // delegate parsing\r\n    if (!_.isUndefined(remark)) {\r\n      remark.parse(stream);\r\n    }\r\n  }\r\n\r\n  _parseHELIX(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const fields = [20, 22, 32, 34];\r\n    /* eslint-enable no-magic-numbers */\r\n    this._parseSTRUCTURE(stream, fields, (obj) => {\r\n      this._complex.addHelix(obj);\r\n      this._complex.structures.push(obj);\r\n    });\r\n  }\r\n\r\n  _parseSHEET(stream) {\r\n    /* eslint-disable no-magic-numbers */\r\n    const fields = [22, 23, 33, 34];\r\n    /* eslint-enable no-magic-numbers */\r\n    this._parseSTRUCTURE(stream, fields, (obj) => {\r\n      this._complex.addSheet(obj);\r\n    });\r\n  }\r\n\r\n  _parseSTRUCTURE(stream, pars, adder) {\r\n    const startId = 0;\r\n    const startIndex = 1;\r\n    const endId = 2;\r\n    const endIndex = 3;\r\n\r\n    // identify fields: debugging and stuff\r\n    /* eslint-disable no-magic-numbers */\r\n    const codeOfS = 0x53;\r\n    const serialNumber = stream.readInt(8, 10);\r\n    const structureName = stream.readString(12, 14).trim(); // FIXME: LString(3) forbids trim()\r\n    const comment = stream.readString(41, 70).trim();\r\n    const helLength = stream.readInt(72, 76);\r\n    const helixClass = stream.readInt(39, 40);\r\n    const shWidth = stream.readInt(15, 16);\r\n    const shCur = stream.readInt(42, 45);\r\n    const shPrev = stream.readInt(57, 60);\r\n    /* eslint-enable no-magic-numbers */\r\n    // file fields\r\n    const startChainID = stream.readString(pars[startId], pars[endId] + 1).charCodeAt(0);\r\n    const endChainID = stream.readString(pars[endId], pars[endId] + 1).charCodeAt(0);\r\n    const startSequenceNumber = stream.readInt(pars[startIndex], pars[startIndex] + 3);\r\n    let iCodeStr = stream.readString(pars[startIndex] + 4, pars[startIndex] + 4);\r\n    let startICode = 0;\r\n\r\n    if (iCodeStr.length > 0) {\r\n      startICode = iCodeStr.charCodeAt(0);\r\n    }\r\n    const endSequenceNumber = stream.readInt(pars[endIndex], pars[endIndex] + 3);\r\n    iCodeStr = stream.readString(pars[endIndex] + 4, pars[endIndex] + 4);\r\n    let endICode = 0;\r\n    if (iCodeStr.length > 0) {\r\n      endICode = iCodeStr.charCodeAt(0);\r\n    }\r\n\r\n    let obj;\r\n    let cs = this._sheet;\r\n    if (stream.readCharCode(1) === codeOfS) {\r\n      if (cs !== null && cs.getName() !== structureName) {\r\n        cs = null;\r\n        this._sheet = null;\r\n      }\r\n      if (cs === null) {\r\n        this._sheet = obj = new Sheet(structureName, shWidth);\r\n        adder(obj);\r\n      } else {\r\n        obj = cs;\r\n      }\r\n      const strand = new Strand(\r\n        obj,\r\n        this._complex.getUnifiedSerial(startChainID, startSequenceNumber, startICode),\r\n        this._complex.getUnifiedSerial(endChainID, endSequenceNumber, endICode),\r\n        helixClass,\r\n        shCur,\r\n        shPrev,\r\n      );\r\n      obj.addStrand(strand);\r\n      this._complex.structures.push(strand);\r\n    } else {\r\n      obj = new Helix(\r\n        helixClass,\r\n        this._complex.getUnifiedSerial(startChainID, startSequenceNumber, startICode),\r\n        this._complex.getUnifiedSerial(endChainID, endSequenceNumber, endICode),\r\n        serialNumber,\r\n        structureName,\r\n        comment,\r\n        helLength,\r\n      );\r\n      adder(obj);\r\n    }\r\n  }\r\n\r\n  _parseHEADER(stream) {\r\n    const { metadata } = this._complex;\r\n    metadata.classification = stream.readString(11, 50).trim();\r\n    metadata.date = stream.readString(51, 59).trim();\r\n\r\n    const id = stream.readString(63, 66).trim();\r\n    metadata.id = id;\r\n    if (id) {\r\n      this._complex.name = id;\r\n    }\r\n    metadata.format = 'pdb';\r\n  }\r\n\r\n  _parseTITLE(stream) {\r\n    const { metadata } = this._complex;\r\n    metadata.title = metadata.title || [];\r\n\r\n    const line = stream.readInt(9, 10) || 1;\r\n    metadata.title[line - 1] = stream.readString(11, 80).trim();\r\n  }\r\n\r\n  static tagParsers = {\r\n    HEADER: PDBParser.prototype._parseHEADER,\r\n    'TITLE ': PDBParser.prototype._parseTITLE,\r\n    'ATOM  ': PDBParser.prototype._parseATOM,\r\n    HETATM: PDBParser.prototype._parseATOM,\r\n    ENDMDL: PDBParser.prototype._parseENDMDL,\r\n    CONECT: PDBParser.prototype._parseCONECT,\r\n    COMPND: PDBParser.prototype._parseCOMPND,\r\n    REMARK: PDBParser.prototype._parseREMARK,\r\n    // 'SOURCE': PDBParser.prototype._parseSOURCE,\r\n    'HELIX ': PDBParser.prototype._parseHELIX,\r\n    'SHEET ': PDBParser.prototype._parseSHEET,\r\n\r\n    // nonstandard extension to allow range 100,000 - 999,999\r\n    'ATOM 1': PDBParser.prototype._parseATOM,\r\n    'ATOM 2': PDBParser.prototype._parseATOM,\r\n    'ATOM 3': PDBParser.prototype._parseATOM,\r\n    'ATOM 4': PDBParser.prototype._parseATOM,\r\n    'ATOM 5': PDBParser.prototype._parseATOM,\r\n    'ATOM 6': PDBParser.prototype._parseATOM,\r\n    'ATOM 7': PDBParser.prototype._parseATOM,\r\n    'ATOM 8': PDBParser.prototype._parseATOM,\r\n    'ATOM 9': PDBParser.prototype._parseATOM,\r\n  };\r\n\r\n  parseSync() {\r\n    const stream = new PDBStream(this._data);\r\n    const result = this._complex = new Complex();\r\n\r\n    // parse PDB line by line\r\n    while (!stream.end()) {\r\n      const tag = stream.readString(1, TAG_LENGTH);\r\n      const func = PDBParser.tagParsers[tag];\r\n      if (_.isFunction(func)) {\r\n        func.call(this, stream);\r\n      }\r\n      stream.next();\r\n    }\r\n\r\n    // Resolve indices and serials to objects\r\n    this._finalize();\r\n\r\n    // cleanup\r\n    this._serialAtomMap = null;\r\n    this._sheet = null;\r\n    this._residue = null;\r\n    this._chain = null;\r\n    this._complex = null;\r\n\r\n    if (result.getAtomCount() === 0) {\r\n      throw new Error('The data does not contain valid atoms');\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nPDBParser.formats = ['pdb'];\r\nPDBParser.extensions = ['.pdb', '.ent'];\r\n\r\nexport default PDBParser;\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\n\r\nconst {\r\n  Complex,\r\n  Element,\r\n  SGroup,\r\n  Bond,\r\n} = chem;\r\n\r\nconst cOrderCharCodes = {\r\n  A: 0,\r\n  S: 1,\r\n  D: 2,\r\n  T: 3,\r\n};\r\n\r\nconst cmlStartRegexp = /\\s*<\\?xml\\b[^?>]*\\?>\\s*<(?:cml|molecule)\\b/i;\r\n\r\nclass CMLParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n    this._complex = null;\r\n    this._residue = null;\r\n    this._serialAtomMap = null;\r\n    this._modelId = 1;\r\n    this._lastMolId = -1;\r\n    this._readOnlyOneMolecule = false;\r\n    this._options.fileType = 'cml';\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return _.isString(data) && cmlStartRegexp.test(data);\r\n  }\r\n\r\n  _rebuidBondIndexes(atoms, bonds) {\r\n    const count = atoms.length;\r\n    for (let i = 0; i < count; i++) {\r\n      const atomId = atoms[i].id;\r\n\r\n      const countBonds = bonds.length;\r\n      for (let j = 0; j < countBonds; j++) {\r\n        const idxs = bonds[j].atomRefs2.split(' ');\r\n        if (idxs[0] === atomId) {\r\n          bonds[j].start = i;\r\n        }\r\n\r\n        if (idxs[1] === atomId) {\r\n          bonds[j].end = i;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _createSGroup(molecule, moleculeArr) {\r\n    const newGroup = new SGroup(\r\n      molecule.id,\r\n      molecule.fieldData,\r\n      new THREE.Vector3(parseFloat(molecule.x), parseFloat(molecule.y), 0),\r\n      molecule.atomRefs,\r\n      molecule,\r\n    );\r\n    if (molecule.placement === 'Relative') {\r\n      newGroup._center = new THREE.Vector3(0, 0, 0);\r\n    }\r\n    if (molecule.fieldName === 'MDLBG_FRAGMENT_CHARGE') {\r\n      newGroup._charge = parseInt(molecule.fieldData, 10) || 0;\r\n    }\r\n    if (molecule.fieldName === 'MDLBG_FRAGMENT_COEFFICIENT') {\r\n      newGroup._repeat = parseInt(molecule.fieldData, 10) || 1;\r\n    }\r\n    moleculeArr.push(newGroup);\r\n  }\r\n\r\n  _extractSGroup(molecule, moleculeArr) {\r\n    if (!Array.isArray(moleculeArr)) {\r\n      moleculeArr = [];\r\n    }\r\n\r\n    if (molecule) {\r\n      if (Array.isArray(molecule)) {\r\n        const count = molecule.length;\r\n        for (let i = 0; i < count; i++) {\r\n          if (molecule[i].molecule) {\r\n            moleculeArr = moleculeArr.concat(this._extractSGroup(molecule[i].molecule));\r\n          }\r\n          this._createSGroup(molecule[i], moleculeArr);\r\n        }\r\n      } else {\r\n        if (molecule.molecule) {\r\n          if (molecule.molecule) {\r\n            moleculeArr = moleculeArr.concat(this._extractSGroup(molecule.molecule));\r\n          }\r\n        }\r\n        this._createSGroup(molecule, moleculeArr);\r\n      }\r\n    }\r\n\r\n    return moleculeArr;\r\n  }\r\n\r\n  _extractSGroups(molecule, atoms) {\r\n    const moleculeArr = this._extractSGroup(molecule);\r\n\r\n    const count = atoms.length;\r\n    let i;\r\n    let j;\r\n\r\n    for (i = 0; i < count; i++) {\r\n      const atomId = atoms[i].id;\r\n      for (j = 0; j < moleculeArr.length; j++) {\r\n        const firstAtomRef = moleculeArr[j]._atoms.split(' ')[0];\r\n        if (firstAtomRef === atomId) {\r\n          if (!atoms[i].sgroupRef) {\r\n            atoms[i].sgroupRef = [];\r\n          }\r\n          atoms[i].sgroupRef.push(moleculeArr[j]);\r\n        }\r\n      }\r\n    }\r\n    // build sGroups centers\r\n    let atomMap = {}; // sgrpmap cache\r\n    let mapEntry = null;\r\n    const nLimon = 100000000;\r\n    const bLow = new THREE.Vector3(nLimon, nLimon, nLimon);\r\n    const bHight = new THREE.Vector3(-nLimon, -nLimon, -nLimon);\r\n\r\n    function cycleFuncInner(e) {\r\n      mapEntry = atomMap[e];\r\n      if (mapEntry) {\r\n        moleculeArr[j]._atoms.push(mapEntry.a);\r\n      }\r\n    }\r\n\r\n    function cycleFunc(e) {\r\n      mapEntry = atomMap[e];\r\n      if (mapEntry) {\r\n        bLow.set(Math.min(bLow.x, mapEntry.x), Math.min(bLow.y, mapEntry.y), Math.min(bLow.z, mapEntry.z));\r\n        bHight.set(Math.max(bHight.x, mapEntry.x), Math.max(bHight.y, mapEntry.y), Math.max(bHight.z, mapEntry.z));\r\n        cycleFuncInner(e);\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < atoms.length; i++) {\r\n      atomMap[atoms[i].id] = {};\r\n      atomMap[atoms[i].id].x = atoms[i].x2;\r\n      if (atoms[i].x3) {\r\n        atomMap[atoms[i].id].x = atoms[i].x3;\r\n      }\r\n      atomMap[atoms[i].id].x = parseFloat(atomMap[atoms[i].id].x);\r\n      atomMap[atoms[i].id].y = atoms[i].y2;\r\n      if (atoms[i].y3) {\r\n        atomMap[atoms[i].id].y = atoms[i].y3;\r\n      }\r\n      atomMap[atoms[i].id].y = parseFloat(atomMap[atoms[i].id].y);\r\n      atomMap[atoms[i].id].z = '0.0';\r\n      if (atoms[i].z3) {\r\n        atomMap[atoms[i].id].z = atoms[i].z3;\r\n      }\r\n      atomMap[atoms[i].id].z = parseFloat(atomMap[atoms[i].id].z);\r\n      atomMap[atoms[i].id].a = atoms[i];\r\n    }\r\n\r\n    let atomsRef;\r\n    for (j = 0; j < moleculeArr.length; j++) {\r\n      if (moleculeArr[j]._center !== null) {\r\n        bLow.set(nLimon, nLimon, nLimon);\r\n        bHight.set(-nLimon, -nLimon, -nLimon);\r\n        atomsRef = moleculeArr[j]._atoms.split(' ');\r\n        moleculeArr[j]._atoms = [];\r\n        atomsRef.forEach(cycleFunc);\r\n\r\n        moleculeArr[j]._center.addVectors(bLow, bHight);\r\n        moleculeArr[j]._center.multiplyScalar(0.5);\r\n      } else {\r\n        atomsRef = moleculeArr[j]._atoms.split(' ');\r\n        moleculeArr[j]._atoms = [];\r\n        atomsRef.forEach(cycleFuncInner);\r\n      }\r\n    }\r\n    atomMap = null;\r\n  }\r\n\r\n  _traverseData(dom) {\r\n    function isArray(o) {\r\n      return Object.prototype.toString.apply(o) === '[object Array]';\r\n    }\r\n\r\n    function parseNode(xmlNode, result) {\r\n      if (xmlNode.nodeName === '#text' && xmlNode.nodeValue.trim() === '') {\r\n        return;\r\n      }\r\n\r\n      const jsonNode = {};\r\n      jsonNode.xmlNode = xmlNode;\r\n      const existing = result[xmlNode.nodeName];\r\n      if (existing) {\r\n        if (!isArray(existing)) {\r\n          result[xmlNode.nodeName] = [existing, jsonNode];\r\n        } else {\r\n          result[xmlNode.nodeName].push(jsonNode);\r\n        }\r\n      } else {\r\n        result[xmlNode.nodeName] = jsonNode;\r\n      }\r\n\r\n      let length;\r\n      let i;\r\n      if (xmlNode.attributes) {\r\n        ({ length } = xmlNode.attributes);\r\n        for (i = 0; i < length; i++) {\r\n          const attribute = xmlNode.attributes[i];\r\n          jsonNode[attribute.nodeName] = attribute.nodeValue;\r\n        }\r\n      }\r\n\r\n      ({ length } = xmlNode.childNodes);\r\n      for (i = 0; i < length; i++) {\r\n        parseNode(xmlNode.childNodes[i], jsonNode);\r\n      }\r\n    }\r\n\r\n    const result = {};\r\n    if (dom.childNodes.length) {\r\n      parseNode(dom.childNodes[0], result);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  _findSuitableMolecule(data, molSet) {\r\n    for (const key in data) {\r\n      if (key === 'xmlNode') {\r\n        continue;\r\n      } else if (key === 'molecule') {\r\n        if (data.molecule) {\r\n          if (data.molecule.atomArray && data.molecule.atomArray.atom) {\r\n            molSet.push(data);\r\n          }\r\n          if (Array.isArray(data.molecule)) {\r\n            for (let i = 0; i < data.molecule.length; i++) {\r\n              if (data.molecule[i].atomArray && data.molecule[i].atomArray.atom) {\r\n                molSet.push({ molecule: data.molecule[i] });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else if (data[key] && data[key] !== null && typeof (data[key]) === 'object') {\r\n        this._findSuitableMolecule(data[key], molSet);\r\n      }\r\n    }\r\n  }\r\n\r\n  _selectComponents(text) {\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(text, 'application/xml');\r\n    const traversedData = this._traverseData(doc);\r\n    let rawData;\r\n    const self = this;\r\n\r\n    function prepareComponentCompound(data) {\r\n      let atoms = [];\r\n      if (data.molecule && data.molecule.atomArray && data.molecule.atomArray.atom) {\r\n        if (!Array.isArray(data.molecule.atomArray.atom)) {\r\n          atoms.push(data.molecule.atomArray.atom);\r\n        } else {\r\n          atoms = data.molecule.atomArray.atom;\r\n        }\r\n      } else if (!data.molecule) {\r\n        const ret = {};\r\n        ret.atomLabels = null;\r\n        ret.labelsCount = 1;\r\n        return ret;\r\n      }\r\n\r\n      if (data.molecule.molecule) {\r\n        self._extractSGroups(data.molecule.molecule, atoms);\r\n      }\r\n\r\n      let atom;\r\n      let count = atoms.length;\r\n      for (let i = 0; i < count; i++) {\r\n        atom = atoms[i];\r\n        atom.edges = [];\r\n      }\r\n\r\n      let localBond = [];\r\n      if (data.molecule.bondArray && data.molecule.bondArray.bond) {\r\n        if (!Array.isArray(data.molecule.bondArray.bond)) {\r\n          localBond.push(data.molecule.bondArray.bond);\r\n        } else {\r\n          localBond = data.molecule.bondArray.bond;\r\n        }\r\n      }\r\n      let bond;\r\n      count = localBond.length;\r\n      self._rebuidBondIndexes(atoms, localBond);\r\n\r\n      function addCurrBond(index) {\r\n        bond = localBond[index];\r\n        atom = atoms[bond.start];\r\n        if (!atom) {\r\n          return false;\r\n        }\r\n        atom.edges.push(bond.end);\r\n        atom = atoms[bond.end];\r\n        if (!atom) {\r\n          return false;\r\n        }\r\n        atom.edges.push(bond.start);\r\n        return true;\r\n      }\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        if (!addCurrBond(i)) {\r\n          // ignore invalid bond\r\n          continue;\r\n        }\r\n        const orderAttr = bond.xmlNode.getAttribute('order');\r\n        const tc = parseInt(orderAttr, 10);\r\n        // the default bond order is unknown\r\n        localBond[i].order = 0;\r\n        localBond[i].type = Bond.BondType.UNKNOWN;\r\n        if (tc > 1) {\r\n          localBond[i].order = tc;\r\n        } else {\r\n          // another option - bond order is a string\r\n          const order = cOrderCharCodes[orderAttr];\r\n          if (order !== undefined) {\r\n            localBond[i].order = order;\r\n            if (orderAttr === 'A') {\r\n              localBond[i].type = Bond.BondType.AROMATIC;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      count = atoms.length;\r\n      for (let i = 0; i < count; i++) {\r\n        atom = atoms[i];\r\n        atom.edges.sort();\r\n      }\r\n\r\n      const labels = self._breadWidthSearch(atoms, 0); // for now\r\n\r\n      const retStruct = {};\r\n      retStruct.atoms = atoms;\r\n      retStruct.bonds = localBond;\r\n      retStruct.labels = labels.atomLabels;\r\n      retStruct.count = Math.min(1, labels.labelsCount); // for now\r\n      retStruct.curr = -1;\r\n      retStruct.originalCML = doc;\r\n\r\n      return retStruct;\r\n    }\r\n\r\n    if (traversedData.cml) {\r\n      rawData = traversedData.cml;\r\n    } else {\r\n      rawData = traversedData;\r\n    }\r\n    const retData = [];\r\n    const filteredData = [];\r\n    this._findSuitableMolecule(rawData, filteredData);\r\n    if (this._readOnlyOneMolecule && filteredData.length > 1) {\r\n      filteredData.splice(1, filteredData.length - 1);\r\n    }\r\n    filteredData.forEach((d) => {\r\n      const rd = prepareComponentCompound(d);\r\n      if (rd.atoms.length > 0) {\r\n        retData.push(rd);\r\n      }\r\n    });\r\n    return retData;\r\n  }\r\n\r\n  _packLabel(compId, molId) {\r\n    const shift = 16;\r\n    return (molId << shift) + compId;\r\n  }\r\n\r\n  _unpackLabel(l) {\r\n    const shift = 16;\r\n    const mask = (1 << shift) - 1;\r\n    return { molId: l >>> shift, compId: l & mask };\r\n  }\r\n\r\n  _breadWidthSearch(atoms, molID) {\r\n    const atomLabels = new Array(atoms.length);\r\n\r\n    let id;\r\n    for (id = 0; id < atomLabels.length; id++) {\r\n      atomLabels[id] = this._packLabel(0, molID);\r\n    }\r\n\r\n    const breadthQueue = [];\r\n    let componentID = 0;\r\n    let labeledAtoms = atoms.length;\r\n\r\n    while (labeledAtoms > 0) {\r\n      componentID++;\r\n\r\n      let startID = -1;\r\n      for (id = 0; id < atomLabels.length; id++) {\r\n        if (this._unpackLabel(atomLabels[id]).compId === 0) {\r\n          startID = id;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (startID < 0) {\r\n        break;\r\n      }\r\n\r\n      // Bread first search\r\n      breadthQueue.push(atoms[startID]);\r\n      atomLabels[startID] = this._packLabel(componentID, molID);\r\n      labeledAtoms--;\r\n\r\n      while (breadthQueue.length > 0) {\r\n        const curr = breadthQueue.shift();\r\n        if (!curr) {\r\n          continue;\r\n        }\r\n\r\n        for (let i = 0; i < curr.edges.length; i++) {\r\n          if (atomLabels[curr.edges[i]] !== componentID) {\r\n            breadthQueue.push(atoms[curr.edges[i]]);\r\n            atomLabels[curr.edges[i]] = componentID;\r\n            labeledAtoms--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const ret = {};\r\n    ret.atomLabels = atomLabels;\r\n    ret.labelsCount = componentID;\r\n    return ret;\r\n  }\r\n\r\n  _parseBond(eAtom, mainAtom, order, type) {\r\n    if (eAtom >= 0) {\r\n      const h = [Math.min(eAtom, mainAtom), Math.max(eAtom, mainAtom)];\r\n      this._complex.addBond(h[0], h[1], order, type, true);\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = this._serialAtomMap = {};\r\n    const complex = this._complex;\r\n\r\n    const atoms = complex._atoms;\r\n    for (let i = 0, ni = atoms.length; i < ni; ++i) {\r\n      const atom = atoms[i];\r\n      serialAtomMap[atom.serial] = atom;\r\n    }\r\n\r\n    const bonds = complex._bonds;\r\n    const { logger } = this;\r\n    for (let j = 0, nj = bonds.length; j < nj; ++j) {\r\n      const bond = bonds[j];\r\n      if (bond._right < bond._left) {\r\n        logger.debug('_fixBondsArray: Logic error.');\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null;\r\n      bond._right = serialAtomMap[bond._right] || null;\r\n    }\r\n  }\r\n\r\n  _parseSet(varData) {\r\n    const complex = this._complex = new Complex();\r\n    const data = varData;\r\n    const currentLabel = data.curr;\r\n    const { atoms, labels } = data;\r\n    let atom = null;\r\n    let i;\r\n    let j;\r\n    const count = atoms.length;\r\n\r\n    function addFunc(a) {\r\n      a.xmlNodeRef = atom;\r\n      if (atom.x2) {\r\n        atom.x3 = atom.x2;\r\n        delete atom.x2;\r\n      }\r\n      if (atom.y2) {\r\n        atom.y3 = atom.y2;\r\n        delete atom.y2;\r\n      }\r\n      if (!(atom.z3)) {\r\n        atom.z3 = '0.0';\r\n      }\r\n      atom.complexAtom = a;\r\n    }\r\n\r\n    let chains = {};\r\n    // parse atoms in label order\r\n    const reorder = [];\r\n    for (i = 0; i < count; i++) {\r\n      reorder.push(i);\r\n    }\r\n    reorder.sort((a, b) => labels[a] - labels[b]);\r\n    for (i = 0; i < count; i++) {\r\n      const atomCharge = 0;\r\n      const lLabel = labels[reorder[i]];\r\n      if (this._unpackLabel(lLabel).molId === this._unpackLabel(currentLabel).molId) {\r\n        atom = atoms[reorder[i]];\r\n        const atomFullNameStruct = atom.elementType;\r\n\r\n        if (atom.sgroupRef) {\r\n          const countRef = atom.sgroupRef.length;\r\n          for (let k = 0; k < countRef; ++k) {\r\n            complex._sgroups.push(atom.sgroupRef[k]);\r\n          }\r\n        }\r\n\r\n        if (atom.x3 || atom.x2) {\r\n          const currAtomComp = this._unpackLabel(lLabel).compId;\r\n          // use ' ' by default instead of synthetic creation of chain names\r\n          const chainID = ' '; //= String.fromCharCode('A'.charCodeAt(0) + currAtomComp);\r\n          const resSeq = currAtomComp;\r\n          const iCode = ' ';\r\n          let strLabel = currAtomComp.toString();\r\n          if (strLabel.length === 1) {\r\n            strLabel = `0${strLabel}`;\r\n          }\r\n          const resName = `N${strLabel}`;\r\n          let chain = chains[chainID];\r\n          if (!chain || chain.getName() !== chainID) {\r\n            chains[chainID] = chain = this._complex.getChain(chainID) || this._complex.addChain(chainID);\r\n            this._residue = null;\r\n          }\r\n\r\n          let residue = this._residue;\r\n          if (!residue || residue.getSequence() !== resSeq || residue.getICode() !== iCode) {\r\n            this._residue = residue = chain.addResidue(resName, resSeq, iCode);\r\n          }\r\n\r\n          // _x, _y, _z, mname, mindex, atomNameFull, atomName, chainID, serial, isHet, atlLocInd, atomNameToTypeF\r\n          let xyz = null;\r\n          if (atom.x3) {\r\n            xyz = new THREE.Vector3(parseFloat(atom.x3), parseFloat(atom.y3), parseFloat(atom.z3));\r\n          } else if (atom.x2) {\r\n            xyz = new THREE.Vector3(parseFloat(atom.x2), parseFloat(atom.y2), 0);\r\n          }\r\n          let element = Element.ByName[atom.elementType.toUpperCase()];\r\n          if (!element) {\r\n            element = (JSON.parse(JSON.stringify(Element.ByName[\r\n              Object.keys(Element.ByName)[Object.keys(Element.ByName).length - 1]])));\r\n            element.number += 1;\r\n            element.name = atom.elementType.toUpperCase();\r\n            element.fullName = 'Unknown';\r\n            Element.ByName[atom.elementType.toUpperCase()] = element;\r\n          }\r\n          const atomSerial = parseInt(atom.id.replace(/[^0-9]/, ''), 10);\r\n          const added = residue.addAtom(\r\n            atomFullNameStruct,\r\n            element,\r\n            xyz,\r\n            Element.Role.SG,\r\n            true,\r\n            atomSerial,\r\n            ' ',\r\n            1.0,\r\n            0.0,\r\n            atomCharge,\r\n          );\r\n          if (atom.hydrogenCount) {\r\n            added.hydrogenCount = parseInt(atom.hydrogenCount, 10);\r\n          }\r\n          if (atom.mrvValence) {\r\n            added.valence = parseInt(atom.mrvValence, 10);\r\n          }\r\n          addFunc(added);\r\n        }\r\n      }\r\n    }\r\n    chains = null;// NOSONAR\r\n    for (i = 0; i < data.bonds.length; i++) {\r\n      const cb = data.bonds[i];\r\n      if (this._unpackLabel(labels[cb.start]).molId === this._unpackLabel(currentLabel).molId\r\n          && this._unpackLabel(labels[cb.end]).molId === this._unpackLabel(currentLabel).molId) {\r\n        atom = atoms[cb.start];\r\n        if (!atom || !(atoms[cb.end])) {\r\n          continue; // skip invalid\r\n        }\r\n        this._parseBond(\r\n          parseInt(atom.id.replace(/[^0-9]/, ''), 10),\r\n          parseInt(atoms[cb.end].id.replace(/[^0-9]/, ''), 10),\r\n          cb.order,\r\n          cb.type,\r\n        );\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < this._complex.getSGroupCount(); i++) {\r\n      const sGrp = this._complex.getSGroups()[i];\r\n      for (j = 0; j < sGrp._atoms.length; j++) {\r\n        sGrp._atoms[j] = sGrp._atoms[j].complexAtom;\r\n      }\r\n    }\r\n    for (i = 0; i < count; i++) {\r\n      if (this._unpackLabel(labels[i]).molId === this._unpackLabel(currentLabel).molId) {\r\n        atom = atoms[i];\r\n        atom.complexAtom = null;\r\n        delete atom.complexAtom;\r\n      }\r\n    }\r\n    this._complex.originalCML = data.originalCML;\r\n    this._fixBondsArray();\r\n    complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap,\r\n    });\r\n    this._serialAtomMap = null;\r\n    this._complex = null;\r\n    return complex;\r\n  }\r\n\r\n  parseSync() {\r\n    const complexes = [];\r\n    const self = this;\r\n    const moleculaSet = this._selectComponents(this._data);\r\n    moleculaSet.forEach((molSet) => {\r\n      molSet.curr = 2;\r\n      if (molSet.count === 0) {\r\n        molSet.count = 1;\r\n      }\r\n      for (let i = 0; i < molSet.count; i++) {\r\n        molSet.curr = (i + 1);\r\n        complexes.push(self._parseSet(molSet, false));\r\n      }\r\n    });\r\n\r\n    let totalAtomsParsed = 0;\r\n    complexes.forEach((c) => {\r\n      totalAtomsParsed += c.getAtomCount();\r\n    });\r\n    if (totalAtomsParsed <= 0) {\r\n      throw new Error('The data does not contain valid atoms');\r\n    }\r\n\r\n    if (complexes.length > 1) {\r\n      const joinedComplex = new Complex();\r\n      joinedComplex.joinComplexes(complexes);\r\n      joinedComplex.originalCML = complexes[0].originalCML;\r\n      return joinedComplex;\r\n    }\r\n    if (complexes.length === 1) {\r\n      return complexes[0];\r\n    }\r\n    return new Complex();\r\n  }\r\n}\r\n\r\nCMLParser.formats = ['cml'];\r\nCMLParser.extensions = ['.cml'];\r\n\r\nexport default CMLParser;\r\n","import * as THREE from 'three';\r\nimport _ from 'lodash';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\nimport MMTF from '../../../vendor/js/mmtf';\r\nimport StructuralElement from '../../chem/StructuralElement';\r\n\r\nconst {\r\n  Complex,\r\n  Chain,\r\n  Atom,\r\n  Element,\r\n  Helix,\r\n  Sheet,\r\n  Strand,\r\n  Bond,\r\n  Assembly,\r\n  Molecule,\r\n} = chem;\r\n\r\nclass ArrayComparator {\r\n  constructor(original) {\r\n    this._original = Array.from(original);\r\n    this._original.sort();\r\n\r\n    this._sum = 0;\r\n    for (let i = 0; i < this._original.length; ++i) {\r\n      this._sum += this._original[i];\r\n    }\r\n  }\r\n\r\n  compare(candidate) {\r\n    const len = candidate.length;\r\n    if (len !== this._original.length) {\r\n      return false;\r\n    }\r\n\r\n    let sum = 0;\r\n    let i;\r\n    for (i = 0; i < len; ++i) {\r\n      sum += candidate[i];\r\n    }\r\n\r\n    if (sum !== this._sum) {\r\n      return false;\r\n    }\r\n\r\n    const sorted = Array.from(candidate);\r\n    sorted.sort();\r\n\r\n    for (i = 0; i < len; ++i) {\r\n      if (sorted[i] !== this._original[i]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nArrayComparator.prototype.constructor = ArrayComparator;\r\n\r\nconst StructuralElementType = StructuralElement.Type;\r\n\r\n// see https://github.com/rcsb/mmtf-javascript/blob/master/src/mmtf-traverse.js\r\nconst secStructToType = [\r\n  StructuralElementType.HELIX_PI, // 0\r\n  StructuralElementType.BEND, // 1\r\n  StructuralElementType.HELIX_ALPHA, // 2\r\n  StructuralElementType.STRAND, // 3\r\n  StructuralElementType.HELIX_310, // 4\r\n  StructuralElementType.BRIDGE, // 5\r\n  StructuralElementType.TURN, // 6\r\n  StructuralElementType.COIL, // 7\r\n];\r\n\r\nfunction getFirstByte(buf) {\r\n  const bytes = new Uint8Array(buf, 0, 1);\r\n  return bytes[0];\r\n}\r\n\r\nclass MMTFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n    this._options.fileType = 'mmtf';\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    // check if it's binary MessagePack format containing a map (dictionary)\r\n    // see https://github.com/msgpack/msgpack/blob/master/spec.md\r\n    return _.isArrayBuffer(data) && ((getFirstByte(data) | 1) === 0xDF);\r\n  }\r\n\r\n  _onModel(_modelData) {\r\n  }\r\n\r\n  _onChain(chainData) {\r\n    if (chainData.modelIndex !== 0) {\r\n      return;\r\n    }\r\n\r\n    const chain = new Chain(this._complex, chainData.chainName);\r\n    this._complex._chains[chainData.chainIndex] = chain;\r\n    chain._index = chainData.chainIndex;\r\n  }\r\n\r\n  _onGroup(groupData) {\r\n    if (groupData.modelIndex !== 0) {\r\n      return;\r\n    }\r\n\r\n    if (this.settings.now.nowater) {\r\n      // skip water\r\n      if (groupData.groupName === 'HOH' || groupData.groupName === 'WAT') {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const chain = this._complex._chains[groupData.chainIndex];\r\n    const icode = !groupData.insCode.charCodeAt(0) ? '' : groupData.insCode;\r\n    const residue = chain.addResidue(groupData.groupName, groupData.groupId, icode);\r\n    residue._index = groupData.groupIndex;\r\n\r\n    this._updateSecStructure(this._complex, residue, groupData);\r\n  }\r\n\r\n  _onAtom(atomData) {\r\n    if (atomData.modelIndex !== 0) {\r\n      return;\r\n    }\r\n\r\n    const altLoc = !atomData.altLoc.charCodeAt(0) ? '' : atomData.altLoc;\r\n    const atom = new Atom(\r\n      atomData.groupIndex, // we store residue index here to replace it later with actual reference\r\n      atomData.atomName,\r\n      Element.getByName(atomData.element.toUpperCase()),\r\n      new THREE.Vector3(atomData.xCoord, atomData.yCoord, atomData.zCoord),\r\n      Element.Role[atomData.atomName],\r\n      false, // hetero atoms will be marked later\r\n      atomData.atomId,\r\n      altLoc,\r\n      atomData.occupancy,\r\n      atomData.bFactor,\r\n      atomData.formalCharge,\r\n    );\r\n\r\n    this._complex._atoms[atomData.atomIndex] = atom;\r\n    atom.index = atomData.atomIndex;\r\n\r\n    this._serialAtomMap[atomData.atomId] = atom;\r\n  }\r\n\r\n  _onBond(bondData) {\r\n    const right = Math.max(bondData.atomIndex1, bondData.atomIndex2);\r\n    if (right >= this._complex._atoms.length) {\r\n      return;\r\n    }\r\n    const left = Math.min(bondData.atomIndex1, bondData.atomIndex2);\r\n    this._complex.addBond(\r\n      this._complex._atoms[left],\r\n      this._complex._atoms[right],\r\n      bondData.bondOrder,\r\n      Bond.BondType.UNKNOWN,\r\n      true,\r\n    );\r\n  }\r\n\r\n  _updateSecStructure(complex, residue, groupData) {\r\n    const helixClasses = [3, -1, 1, -1, 5];\r\n\r\n    if (!_.isUndefined(groupData) && groupData.secStruct === this._ssType) {\r\n      residue._secondary = this._ssStruct;\r\n      if (this._ssStruct) {\r\n        this._ssStruct.term = residue;\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (!_.isUndefined(groupData)) {\r\n      // start new secondary structure\r\n      const type = secStructToType[groupData.secStruct];\r\n      this._ssType = groupData.secStruct;\r\n      this._ssStart = residue;\r\n\r\n      let struct = null;\r\n      switch (this._ssType) {\r\n        case -1: // undefined\r\n        case 7: // coil\r\n          break;\r\n        case 0: // pi helix\r\n        case 2: // alpha helix\r\n        case 4: // 3-10 helix\r\n          struct = new Helix(helixClasses[this._ssType], residue, residue, 0, '', '', 0);\r\n          complex._helices.push(struct);\r\n          break;\r\n        case 3: { // extended\r\n          const sheet = new Sheet('', 0);\r\n          complex._sheets.push(sheet);\r\n          struct = new Strand(sheet, residue, residue, 0, null, null);\r\n          break;\r\n        }\r\n        default:\r\n          if (type !== undefined) {\r\n            struct = new StructuralElement(type, residue, residue);\r\n          }\r\n          break;\r\n      }\r\n\r\n      this._ssStruct = struct;\r\n      residue._secondary = struct;\r\n      if (struct) {\r\n        complex.structures.push(struct);\r\n      }\r\n    }\r\n  }\r\n\r\n  _updateMolecules(mmtfData) {\r\n    const entities = mmtfData.entityList;\r\n    if (!entities) {\r\n      return;\r\n    }\r\n\r\n    const chainsInModel0 = mmtfData.chainsPerModel[0];\r\n    for (let i = 0; i < entities.length; i++) {\r\n      const entity = entities[i];\r\n      const chains = entity.chainIndexList;\r\n      let residues = [];\r\n      for (let j = 0; j < chains.length; j++) {\r\n        const chainIndex = chains[j];\r\n        // skip chains in models other than the first one\r\n        if (chainIndex >= chainsInModel0) {\r\n          continue;\r\n        }\r\n        const chain = this._complex._chains[chainIndex];\r\n        residues = residues.concat(chain._residues.slice());\r\n      }\r\n      const molecule = new Molecule(this._complex, entity.description, i + 1);\r\n      molecule.residues = residues;\r\n      this._complex._molecules[i] = molecule;\r\n    }\r\n  }\r\n\r\n  // populate complex with chains, residues and atoms\r\n  _traverse(mmtfData) {\r\n    const self = this;\r\n\r\n    // get metadata\r\n    const { metadata } = this._complex;\r\n    metadata.id = mmtfData.structureId;\r\n    metadata.title = [];\r\n    metadata.title[0] = mmtfData.title;\r\n    metadata.date = mmtfData.releaseDate;\r\n    metadata.format = 'mmtf';\r\n\r\n    // create event callback functions\r\n    const eventCallbacks = {\r\n      onModel(modelData) {\r\n        self._onModel(modelData);\r\n      },\r\n      onChain(chainData) {\r\n        self._onChain(chainData);\r\n      },\r\n      onGroup(groupData) {\r\n        self._onGroup(groupData);\r\n      },\r\n      onAtom(atomData) {\r\n        self._onAtom(atomData);\r\n      },\r\n      onBond(bondData) {\r\n        self._onBond(bondData);\r\n      },\r\n    };\r\n\r\n    // temporary variables used during traversal to track secondary structures\r\n    this._ssType = -1;\r\n    this._ssStruct = null;\r\n    this._ssStart = null;\r\n\r\n    // traverse the structure and listen to the events\r\n    MMTF.traverse(mmtfData, eventCallbacks);\r\n\r\n    this._updateSecStructure(this._complex);\r\n    this._updateMolecules(mmtfData);\r\n  }\r\n\r\n  // During traversal atoms and residues don't come sequentially\r\n  // so a residue for certain atom can be unavailable. Thus we\r\n  // store residue index in atom.\r\n  // This function being called after traversal replaces the index\r\n  // with actual reference, and also populates atom lists in residues.\r\n  _linkAtomsToResidues() {\r\n    for (let i = 0; i < this._complex._atoms.length; ++i) {\r\n      const atom = this._complex._atoms[i];\r\n      const residue = this._complex._residues[atom.residue];\r\n      atom.residue = residue;\r\n      residue._atoms.push(atom);\r\n    }\r\n  }\r\n\r\n  _findSynonymousChains() {\r\n    const named = {};\r\n    for (let i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i];\r\n      const name = chain.getName();\r\n      if (!named.hasOwnProperty(name)) {\r\n        named[name] = [];\r\n      }\r\n\r\n      named[name].push(chain._index);\r\n    }\r\n\r\n    return named;\r\n  }\r\n\r\n  // NOTE: This function relies on original chain indices, so it must be called before any magic happens to chains.\r\n  _parseAssemblyInfo(mmtfData) {\r\n    let i;\r\n    let j;\r\n    let k;\r\n    const assemblies = [];\r\n    const { logger } = this;\r\n\r\n    for (i = 0; i < mmtfData.bioAssemblyList.length; ++i) {\r\n      const baInfo = mmtfData.bioAssemblyList[i];\r\n      if (baInfo.transformList.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      const chains = baInfo.transformList[0].chainIndexList;\r\n      const chainListCheck = new ArrayComparator(chains);\r\n\r\n      // build list of chain names\r\n      const chainNames = {};\r\n      for (j = 0; j < chains.length; ++j) {\r\n        chainNames[this._complex._chains[chains[j]].getName()] = 1;\r\n      }\r\n\r\n      // all chains with the same name should belong to assembly if one of them belongs\r\n      const allChains = [];\r\n      let name;\r\n      for (name in chainNames) {\r\n        if (chainNames.hasOwnProperty(name)) {\r\n          // just concat arrays -- there should be no duplicates\r\n          Array.prototype.push.apply(allChains, this._chainsByName[name]);\r\n        }\r\n      }\r\n      if (!chainListCheck.compare(allChains)) {\r\n        // assembly is missing some of the chains\r\n        logger.debug('MMTF: Assembly is missing some of the synonymous chains. Skipping...');\r\n      }\r\n\r\n      const a = new Assembly(this._complex);\r\n\r\n      // add chains to assembly\r\n      for (name in chainNames) {\r\n        if (chainNames.hasOwnProperty(name)) {\r\n          a.addChain(name);\r\n        }\r\n      }\r\n\r\n      // add unique matrices to assembly\r\n      a.addMatrix(new THREE.Matrix4().fromArray(baInfo.transformList[0].matrix).transpose());\r\n      for (j = 1; j < baInfo.transformList.length; ++j) {\r\n        const transform = baInfo.transformList[j];\r\n\r\n        if (!chainListCheck.compare(transform.chainIndexList)) {\r\n          // list of chains for this transform doesn't match that for other transforms\r\n          // this is illegal in our structure\r\n          logger.debug('MMTF: Chain lists differ for different transforms in one assembly. Skipping...');\r\n          continue;\r\n        }\r\n\r\n        const m = new THREE.Matrix4().fromArray(transform.matrix).transpose();\r\n\r\n        // check if matrix is already in the list\r\n        for (k = 0; k < a.matrices.length; ++k) {\r\n          if (a.matrices[k].equals(m)) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (k === a.matrices.length) {\r\n          a.addMatrix(m);\r\n        }\r\n      }\r\n\r\n      a.finalize();\r\n      assemblies.push(a);\r\n    }\r\n\r\n    return assemblies;\r\n  }\r\n\r\n  // NOTE: This function relies on original chain indices, so it must be called before any magic happens to chains.\r\n  _markHeteroAtoms(mmtfData) {\r\n    const chainsInModel0 = mmtfData.chainsPerModel[0];\r\n    for (let i = 0; i < mmtfData.entityList.length; ++i) {\r\n      const entity = mmtfData.entityList[i];\r\n      if (entity.type !== 'polymer') {\r\n        for (let j = 0; j < entity.chainIndexList.length; ++j) {\r\n          const chainIndex = entity.chainIndexList[j];\r\n          // skip chains in models other than the first one\r\n          if (chainIndex >= chainsInModel0) {\r\n            continue;\r\n          }\r\n          const chain = this._complex._chains[chainIndex];\r\n          for (let k = 0; k < chain._residues.length; ++k) {\r\n            const res = chain._residues[k];\r\n            for (let m = 0; m < res._atoms.length; ++m) {\r\n              res._atoms[m].het = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // joins chains with the same name into single chain\r\n  _joinSynonymousChains() {\r\n    let i;\r\n    let j;\r\n\r\n    const primaryChainsArray = [];\r\n    const primaryChainsHash = {};\r\n\r\n    // join chains\r\n    for (i = 0; i < this._complex._chains.length; ++i) {\r\n      const chain = this._complex._chains[i];\r\n      const name = chain.getName();\r\n      if (!primaryChainsHash.hasOwnProperty(name)) {\r\n        // new name -- this is a primary chain\r\n        primaryChainsHash[name] = chain;\r\n        chain._index = primaryChainsArray.length; // update index as this array will later replace original chain list\r\n        primaryChainsArray.push(chain);\r\n        continue;\r\n      }\r\n\r\n      // this chain should be joined with the primary chain of the same name\r\n      const primary = primaryChainsHash[name];\r\n      for (j = 0; j < chain._residues.length; ++j) {\r\n        const residue = chain._residues[j];\r\n        primary._residues.push(residue);\r\n        residue._chain = primary;\r\n      }\r\n    }\r\n\r\n    // replace chains list with one containing only primary chains\r\n    // dropping references to all chains but primary\r\n    this._complex._chains = primaryChainsArray;\r\n  }\r\n\r\n  parseSync() {\r\n    const mmtfData = MMTF.decode(this._data);\r\n\r\n    this._complex = new Complex();\r\n    this._serialAtomMap = {}; // filled during traversal\r\n\r\n    this._traverse(mmtfData);\r\n    this._linkAtomsToResidues();\r\n    this._markHeteroAtoms(mmtfData);\r\n    this._chainsByName = this._findSynonymousChains();\r\n    Array.prototype.push.apply(this._complex.units, this._parseAssemblyInfo(mmtfData));\r\n    this._joinSynonymousChains();\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap,\r\n    });\r\n\r\n    return this._complex;\r\n  }\r\n}\r\n\r\nMMTFParser.formats = ['mmtf'];\r\nMMTFParser.extensions = ['.mmtf'];\r\nMMTFParser.binary = true;\r\n\r\nexport default MMTFParser;\r\n","class ParsingError extends Error {\r\n  constructor(message, line, column) {\r\n    super(`data:${line}:${column}: ${message}`);\r\n\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, ParsingError);\r\n    }\r\n\r\n    this.name = 'ParsingError';\r\n    this.parseLine = line;\r\n    this.parseColumn = column;\r\n  }\r\n}\r\n\r\nexport default ParsingError;\r\n","import _ from 'lodash';\r\nimport ParsingError from './ParsingError';\r\n\r\n// Implemented and being tested against: https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax\r\n\r\nfunction _isWhitespace(ch) {\r\n  return ch === 32 || ch === 10 || ch === 13 || ch === 9;\r\n}\r\n\r\nfunction _inlineIndexOf(ch0, str, idx) {\r\n  const len = str.length;\r\n  let ch = -1;\r\n  while (idx < len) {\r\n    ch = str.charCodeAt(idx);\r\n    if (ch === ch0 || ch === 10) {\r\n      break;\r\n    }\r\n    ++idx;\r\n  }\r\n  return ch === ch0 ? idx : -1;\r\n}\r\n\r\nexport default function readCIF(source) {\r\n  let i = 0;\r\n  let j = 0;\r\n  const n = source.length;\r\n  let code = NaN;\r\n  let newline = true;\r\n  let line = 1;\r\n  let column = 1;\r\n  let begin;\r\n  let state = 0; // 0 - start, 1 - block, 2 - item, 3 - loop, 4 - values, 5 - value\r\n  const result = {};\r\n  let block = {};\r\n  let keys = [];\r\n  let keysCount = 0;\r\n  let key = '';\r\n  let values = [];\r\n  let valuesCount = 0;\r\n  let value;\r\n\r\n  function _parseValue() {\r\n    let val;\r\n    if ((code === 46 || code === 63) && (i + 1 >= n || _isWhitespace(source.charCodeAt(i + 1)))) { // '.' or '?' .....\r\n      // it's a missing value\r\n      ++column;\r\n      ++i;\r\n      return undefined;\r\n    }\r\n    if (newline && code === 59) { // ';' ......................................................................\r\n      // parse multi-line string\r\n      j = i;\r\n      let lines = 0;\r\n      do {\r\n        j = _inlineIndexOf(10, source, j + 1); // '\\n'\r\n        if (j === -1) {\r\n          throw new ParsingError('Unterminated text block found', line, column);\r\n        }\r\n        ++lines;\r\n      } while ((j + 1 < n && source.charCodeAt(j + 1) !== code) || j + 1 >= n);\r\n      val = source.substring(i + 1, j).replace(/\\r/g, '');\r\n      i = j + 2;\r\n      line += lines;\r\n      column = 1;\r\n      newline = false;\r\n      return val;\r\n    }\r\n    if (code === 39 || code === 34) { // ''' or '\"' ...........................................................\r\n      // parse quoted string\r\n      j = i;\r\n      do {\r\n        j = _inlineIndexOf(code, source, j + 1);\r\n        if (j === -1) {\r\n          throw new ParsingError('Unterminated quoted string found', line, column);\r\n        }\r\n      } while (j + 1 < n && !_isWhitespace(source.charCodeAt(j + 1)));\r\n      val = source.substring(i + 1, j);\r\n      column += j - i + 1;\r\n      i = j + 1;\r\n      return val;\r\n    } // ......................................................................................................\r\n    // parse until the first whitespace\r\n    j = i;\r\n    while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n      ++j;\r\n    }\r\n    val = source.substring(i, j);\r\n    column += j - i;\r\n    i = j;\r\n    // try to convert to a number\r\n    const num = Number(val);\r\n    if (!Number.isNaN(num)) {\r\n      return num;\r\n    }\r\n    // or leave as an unquoted string\r\n    return val;\r\n  }\r\n\r\n  function _storeKey(tag) {\r\n    keys[keysCount++] = tag;\r\n  }\r\n\r\n  function _storeValue(val) {\r\n    const keyIndex = valuesCount % keysCount;\r\n    values[keyIndex].push(val);\r\n    ++valuesCount;\r\n    return val;\r\n  }\r\n\r\n  while (i <= n) {\r\n    code = source.charCodeAt(i); // 'NaN' in place of '<eof>'\r\n    if (code === 13) { // '\\r' .......................................................................................\r\n      // just ignore\r\n    } else if (code === 10) { // '\\n' ................................................................................\r\n      // take note of new lines\r\n      newline = true;\r\n      ++line;\r\n      column = 1;\r\n    } else {\r\n      // process inline characters\r\n      if (code === 32 || code === 9) { // ' ' or '\\t' ................................................................\r\n        // just ignore\r\n      } else if (code === 35) { // '#' ...............................................................................\r\n        // skip the comment until before the end of the line\r\n        i = _inlineIndexOf(10, source, i + 1); // '\\n'\r\n        if (i === -1) {\r\n          break;\r\n        } else {\r\n          continue; // don't forget to process the new line\r\n        }\r\n      } else if (state === 0) { // start =============================================================================\r\n        if ((code === 68 || code === 100) && source.substr(i + 1, 4).toLowerCase() === 'ata_') { // 'data_' ..........\r\n          j = i + 5;\r\n          begin = j;\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j;\r\n          }\r\n          column += j - i;\r\n          i = j;\r\n          if (begin < i) {\r\n            // add new data block\r\n            result[source.substring(begin, i)] = block = {};\r\n            state = 1; // block\r\n            continue; // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Data block name missing', line, column);\r\n          }\r\n        } else if (Number.isNaN(code)) { // <eof> ....................................................................\r\n          break;\r\n        } else { // ..................................................................................................\r\n          throw new ParsingError(`Unexpected character in state ${state}`, line, column);\r\n        }\r\n      } else if (state === 1) { // block =============================================================================\r\n        if ((code === 68 || code === 100) && source.substr(i + 1, 4).toLowerCase() === 'ata_') { // 'data_' ..........\r\n          state = 0; // start\r\n          continue; // parse again in a different state\r\n        } else if (code === 95) { // '_' .............................................................................\r\n          j = i + 1;\r\n          begin = j;\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j;\r\n          }\r\n          column += j - i;\r\n          i = j;\r\n          if (begin < i) {\r\n            // start new item\r\n            key = source.substring(begin, i);\r\n            state = 2; // item\r\n            continue; // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Tag name missing', line, column);\r\n          }\r\n        } else if ((code === 76 || code === 108) && source.substr(i + 1, 4).toLowerCase() === 'oop_') { // 'loop_' ...\r\n          i += 5;\r\n          column += 5;\r\n          if (i < n && !_isWhitespace(source.charCodeAt(i))) {\r\n            throw new ParsingError(`Unexpected character in state ${state}`, line, column);\r\n          } else {\r\n            // start new loop\r\n            keys = [];\r\n            keysCount = 0;\r\n            values = [];\r\n            valuesCount = 0;\r\n            state = 3; // loop\r\n            continue; // don't forget to process the whitespace\r\n          }\r\n        } else if (Number.isNaN(code)) { // <eof> ....................................................................\r\n          break;\r\n        } else { // ..................................................................................................\r\n          throw new ParsingError(`Unexpected character in state ${state}`, line, column);\r\n        }\r\n      } else if (state === 2) { // item ==============================================================================\r\n        if (Number.isNaN(code)) {\r\n          break;\r\n        }\r\n        value = _parseValue();\r\n        _.set(block, key, value);\r\n        state = 1; // block\r\n        continue;\r\n      } else if (state === 3) { // loop ==============================================================================\r\n        if (code === 95) { // '_' ....................................................................................\r\n          j = i + 1;\r\n          begin = j;\r\n          while (j < n && !_isWhitespace(source.charCodeAt(j))) {\r\n            ++j;\r\n          }\r\n          column += j - i;\r\n          i = j;\r\n          if (begin < i) {\r\n            // add new key\r\n            _storeKey(source.substring(begin, i));\r\n            continue; // don't forget to process the whitespace\r\n          } else {\r\n            throw new ParsingError('Tag name missing', line, column);\r\n          }\r\n        } else { // ..................................................................................................\r\n          if (keysCount > 0) {\r\n            for (let keyIndex = 0; keyIndex < keysCount; ++keyIndex) {\r\n              value = [];\r\n              values[keyIndex] = value;\r\n              _.set(block, keys[keyIndex], value);\r\n            }\r\n            state = 4;\r\n            continue; // parse again in a different state\r\n          }\r\n          throw new ParsingError('Data tags are missing inside a loop', line, column);\r\n        }\r\n      } else if (state === 4) { // values ============================================================================\r\n        if ((code === 68 || code === 100) && source.substr(i + 1, 4).toLowerCase() === 'ata_') { // 'data_' ..........\r\n          state = 0; // start\r\n        } else if (code === 95) { // '_' .............................................................................\r\n          state = 1; // block\r\n        } else if ((code === 76 || code === 108) && source.substr(i + 1, 4).toLowerCase() === 'oop_') { // 'loop_' ...\r\n          state = 1; // block\r\n        } else if (Number.isNaN(code)) { // <eof> ....................................................................\r\n          state = 0;\r\n        } else { // ..................................................................................................\r\n          _storeValue(_parseValue());\r\n        }\r\n        continue; // parse again in a different state\r\n      } else { // ====================================================================================================\r\n        throw new ParsingError(`Unexpected internal state ${state}`, line, column);\r\n      }\r\n\r\n      newline = false;\r\n      ++column;\r\n    }\r\n    ++i;\r\n  }\r\n\r\n  if (state === 2) { // item\r\n    throw new ParsingError(`Unexpected end of file in state ${state}`, line, column);\r\n  }\r\n\r\n  return result;\r\n}\r\n","import * as THREE from 'three';\r\nimport _ from 'lodash';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\nimport StructuralElement from '../../chem/StructuralElement';\r\nimport readCIF from './readCIF';\r\n\r\nconst {\r\n  Complex,\r\n  Element,\r\n  Helix,\r\n  Sheet,\r\n  Strand,\r\n  Assembly,\r\n  Molecule,\r\n} = chem;\r\n\r\nconst cRequiredAtomFields = [\r\n  'auth_seq_id',\r\n  'Cartn_x',\r\n  'Cartn_y',\r\n  'Cartn_z',\r\n  'label_atom_id',\r\n];\r\n\r\nconst cSecondaryCoding = {\r\n  helx: 'helix',\r\n  turn: 'turn',\r\n  strn: 'strand',\r\n};\r\n\r\nfunction getTypeFromId(string) {\r\n  const typeId = /[A-Za-z]+/.exec(string);\r\n  if (!typeId) {\r\n    return null;\r\n  }\r\n\r\n  return cSecondaryCoding[typeId[0].toLowerCase()];\r\n}\r\n\r\n/**\r\n * Make valid object an array\r\n * @param arrayLikeObject\r\n * @return {array, object} array or object\r\n */\r\nfunction arrize(arrayLikeObject) {\r\n  if (arrayLikeObject === null || arrayLikeObject === undefined || _.isArray(arrayLikeObject)) {\r\n    return arrayLikeObject;\r\n  }\r\n  return [arrayLikeObject];\r\n}\r\n\r\nfunction nameToElement(name) {\r\n  // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n  //\r\n  // http://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#note1\r\n  //\r\n  // Atom names start with element symbols right-justified in columns 13-14\r\n  // as permitted by the length of the name. For example, the symbol FE for\r\n  // iron appears in columns 13-14, whereas the symbol C for carbon appears\r\n  // in column 14 (see Misaligned Atom Names). If an atom name has four\r\n  // characters, however, it must start in column 13 even if the element\r\n  // symbol is a single character (for example, see Hydrogen Atoms).\r\n\r\n  const veryLong = name.trim().length === 4;\r\n  return name.slice(0, veryLong ? 1 : 2).trim();\r\n}\r\n\r\nclass AtomDataError extends Error {\r\n  constructor(message) {\r\n    super();\r\n    this.name = 'AtomDataError';\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nfunction _getOperations(operList) {\r\n  if (!operList) {\r\n    return null;\r\n  }\r\n  const idc = arrize(operList.id);\r\n  const { matrix, vector } = operList;\r\n  if (!idc || !matrix || !vector) {\r\n    return null;\r\n  }\r\n\r\n  const ops = [];\r\n  for (let i = 0, n = idc.length; i < n; ++i) {\r\n    const mtx = new THREE.Matrix4();\r\n    const { elements } = mtx;\r\n\r\n    for (let row = 0; row < 3; ++row) {\r\n      const matrixData = matrix[row + 1];\r\n      elements[row] = arrize(matrixData[1])[i];\r\n      elements[row + 4] = arrize(matrixData[2])[i];\r\n      elements[row + 8] = arrize(matrixData[3])[i];\r\n      elements[row + 12] = arrize(vector[row + 1])[i];\r\n    }\r\n    ops[idc[i]] = mtx;\r\n  }\r\n  return ops;\r\n}\r\n\r\nfunction _extractOperations(assemblyGen, opsDict) {\r\n  assemblyGen = _.isString(assemblyGen) ? assemblyGen : `${assemblyGen}`;\r\n  const l = assemblyGen.replace(/\\)\\s*\\(/g, '!').replace(/[()']/g, '');\r\n  const groupStr = l.split('!');\r\n  const gps = [];\r\n\r\n  for (let grIdx = 0, grCount = groupStr.length; grIdx < grCount; ++grIdx) {\r\n    const gr = groupStr[grIdx].split(',');\r\n    const gp = [];\r\n    let idx = 0;\r\n    for (let i = 0, n = gr.length; i < n; ++i) {\r\n      const s = gr[i];\r\n      if (s.includes('-')) {\r\n        const es = s.split('-');\r\n        let j = parseInt(es[0], 10);\r\n        const m = parseInt(es[1], 10);\r\n        for (; j <= m; ++j) {\r\n          gp[idx++] = opsDict[j];\r\n        }\r\n      } else {\r\n        gp[idx++] = opsDict[s];\r\n      }\r\n    }\r\n    gps.push(gp);\r\n  }\r\n\r\n  // traverse all groups from the end of array and make all mults\r\n  const matrices = [];\r\n  let cnt = 0;\r\n  function traverse(level, mtx) {\r\n    for (let ii = 0, nn = gps[level].length; ii < nn; ++ii) {\r\n      const newMtx = mtx ? mtx.clone() : new THREE.Matrix4();\r\n      newMtx.multiplyMatrices(gps[level][ii], newMtx);\r\n      if (level === 0) {\r\n        matrices[cnt++] = newMtx;\r\n      } else {\r\n        traverse(level - 1, newMtx);\r\n      }\r\n    }\r\n  }\r\n  traverse(gps.length - 1);\r\n  return matrices;\r\n}\r\n\r\nclass CIFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n    this.asymDict = {};\r\n    this.molecules = [];\r\n    this._options.fileType = 'cif';\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return _.isString(data) && /^\\s*data_/i.test(data);\r\n  }\r\n\r\n  parseSync() {\r\n    this.logger.info('Parsing CIF file..');\r\n    const data = readCIF(this._data);\r\n    return this._toComplex(data);\r\n  }\r\n\r\n  /**\r\n   * Convert intermediate structure into our valid Complex object\r\n   * @param cifData intermediate CIF object\r\n   * @returns {Complex} complex\r\n   * @private\r\n   */\r\n  _toComplex(cifData) {\r\n    const complex = new Complex();\r\n    const complexData = cifData[Object.keys(cifData)[0]];\r\n    this._extractAtoms(complex, complexData);\r\n    this._extractSecondary(complex, complexData);\r\n    this._extractAssemblies(complex, complexData);\r\n    this._extractMolecules(complex, complexData);\r\n    this._extractMetadata(complex, complexData);\r\n    complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n    });\r\n\r\n    return complex;\r\n  }\r\n\r\n  /**\r\n   * Extract metadata\r\n   * @param complex structure to fill\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n\r\n  _extractMetadata(complex, complexData) {\r\n    const { metadata } = complex;\r\n    metadata.id = complexData.entry.id;\r\n    metadata.classification = complexData.struct_keywords.pdbx_keywords;\r\n    const databaserev = complexData.database_PDB_rev;\r\n    metadata.date = (databaserev && databaserev.date_original) ? databaserev.date_original : '';\r\n    metadata.format = 'cif';\r\n    metadata.title = [];\r\n    metadata.title[0] = complexData.struct.title;\r\n  }\r\n\r\n  /**\r\n   * Extract molecules information from CIF structure (should be called strictly after _extractAtoms)\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractMolecules(complex, complexData) {\r\n    const molData = complexData.entity;\r\n    const names = arrize(molData.pdbx_description);\r\n    const count = names.length;\r\n    let i;\r\n\r\n    // molecules names from cif\r\n    for (i = 0; i < count; i++) {\r\n      if (this.molecules[i]) { // molecule was created during atoms processing\r\n        this.molecules[i].name = names[i];\r\n      } else { // molecule wasn't created, because there is no atom which is contained\r\n        this.molecules[i] = { name: names[i], residues: [] };\r\n      }\r\n    }\r\n\r\n    // reorganize molecules for complex and check chains\r\n    const molecules = complex.getMolecules();\r\n    for (i = 0; i < count; i++) {\r\n      const molecule = this.molecules[i];\r\n      molecules[i] = new Molecule(complex, molecule.name, i + 1);\r\n      molecules[i].residues = molecule.residues;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract atom information from CIF structure and fill complex\r\n   * @param {Complex} complex\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractAtoms(complex, complexData) {\r\n    const atomData = complexData.atom_site;\r\n    if (!atomData) {\r\n      throw new AtomDataError('CIF parsing error: atom_site is not specified!');\r\n    }\r\n\r\n    for (let f = 0, n = cRequiredAtomFields.length; f < n; ++f) {\r\n      if (!atomData[cRequiredAtomFields[f]]) {\r\n        throw new AtomDataError(`CIF parsing error: requires field ${cRequiredAtomFields[f]} not found!`);\r\n      }\r\n    }\r\n\r\n    const { asymDict } = this;\r\n    // required fields\r\n    const resIdc = arrize(atomData.auth_seq_id);\r\n    const x = arrize(atomData.Cartn_x);\r\n    const y = arrize(atomData.Cartn_y);\r\n    const z = arrize(atomData.Cartn_z);\r\n    const names = arrize(atomData.label_atom_id);\r\n    const count = names.length;\r\n    // optional fields\r\n    const group = arrize(atomData.group_PDB) || [];\r\n    const chainIdc = arrize(atomData.auth_asym_id) || [];\r\n    const chainLabelIdc = arrize(atomData.label_asym_id) || [];\r\n    const serials = arrize(atomData.id) || [];\r\n    const iCodes = arrize(atomData.pdbx_PDB_ins_code) || [];\r\n    const resNames = arrize(atomData.label_comp_id) || [];\r\n    const elements = arrize(atomData.type_symbol) || [];\r\n    const tempFactors = arrize(atomData.B_iso_or_equiv) || [];\r\n    const occupancies = arrize(atomData.occupancy) || [];\r\n    const charges = arrize(atomData.pdbx_formal_charge) || [];\r\n    const altLocs = arrize(atomData.label_alt_id) || [];\r\n    const models = arrize(atomData.pdbx_PDB_model_num) || [];\r\n    const molecules = arrize(atomData.label_entity_id) || [];\r\n\r\n    let chain = null;\r\n    let residue = null;\r\n    for (let i = 0; i < count; ++i) {\r\n      const model = models[i] || 1;\r\n      if (model !== 1) {\r\n        continue;\r\n      }\r\n      const chainID = String(chainIdc[i] || ' ');\r\n\r\n      if (!chain || chain.getName() !== chainID) {\r\n        chain = complex.getChain(chainID) || complex.addChain(chainID);\r\n      }\r\n      asymDict[String(chainLabelIdc[i] || ' ')] = chainID;\r\n      const resSeq = resIdc[i];\r\n      const iCode = String(iCodes[i] || ' ');\r\n      const resName = String(resNames[i] || '');\r\n      if (!residue || residue.getSequence() !== resSeq || residue.getICode() !== iCode) {\r\n        residue = chain.addResidue(resName, resSeq, iCode);\r\n\r\n        // store residue in appropriate molecule\r\n        const moleculeIdx = molecules[i] - 1;\r\n        let entity = this.molecules[moleculeIdx];\r\n        if (!entity) { // create new molecule if it hasn't been created\r\n          this.molecules[moleculeIdx] = { name: '', residues: [] };\r\n          entity = this.molecules[moleculeIdx];\r\n        }\r\n        entity.residues.push(residue);\r\n      }\r\n\r\n      const name = names[i];\r\n      const element = elements[i] || nameToElement(name);\r\n      const type = Element.getByName(element);\r\n      const role = Element.Role[name.trim()];\r\n      const xyz = new THREE.Vector3(x[i], y[i], z[i]);\r\n      const het = group[i] === 'HETATM' || false;\r\n      const serial = serials[i] || i;\r\n      const tempFactor = tempFactors[i] || 0.0;\r\n      const occupancy = occupancies[i] || 0.0;\r\n      const altLoc = String(altLocs[i] || '');\r\n      const charge = charges[i] || 0;\r\n\r\n      residue.addAtom(\r\n        name,\r\n        type,\r\n        xyz,\r\n        role,\r\n        het,\r\n        serial,\r\n        altLoc,\r\n        occupancy,\r\n        tempFactor,\r\n        charge,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts secondary structure information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex - complex to fill\r\n   * @param complexData - CIF complex data\r\n   * @private\r\n   */\r\n  _extractSecondary(complex, complexData) {\r\n    if (complexData.struct_conf) {\r\n      this._extractConfs(complex, complexData.struct_conf);\r\n    }\r\n    if (complexData.struct_sheet_range) {\r\n      this._extractSheets(complex, complexData.struct_sheet_range);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts sheets information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex\r\n   * @param sheetData\r\n   * @private\r\n   */\r\n  _extractSheets(complex, sheetData) {\r\n    const { asymDict } = this;\r\n    if (!sheetData.sheet_id || !sheetData.id || !sheetData.beg_label_seq_id || !sheetData.end_label_seq_id\r\n      || !sheetData.beg_label_asym_id) {\r\n      return;\r\n    }\r\n    // Strand(sheet, start, end, sense, cur, prev)\r\n    const sheets = complex._sheets;\r\n\r\n    function getSheet(name) {\r\n      const n = sheets.length;\r\n      for (let i = 0; i < n; ++i) {\r\n        if (sheets[i]._name === name) {\r\n          return sheets[i];\r\n        }\r\n      }\r\n      sheets[n] = new Sheet(name, 0);\r\n      return sheets[n];\r\n    }\r\n\r\n    const sheetNames = arrize(sheetData.sheet_id);\r\n    const strandNames = arrize(sheetData.id);\r\n    const starts = arrize(sheetData.beg_auth_seq_id);\r\n    const ends = arrize(sheetData.end_auth_seq_id);\r\n    const chains = arrize(sheetData.beg_label_asym_id);\r\n    const stICodes = arrize(sheetData.pdbx_beg_PDB_ins_code) || [];\r\n    const endICodes = arrize(sheetData.pdbx_end_PDB_ins_code) || [];\r\n\r\n    for (let i = 0, n = strandNames.length; i < n; ++i) {\r\n      const chain = complex.getChain(asymDict[chains[i]]);\r\n      const sheet = getSheet(sheetNames[i]);\r\n      const startIdx = starts[i];\r\n      const endIdx = ends[i];\r\n      const startICode = stICodes[i] || ' ';\r\n      const endICode = endICodes[i] || ' ';\r\n\r\n      const start = chain.findResidue(startIdx, startICode);\r\n      const end = chain.findResidue(endIdx, endICode);\r\n\r\n      // TODO think about last condition\r\n      if (!start || !end) {\r\n        continue;\r\n      }\r\n\r\n      const strand = new Strand(sheet, start[0], end[0], 0, null, null);\r\n      const residues = chain.getResidues();\r\n      for (let r = start[1]; r <= end[1]; ++r) {\r\n        residues[r]._secondary = strand;\r\n      }\r\n      sheet.addStrand(strand);\r\n      complex.structures.push(strand);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts helix/turn/strand(?) information from CIF intermediate data\r\n   * and adds it into complex\r\n   * @param {Complex} complex\r\n   * @param helicesData\r\n   * @private\r\n   */\r\n  _extractConfs(complex, helicesData) {\r\n    const { asymDict } = this;\r\n    if (!helicesData.conf_type_id || !helicesData.beg_label_seq_id || !helicesData.end_label_seq_id\r\n      || !helicesData.beg_label_asym_id) {\r\n      return;\r\n    }\r\n\r\n    const types = arrize(helicesData.conf_type_id);\r\n    const starts = arrize(helicesData.beg_auth_seq_id);\r\n    const stICodes = arrize(helicesData.pdbx_beg_PDB_ins_code) || [];\r\n    const ends = arrize(helicesData.end_auth_seq_id);\r\n    const endICodes = arrize(helicesData.pdbx_end_PDB_ins_code) || [];\r\n    const comments = arrize(helicesData.details) || [];\r\n    const lengths = arrize(helicesData.pdbx_PDB_helix_length) || [];\r\n    const helixClasses = arrize(helicesData.pdbx_PDB_helix_class) || [];\r\n    const names = arrize(helicesData.id) || [];\r\n    const chains = arrize(helicesData.beg_label_asym_id);\r\n\r\n    for (let i = 0, n = types.length; i < n; ++i) {\r\n      const type = getTypeFromId(types[i]);\r\n      if (!type) {\r\n        continue;\r\n      }\r\n      const name = names[i] || types[i];\r\n      const chain = complex.getChain(asymDict[chains[i]]);\r\n\r\n      const startIdx = starts[i];\r\n      const endIdx = ends[i];\r\n      const startICode = stICodes[i] || ' ';\r\n      const endICode = endICodes[i] || ' ';\r\n\r\n      const start = chain.findResidue(startIdx, startICode);\r\n      const end = chain.findResidue(endIdx, endICode);\r\n\r\n      // TODO think about last condition\r\n      if (!start || !end) {\r\n        continue;\r\n      }\r\n      const comment = comments[i] || '';\r\n      const length = lengths[i] || 0;\r\n      const helixClass = helixClasses[i] || ' ';\r\n      let struct;\r\n      if (type === 'helix') {\r\n        const idx = complex._helices.length;\r\n        struct = new Helix(helixClass, start[0], end[0], idx, name, comment, length);\r\n        complex.addHelix(struct);\r\n        complex.structures.push(struct);\r\n      } else if (type === 'turn') {\r\n        struct = new StructuralElement(StructuralElement.Type.TURN, start[0], end[0]);\r\n        complex.structures.push(struct);\r\n      } else {\r\n        struct = null;\r\n      }\r\n      if (!struct) {\r\n        continue;\r\n      }\r\n      const residues = chain.getResidues();\r\n      for (let r = start[1]; r <= end[1]; ++r) {\r\n        residues[r]._secondary = struct;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extract biological assemblies information from CIF structure and fill complex\r\n   * @param {Complex} complex\r\n   * @param complexData complex data from CIF file\r\n   * @private\r\n   */\r\n  _extractAssemblies(complex, complexData) {\r\n    const { asymDict } = this;\r\n    const asmGen = complexData.pdbx_struct_assembly_gen;\r\n    if (!asmGen) {\r\n      return;\r\n    }\r\n\r\n    const asmIdx = arrize(asmGen.assembly_id);\r\n    const asmOper = arrize(asmGen.oper_expression);\r\n    const asmList = arrize(asmGen.asym_id_list);\r\n    if (!asmIdx || !asmOper || !asmList) {\r\n      return;\r\n    }\r\n\r\n    const operList = _getOperations(complexData.pdbx_struct_oper_list);\r\n    if (!operList) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0, n = asmIdx.length; i < n; ++i) {\r\n      const asm = new Assembly(complex);\r\n      const assemblyOps = _extractOperations(asmOper[i], operList);\r\n      const entries = asmList[i].split(',');\r\n      for (let ii = 0, nn = entries.length; ii < nn; ++ii) {\r\n        const chain = entries[ii].trim();\r\n        if (chain.length > 0) {\r\n          asm.addChain(asymDict[chain]);\r\n        }\r\n      }\r\n      asm.matrices = assemblyOps;\r\n      complex.units.push(asm);\r\n    }\r\n  }\r\n}\r\n\r\nCIFParser.formats = ['cif', 'mmcif'];\r\nCIFParser.extensions = ['.cif', '.mmcif'];\r\n\r\nexport default CIFParser;\r\n","import * as THREE from 'three';\r\nimport _ from 'lodash';\r\nimport Volume from '../../chem/Volume';\r\n\r\nexport const valueType = {\r\n  singular: 0,\r\n  vector: 1,\r\n  array: 2,\r\n  buffer: 3,\r\n};\r\n\r\nclass VolumeModel {\r\n  _xyz2crs = [];\r\n\r\n  _origin = new THREE.Vector3(0, 0, 0);\r\n\r\n  constructor() {\r\n    this._header = {};\r\n    this._boxSize = new THREE.Vector3();\r\n    this._boxStart = new THREE.Vector3();\r\n    this._header.delta = {};\r\n    this._header.extent = [];\r\n    this._header.nstart = [];\r\n    this._header.grid = [];\r\n    this._header.crs2xyz = [];\r\n    this._header.cellDims = new THREE.Vector3();\r\n    this._header.angles = [];\r\n    this._header.origin = new THREE.Vector3(0, 0, 0);\r\n    this._header.dmin = 0;\r\n    this._header.dmean = 0;\r\n    this._header.dmax = 0;\r\n  }\r\n\r\n  _typedCheck() {\r\n    if (_.isTypedArray(this._buff)) {\r\n      this._buff = this._buff.buffer;\r\n    } else if (!_.isArrayBuffer(this._buff)) {\r\n      throw new TypeError('Expected ArrayBuffer or TypedArray');\r\n    }\r\n  }\r\n\r\n  _fillHeader(headerFormat, arrays) {\r\n    for (const key in headerFormat) {\r\n      if (headerFormat.hasOwnProperty(key)) {\r\n        switch (headerFormat[key][0]) {\r\n          case valueType.singular:\r\n            this._header[key] = arrays[headerFormat[key][1]][headerFormat[key][2]];\r\n            break;\r\n\r\n          case valueType.array:\r\n            this._parseArray(this._header[key], arrays[headerFormat[key][1]], headerFormat[key][2]);\r\n            break;\r\n\r\n          case valueType.vector:\r\n            this._parseVector(this._header[key], arrays[headerFormat[key][1]], headerFormat[key][2]);\r\n            break;\r\n\r\n          case valueType.buffer:\r\n            this._header[key] = new Uint8Array(\r\n              arrays[headerFormat[key][1]],\r\n              [headerFormat[key][2]] * 4,\r\n              [headerFormat[key][3]] * 4,\r\n            );\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _parseVector(vector, arr, pos) {\r\n    [vector.x, vector.y, vector.z] = [arr[pos], arr[pos + 1], arr[pos + 2]];\r\n  }\r\n\r\n  _parseArray(vector, arr, pos) {\r\n    vector[0] = arr[pos];\r\n    vector[1] = arr[pos + 1];\r\n    vector[2] = arr[pos + 2];\r\n  }\r\n\r\n  _parseHeader(_buffer) {}\r\n\r\n  _setAxisIndices() {}\r\n\r\n  _setOrigins() {}\r\n\r\n  _getAxis() {\r\n    const header = this._header;\r\n\r\n    const xScale = header.cellDims.x / header.grid[0];\r\n    const yScale = header.cellDims.y / header.grid[1];\r\n    const zScale = header.cellDims.z / header.grid[2];\r\n\r\n    const [alpha, beta, gamma] = header.angles;\r\n\r\n    const z1 = Math.cos(beta);\r\n    const z2 = (Math.cos(alpha) - Math.cos(beta)\r\n      * Math.cos(gamma)) / Math.sin(gamma);\r\n    const z3 = Math.sqrt(1.0 - z1 * z1 - z2 * z2);\r\n\r\n    const xaxis = new THREE.Vector3(xScale, 0, 0);\r\n    const yaxis = new THREE.Vector3(Math.cos(gamma) * yScale, Math.sin(gamma) * yScale, 0);\r\n    const zaxis = new THREE.Vector3(z1 * zScale, z2 * zScale, z3 * zScale);\r\n\r\n    return [xaxis, yaxis, zaxis];\r\n  }\r\n\r\n  _getXYZdim() {\r\n    return [this._header.extent[this._xyz2crs[0]],\r\n      this._header.extent[this._xyz2crs[1]],\r\n      this._header.extent[this._xyz2crs[2]]];\r\n  }\r\n\r\n  _getVolumeInfo() {\r\n    const volInfo = _.pick(this._header, ['dmean', 'dmin', 'dmax', 'sd', 'delta']);\r\n    volInfo.obtuseAngle = this._header.angles.map((angle) => Number(angle >= (Math.PI / 2)));\r\n    return volInfo;\r\n  }\r\n\r\n  _setBoxParams(xaxis, yaxis, zaxis) {\r\n    // if axes are not orthogonal, the origins might not match with box coordinates - need to make shift\r\n    let shiftX = 0;\r\n    let shiftY = 0;\r\n    const [alpha, beta, gamma] = this._header.angles;\r\n\r\n    if (gamma >= Math.PI / 2) {\r\n      shiftX += Math.abs(yaxis.x);\r\n    }\r\n    if (beta >= Math.PI / 2) {\r\n      shiftX += Math.abs(zaxis.x);\r\n    }\r\n    if (alpha >= Math.PI / 2) {\r\n      shiftY += Math.abs(zaxis.y);\r\n    }\r\n\r\n    this._boxStart = new THREE.Vector3(this._origin.x - shiftX, this._origin.y - shiftY, this._origin.z);\r\n    this._boxSize = new THREE.Vector3(\r\n      Math.abs(xaxis.x) + Math.abs(yaxis.x) + Math.abs(zaxis.x),\r\n      Math.abs(yaxis.y) + Math.abs(zaxis.y),\r\n      Math.abs(zaxis.z),\r\n    );\r\n\r\n    const delta = (axe, proj) => (Math.abs(axe[proj]) / this._boxSize[proj]);\r\n    this._header.delta.x = delta(yaxis, 'x');\r\n    this._header.delta.y = delta(zaxis, 'x');\r\n    this._header.delta.z = delta(zaxis, 'y');\r\n  }\r\n\r\n  _getXYZbox() {\r\n    return new THREE.Box3(this._boxStart.clone(), this._boxStart.clone().add(this._boxSize));\r\n  }\r\n\r\n  _toXYZData() {}\r\n\r\n  parse(data) {\r\n    this._parseHeader(data);\r\n    this._setOrigins();\r\n    return new Volume(Float32Array, this._getXYZdim(), this._getXYZbox(), 1, this._toXYZData(), this._getVolumeInfo());\r\n  }\r\n}\r\n\r\nexport default VolumeModel;\r\n","import Parser from './Parser';\r\nimport VolumeModel, { valueType } from './VolumeModel';\r\n\r\nconst CCP4Header = {\r\n  extent: [valueType.array, 'u32', 0],\r\n  type: [valueType.singular, 'u32', 3],\r\n  nstart: [valueType.array, 'i32', 4],\r\n  grid: [valueType.array, 'u32', 7],\r\n  cellDims: [valueType.vector, 'f32', 10],\r\n  angles: [valueType.array, 'f32', 13],\r\n  crs2xyz: [valueType.array, 'i32', 16],\r\n  dmin: [valueType.singular, 'f32', 19],\r\n  dmax: [valueType.singular, 'f32', 20],\r\n  dmean: [valueType.singular, 'f32', 21],\r\n  ispg: [valueType.singular, 'u32', 22],\r\n  nsymbt: [valueType.singular, 'u32', 23],\r\n  lksflg: [valueType.singular, 'u32', 24],\r\n  customData: [valueType.buffer, 'buffer', 25, 9],\r\n  origin: [valueType.vector, 'f32', 34],\r\n  map: [valueType.buffer, 'buffer', 52, 1],\r\n  machine: [valueType.singular, 'u32', 53],\r\n  sd: [valueType.singular, 'f32', 54],\r\n  nlabel: [valueType.singular, 'f32', 55],\r\n  label: [valueType.buffer, 'buffer', 56, 200],\r\n};\r\n\r\nclass Ccp4Model extends VolumeModel {\r\n  // read header (http://www.ccp4.ac.uk/html/maplib.html)\r\n  _parseHeader(_buffer) {\r\n    this._buff = _buffer;\r\n    this._typedCheck();\r\n    const arrays = {};\r\n    arrays.u32 = new Uint32Array(this._buff, 0, 56);\r\n    arrays.i32 = new Int32Array(this._buff, 0, 56);\r\n    arrays.f32 = new Float32Array(this._buff, 0, 56);\r\n    arrays.buffer = this._buff;\r\n    const header = this._header;\r\n\r\n    this._fillHeader(CCP4Header, arrays);\r\n\r\n    // calculate non-orthogonal unit cell coordinates\r\n    header.angles.forEach((angle, i, a) => { a[i] *= Math.PI / 180.0; });\r\n  }\r\n\r\n  _setAxisIndices() {\r\n    const header = this._header;\r\n\r\n    if (header.cellDims.x === 0.0 && header.cellDims.y === 0.0 && header.cellDims.z === 0.0) {\r\n      header.cellDims.set(1.0, 1.0, 1.0);\r\n    }\r\n    // Apply header conversion\r\n    // Mapping between CCP4 column, row, section and VMD x, y, z.\r\n    const { crs2xyz } = this._header;\r\n    if (crs2xyz[0] === 0 && crs2xyz[1] === 0 && crs2xyz[2] === 0) {\r\n      crs2xyz[0] = 1;\r\n      crs2xyz[1] = 2;\r\n      crs2xyz[2] = 3;\r\n    }\r\n\r\n    const xyz2crs = this._xyz2crs;\r\n    xyz2crs[crs2xyz[0] - 1] = 0; // column\r\n    xyz2crs[crs2xyz[1] - 1] = 1; // row\r\n    xyz2crs[crs2xyz[2] - 1] = 2; // section\r\n  }\r\n\r\n  _setOrigins() {\r\n    const [xaxis, yaxis, zaxis] = this._getAxis();\r\n    this._setAxisIndices();\r\n\r\n    const header = this._header;\r\n    const xyz2crs = this._xyz2crs;\r\n    // Handle both MRC-2000 and older format maps\r\n    if (header.origin.x === 0.0 && header.origin.y === 0.0 && header.origin.z === 0.0) {\r\n      this._origin.addScaledVector(xaxis, header.nstart[xyz2crs[0]]);\r\n      this._origin.addScaledVector(yaxis, header.nstart[xyz2crs[1]]);\r\n      this._origin.addScaledVector(zaxis, header.nstart[xyz2crs[2]]);\r\n    } else {\r\n      this._origin = header.origin;\r\n      // Use ORIGIN records rather than old n[xyz]start records\r\n      //   http://www2.mrc-lmb.cam.ac.uk/image2000.html\r\n      // XXX the ORIGIN field is only used by the EM community, and\r\n      // has undefined meaning for non-orthogonal maps and/or non-cubic voxels, etc.\r\n    }\r\n    xaxis.multiplyScalar(header.extent[xyz2crs[0]] - 1);\r\n    yaxis.multiplyScalar(header.extent[xyz2crs[1]] - 1);\r\n    zaxis.multiplyScalar(header.extent[xyz2crs[2]] - 1);\r\n\r\n    if (header.type === 2) {\r\n      this._data = new Float32Array(\r\n        this._buff,\r\n        1024 + header.nsymbt,\r\n        header.extent[0] * header.extent[1] * header.extent[2],\r\n      );\r\n    } else {\r\n      throw new Error(`CCP4: Unsupported format ${header.type}`);\r\n    }\r\n\r\n    this._setBoxParams(xaxis, yaxis, zaxis);\r\n  }\r\n\r\n  _toXYZData() {\r\n    const header = this._header;\r\n    const data = this._data;\r\n    const xyz2crs = this._xyz2crs;\r\n    const xyzData = new Float32Array(data.length);\r\n\r\n    const dim = this._getXYZdim();\r\n    const xSize = dim[0];\r\n    const ySize = dim[1];\r\n\r\n    let crsIdx = 0;\r\n    const coord = [];\r\n    let x;\r\n    let y;\r\n    let z;\r\n    for (coord[2] = 0; coord[2] < header.extent[2]; coord[2]++) { // Site\r\n      for (coord[1] = 0; coord[1] < header.extent[1]; coord[1]++) { // Row\r\n        for (coord[0] = 0; coord[0] < header.extent[0]; coord[0]++, crsIdx++) { // Column\r\n          x = coord[xyz2crs[0]];\r\n          y = coord[xyz2crs[1]];\r\n          z = coord[xyz2crs[2]];\r\n          xyzData[x + xSize * (y + ySize * z)] = data[crsIdx];\r\n        }\r\n      }\r\n    }\r\n\r\n    return xyzData;\r\n  }\r\n}\r\n\r\nclass CCP4Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n    this._options.fileType = 'ccp4';\r\n    this.model = new Ccp4Model();\r\n  }\r\n\r\n  static canProbablyParse(_data) {\r\n    return false; // Autodetection is not implemented yet\r\n  }\r\n\r\n  parseSync() {\r\n    return this.model.parse(this._data);\r\n  }\r\n}\r\n\r\nCCP4Parser.formats = ['ccp4'];\r\nCCP4Parser.extensions = ['.ccp4', '.map', '.mrc'];\r\nCCP4Parser.binary = true;\r\n\r\nexport default CCP4Parser;\r\n","import * as THREE from 'three';\r\nimport _ from 'lodash';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\n\r\nconst { Complex, Element, Molecule } = chem;\r\n\r\nclass XYZParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n\r\n    this._complex = null;\r\n    this._atomsInf = null;\r\n\r\n    this._options.fileType = 'xyz';\r\n    this._fileName = options.name;\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return _.isString(data) && /^\\s*\\d+ *\\n[^\\n]*\\n\\s*\\w{1,3}\\s+-?\\d/.test(data);\r\n  }\r\n\r\n  _parseToAtomsInf(source) {\r\n    const endnAtoms = source.indexOf('\\n');\r\n    const nAtoms = parseInt(source.substring(0, endnAtoms), 10);\r\n    const endComment = source.indexOf('\\n', endnAtoms + 1);\r\n    let comment = source.slice(endnAtoms + 1, endComment).trim();\r\n    if (comment.length === 0) {\r\n      comment = this._fileName;\r\n    }\r\n\r\n    const startAtomsInf = endComment + source.substring(endComment).search(/\\S/);\r\n    this._atomsInf = source.substring(startAtomsInf).split(/[\\s,]*\\n[\\s,]*/);\r\n    if (!Number.isNaN(nAtoms) && (this._atomsInf.length - 1 !== nAtoms)) {\r\n      this._complex.error = {\r\n        message: 'wrong number of atoms',\r\n      };\r\n      return;\r\n    }\r\n\r\n    this._complex.metadata.format = 'xyz';\r\n    this._complex.name = comment;\r\n  }\r\n\r\n  _parseAtomsInf() {\r\n    const het = true;\r\n    const altLoc = ' ';\r\n    const occupancy = 1;\r\n    const tempFactor = 1;\r\n    const charge = 0;\r\n\r\n    const chain = this._complex.addChain('A');\r\n    const residue = chain.addResidue('UNK', 1, ' ');\r\n\r\n    for (let i = 0; i < this._atomsInf.length - 1; i++) {\r\n      const words = this._atomsInf[i].split(/[\\s,]+/);\r\n\r\n      if (words.length !== 4) {\r\n        this._complex.error = {\r\n          message: 'missed parameters',\r\n        };\r\n        break;\r\n      }\r\n\r\n      const serial = i + 1;\r\n      const name = words[0];\r\n      const xyz = new THREE.Vector3(parseFloat(words[1]), parseFloat(words[2]), parseFloat(words[3]));\r\n      const type = Element.getByName(name);\r\n      const role = undefined;\r\n\r\n      residue.addAtom(name, type, xyz, role, het, serial, altLoc, occupancy, tempFactor, charge);\r\n    }\r\n\r\n    const molecule = new Molecule(this._complex, this._complex.name, 1);\r\n    molecule.residues = residue;\r\n    this._complex._molecules[0] = molecule;\r\n  }\r\n\r\n  parseSync() {\r\n    const result = this._complex = new Complex();\r\n\r\n    this._parseToAtomsInf(this._data);\r\n    this._parseAtomsInf();\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap,\r\n    });\r\n\r\n    this._complex = null;\r\n    this._atomsInf = null;\r\n\r\n    if (result.error) {\r\n      throw new Error(result.error.message);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static formats = ['xyz'];\r\n\r\n  static extensions = ['.xyz'];\r\n}\r\n\r\nexport default XYZParser;\r\n","import * as THREE from 'three';\r\nimport _ from 'lodash';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\n\r\nconst { Complex, Element } = chem;\r\n\r\nclass PubChemParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n    this._options.fileType = 'pubchem+json';\r\n  }\r\n\r\n  static canProbablyParse(data) {\r\n    return _.isString(data) && data[0] === '{';\r\n  }\r\n\r\n  parseSync() {\r\n    this.logger.info('Parsing PubChem JSON file...');\r\n    return this._toComplex(JSON.parse(this._data));\r\n  }\r\n\r\n  _toComplex(jsonData) {\r\n    const complex = new Complex();\r\n    const complexData = jsonData.PC_Compounds && jsonData.PC_Compounds[0];\r\n    if (complexData) {\r\n      this._extractAtoms(complex, complexData);\r\n      complex.finalize({\r\n        needAutoBonding: false,\r\n        detectAromaticLoops: this.settings.now.aromatic,\r\n        enableEditing: this.settings.now.editing,\r\n      });\r\n    }\r\n    return complex;\r\n  }\r\n\r\n  _extractAtoms(complex, complexData) {\r\n    let aids = complexData.atoms && complexData.atoms.aid;\r\n    let elements = aids && complexData.atoms.element;\r\n    if (!elements || aids.length !== elements.length) {\r\n      throw new Error('Unable to parse atom elements');\r\n    }\r\n    elements = _.fromPairs(_.zip(aids, elements));\r\n    const atoms = {};\r\n\r\n    const coords = complexData.coords && complexData.coords[0];\r\n    const model = coords && coords.conformers && coords.conformers[0];\r\n    const xs = model && model.x;\r\n    const ys = model && model.y;\r\n    const zs = (model && model.z) || [];\r\n    aids = coords && coords.aid;\r\n    if (!aids || !xs || !ys) {\r\n      throw new Error('Coordinates are not found in the file');\r\n    }\r\n\r\n    const chain = complex.addChain(' ');\r\n    const residue = chain.addResidue('UNK', 1, ' ');\r\n\r\n    for (let i = 0, n = aids.length; i < n; ++i) {\r\n      const aid = aids[i];\r\n      const element = Element.ByAtomicNumber[elements[aid]];\r\n      const xyz = new THREE.Vector3(xs[i], ys[i], zs[i] || 0.0);\r\n      atoms[aid] = residue.addAtom(element.name, element, xyz, undefined, true, aid, ' ', 1.0, 0.0, 0);\r\n    }\r\n\r\n    const aids1 = complexData.bonds && complexData.bonds.aid1;\r\n    const aids2 = complexData.bonds && complexData.bonds.aid2;\r\n    const orders = (complexData.bonds && complexData.bonds.order) || [];\r\n    if (!aids1 || !aids2 || aids1.length !== aids2.length) {\r\n      return;\r\n    }\r\n\r\n    for (let j = 0, m = aids1.length; j < m; ++j) {\r\n      complex.addBond(atoms[aids1[j]], atoms[aids2[j]], orders[j] || 1, 0, true);\r\n    }\r\n  }\r\n}\r\n\r\nPubChemParser.formats = ['pubchem', 'pubchem+json', 'pc'];\r\nPubChemParser.extensions = ['.json'];\r\n\r\nexport default PubChemParser;\r\n","import _ from 'lodash';\r\n\r\nexport default class SDFStream {\r\n  constructor(data) {\r\n    this._strings = data.split(/\\r?\\n|\\r/);\r\n    this._currentStart = 0;\r\n    this._currentStringIndx = 0;\r\n  }\r\n\r\n  setStart(start) {\r\n    if (start >= this._strings.length) {\r\n      this._currentStart = this._strings.length - 1;\r\n      this._currentStringIndx = this._strings.length - 1;\r\n    } else {\r\n      this._currentStart = start;\r\n      this._currentStringIndx = start;\r\n    }\r\n  }\r\n\r\n  getNextString() {\r\n    return this._strings[++this._currentStringIndx];\r\n  }\r\n\r\n  getCurrentString() {\r\n    return this._strings[this._currentStringIndx];\r\n  }\r\n\r\n  getStringFromStart(numb) {\r\n    this._currentStringIndx = this._currentStart + numb;\r\n    return this._strings[this._currentStart + numb];\r\n  }\r\n\r\n  findNextDataItem() {\r\n    let curStr = this.getNextString();\r\n    let res = false;\r\n    while (!_.isUndefined(curStr) && curStr.trim() !== '$$$$') {\r\n      if (curStr.match(/>\\s+<(.*)>/)) {\r\n        res = true;\r\n        break;\r\n      }\r\n      curStr = this.getNextString();\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  findNextCompoundStart() {\r\n    let curStr = this.getCurrentString();\r\n    while (!_.isUndefined(curStr) && curStr.trim() !== '$$$$') {\r\n      curStr = this.getNextString();\r\n    }\r\n    this.setStart(++this._currentStringIndx);\r\n    return this.probablyHaveDataToParse();\r\n  }\r\n\r\n  probablyHaveDataToParse() {\r\n    return this._currentStringIndx < this._strings.length - 2;\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport _ from 'lodash';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\nimport SDFStream from './SDFStream';\r\nimport Assembly from '../../chem/Assembly';\r\n\r\nconst {\r\n  Complex,\r\n  Element,\r\n  Bond,\r\n  Molecule,\r\n} = chem;\r\n\r\nconst chargeMap = [0, 3, 2, 1, 0, -1, -2, -3];\r\nconst orderMap = [0, 1, 2, 3, 1, 1, 1, 2];\r\nconst typeMap = [\r\n  Bond.BondType.UNKNOWN, // 0 - error\r\n  Bond.BondType.COVALENT, // 1 - single\r\n  Bond.BondType.COVALENT, // 2 - double\r\n  Bond.BondType.COVALENT, // 3 - triple\r\n  Bond.BondType.AROMATIC, // 4 - aromatic\r\n  Bond.BondType.UNKNOWN, // 5 - single or double\r\n  Bond.BondType.AROMATIC, // 6 - single or aromatic\r\n  Bond.BondType.AROMATIC, // 7 - double or aromatic\r\n  // 8 - any\r\n  // 9 - coordination\r\n  // 10 - hydrogen\r\n];\r\n\r\nconst sdfAndMolRegexp = /.*(M\\s\\sEND).*|.*(^$$$$).*|.*>\\s+<(.+)>.*/;\r\nconst sdfRegExp = /.*($$$$).*|.*>\\s+<(.+)>.*/;\r\n\r\nconst fileFormat = { SDF: 'sdf', MOL: 'mol' };\r\n\r\nconst possibleNameTags = ['PUBCHEM_IUPAC_TRADITIONAL_NAME', /PUBCHEM_(.+)_NAME/, /(.+)name/, /(.+)NAME/];\r\nconst possibleIDTags = ['PUBCHEM_COMPOUND_CID', 'id', 'ID', /.*CID/, /.*ID/, /.*id/];\r\nconst possibleTitleTags = ['msg', 'MSG', 'message', 'title', 'description', 'desc'];\r\nconst tagsNames = ['name', 'id', 'title'];\r\nconst tags = { name: possibleNameTags, id: possibleIDTags, title: possibleTitleTags };\r\n\r\nfunction buildChainID(index) {\r\n  if (!index) {\r\n    return 'A';\r\n  }\r\n\r\n  const codes = [];\r\n  while (index) {\r\n    codes.push(65 + (index % 26));\r\n    index = Math.trunc(index / 26);\r\n  }\r\n  if (codes.length > 1) {\r\n    codes.reverse();\r\n    codes[0] -= 1;\r\n  }\r\n\r\n  return String.fromCharCode(...codes);\r\n}\r\n\r\nexport default class SDFParser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n    this._format = 'sdf';\r\n    this._complex = null;\r\n    this._chain = null;\r\n    this._residue = null;\r\n    this._molecules = null;\r\n    this._metadata = {};\r\n    this._metadata.molecules = [];\r\n    this._currentMolProps = {};\r\n    this._compoundIndx = -1;\r\n    this._assemblies = [];\r\n    this._atomsParsed = 0;\r\n    this._atomsIndexes = [];\r\n  }\r\n\r\n  canProbablyParse(data) {\r\n    return _.isString(data) && sdfAndMolRegexp.test(data);\r\n  }\r\n\r\n  _parseHeader(stream) {\r\n    const molecule = {};\r\n    molecule.name = stream.getStringFromStart(0);\r\n    const date = parseInt(stream.getStringFromStart(1).substr(10, 6).trim(), 10);\r\n    molecule.date = date.toString() || '';\r\n    molecule.title = stream.getStringFromStart(2);\r\n    this._metadata.molecules.push(molecule);\r\n  }\r\n\r\n  _parseAtoms(stream, atomsNum) {\r\n    let curStr;\r\n    let serial = this._atomsParsed;\r\n\r\n    // each molecule = chain\\residue\r\n    const chainID = buildChainID(this._compoundIndx);\r\n    const resName = 'UNK';\r\n    const resSeq = 1;\r\n\r\n    this._chain = this._complex.getChain(chainID) || this._complex.addChain(chainID);\r\n    this._residue = this._chain.addResidue(resName, resSeq, ' ');\r\n\r\n    for (let i = 0; i < atomsNum; i++) {\r\n      curStr = stream.getNextString();\r\n      serial++;\r\n      const x = parseFloat(curStr.substr(0, 10));\r\n      const y = parseFloat(curStr.substr(10, 10));\r\n      const z = parseFloat(curStr.substr(20, 10));\r\n      const charge = chargeMap[parseInt(curStr.substr(36, 3), 10)];\r\n      const xyz = new THREE.Vector3(x, y, z);\r\n      let name = curStr.substr(31, 3).trim().toUpperCase();\r\n      const type = Element.getByName(name);\r\n      if (!this._atomsIndexes[name]) {\r\n        this._atomsIndexes[name] = 0;\r\n      }\r\n      this._atomsIndexes[name] += 1;\r\n      name += this._atomsIndexes[name]; // every atom need to have unique name.\r\n\r\n      this._residue.addAtom(name, type, xyz, undefined, true, serial, ' ', 1.0, 0.0, charge);\r\n    }\r\n  }\r\n\r\n  _parseBonds(stream, bondsNum) {\r\n    let curStr;\r\n\r\n    for (let i = 0; i < bondsNum; i++) {\r\n      curStr = stream.getNextString();\r\n      let atom1 = parseInt(curStr.substr(0, 3), 10) + this._atomsParsed;\r\n      let atom2 = parseInt(curStr.substr(3, 3), 10) + this._atomsParsed;\r\n      const bondType = parseInt(curStr.substr(6, 3), 10);\r\n\r\n      if (atom1 > atom2) {\r\n        [atom1, atom2] = [atom2, atom1];\r\n      }\r\n      this._complex.addBond(\r\n        atom1,\r\n        atom2,\r\n        orderMap[bondType] || 1,\r\n        typeMap[bondType] || Bond.BondType.UNKNOWN,\r\n        true,\r\n      );\r\n    }\r\n  }\r\n\r\n  _parseMOL(stream) {\r\n    this._compoundIndx++;\r\n\r\n    this._parseHeader(stream);\r\n    const countsLine = stream.getStringFromStart(3);\r\n    const atomsNum = parseInt(countsLine.substr(0, 3), 10);\r\n    const bondsNum = parseInt(countsLine.substr(3, 3), 10);\r\n    this._parseAtoms(stream, atomsNum);\r\n    this._parseBonds(stream, bondsNum);\r\n\r\n    this._atomsParsed += atomsNum;\r\n\r\n    this._metadata.molecules[this._compoundIndx]._residues = [];\r\n    this._metadata.molecules[this._compoundIndx]._residues.push(this._residue);\r\n  }\r\n\r\n  _parseDataItem(stream) {\r\n    const tag = stream.getCurrentString();\r\n\r\n    let data = [];\r\n    let curStr = stream.getNextString();\r\n\r\n    // read data\r\n    while (curStr.trim() !== '') {\r\n      data.push(curStr);\r\n      curStr = stream.getNextString();\r\n    }\r\n    if (data.length === 1) {\r\n      [data] = data;\r\n    }\r\n    this._currentMolProps[tag.replace(/[<>]/g, '').trim()] = data;\r\n  }\r\n\r\n  _parseCompound(stream) {\r\n    this._parseMOL(stream);\r\n\r\n    // parse data items block\r\n    if (this._format === fileFormat.SDF) {\r\n      this._currentMolProps = {};\r\n      while (stream.findNextDataItem()) {\r\n        this._parseDataItem(stream);\r\n      }\r\n      if (Object.keys(this._currentMolProps).length !== 0) {\r\n        const molecule = this._metadata.molecules[this._compoundIndx];\r\n        molecule.props = this._currentMolProps;\r\n        this._tryToUpdateMoleculeData(molecule);\r\n      }\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = this._serialAtomMap;\r\n    const complex = this._complex;\r\n\r\n    const bonds = complex._bonds;\r\n    for (let j = 0; j < bonds.length; j++) {\r\n      const bond = bonds[j];\r\n      if (bond._right < bond._left) {\r\n        console.log('_fixBondsArray: Logic error.');\r\n      }\r\n      bond._left = serialAtomMap[bond._left] || null;\r\n      bond._right = serialAtomMap[bond._right] || null;\r\n    }\r\n  }\r\n\r\n  _buildAssemblies() {\r\n    const chains = this._complex._chains;\r\n\r\n    if (chains.length === 1) {\r\n      return this._assemblies;\r\n    }\r\n\r\n    for (let i = 0; i < chains.length; i++) {\r\n      const assembly = new Assembly(this._complex);\r\n      const matrix = new THREE.Matrix4();\r\n      assembly.addMatrix(matrix);\r\n      assembly.addChain(chains[i]._name);\r\n      this._assemblies.push(assembly);\r\n    }\r\n\r\n    return this._assemblies;\r\n  }\r\n\r\n  _buildMolecules() {\r\n    this._complex._molecules = [];\r\n    const { molecules } = this._metadata;\r\n    for (let i = 0; i < molecules.length; i++) {\r\n      const molecule = new Molecule(this._complex, molecules[i].name, i + 1);\r\n      molecule.residues = molecules[i]._residues;\r\n      this._complex._molecules[i] = molecule;\r\n    }\r\n\r\n    return this._complex._molecules;\r\n  }\r\n\r\n  _searchTag(tag, props) {\r\n    for (let i = 0; i < props.length; i++) {\r\n      if ((tag instanceof RegExp && tag.test(props[i].tag)) || tag === props[i].tag) {\r\n        return props[i].data;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  _tryToFind(tagsList, props) {\r\n    for (let j = 0; j < tagsList.length; j++) {\r\n      const res = this._searchTag(tagsList[j], props);\r\n      if (res) {\r\n        return res;\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  _tryToUpdateMoleculeData(molecule) {\r\n    let res = false;\r\n    for (let i = 0; i < tagsNames.length; i++) {\r\n      const tagPossibleNames = tags[tagsNames[i]];\r\n      const data = this._tryToFind(tagPossibleNames, molecule.props);\r\n      if (data) {\r\n        molecule[tagsNames[i]] = data;\r\n        res = true;\r\n      }\r\n    }\r\n\r\n    molecule.name = molecule.name || molecule.id;\r\n    if (molecule.name.match(/^\\d+$/)) {\r\n      molecule.name = `CID: ${molecule.name}`;\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  _finalizeMetadata() {\r\n    const { molecules } = this._metadata;\r\n    const { metadata } = this._complex;\r\n    const complex = this._complex;\r\n\r\n    if (molecules.length === 1) {\r\n      complex.name = molecules[0].name;\r\n      metadata.title = molecules[0].title;\r\n      metadata.date = molecules[0].date;\r\n      metadata.properties = molecules[0].props;\r\n    } else if (molecules.length > 1) {\r\n      metadata.molecules = [];\r\n      for (let i = 0; i < molecules.length; i++) {\r\n        metadata.molecules.push({\r\n          name: molecules[i].name, date: molecules[i].date, title: molecules[i].title, properties: molecules[i].props,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  _finalize() {\r\n    const serialAtomMap = this._serialAtomMap = {};\r\n    const atoms = this._complex._atoms;\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const atom = atoms[i];\r\n      serialAtomMap[atom.serial] = atom;\r\n    }\r\n\r\n    this._complex._finalizeBonds();\r\n    this._fixBondsArray();\r\n    this._finalizeMetadata();\r\n    this._buildAssemblies();\r\n    this._complex.units = this._complex.units.concat(this._assemblies);\r\n    this._buildMolecules();\r\n    this._complex.finalize({\r\n      needAutoBonding: false, detectAromaticLoops: false, enableEditing: false, serialAtomMap: this._serialAtomMap,\r\n    });\r\n  }\r\n\r\n  defineFormat(data) {\r\n    let format;\r\n    if (sdfRegExp.test(data)) {\r\n      format = fileFormat.SDF;\r\n    } else {\r\n      format = fileFormat.MOL;\r\n    }\r\n\r\n    return format;\r\n  }\r\n\r\n  parseSync() {\r\n    const result = this._complex = new Complex();\r\n    const stream = new SDFStream(this._data);\r\n\r\n    this._format = this.defineFormat(this._data);\r\n    result.metadata.format = this._format;\r\n\r\n    do {\r\n      this._parseCompound(stream);\r\n    } while (stream.findNextCompoundStart());\r\n\r\n    this._finalize();\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nSDFParser.formats = ['mol', 'sdf'];\r\nSDFParser.extensions = ['.mol', '.sdf'];\r\n","import * as THREE from 'three';\r\nimport Parser from './Parser';\r\nimport VolumeModel, { valueType } from './VolumeModel';\r\n\r\n// http://www.uoxray.uoregon.edu/tnt/manual/node104.html\r\nconst DSN6Header = {\r\n  nstart: [valueType.array, 'i16', 0],\r\n  extent: [valueType.array, 'i16', 3],\r\n  grid: [valueType.array, 'i16', 6],\r\n  cellDims: [valueType.vector, 'i16', 9],\r\n  angles: [valueType.array, 'i16', 12],\r\n  div: [valueType.singular, 'i16', 15],\r\n  adder: [valueType.singular, 'i16', 16],\r\n  scaleFactor: [valueType.singular, 'i16', 17],\r\n};\r\n\r\nclass DSN6Model extends VolumeModel {\r\n  _parseHeader(_buffer) {\r\n    this._buff = _buffer;\r\n    this._typedCheck();\r\n\r\n    const arrays = {};\r\n    arrays.i16 = new Int16Array(this._buff);\r\n\r\n    // check and reverse if big endian\r\n    if (arrays.i16[18] !== 100) {\r\n      for (let i = 0, n = arrays.i16.length; i < n; ++i) {\r\n        const val = arrays.i16[i];\r\n        arrays.i16[i] = ((val & 0xff) << 8) | ((val >> 8) & 0xff);\r\n      }\r\n    }\r\n    if (arrays.i16[18] !== 100) {\r\n      throw new Error('DSN6: Incorrect format ');\r\n    }\r\n\r\n    const header = this._header;\r\n\r\n    this._fillHeader(DSN6Header, arrays);\r\n    header.cellDims.multiplyScalar(1.0 / header.scaleFactor);\r\n    header.angles.forEach((angle, i, a) => { a[i] *= (Math.PI / 180.0) / header.scaleFactor; });\r\n    header.div /= 100;\r\n  }\r\n\r\n  _setAxisIndices() {\r\n    this._xyz2crs[0] = 0;\r\n    this._xyz2crs[1] = 1;\r\n    this._xyz2crs[2] = 2;\r\n  }\r\n\r\n  _setOrigins() {\r\n    const header = this._header;\r\n    const [xaxis, yaxis, zaxis] = this._getAxis();\r\n    this._setAxisIndices();\r\n\r\n    this._origin.addScaledVector(xaxis, header.nstart[0]);\r\n    this._origin.addScaledVector(yaxis, header.nstart[1]);\r\n    this._origin.addScaledVector(zaxis, header.nstart[2]);\r\n\r\n    xaxis.multiplyScalar(header.extent[0]);\r\n    yaxis.multiplyScalar(header.extent[1]);\r\n    zaxis.multiplyScalar(header.extent[2]);\r\n\r\n    this._setBoxParams(xaxis, yaxis, zaxis);\r\n  }\r\n\r\n  _pointCalculate(xyzData, byteBuffer, z, y, x, pos, i) {\r\n    const header = this._header;\r\n\r\n    if (x < header.extent[0] && y < header.extent[1] && z < header.extent[2]) {\r\n      const idx = x + header.extent[0] * (y + header.extent[1] * z);\r\n      xyzData[idx] = (byteBuffer[pos.counter] - header.adder) / header.div;\r\n      ++pos.counter;\r\n    } else {\r\n      pos.counter += 8 - i;\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  _blockCalculate(xyzData, byteBuffer, zBlock, yBlock, xBlock, pos) {\r\n    for (let k = 0; k < 8; ++k) {\r\n      const z = 8 * zBlock + k;\r\n      for (let j = 0; j < 8; ++j) {\r\n        const y = 8 * yBlock + j;\r\n        let inRange = true;\r\n        let i = 0;\r\n        while (inRange && i < 8) {\r\n          const x = 8 * xBlock + i;\r\n          inRange = this._pointCalculate(xyzData, byteBuffer, z, y, x, pos, i);\r\n          i++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _toXYZData() {\r\n    const header = this._header;\r\n    const byteBuffer = new Uint8Array(this._buff);\r\n    const xyzData = new Float32Array(header.extent[0] * header.extent[1] * header.extent[2]);\r\n\r\n    const blocks = new THREE.Vector3(header.extent[0] / 8, header.extent[1] / 8, header.extent[2] / 8);\r\n\r\n    const pos = {};\r\n    pos.counter = 512;\r\n\r\n    for (let zBlock = 0; zBlock < blocks.z; ++zBlock) {\r\n      for (let yBlock = 0; yBlock < blocks.y; ++yBlock) {\r\n        for (let xBlock = 0; xBlock < blocks.x; ++xBlock) {\r\n          this._blockCalculate(xyzData, byteBuffer, zBlock, yBlock, xBlock, pos);\r\n        }\r\n      }\r\n    }\r\n    this._calculateInfoParams(xyzData);\r\n    return xyzData;\r\n  }\r\n\r\n  _calculateInfoParams(xyzData) {\r\n    this._header.dmean /= xyzData.length;\r\n    let dispersion = 0;\r\n    let minDensity = xyzData[0];\r\n    let maxDensity = xyzData[0];\r\n    for (let j = 0; j < xyzData.length; j++) {\r\n      dispersion += (this._header.dmean - xyzData[j]) ** 2;\r\n\r\n      if (xyzData[j] < minDensity) {\r\n        minDensity = xyzData[j];\r\n      }\r\n      if (xyzData[j] > maxDensity) {\r\n        maxDensity = xyzData[j];\r\n      }\r\n    }\r\n    this._header.sd = Math.sqrt(dispersion / xyzData.length);\r\n    this._header.dmax = maxDensity;\r\n    this._header.dmin = minDensity;\r\n  }\r\n}\r\n\r\nclass DSN6Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n    this._options.fileType = 'dsn6';\r\n    this.model = new DSN6Model();\r\n  }\r\n\r\n  static canParse(data, options) {\r\n    if (!data) {\r\n      return false;\r\n    }\r\n    return data instanceof ArrayBuffer && Parser.checkDataTypeOptions(options, 'dsn6');\r\n  }\r\n\r\n  static canProbablyParse(_data) {\r\n    return false;\r\n  }\r\n\r\n  parseSync() {\r\n    return this.model.parse(this._data);\r\n  }\r\n}\r\n\r\nDSN6Parser.formats = ['dsn6'];\r\nDSN6Parser.extensions = ['.dsn6', '.omap'];\r\nDSN6Parser.binary = true;\r\n\r\nexport default DSN6Parser;\r\n","import PDBStream from './PDBStream';\r\n\r\n/**\r\n * Little helper class for GRO Parser usage.\r\n * @extends PDBStream\r\n */\r\nclass GROReader extends PDBStream {\r\n  constructor(data) {\r\n    super(data);\r\n    /** @type Number */\r\n    this._next = -1; // End position of line\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Getting end of string.\r\n   * @returns {Number} Pointer to end of string\r\n   */\r\n  getNext() {\r\n    return this._next;\r\n  }\r\n}\r\n\r\nexport default GROReader;\r\n","import * as THREE from 'three';\r\nimport _ from 'lodash';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\nimport GROReader from './GROReader';\r\n\r\nconst {\r\n  Complex,\r\n  Element,\r\n  Molecule,\r\n} = chem;\r\n\r\n/**\r\n * Gromos87 file format parser.\r\n * @extends Parser\r\n */\r\nclass GROParser extends Parser {\r\n  /**\r\n   * Create parser for .gro file format\r\n   *\r\n   * @param {String} data Input file\r\n   * @param {String} options Input options (optional field)\r\n   */\r\n  constructor(data, options) {\r\n    super(data, options);\r\n    /** @type Date */\r\n    this._time = null; // Time in ps, optional field for animations\r\n    /** @type Number */\r\n    this._numAtoms = null; // Number of atoms in complex\r\n    /** @type Number */\r\n    this._residueNumber = null; // Number of exact residue\r\n    /** @type String */\r\n    this._residueName = ''; // Scientific name of exact residue\r\n    /** @type String */\r\n    this._atomName = ''; // Scientific name of exact atom\r\n    /** @type Number */\r\n    this._atomNumber = null; // Sorted number of exact atom\r\n    /** @type Array */\r\n    this._atomPosition = []; // Array which contains x, y, z position of exact atom\r\n    /** @type Array */\r\n    this._atomVelocity = []; // Array which contains x, y, z velocity of exact atom (optional)\r\n    /** @type Complex */\r\n    this._complex = null; // Complex structure for unified molecule representation\r\n    /** @type Vector3 */\r\n    this._molecules = []; // Molecules array\r\n    /** @type Molecule */\r\n    this._molecule = null; // Single molecule\r\n    /** @type String */\r\n    this._options.filetype = 'gro'; // Extension of data file.\r\n  }\r\n\r\n  /**\r\n   * General check for possibility of parsing.\r\n   * @param {String} data - Input file\r\n   * @returns {boolean} true if this file is in ascii, false otherwise\r\n   */\r\n  canProbablyParse(data) {\r\n    return _.isString(this._data) && /^\\s*[^\\n]*\\n\\s*\\d+ *\\n\\s*\\d+[^\\n\\d]{3}\\s*\\w+\\s*\\d+\\s*-?\\d/.test(data);\r\n  }\r\n\r\n  /**\r\n   * Parsing title of molecule complex.\r\n   * NOTE: that names are ESTIMATES, there is no strict rules in Gromos87 standard for first line in input file.\r\n   * @param {GROReader} line - Line containing title and time.\r\n   */\r\n  _parseTitle(line) {\r\n    const { metadata } = this._complex;\r\n    metadata.id = line.readLine().trim();\r\n    metadata.name = metadata.id.slice(metadata.id.lastIndexOf('\\\\') + 1, metadata.id.lastIndexOf('.'));\r\n    metadata.format = 'gro';\r\n  }\r\n\r\n  /**\r\n   * Parsing line containing number of atoms information.\r\n   * @param {GROReader} line - Line containing number of atoms.\r\n   */\r\n  _parseNumberOfAtoms(line) {\r\n    this._numAtoms = line.readInt(0, line.getNext());\r\n    if (Number.isNaN(this._numAtoms)) {\r\n      throw new Error('Line 2 is not representing atom number. Consider checking input file');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parsing line containing information about residues, atoms etc. Also information about box vectors.\r\n   * Format of atoms MUST (by Gromos87 standard) be this: (note that numbering starts not from 0, but from 1!)\r\n   * ResidueNumber[1 - 5]  ResidueName[6 - 10] AtomName[11 - 15] AtomNumber[16 - 20] Position[21 - 45] Velocity[46 - 69]\r\n   * @param {GROReader} line - Line containing information about atom.\r\n   */\r\n  _parseAtom(line) {\r\n    this._residueNumber = line.readInt(1, 5);\r\n    this._residueName = line.readString(6, 10).trim();\r\n    this._atomName = line.readString(11, 15).trim();\r\n    this._atomNumber = line.readInt(16, 20);\r\n    const positionX = line.readFloat(21, 28) * 10;\r\n    const positionY = line.readFloat(29, 36) * 10;\r\n    const positionZ = line.readFloat(37, 45) * 10;\r\n    if (Number.isNaN(positionX) || Number.isNaN(positionY) || Number.isNaN(positionZ)) {\r\n      this._complex.error = {\r\n        message: `Atom position is invalid in \"${line.readLine()}\"`,\r\n      };\r\n      return;\r\n    }\r\n    /* const velocityX = line.readFloat(46, 53);\r\n    const velocityY = line.readFloat(54, 61);\r\n    const velocityZ = line.readFloat(62, 69); */\r\n    /* Adding residue and atom to complex structure */\r\n    const type = Element.getByName(this._atomName[0]); /* MAGIC 0. REASONS: This name is something like \"CA\", where\r\n     C - is an element an A is something else. But what about Calcium? */\r\n    if (type.fullName === 'Unknown') {\r\n      this._complex.error = {\r\n        message: `${this._atomName[0]} hasn't been recognised as an atom name.`,\r\n      };\r\n      return;\r\n    }\r\n    const role = Element.Role[this._atomName];\r\n    /* Firstly, create a dummy chain */\r\n    let chain = this._chain;\r\n    if (!chain) {\r\n      this._chain = chain = this._complex.addChain('A');\r\n    }\r\n    /* Secondly, add residue to that chain */\r\n    let residue = this._residue;\r\n    if (!residue || residue.getSequence() !== this._residueNumber) {\r\n      this._residue = residue = chain.addResidue(this._residueName, this._residueNumber, ' ');\r\n    }\r\n    /* Lastly, add atom to that residue */\r\n    this._atomPosition = new THREE.Vector3(positionX, positionY, positionZ);\r\n    /* Adding default constants to correct atom addition process */\r\n    const het = true;\r\n    const altLoc = ' ';\r\n    const occupancy = 1;\r\n    const tempFactor = 1;\r\n    const charge = 0;\r\n    residue.addAtom(this._atomName, type, this._atomPosition, role, het, this._atomNumber, altLoc, occupancy, tempFactor, charge);\r\n  }\r\n\r\n  /**\r\n   * Some finalizing procedures. In '.gro' file format there is only 1 chain and 1 molecule.\r\n   */\r\n  _finalize() {\r\n    const molecule = new Molecule(this._complex, this._complex.metadata.name, 1);\r\n    // aggregate residues from chain\r\n    molecule.residues = this._chain._residues;\r\n    molecule._chains = this._chain;\r\n    this._complex._molecules[0] = molecule;\r\n    this._molecules.push(molecule);\r\n    this._complex.finalize({\r\n      needAutoBonding: true,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Main parsing procedure.\r\n   * @returns {Complex} Complex structure for visualizing.\r\n   */\r\n  parseSync() {\r\n    /* Create \"Complex\" variable */\r\n    const result = this._complex = new Complex();\r\n    /* Parse input file line-by-line */\r\n    const reader = new GROReader(this._data);\r\n    let counter = 0; /* Simple counter regarding to format of .gro file */\r\n    /* First two lines - technical information, other lines - Atoms */\r\n    this._parseTitle(reader);\r\n    reader.next();\r\n    this._parseNumberOfAtoms(reader);\r\n    reader.next();\r\n    for (counter = 0; counter < this._numAtoms; ++counter) {\r\n      if (!reader.end()) {\r\n        this._parseAtom(reader);\r\n        reader.next();\r\n      } else break;\r\n    }\r\n    /* If number of atoms in second line is less then actual atoms in file */\r\n    if (counter < this._numAtoms) {\r\n      this._complex.error = {\r\n        message: 'File ended unexpectedly.',\r\n      };\r\n    }\r\n    /* Catch errors occurred in parsing process */\r\n    if (result.error) {\r\n      throw new Error(result.error.message);\r\n    }\r\n\r\n    /* Finalizing data */\r\n    this._finalize();\r\n\r\n    /* Cleaning up */\r\n    this._atomPosition = null;\r\n    this._complex = null;\r\n    this._molecules = null;\r\n    this._molecule = null;\r\n\r\n    /* Return resulting Complex variable */\r\n    return result;\r\n  }\r\n}\r\n\r\nGROParser.formats = ['gro'];\r\nGROParser.extensions = ['.gro'];\r\n\r\nexport default GROParser;\r\n","import * as THREE from 'three';\r\nimport Parser from './Parser';\r\nimport chem from '../../chem';\r\n\r\nconst {\r\n  Complex,\r\n  Element,\r\n  Bond,\r\n  Molecule,\r\n} = chem;\r\n\r\nconst orderMap = {\r\n  un: 0,\r\n  1: 1,\r\n  2: 2,\r\n  3: 3,\r\n  ar: 1,\r\n  am: 1,\r\n  nc: 0,\r\n  du: 1,\r\n};\r\nconst typeMap = {\r\n  un: Bond.BondType.UNKNOWN, // unknown (cannot be determined from the parameter tables)\r\n  1: Bond.BondType.COVALENT, // single\r\n  2: Bond.BondType.COVALENT, // double\r\n  3: Bond.BondType.COVALENT, // triple\r\n  ar: Bond.BondType.AROMATIC, // aromatic\r\n  am: Bond.BondType.COVALENT, // amide\r\n  nc: Bond.BondType.UNKNOWN, // not connected\r\n  du: Bond.BondType.COVALENT, // dummy\r\n};\r\n\r\nconst resNumberRegex = /\\d+$/;\r\nconst spacesRegex = /\\s+/;\r\n\r\nfunction splitToFields(str) {\r\n  return str.trim().split(spacesRegex);\r\n}\r\n/* There is no jsdoc documentation because of eslint corrections:\r\n * not all Parser methods are implemented\r\n */\r\n\r\nclass MOL2Parser extends Parser {\r\n  constructor(data, options) {\r\n    super(data, options);\r\n\r\n    this._complex = null;\r\n    this._chain = null;\r\n    this._residue = null;\r\n    this._compoundIndx = -1;\r\n\r\n    this._molecules = [];\r\n    this._molecule = null;\r\n\r\n    this._currPosIdx = 0;\r\n    this._currStartIdx = 0;\r\n\r\n    this._serialAtomMap = {};\r\n\r\n    this._options.fileType = 'mol2';\r\n  }\r\n\r\n  _parseRawStrings(data) {\r\n    return data.split(/\\r?\\n|\\r/);\r\n  }\r\n\r\n  _toStringFromStart(numb, MOL2Data) {\r\n    const newPosIdx = this._currStartIdx + numb;\r\n    this._currPosIdx = (newPosIdx < MOL2Data.length) ? newPosIdx : this._currStartIdx;\r\n  }\r\n\r\n  _toHeaderString(header, MOL2Data) {\r\n    this._toStringFromStart(0, MOL2Data);\r\n    while (this._currPosIdx < MOL2Data.length) {\r\n      if (MOL2Data[this._currPosIdx].match(`@<TRIPOS>${header}`)) {\r\n        return;\r\n      }\r\n      this._currPosIdx++;\r\n    }\r\n    this._toStringFromStart(0, MOL2Data);\r\n  }\r\n\r\n  _toStringFromHeader(header, numb, MOL2Data) {\r\n    this._toHeaderString(header, MOL2Data);\r\n    const newPosIdx = this._currPosIdx + numb;\r\n\r\n    if (MOL2Data[this._currPosIdx].match(`@<TRIPOS>${header}`) && newPosIdx < MOL2Data.length) {\r\n      this._currPosIdx = newPosIdx;\r\n    }\r\n  }\r\n\r\n  _setStart(startPos, MOL2Data) {\r\n    if (startPos >= MOL2Data.length) {\r\n      this._currStartIdx = this._currPosIdx = MOL2Data.length - 1;\r\n    } else {\r\n      this._currStartIdx = this._currPosIdx = startPos;\r\n    }\r\n  }\r\n\r\n  _probablyHaveDataToParse(MOL2Data) {\r\n    return this._currPosIdx < MOL2Data.length - 2;\r\n  }\r\n\r\n  _findNextCompoundStart(MOL2Data) {\r\n    while (this._currPosIdx < MOL2Data.length && MOL2Data[this._currPosIdx].trim() !== '@<TRIPOS>MOLECULE>') {\r\n      this._currPosIdx++;\r\n    }\r\n    this._setStart(++this._currPosIdx, MOL2Data);\r\n    return this._probablyHaveDataToParse(MOL2Data);\r\n  }\r\n\r\n  _parseMolecule(MOL2Data) {\r\n    this._toHeaderString('MOLECULE', MOL2Data);\r\n\r\n    const { metadata } = this._complex;\r\n    metadata.name = MOL2Data[++this._currPosIdx];\r\n    metadata.format = 'mol2';\r\n\r\n    this._molecule = { _index: '', _chains: [] };\r\n    this._molecule._index = this._compoundIndx + 1;\r\n    this._molecules.push(this._molecule);\r\n  }\r\n\r\n  /* Atom format description:\r\n   * atomId atomName x y z element [resSeq [resName [charge [statusBit]]]]\r\n   * statusBits is the internal SYBYL status bits associated with the atom.\r\n   * These should never be set by the user.\r\n   * Source: http://chemyang.ccnu.edu.cn/ccb/server/AIMMS/mol2.pdf\r\n   */\r\n  _parseAtoms(atomsNum, MOL2Data) {\r\n    this._toHeaderString('ATOM', MOL2Data);\r\n\r\n    for (let i = 0; i < atomsNum; i++) {\r\n      const parsedStr = splitToFields(MOL2Data[++this._currPosIdx]);\r\n\r\n      if (parsedStr.length < 6) {\r\n        throw new Error('MOL2 parsing error: Not enough information to create atom!');\r\n      }\r\n      const atomId = parseInt(parsedStr[0], 10);\r\n      const atomName = parsedStr[1];\r\n\r\n      const x = parseFloat(parsedStr[2]);\r\n      const y = parseFloat(parsedStr[3]);\r\n      const z = parseFloat(parsedStr[4]);\r\n\r\n      const element = parsedStr[5].split('.')[0].toUpperCase();\r\n\r\n      let charge = 0;\r\n      if (parsedStr.length >= 9) {\r\n        charge = parseFloat(parsedStr[8]) || 0.0;\r\n      }\r\n\r\n      let chain = this._chain;\r\n      if (!chain) {\r\n        // .mol2 may contain information about multiple molecules, but they can't be visualized\r\n        // at the same time now. There is no need to create different chain IDs then.\r\n        this._chain = chain = this._complex.getChain('A') || this._complex.addChain('A');\r\n        this._residue = null;\r\n      }\r\n      if (!this._setResidue(parsedStr)) {\r\n        continue;\r\n      }\r\n\r\n      // These fields are not listed in mol2 format. Set them default.\r\n      // Atoms and het atoms doesn't differ in .mol2,\r\n      // but het atoms have special residues. It can be used in next updates\r\n      const het = false;\r\n      const altLoc = ' ';\r\n      const occupancy = 1.0;\r\n      const tempFactor = 0.0;\r\n      const type = Element.getByName(element);\r\n      const role = Element.Role[atomName];\r\n\r\n      const xyz = new THREE.Vector3(x, y, z);\r\n      this._residue.addAtom(atomName, type, xyz, role, het, atomId, altLoc, occupancy, tempFactor, charge);\r\n    }\r\n  }\r\n\r\n  _setResidue(parsedStr) {\r\n    let resSeq = 1;\r\n    let resName = 'UNK'; // The same meaning has '<0>' in some mol2 files\r\n\r\n    if (parsedStr.length >= 7) {\r\n      resSeq = parseInt(parsedStr[6], 10);\r\n    }\r\n    if (parsedStr.length >= 8 && parsedStr[7] !== '<0>') {\r\n      resName = parsedStr[7].replace(resNumberRegex, '');\r\n    }\r\n    if (this.settings.now.nowater) {\r\n      if (resName === 'HOH' || resName === 'WAT') {\r\n        return false;\r\n      }\r\n    }\r\n    const residue = this._residue;\r\n    const chain = this._chain;\r\n    if (!residue || residue.getSequence() !== resSeq) {\r\n      this._residue = chain.addResidue(resName, resSeq, 'A');\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /* Bond format description\r\n   * bondId originAtomId targetAtomId bondType [statusBits]\r\n   */\r\n  _parseBonds(bondsNum, MOL2Data) {\r\n    this._toHeaderString('BOND', MOL2Data);\r\n\r\n    for (let i = 0; i < bondsNum; i++) {\r\n      const parsedStr = splitToFields(MOL2Data[++this._currPosIdx]);\r\n\r\n      if (parsedStr.length < 3) {\r\n        throw new Error('MOL2 parsing error: Missing information about bonds!');\r\n      }\r\n\r\n      let originAtomId = parseInt(parsedStr[1], 10);\r\n      let targetAtomId = parseInt(parsedStr[2], 10);\r\n      const bondType = parsedStr[3];\r\n\r\n      if (originAtomId > targetAtomId) {\r\n        [originAtomId, targetAtomId] = [targetAtomId, originAtomId];\r\n      }\r\n      this._complex.addBond(\r\n        originAtomId,\r\n        targetAtomId,\r\n        orderMap[bondType] || 0,\r\n        typeMap[bondType] || Bond.BondType.UNKNOWN,\r\n        true,\r\n      );\r\n    }\r\n  }\r\n\r\n  _fixSerialAtoms() {\r\n    const atoms = this._complex._atoms;\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const atom = atoms[i];\r\n      this._serialAtomMap[atom.serial] = atom;\r\n    }\r\n  }\r\n\r\n  _fixBondsArray() {\r\n    const serialAtomMap = this._serialAtomMap;\r\n    const complex = this._complex;\r\n\r\n    if (Object.keys(serialAtomMap).length === 0) {\r\n      throw new Error('MOL2 parsing error: Missing atom information!');\r\n    }\r\n\r\n    const bonds = complex._bonds;\r\n    for (let j = 0; j < bonds.length; j++) {\r\n      const bond = bonds[j];\r\n      bond._left = serialAtomMap[bond._left] || null;\r\n      bond._right = serialAtomMap[bond._right] || null;\r\n    }\r\n  }\r\n\r\n  _finalizeMolecules() {\r\n    // Get chain from complex\r\n    const chain = this._complex._chains[0];\r\n    this._complex._molecules = [];\r\n\r\n    // Aggregate residues from chains\r\n    // (to be precise from the chain 'A')\r\n    for (let i = 0; i < this._molecules.length; i++) {\r\n      const currMolecule = this._molecules[i];\r\n      const molResidues = chain._residues;\r\n      const molecule = new Molecule(this._complex, currMolecule._name, i + 1);\r\n      molecule.residues = molResidues;\r\n      this._complex._molecules[i] = molecule;\r\n    }\r\n  }\r\n\r\n  _finalize() {\r\n    this._complex._finalizeBonds();\r\n    this._fixSerialAtoms();\r\n    this._fixBondsArray();\r\n    this._finalizeMolecules();\r\n\r\n    this._complex.finalize({\r\n      needAutoBonding: false,\r\n      detectAromaticLoops: this.settings.now.aromatic,\r\n      enableEditing: this.settings.now.editing,\r\n      serialAtomMap: this._serialAtomMap,\r\n    });\r\n  }\r\n\r\n  _parseCompound(MOL2Data) {\r\n    this._compoundIndx++;\r\n    this._parseMolecule(MOL2Data);\r\n\r\n    // Ignoring comments and everything before @<TRIPOS>MOLECULE block\r\n    this._toStringFromHeader('MOLECULE', 2, MOL2Data);\r\n\r\n    const parsedStr = MOL2Data[this._currPosIdx].trim().split(spacesRegex);\r\n    const atomsNum = parsedStr[0];\r\n    const bondsNum = parsedStr[1];\r\n\r\n    this._parseAtoms(atomsNum, MOL2Data);\r\n    this._parseBonds(bondsNum, MOL2Data);\r\n  }\r\n\r\n  parseSync() {\r\n    const result = this._complex = new Complex();\r\n    const MOL2Data = this._parseRawStrings(this._data);\r\n    do {\r\n      this._parseCompound(MOL2Data);\r\n    } while (this._findNextCompoundStart(MOL2Data));\r\n\r\n    this._finalize();\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nMOL2Parser.formats = ['mol2'];\r\nMOL2Parser.extensions = ['.mol2', '.ml2', '.sy2'];\r\n\r\nexport default MOL2Parser;\r\n","import ParserList from './parsers/ParserList';\r\n\r\nimport PDBParser from './parsers/PDBParser';\r\nimport CMLParser from './parsers/CMLParser';\r\nimport MMTFParser from './parsers/MMTFParser';\r\nimport CIFParser from './parsers/CIFParser';\r\nimport CCP4Parser from './parsers/CCP4Parser';\r\nimport XYZParser from './parsers/XYZParser';\r\nimport PubChemParser from './parsers/PubChemParser';\r\nimport SDFParser from './parsers/SDFParser';\r\nimport DSN6Parser from './parsers/DSN6Parser';\r\nimport GROParser from './parsers/GROParser';\r\nimport MOL2Parser from './parsers/MOL2Parser';\r\n\r\nexport default new ParserList([\r\n  // note: order might be important\r\n  PDBParser,\r\n  CIFParser,\r\n  MMTFParser,\r\n  XYZParser,\r\n  CMLParser,\r\n  PubChemParser,\r\n  SDFParser,\r\n  CCP4Parser,\r\n  DSN6Parser,\r\n  GROParser,\r\n  MOL2Parser,\r\n]);\r\n","import EntityList from '../../utils/EntityList';\r\n\r\n/**\r\n * A list of available exporters.\r\n * @extends EntityList\r\n */\r\nclass ExporterList extends EntityList {\r\n  /**\r\n   * Create a list of exporters.\r\n   * The exporters are indexed by supported data formats (`.formats` and\r\n   * `.extensions` properties of a Exporter subclass).\r\n   * The Exporters can be retrieved later by matching against specs (see {@link ExporterList#find}).\r\n   *\r\n   * @param {!Array<function(new:Exporter)>=} someExporters A list of {@link Exporter} subclasses to\r\n   *   automatically register at creation time.\r\n   * @see ExporterList#register\r\n   */\r\n  constructor(someExporters = []) {\r\n    super(someExporters, ['formats']);\r\n  }\r\n\r\n  /**\r\n   * Find a suitable exporter for data.\r\n   *\r\n   * @param {Object} specs Exporter specifications.\r\n   * @param {string=} specs.format Supported data format.\r\n   * @param {*=} specs.data Data to export.\r\n   */\r\n  find(specs) {\r\n    let list = [];\r\n    if (specs.format) {\r\n      list = this._dict.formats[specs.format.toLowerCase()] || [];\r\n    }\r\n    return [...list];\r\n  }\r\n}\r\n\r\nexport default ExporterList;\r\n","import makeContextDependent from '../../utils/makeContextDependent';\r\n\r\nexport default class Exporter {\r\n  constructor(source, options) {\r\n    this._source = source;\r\n    this._options = options || {};\r\n    this._abort = false;\r\n  }\r\n\r\n  exportSync() {\r\n    throw new Error('Exporting to this source is not implemented');\r\n  }\r\n\r\n  export() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        try {\r\n          if (this._abort) {\r\n            return reject(new Error('Export aborted'));\r\n          }\r\n          return resolve(this.exportSync());\r\n        } catch (error) {\r\n          return reject(error);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  abort() {\r\n    this._abort = true;\r\n  }\r\n}\r\n\r\nmakeContextDependent(Exporter.prototype);\r\n","import _ from 'lodash';\r\nimport { Matrix4 } from 'three';\r\n\r\nexport default class PDBResult {\r\n  constructor() {\r\n    this._resultArray = [];\r\n    this._currentStr = -1;\r\n    this._tag = null;\r\n    this._fixedNumeration = false;\r\n    this._numeration = false;\r\n    this._tagStrNum = 0;\r\n  }\r\n\r\n  getResult() {\r\n    this.writeString('\\n', 81, 81);\r\n    return this._resultArray.join('');\r\n  }\r\n\r\n  _currentStrLength() {\r\n    const curStr = this._resultArray[this._currentStr];\r\n    return curStr ? curStr.length : 0;\r\n  }\r\n\r\n  // numeration can be number or boolean\r\n  // if numeration is number then just put this number to 8-10 pos in string\r\n  // if numeration is boolean then increase number for all new strings\r\n  newTag(tag, numeration) {\r\n    if (!tag) {\r\n      this._tag = null;\r\n    } else {\r\n      this._tag = tag;\r\n    }\r\n    if (!_.isUndefined(numeration)) {\r\n      if (_.isNumber(numeration)) {\r\n        this._tagStrNum = numeration;\r\n        this._numeration = true;\r\n        this._fixedNumeration = true;\r\n      } else if (_.isBoolean(numeration)) {\r\n        this._tagStrNum = 0;\r\n        this._numeration = numeration;\r\n        this._fixedNumeration = false;\r\n      }\r\n    } else {\r\n      this._numeration = false;\r\n      this._fixedNumeration = false;\r\n      this._tagStrNum = 0;\r\n    }\r\n  }\r\n\r\n  newString(tag) {\r\n    this.writeString('\\n', 81, 81);\r\n    this._currentStr++;\r\n    this._resultArray.push('');\r\n\r\n    if (tag) {\r\n      this.writeString(tag, 1, 6);\r\n    } else if (this._tag) {\r\n      this.writeString(this._tag, 1, 6);\r\n    }\r\n\r\n    if (this._numeration) {\r\n      if (!this._fixedNumeration) {\r\n        this._tagStrNum++;\r\n      }\r\n      if (this._tagStrNum !== 1) {\r\n        this.writeString(this._tagStrNum.toString(), 10, 8);\r\n      }\r\n    }\r\n  }\r\n\r\n  writeEntireString(string, maxStrPos, concat) {\r\n    if (!maxStrPos) {\r\n      maxStrPos = 81;\r\n    }\r\n    for (let j = 0; j < string.length; j++) {\r\n      if (this._currentStrLength() === maxStrPos && j !== string.length - 1) {\r\n        this.newString();\r\n        if (concat) { // pretty hardcoddy\r\n          this.writeString(concat.tag, concat.begin, concat.end);\r\n        }\r\n      }\r\n      if (string[j] === '\\n') {\r\n        this.newString();\r\n      } else {\r\n        this.writeString(string[j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  writeString(string, begin, end) {\r\n    let curStr = this._resultArray[this._currentStr];\r\n    let str;\r\n\r\n    const curStrLength = curStr ? curStr.length : 0;\r\n\r\n    if (_.isUndefined(string)) {\r\n      return;\r\n    }\r\n\r\n    if (!_.isNumber(begin)) {\r\n      begin = curStrLength + 1;\r\n    }\r\n\r\n    if (!_.isNumber(end)) {\r\n      end = curStrLength + string.length;\r\n    }\r\n\r\n    if (!_.isString(string)) {\r\n      str = string.toString();\r\n    } else {\r\n      str = string;\r\n    }\r\n\r\n    const finish = begin < end ? end : begin;\r\n    const start = begin < end ? begin : end;\r\n\r\n    if (str.length > Math.abs(begin - end) + 1) {\r\n      str = str.substr(0, Math.abs(begin - end + 1));\r\n    }\r\n\r\n    // spaces before start of new data\r\n    if (start > curStrLength + 1) {\r\n      this._resultArray[this._currentStr] += ' '.repeat(start - curStrLength - 1);\r\n    } else if (start <= curStrLength) {\r\n      const cStr = this._resultArray[this._currentStr];\r\n      this._resultArray[this._currentStr] = cStr.slice(0, start - 1);\r\n    }\r\n\r\n    // if reverse order\r\n    // reverse order of end and begin means that user wants to align text right\r\n    if (end < begin) {\r\n      const len = begin - end + 1;\r\n      str = ' '.repeat(len - str.length) + str;\r\n    }\r\n\r\n    // some hardcode fix for space between string numeration and data\r\n    // (see pdb file format description)\r\n    if (start === 11 && this._numeration && this._tagStrNum !== 1) {\r\n      str = ` ${str}`;\r\n    }\r\n\r\n    // append new data to string\r\n    this._resultArray[this._currentStr] += str;\r\n    curStr = this._resultArray[this._currentStr];\r\n\r\n    if (finish > curStr.length) {\r\n      this._resultArray[this._currentStr] += ' '.repeat(finish - curStr.length);\r\n    }\r\n  }\r\n\r\n  writeBondsArray(bonds, atom) {\r\n    const bondsArrays = this._getSubArrays(bonds, 4);\r\n\r\n    for (let k = 0; k < bondsArrays.length; k++) {\r\n      this.newString();\r\n      this.writeString(atom.serial, 11, 7);\r\n\r\n      for (let j = 0; j < bondsArrays[k].length; j++) {\r\n        const serial = (bondsArrays[k][j]._left.serial === atom.serial)\r\n          ? bondsArrays[k][j]._right.serial : bondsArrays[k][j]._left.serial;\r\n\r\n        this.writeString(serial, 16 + 5 * j, 12 + 5 * j);\r\n      }\r\n    }\r\n  }\r\n\r\n  _getSubArrays(arr, subArraySize) {\r\n    const subArrays = [];\r\n    for (let i = 0; i < arr.length; i += subArraySize) {\r\n      subArrays.push(arr.slice(i, i + subArraySize));\r\n    }\r\n    return subArrays;\r\n  }\r\n\r\n  // function for writing matrix in Remark290 and Remark350 tags\r\n  // (see pdb file description)\r\n  writeMatrix(matrix, matrixIndx, tag) {\r\n    for (let j = 0; j < 3; j++) {\r\n      this.newString();\r\n      this.writeString(tag, 14, 18);\r\n      this.writeString((j + 1).toString(), 19, 19);\r\n      this.writeString(matrixIndx.toString(), 23, 20);\r\n      for (let k = 0; k < 3; k++) {\r\n        const numb = parseFloat(matrix.elements[j * 4 + k]).toFixed(6);\r\n        this.writeString(numb.toString(), 33 + k * 10, 24 + k * 10);\r\n      }\r\n\r\n      const numb = parseFloat(matrix.elements[j * 4 + 3]).toFixed(5);\r\n      this.writeString(numb.toString(), 68, 55);\r\n    }\r\n  }\r\n\r\n  writeMatrices(matrices, string) {\r\n    if (!matrices) {\r\n      return;\r\n    }\r\n    const matrix = new Matrix4();\r\n    for (let j = 0; j < matrices.length; j++) {\r\n      matrix.copy(matrices[j]).transpose();\r\n      this.writeMatrix(matrix, j + 1, string);\r\n    }\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport Complex from '../../chem/Complex';\r\nimport Exporter from './Exporter';\r\nimport PDBResult from './PDBResult';\r\nimport Assembly from '../../chem/Assembly';\r\nimport { typeByPDBHelixClass } from '../../chem/Helix';\r\n\r\nexport default class PDBExporter extends Exporter {\r\n  constructor(source, options) {\r\n    super(source, options);\r\n    this._tags = ['HEADER', 'TITLE', 'COMPND', 'REMARK', 'HELIX', 'SHEET', 'ATOM and HETATM', 'CONECT'];\r\n    this._result = null;\r\n    this._tagExtractors = {\r\n      HEADER: this._extractHEADER,\r\n      TITLE: this._extractTITLE,\r\n      'ATOM and HETATM': this._extractATOM,\r\n      CONECT: this._extractCONECT,\r\n      COMPND: this._extractCOMPND,\r\n      REMARK: this._extractREMARK,\r\n      HELIX: this._extractHELIX,\r\n      SHEET: this._extractSHEET,\r\n    };\r\n    this._stringForRemark350 = 'COORDINATES FOR A COMPLETE MULTIMER REPRESENTING THE KNOWN\\n'\r\n                             + 'BIOLOGICALLY SIGNIFICANT OLIGOMERIZATION STATE OF THE\\n'\r\n                             + 'MOLECULE CAN BE GENERATED BY APPLYING BIOMT TRANSFORMATIONS\\n'\r\n                             + 'GIVEN BELOW.  BOTH NON-CRYSTALLOGRAPHIC AND\\n'\r\n                             + 'CRYSTALLOGRAPHIC OPERATIONS ARE GIVEN.';\r\n\r\n    this._stringForRemark290 = 'CRYSTALLOGRAPHIC SYMMETRY TRANSFORMATIONS\\n'\r\n                             + 'THE FOLLOWING TRANSFORMATIONS OPERATE ON THE ATOM/HETATM\\n'\r\n                             + 'RECORDS IN THIS ENTRY TO PRODUCE CRYSTALLOGRAPHICALLY\\n'\r\n                             + 'RELATED MOLECULES.';\r\n  }\r\n\r\n  exportSync() {\r\n    const result = new PDBResult();\r\n    if (!this._source) {\r\n      return this._result;\r\n    }\r\n\r\n    for (let i = 0; i < this._tags.length; i++) {\r\n      const tag = this._tags[i];\r\n      const func = this._tagExtractors[tag];\r\n      if (_.isFunction(func)) {\r\n        func.call(this, result);\r\n      }\r\n    }\r\n\r\n    this._result = result.getResult();\r\n\r\n    return this._result;\r\n  }\r\n\r\n  _extractHEADER(result) {\r\n    if (!this._source.metadata) {\r\n      return;\r\n    }\r\n    const { metadata } = this._source;\r\n    result.newTag('HEADER');\r\n    result.newString();\r\n    if (metadata.classification) {\r\n      result.writeString(metadata.classification, 11, 50);\r\n    }\r\n    if (metadata.date) {\r\n      result.writeString(metadata.date, 51, 59);\r\n    }\r\n    if (metadata.id) {\r\n      result.writeString(metadata.id, 63, 66);\r\n    }\r\n  }\r\n\r\n  _extractTITLE(result) {\r\n    if (!this._source.metadata) {\r\n      return;\r\n    }\r\n    const { metadata } = this._source;\r\n    if (!metadata.title) {\r\n      return;\r\n    }\r\n    result.newTag('TITLE', true);\r\n    for (let i = 0; i < metadata.title.length; i++) {\r\n      result.newString();\r\n      result.writeString(metadata.title[i], 11, 80);\r\n    }\r\n  }\r\n\r\n  _extractCONECT(result) {\r\n    if (!this._source._atoms) {\r\n      return;\r\n    }\r\n\r\n    const atoms = this._source._atoms;\r\n    result.newTag('CONECT');\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const fixedBonds = atoms[i].bonds.filter((bond) => bond._fixed);\r\n      if (fixedBonds.length !== 0) {\r\n        result.writeBondsArray(fixedBonds.reverse(), atoms[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractSHEET(result) {\r\n    if (!this._source._sheets) {\r\n      return;\r\n    }\r\n\r\n    result.newTag('SHEET');\r\n\r\n    const sheets = this._source._sheets;\r\n    for (let i = 0; i < sheets.length; i++) {\r\n      if (sheets[i]._strands) {\r\n        const strands = sheets[i]._strands;\r\n        for (let j = 0; j < strands.length; j++) {\r\n          result.newString();\r\n          result.writeString(j + 1, 10, 8);\r\n          result.writeString(sheets[i]._name, 14, 12);\r\n          result.writeString(strands.length, 16, 15);\r\n          result.writeString(strands[j].init._type._name, 18, 20);\r\n          result.writeString(strands[j].init._chain._name, 22, 22);\r\n          result.writeString(strands[j].init._sequence, 26, 23);\r\n          result.writeString(strands[j].init._icode, 27, 27);\r\n          result.writeString(strands[j].term._type._name, 29, 31);\r\n          result.writeString(strands[j].init._chain._name, 33, 33);\r\n          result.writeString(strands[j].term._sequence, 37, 34);\r\n          result.writeString(strands[j].term._icode, 38, 38);\r\n          result.writeString(strands[j].sense, 40, 39);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractHELIX(result) {\r\n    if (!this._source._helices) {\r\n      return;\r\n    }\r\n\r\n    result.newTag('HELIX');\r\n    const helices = this._source._helices;\r\n    for (let i = 0; i < helices.length; i++) {\r\n      const helix = helices[i];\r\n      const helixClass = _.invert(typeByPDBHelixClass);\r\n      result.newString();\r\n      result.writeString(helix.serial, 10, 8);\r\n      result.writeString(helix.name, 14, 12);\r\n      result.writeString(helix.init._type._name, 16, 18);\r\n      result.writeString(helix.init._chain._name, 20, 20);\r\n      result.writeString(helix.init._sequence, 25, 22);\r\n      result.writeString(helix.init._icode, 26, 26);\r\n      result.writeString(helix.term._type._name, 28, 30);\r\n      result.writeString(helix.term._chain._name, 32, 32);\r\n      result.writeString(helix.term._sequence, 37, 34);\r\n      result.writeString(helix.term._icode, 38, 38);\r\n      result.writeString(helixClass[helix.type], 40, 39);\r\n      result.writeString(helix.comment, 41, 70);\r\n      result.writeString(helix.length, 76, 72);\r\n    }\r\n  }\r\n\r\n  _extractATOM(result) {\r\n    if (!this._source._atoms) {\r\n      return;\r\n    }\r\n    const atoms = this._source._atoms;\r\n\r\n    for (let i = 0; i < atoms.length; i++) {\r\n      const tag = atoms[i].het ? 'HETATM' : 'ATOM';\r\n      result.newString(tag);\r\n      const startIndx = (atoms[i].element.name.length > 1 || atoms[i].name.length > 3) ? 13 : 14;\r\n      result.writeString(atoms[i].serial, 11, 7);\r\n      result.writeString(atoms[i].name, startIndx, 16);\r\n      result.writeString(String.fromCharCode(atoms[i].location), 17, 17);\r\n      result.writeString(atoms[i].residue._type._name, 20, 18);\r\n      result.writeString(atoms[i].residue._chain._name, 22, 22);\r\n      result.writeString(atoms[i].residue._sequence, 26, 23);\r\n      result.writeString(atoms[i].residue._icode, 27, 27);\r\n      result.writeString(atoms[i].position.x.toFixed(3), 38, 31);\r\n      result.writeString(atoms[i].position.y.toFixed(3), 46, 39);\r\n      result.writeString(atoms[i].position.z.toFixed(3), 54, 47);\r\n      result.writeString(atoms[i].occupancy.toFixed(2), 60, 55);\r\n      result.writeString(atoms[i].temperature.toFixed(2), 66, 61);\r\n      result.writeString(atoms[i].element.name, 78, 77);\r\n      if (atoms[i].charge) {\r\n        result.writeString(atoms[i].charge, 79, 80);\r\n      }\r\n    }\r\n  }\r\n\r\n  _extractCOMPND(result) {\r\n    if (!this._source._molecules) {\r\n      return;\r\n    }\r\n    const molecules = this._source._molecules;\r\n    result.newTag('COMPND', true);\r\n\r\n    for (let i = 0; i < molecules.length; i++) {\r\n      const chains = this._getMoleculeChains(molecules[i]);\r\n      result.newString();\r\n      result.writeString(`MOL_ID: ${molecules[i].index};`, 11, 80);\r\n      result.newString();\r\n      result.writeString(`MOLECULE: ${molecules[i].name};`, 11, 80);\r\n      result.newString();\r\n      result.writeString('CHAIN: ', 11, 18);\r\n      const chainsString = `${chains.join(', ')};`;\r\n      result.writeEntireString(chainsString, 81);\r\n    }\r\n  }\r\n\r\n  _extractREMARK(result) {\r\n    this._Remark290(result);\r\n    this._Remark350(result);\r\n  }\r\n\r\n  _Remark290(result) {\r\n    if (!this._source.symmetry) {\r\n      return;\r\n    }\r\n\r\n    if (this._source.symmetry.length !== 0) {\r\n      const matrices = this._source.symmetry;\r\n      result.newTag('REMARK', 290);\r\n      result.newString();\r\n      result.newString();\r\n      result.writeEntireString(this._stringForRemark290);\r\n      result.writeMatrices(matrices, 'SMTRY');\r\n      result.newString();\r\n      result.newString();\r\n      result.writeString('REMARK: NULL', 11, 80);\r\n    }\r\n  }\r\n\r\n  _Remark350(result) {\r\n    if (!this._source.units) {\r\n      return;\r\n    }\r\n    const { units } = this._source;\r\n    let biomolIndx = 0;\r\n\r\n    result.newTag('REMARK', 350);\r\n    result.newString();\r\n    result.newString();\r\n    result.writeEntireString(this._stringForRemark350);\r\n\r\n    const assemblies = units.filter((unit) => unit instanceof Assembly);\r\n\r\n    for (let i = 0; i < assemblies.length; i++) {\r\n      result.newString();\r\n      result.newString();\r\n      biomolIndx++;\r\n      result.writeString(`BIOMOLECULE: ${biomolIndx}`, 11, 80);\r\n      const chains = assemblies[i].chains.join(', ');\r\n      result.newString();\r\n      result.writeString('APPLY THE FOLLOWING TO CHAINS: ');\r\n      result.writeEntireString(chains, 69, { tag: 'AND CHAINS: ', begin: 31, end: 42 });\r\n\r\n      const { matrices } = assemblies[i];\r\n      result.writeMatrices(matrices, 'BIOMT');\r\n    }\r\n  }\r\n\r\n  _getMoleculeChains(molecule) {\r\n    function getChainName(residue) {\r\n      return residue._chain._name;\r\n    }\r\n    const chainNames = molecule.residues.map(getChainName);\r\n    return chainNames.filter((item, pos) => chainNames.indexOf(item) === pos);\r\n  }\r\n}\r\n\r\nPDBExporter.formats = ['pdb'];\r\nPDBExporter.SourceClass = Complex;\r\n","import * as THREE from 'three';\r\n\r\nconst FBX_POS_SIZE = 3;\r\nconst FBX_NORM_SIZE = 3;\r\nconst FBX_COL_SIZE = 4;\r\n\r\nfunction copyFbxPoint3(src, srcIdx, dst, dstIdx) {\r\n  dst[dstIdx] = src[srcIdx];\r\n  dst[dstIdx + 1] = src[srcIdx + 1];\r\n  dst[dstIdx + 2] = src[srcIdx + 2];\r\n}\r\n\r\nfunction copyFbxPoint4(src, srcIdx, dst, dstIdx, value) {\r\n  dst[dstIdx] = src[srcIdx];\r\n  dst[dstIdx + 1] = src[srcIdx + 1];\r\n  dst[dstIdx + 2] = src[srcIdx + 2];\r\n  dst[dstIdx + 3] = value;\r\n}\r\n\r\nconst vector4 = new THREE.Vector4();\r\nfunction copyTransformedPoint3(src, srcIdx, dst, dstIdx, opts) {\r\n  vector4.set(src[srcIdx], src[srcIdx + 1], src[srcIdx + 2], opts.w);\r\n  vector4.applyMatrix4(opts.matrix);\r\n  dst[dstIdx] = vector4.x;\r\n  dst[dstIdx + 1] = vector4.y;\r\n  dst[dstIdx + 2] = vector4.z;\r\n}\r\n\r\nfunction setSubArray(src, dst, count, copyFunctor, functorOpts) {\r\n  if ((dst.array.length - dst.start) / dst.stride < count\r\n    || (src.array.length - src.start) / src.stride < count) {\r\n    return; // we've got no space\r\n  }\r\n  if (src.stride === dst.stride) { // stride is the same\r\n    dst.array.set(src.array, dst.start);\r\n  } else {\r\n    let idx = dst.start;\r\n    let arridx = src.start;\r\n    for (let i = 0; i < count; ++i, idx += dst.stride, arridx += src.stride) {\r\n      copyFunctor(src.array, arridx, dst.array, idx, functorOpts);\r\n    }\r\n  }\r\n}\r\n\r\nexport default class FBXModel {\r\n  constructor() {\r\n    this.positions = null;\r\n    this.normals = null;\r\n    this.colors = null;\r\n    this.indices = null;\r\n    this.lastPos = 0;\r\n    this.lastNorm = 0;\r\n    this.lastCol = 0;\r\n    this.lastIdx = 0;\r\n  }\r\n\r\n  init(vertsCount, indsCount) {\r\n    this.positions = new Float32Array(vertsCount * FBX_POS_SIZE);\r\n    this.normals = new Float32Array(vertsCount * FBX_NORM_SIZE);\r\n    this.colors = new Float32Array(vertsCount * FBX_COL_SIZE);\r\n    this.indices = new Int32Array(indsCount);\r\n  }\r\n\r\n  setPositions(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride,\r\n    };\r\n    const dst = {\r\n      array: this.positions,\r\n      start: this.lastPos,\r\n      stride: FBX_POS_SIZE,\r\n    };\r\n    setSubArray(src, dst, count, copyFbxPoint3);\r\n    this.lastPos += count * FBX_POS_SIZE;\r\n  }\r\n\r\n  setTransformedPositions(array, start, count, stride, matrix) {\r\n    let idx = this.lastPos;\r\n    let arrIdx = start;\r\n    const opts = { matrix, w: 1 };\r\n    for (let i = 0; i < count; ++i, arrIdx += stride, idx += FBX_POS_SIZE) {\r\n      copyTransformedPoint3(array, arrIdx, this.positions, idx, opts);\r\n    }\r\n    this.lastPos += count * FBX_POS_SIZE;\r\n  }\r\n\r\n  setNormals(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride,\r\n    };\r\n    const dst = {\r\n      array: this.normals,\r\n      start: this.lastNorm,\r\n      stride: FBX_NORM_SIZE,\r\n    };\r\n    setSubArray(src, dst, count, copyFbxPoint3);\r\n    this.lastNorm += count * FBX_NORM_SIZE;\r\n  }\r\n\r\n  setTransformedNormals(array, start, count, stride, matrix) {\r\n    let idx = this.lastNorm;\r\n    let arrIdx = start;\r\n    const opts = { matrix, w: 0 };\r\n    for (let i = 0; i < count; ++i, arrIdx += stride, idx += FBX_NORM_SIZE) {\r\n      copyTransformedPoint3(array, arrIdx, this.normals, idx, opts);\r\n    }\r\n    this.lastNorm += count * FBX_NORM_SIZE;\r\n  }\r\n\r\n  setColors(array, start, count, stride) {\r\n    const src = {\r\n      array,\r\n      start,\r\n      stride,\r\n    };\r\n    const dst = {\r\n      array: this.colors,\r\n      start: this.lastCol,\r\n      stride: FBX_COL_SIZE,\r\n    };\r\n    setSubArray(src, dst, count, copyFbxPoint4, 1);\r\n    this.lastCol += count * FBX_COL_SIZE;\r\n  }\r\n\r\n  setIndices(array, start, count) {\r\n    this.indices.set(array, this.lastIdx);\r\n    this.lastIdx += count;\r\n  }\r\n\r\n  setShiftedIndices(array, count, shift) {\r\n    const shifted = array.map((x) => x + shift);\r\n    this.setIndices(shifted, 0, count);\r\n  }\r\n\r\n  getVerticesNumber() {\r\n    return this.lastPos / FBX_POS_SIZE;\r\n  }\r\n\r\n  addInstance(matrix, geo) {\r\n    // add indices at first to take old number of vertices for shift\r\n    const currentCount = this.getVerticesNumber();\r\n    this.setShiftedIndices(geo.indices, geo.indices.length, currentCount);\r\n    // simply write vertices at empty space\r\n    const size = geo.itemSize;\r\n    this.setTransformedPositions(geo.positions, 0, geo.vertsCount, size.position, matrix);\r\n    this.setTransformedNormals(geo.normals, 0, geo.vertsCount, size.normal, matrix);\r\n    this.setColors(geo.colors, 0, geo.vertsCount, size.color);\r\n  }\r\n}\r\n","/** Base class for fbx geometry contains simply organized attributes: positions+normals+colors, indices. */\r\nexport default class FBXGeometry {\r\n  /**\r\n   * Create a base geo with necessary members.\r\n   */\r\n  constructor() {\r\n    this.positions = null;\r\n    this.normals = null;\r\n    this.colors = null;\r\n    this.indices = null;\r\n    this.vertsCount = 0;\r\n    this.itemSize = null;\r\n  }\r\n\r\n  /**\r\n   * Initialize base geo storing items info from attributes.\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   */\r\n  init(geo, _info) {\r\n    const { attributes } = geo;\r\n    // save item size\r\n    this.itemSize = {\r\n      position: attributes.position.itemSize,\r\n      normal: attributes.normal.itemSize,\r\n      color: attributes.color.itemSize,\r\n    };\r\n  }\r\n}\r\n","import FBXGeometry from './FBXGeometry';\r\n\r\n/**\r\n * Fbx geometry, that copies positions+normals, indexes and creates colors filled with defined value.\r\n * @extends FBXGeometry\r\n */\r\nexport default class FBX1CGeometry extends FBXGeometry {\r\n  /**\r\n   * Initialize geo storing positions, normals, indices and create colors.\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   */\r\n  init(geo, _info) {\r\n    super.init(geo, _info);\r\n    const {\r\n      attributes: {\r\n        position,\r\n        normal,\r\n      },\r\n      index,\r\n    } = geo;\r\n    // copy vertices attributes\r\n    this.vertsCount = position.count;\r\n    this.positions = position.array;\r\n    this.normals = normal.array;\r\n    // create color array\r\n    this.colors = new Float32Array(this.vertsCount * this.itemSize.color);\r\n    // indices\r\n    this.indices = index.array;\r\n  }\r\n\r\n  /**\r\n   * Set defined color for all items in color attribute\r\n   * @param {Object} color - THREE.Color.\r\n   */\r\n  setColors(color) {\r\n    let offset = 0;\r\n    for (let i = 0, l = this.colors.length, cl = this.itemSize.color; i < l; i += cl) {\r\n      this.colors[offset++] = color.r;\r\n      this.colors[offset++] = color.g;\r\n      this.colors[offset++] = color.b;\r\n    }\r\n  }\r\n}\r\n","import FBXGeometry from './FBXGeometry';\r\n\r\n/**\r\n * Fbx geometry, that copies positions+normals, indexes from cylinder  geometry and creates colors filled with two\r\n * defined values.\r\n * @extends FBXGeometry\r\n */\r\nexport default class FBX2CCylinder extends FBXGeometry {\r\n  constructor() {\r\n    super();\r\n    this._cutRawStart = 0;\r\n    this._cutRawEnd = 0;\r\n    this._facesPerSlice = 0;\r\n  }\r\n\r\n  /**\r\n   * Initialize geo by creating new attributes, because we extend number of vertices to make cylinder two-colored.\r\n   * Indices remain the same. We process open- end close-ended cylinders and consider cylinders od 2 segments\r\n   * in height ONLY.\r\n   * NOTE: cylinder consists of 2 height segments and stores parts in the order: tube, topCap, bottomCap\r\n   * @param {Object} geo - THREE.BufferGeometry.\r\n   * @param {Object} info - information needed for geo extend\r\n   */\r\n  init(geo, info) {\r\n    super.init(geo, info);\r\n    const {\r\n      attributes: {\r\n        position,\r\n      },\r\n      index,\r\n    } = geo;\r\n    // extend vertices arrays\r\n    this.vertsCount = position.count + info.addPerCylinder;\r\n    this._facesPerSlice = info.addPerCylinder;\r\n    this.positions = new Float32Array(this.vertsCount * position.itemSize);\r\n    this.normals = new Float32Array(this.vertsCount * this.itemSize.normal);\r\n    this.colors = new Float32Array(this.vertsCount * this.itemSize.color);\r\n    this._extendVertices(geo, info);\r\n    // number of indices stays the same\r\n    this.indices = new Uint32Array(index.count);\r\n    this._extendIndices(geo, info);\r\n  }\r\n\r\n  /** Extend vertex attributes to have one more slice to make sharp middle startColor-endColor line. */\r\n  _extendVertices(geo, info) {\r\n    const { position } = geo.attributes;\r\n    const { normal } = geo.attributes;\r\n    const geoParams = geo.getGeoParams();\r\n    const cutRaw = 1; // we expect cylinders of 2 segments in height => so half segment = 1\r\n    this._cutRawStart = cutRaw * geoParams.radialSegments;\r\n    this._cutRawEnd = this._cutRawStart + info.addPerCylinder;\r\n    { // write first half of cylinder\r\n      let temp = position.array.slice(0, this._cutRawEnd * position.itemSize);\r\n      this.positions.set(temp, 0);\r\n      temp = normal.array.slice(0, this._cutRawEnd * normal.itemSize);\r\n      this.normals.set(temp, 0);\r\n    }\r\n    { // write second part of cylinder\r\n      let temp = position.array.slice(this._cutRawStart * position.itemSize, position.array.length);\r\n      this.positions.set(temp, this._cutRawEnd * position.itemSize);\r\n      temp = normal.array.slice(this._cutRawStart * normal.itemSize, normal.array.length);\r\n      this.normals.set(temp, this._cutRawEnd * normal.itemSize);\r\n    }\r\n  }\r\n\r\n  /** Shift values of second part (+caps) indices by newly added vertices count. Number of faces remains the same. */\r\n  _extendIndices(geo, info) {\r\n    const { index } = geo;\r\n    const indicesPerQuad = 6; // quad = 2 triangles => 6 indices\r\n    const startToShift = info.addPerCylinder * indicesPerQuad;\r\n    const shift = info.addPerCylinder;\r\n    let shifted = index.array.slice(startToShift, index.count);\r\n    shifted = shifted.map((x) => x + shift); // shift only the endings\r\n    this.indices.set(index.array, 0);\r\n    this.indices.set(shifted, startToShift);\r\n  }\r\n\r\n  /**\r\n   * Set defined colors: (first part + bottom cap), (second part + top cap)\r\n   * @param {number} start - start color index\r\n   * @param {number} end - start color index\r\n   * @param {array} array - array of colors\r\n   * @param {array} color - color value components\r\n   */\r\n  _setColorRange(start, end, array, color) {\r\n    const colorSize = color.length;\r\n    for (let i = start; i < end; i += colorSize) {\r\n      array.set(color, i);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set defined colors: (first part + bottom cap), (second part + top cap)\r\n   * @param {Object} color1 - THREE.Color.\r\n   * @param {Object} color2 - THREE.Color.\r\n   */\r\n  setColors(color1, color2) {\r\n    const colorSize = this.itemSize.color;\r\n    const part1End = this._cutRawEnd * colorSize;\r\n    const part2End = part1End * 2;\r\n    this._setColorRange(0, part1End, this.colors, color1.toArray());\r\n    this._setColorRange(part1End, part2End, this.colors, color2.toArray());\r\n    if (part2End < this.colors.length) { // cylinder has caps, lets paint them\r\n      const capSize = (this._facesPerSlice + 1) * colorSize;\r\n      const cap1End = part2End + capSize;\r\n      this._setColorRange(part2End, cap1End, this.colors, color2.toArray());\r\n      const cap2End = cap1End + capSize; // should be equal to this.colors.length;\r\n      this._setColorRange(cap1End, cap2End, this.colors, color1.toArray());\r\n    }\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport * as THREE from 'three';\r\n\r\nimport utils from '../../../utils';\r\nimport gfxutils from '../../../gfx/gfxutils';\r\nimport logger from '../../../utils/logger';\r\n\r\nimport FBXModel from './FBXModel';\r\nimport ThickLineMesh from '../../../gfx/meshes/ThickLineMesh';\r\nimport ZSpriteMesh from '../../../gfx/meshes/ZSpriteMesh';\r\nimport InstancedSpheresGeometry from '../../../gfx/geometries/InstancedSpheresGeometry';\r\nimport Instanced2CCylindersGeometry from '../../../gfx/geometries/Instanced2CCylindersGeometry';\r\nimport FBX1CGeometry from './FBX1CGeometry';\r\nimport FBX2CCylinder from './FBX2CCylinder';\r\n\r\nexport default class FBXInfoExtractor {\r\n  constructor() {\r\n    this._materials = [];\r\n    this._models = [];\r\n  }\r\n\r\n  process(data) {\r\n    this._extractModelsAndMaterials(data);\r\n    const models = this._flattenModels();\r\n\r\n    return {\r\n      name: data.name,\r\n      models,\r\n      materials: this._materials,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Extract fbx object information from ComplexVisual\r\n   * @param {object} data - complexVisual to get geometry info from\r\n   */\r\n  _extractModelsAndMaterials(data) {\r\n    const layersOfInterest = new THREE.Layers();\r\n    layersOfInterest.set(gfxutils.LAYERS.DEFAULT);\r\n    layersOfInterest.enable(gfxutils.LAYERS.TRANSPARENT);\r\n    data.traverse((object) => {\r\n      if (object instanceof THREE.Mesh && object.layers.test(layersOfInterest) && this.checkExportAbility(object)) {\r\n        if (object.geometry.type === 'InstancedBufferGeometry') {\r\n          this._collectInstancedGeoInfo(object);\r\n        } else {\r\n          this._collectGeoInfo(object);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reworking indices buffer, see https://banexdevblog.wordpress.com/2014/06/23/a-quick-tutorial-about-the-fbx-ascii-format/\r\n   * basically, every triangle in Miew has been represented hat way (e.g.) : 0,1,7, but we must (for FBX) rework that\r\n   * into: 0,1,-8.\r\n   * @param {array} indices - belongs to [0, maxVertIndex]\r\n   */\r\n  _reworkIndices(indices) {\r\n    const faceSize = 3;\r\n    for (let i = faceSize - 1; i < indices.length; i += faceSize) {\r\n      indices[i] *= -1;\r\n      indices[i]--;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Combine geometry from several models having the same material into one Model and finally prepare indices\r\n    * @returns {array} models, combined by material id\r\n   */\r\n  _flattenModels() {\r\n    let overallVertsCount = 0;\r\n    function shift(x) {\r\n      return x + overallVertsCount;\r\n    }\r\n    const combined = [];\r\n    // flatten models geometry\r\n    for (let i = 0, n = this._models.length; i < n; i++) {\r\n      const models = this._models[i];\r\n      let indices = [];\r\n      let positions = [];\r\n      let normals = [];\r\n      let colors = [];\r\n      // reorganize every attributes as array of arrays\r\n      overallVertsCount = 0;\r\n      for (let j = 0; j < models.length; j++) {\r\n        const m = models[j];\r\n        indices.push(m.indices.map(shift));\r\n        overallVertsCount += m.getVerticesNumber();\r\n        positions.push(m.positions);\r\n        normals.push(m.normals);\r\n        colors.push(m.colors);\r\n      }\r\n      // join all subarrays into one\r\n      indices = utils.mergeTypedArraysUnsafe(indices);\r\n      this._reworkIndices(indices);\r\n      positions = utils.mergeTypedArraysUnsafe(positions);\r\n      normals = utils.mergeTypedArraysUnsafe(normals);\r\n      colors = utils.mergeTypedArraysUnsafe(colors);\r\n      combined.push({\r\n        indices,\r\n        positions,\r\n        normals,\r\n        colors,\r\n        verticesCount: overallVertsCount,\r\n      });\r\n    }\r\n    return combined;\r\n  }\r\n\r\n  /**\r\n   * Check ability to export the kind of mesh.\r\n   * @param {object} mesh - given mesh to check\r\n   * @returns {boolean} result of check\r\n   */\r\n  checkExportAbility(mesh) {\r\n    // check mesh on not being empty\r\n    if (mesh.geometry.attributes.position.count === 0) {\r\n      return false;\r\n    }\r\n    // check type of mesh\r\n    // if (mesh.geometry.isInstancedBufferGeometry && settings.now.zSprites) {\r\n    if (mesh instanceof ZSpriteMesh) {\r\n      logger.warn('Currently we cannot export \\'sprites\\' modes, like BS, WV, LC. Please turn of settings \\'zSprites\\' and try again');\r\n      return false;\r\n    }\r\n    if (mesh instanceof ThickLineMesh) {\r\n      logger.warn('Currently we cannot export Lines mode');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Save geometry info from common mesh, like Surface or Cartoon\r\n   */\r\n  _collectGeoInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: {\r\n          position,\r\n          color,\r\n          normal,\r\n        },\r\n        index,\r\n      },\r\n      matrix,\r\n    } = mesh;\r\n\r\n    const model = new FBXModel();\r\n    const vertCount = position.count;\r\n    model.init(vertCount, index.count);\r\n    if (matrix.isIdentity()) {\r\n      model.setPositions(position.array, 0, vertCount, position.itemSize);\r\n      model.setNormals(normal.array, 0, vertCount, normal.itemSize);\r\n    } else {\r\n      model.setTransformedPositions(position.array, 0, vertCount, position.itemSize, matrix);\r\n      model.setTransformedNormals(normal.array, 0, vertCount, normal.itemSize, matrix);\r\n    }\r\n    model.setColors(color.array, 0, vertCount, color.itemSize);\r\n    model.setIndices(index.array, 0, index.count);\r\n    const material = this._collectMaterialInfo(mesh);\r\n    this._addToPool(model, material);\r\n  }\r\n\r\n  /**\r\n   * Collect instanced spheres geometry and materials.\r\n   * @param {object} mesh - mesh with instanced spheres info\r\n   */\r\n  _collectSpheresInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: {\r\n          position,\r\n          color,\r\n        },\r\n        index,\r\n      },\r\n      matrix,\r\n    } = mesh;\r\n\r\n    const model = new FBXModel();\r\n    const instCount = mesh.geometry.instanceCount;\r\n    const vertCount = position.count;\r\n    const indsCount = index.count;\r\n    model.init(instCount * vertCount, instCount * indsCount);\r\n    const geo = new FBX1CGeometry();\r\n    geo.init(mesh.geometry);\r\n    const instMatrix = new THREE.Matrix4();\r\n    const objMatrix = new THREE.Matrix4();\r\n    const sphereColor = new THREE.Color();\r\n    for (let instanceIndex = 0; instanceIndex < instCount; ++instanceIndex) {\r\n      // update colors in geometry\r\n      const colorIdx = instanceIndex * color.itemSize;\r\n      sphereColor.fromArray(color.array, colorIdx);\r\n      geo.setColors(sphereColor);\r\n      // add instance to the model\r\n      this._getSphereInstanceMatrix(mesh.geometry, instanceIndex, instMatrix);\r\n      objMatrix.multiplyMatrices(matrix, instMatrix);\r\n      model.addInstance(objMatrix, geo);\r\n    }\r\n    const material = this._collectMaterialInfo(mesh);\r\n    this._addToPool(model, material);\r\n  }\r\n\r\n  /**\r\n   * Getting all instanced cylinders from given mesh.\r\n   * Divide cylinder (add additional vertexes) for prettiness therefore algorithm is a bit complicated\r\n   * @param {object} mesh - given mesh with instanced cylinders\r\n   */\r\n  _collectCylindersInfo(mesh) {\r\n    const {\r\n      geometry: {\r\n        attributes: {\r\n          position,\r\n          color,\r\n          color2,\r\n        },\r\n        index,\r\n      },\r\n      matrix,\r\n    } = mesh;\r\n\r\n    const model = new FBXModel();\r\n    const instCount = mesh.geometry.instanceCount;\r\n    const oneCCylinder = new FBX1CGeometry();\r\n    oneCCylinder.init(mesh.geometry);\r\n    const splittingInfo = this._gatherCylindersColoringInfo(mesh.geometry);\r\n    let twoCCylinder = null;\r\n    if (splittingInfo.needToSplit > 0) {\r\n      twoCCylinder = new FBX2CCylinder();\r\n      twoCCylinder.init(mesh.geometry, splittingInfo);\r\n    }\r\n    const additionalVertsCount = splittingInfo.addPerCylinder * splittingInfo.needToSplit;\r\n    const vertCount = position.count;\r\n    const indsCount = index.count;\r\n    model.init(instCount * vertCount + additionalVertsCount, instCount * indsCount);\r\n    const instMatrix = new THREE.Matrix4();\r\n    const objMatrix = new THREE.Matrix4();\r\n    const colorStart = new THREE.Color();\r\n    const colorEnd = new THREE.Color();\r\n    let geo = {};\r\n    for (let instanceIndex = 0; instanceIndex < instCount; ++instanceIndex) {\r\n      // update colors in geometry\r\n      const colorIdx = instanceIndex * color.itemSize;\r\n      if (splittingInfo.is2Colored[instanceIndex]) {\r\n        // .color2 contains starting color, and .color contains starting color (see uber.frag ATTR_COLOR2)\r\n        colorStart.fromArray(color2.array, colorIdx);\r\n        colorEnd.fromArray(color.array, colorIdx);\r\n        if (twoCCylinder) {\r\n          twoCCylinder.setColors(colorStart, colorEnd);\r\n          geo = twoCCylinder;\r\n        }\r\n      } else {\r\n        // has one color per cylinder\r\n        colorStart.fromArray(color.array, colorIdx);\r\n        oneCCylinder.setColors(colorStart);\r\n        geo = oneCCylinder;\r\n      }\r\n      // add instance to the model\r\n      this._getCylinderInstanceMatrix(mesh.geometry, instanceIndex, instMatrix);\r\n      objMatrix.multiplyMatrices(matrix, instMatrix);\r\n      model.addInstance(objMatrix, geo);\r\n    }\r\n    const material = this._collectMaterialInfo(mesh);\r\n    this._addToPool(model, material);\r\n  }\r\n\r\n  /**\r\n   * Adding model to pool of models or extend existing ones\r\n   * @param {object} model - model to add\r\n   * @param {object} material - material to add\r\n   */\r\n  _addToPool(model, material) {\r\n    const materialIdx = this._checkExistingMaterial(material);\r\n    if (materialIdx < 0) { // new model-material pair\r\n      this._models.push([model]);\r\n      this._materials.push(material);\r\n    } else { // add model to existing model-material pair\r\n      const models = this._models[materialIdx];\r\n      models.push(model);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checking if given material already was registered in materials pool (no need to create new one)\r\n   * @param {object} material - given material\r\n   * @returns {number} number of model-material pair\r\n   */\r\n  _checkExistingMaterial(material) {\r\n    return _.findIndex(this._materials, (m) => _.isEqual(m, material));\r\n  }\r\n\r\n  _gatherCylindersColoringInfo(geo) {\r\n    const instCount = geo.instanceCount;\r\n    const color1 = geo.attributes.color.array;\r\n    const color2 = geo.attributes.color2.array;\r\n    const stride = geo.attributes.color.itemSize;\r\n    const is2Colored = new Array(instCount);\r\n    // analyze color instance attributes\r\n    let needToSplit = 0;\r\n    let colIdx = 0;\r\n    for (let i = 0; i < instCount; i++, colIdx += stride) {\r\n      const differs = (Math.abs(color1[colIdx] - color2[colIdx]) > 0.0000001) // compare ending colors\r\n        || (Math.abs(color1[colIdx + 1] - color2[colIdx + 1]) > 0.0000001)\r\n        || (Math.abs(color1[colIdx + 2] - color2[colIdx + 2]) > 0.0000001);\r\n      is2Colored[i] = differs;\r\n      needToSplit += differs; // count number of 2-colored cylinders\r\n    }\r\n    // calc number of vertices to add into 2-colored\r\n    const geoParams = geo.getGeoParams();\r\n    const addPerCylinder = geoParams.radialSegments;\r\n    return { is2Colored, needToSplit, addPerCylinder };\r\n  }\r\n\r\n  /**\r\n   * Collect instanced models and materials.\r\n   * @param {object} mesh - given mesh with instanced something (spheres or cylinders)\r\n   */\r\n  _collectInstancedGeoInfo(mesh) {\r\n    if (mesh.geometry instanceof InstancedSpheresGeometry) {\r\n      this._collectSpheresInfo(mesh);\r\n    } else if (mesh.geometry instanceof Instanced2CCylindersGeometry) {\r\n      this._collectCylindersInfo(mesh);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collect Material info from given mesh.\r\n   * @param {object} mesh - given mesh with material info\r\n   * @returns {object} material\r\n   */\r\n  _collectMaterialInfo(mesh) {\r\n    const { uberOptions } = mesh.material;\r\n    return ({\r\n      diffuse: uberOptions.diffuse.toArray(),\r\n      opacity: uberOptions.opacity,\r\n      shininess: uberOptions.shininess,\r\n      specular: uberOptions.specular.toArray(),\r\n    });\r\n  }\r\n\r\n  _getCylinderInstanceMatrix(geo, instIdx, matrix) {\r\n    const matVector1 = geo.attributes.matVector1.array;\r\n    const matVector2 = geo.attributes.matVector2.array;\r\n    const matVector3 = geo.attributes.matVector3.array;\r\n    const idxOffset = instIdx * 4; // used 4 because offset arrays are stored in quads\r\n    matrix.set(\r\n      matVector1[idxOffset],\r\n      matVector1[idxOffset + 1],\r\n      matVector1[idxOffset + 2],\r\n      matVector1[idxOffset + 3],\r\n      matVector2[idxOffset],\r\n      matVector2[idxOffset + 1],\r\n      matVector2[idxOffset + 2],\r\n      matVector2[idxOffset + 3],\r\n      matVector3[idxOffset],\r\n      matVector3[idxOffset + 1],\r\n      matVector3[idxOffset + 2],\r\n      matVector3[idxOffset + 3],\r\n      0,\r\n      0,\r\n      0,\r\n      1,\r\n    );\r\n  }\r\n\r\n  _getSphereInstanceMatrix(geo, instIdx, matrix) {\r\n    const { offset } = geo.attributes;\r\n    const idx = instIdx * offset.itemSize;\r\n    const x = offset.array[idx];\r\n    const y = offset.array[idx + 1];\r\n    const z = offset.array[idx + 2];\r\n    const scale = offset.array[idx + 3];\r\n    matrix.set(\r\n      scale,\r\n      0,\r\n      0,\r\n      x,\r\n      0,\r\n      scale,\r\n      0,\r\n      y,\r\n      0,\r\n      0,\r\n      scale,\r\n      z,\r\n      0,\r\n      0,\r\n      0,\r\n      1,\r\n    );\r\n  }\r\n}\r\n","// Forming default definitions block\r\nconst defaultDefinitions = `\r\nDefinitions:  {\r\n  Version: 100\r\n  Count: 3\r\n  ObjectType: \"Model\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Geometry\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Material\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"Pose\" {\r\n    Count: 1\r\n  }\r\n  ObjectType: \"GlobalSettings\" {\r\n    Count: 1\r\n  }\r\n} `;\r\n\r\n// Default model properties\r\nconst defaultProperties = `Properties60: {\r\n      Property: \"QuaternionInterpolate\", \"bool\", \"\",0\r\n      Property: \"Visibility\", \"Visibility\", \"A\",1\r\n      Property: \"Lcl Translation\", \"Lcl Translation\", \"A\",0.000000000000000,0.000000000000000,-1789.238037109375000\r\n      Property: \"Lcl Rotation\", \"Lcl Rotation\", \"A\",0.000009334667643,-0.000000000000000,0.000000000000000\r\n      Property: \"Lcl Scaling\", \"Lcl Scaling\", \"A\",1.000000000000000,1.000000000000000,1.000000000000000\r\n      Property: \"RotationOffset\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationPivot\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"ScalingOffset\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"ScalingPivot\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationActive\", \"bool\", \"\",0\r\n      Property: \"TranslationMin\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationMax\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TranslationMinX\", \"bool\", \"\",0\r\n      Property: \"TranslationMinY\", \"bool\", \"\",0\r\n      Property: \"TranslationMinZ\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxX\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxY\", \"bool\", \"\",0\r\n      Property: \"TranslationMaxZ\", \"bool\", \"\",0\r\n      Property: \"RotationOrder\", \"enum\", \"\",0\r\n      Property: \"RotationSpaceForLimitOnly\", \"bool\", \"\",0\r\n      Property: \"AxisLen\", \"double\", \"\",10\r\n      Property: \"PreRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"PostRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationActive\", \"bool\", \"\",0\r\n      Property: \"RotationMin\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationMax\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"RotationMinX\", \"bool\", \"\",0\r\n      Property: \"RotationMinY\", \"bool\", \"\",0\r\n      Property: \"RotationMinZ\", \"bool\", \"\",0\r\n      Property: \"RotationMaxX\", \"bool\", \"\",0\r\n      Property: \"RotationMaxY\", \"bool\", \"\",0\r\n      Property: \"RotationMaxZ\", \"bool\", \"\",0\r\n      Property: \"RotationStiffnessX\", \"double\", \"\",0\r\n      Property: \"RotationStiffnessY\", \"double\", \"\",0\r\n      Property: \"RotationStiffnessZ\", \"double\", \"\",0\r\n      Property: \"MinDampRangeX\", \"double\", \"\",0\r\n      Property: \"MinDampRangeY\", \"double\", \"\",0\r\n      Property: \"MinDampRangeZ\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeX\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeY\", \"double\", \"\",0\r\n      Property: \"MaxDampRangeZ\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthX\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthY\", \"double\", \"\",0\r\n      Property: \"MinDampStrengthZ\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthX\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthY\", \"double\", \"\",0\r\n      Property: \"MaxDampStrengthZ\", \"double\", \"\",0\r\n      Property: \"PreferedAngleX\", \"double\", \"\",0\r\n      Property: \"PreferedAngleY\", \"double\", \"\",0\r\n      Property: \"PreferedAngleZ\", \"double\", \"\",0\r\n      Property: \"InheritType\", \"enum\", \"\",0\r\n      Property: \"ScalingActive\", \"bool\", \"\",0\r\n      Property: \"ScalingMin\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"ScalingMax\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"ScalingMinX\", \"bool\", \"\",0\r\n      Property: \"ScalingMinY\", \"bool\", \"\",0\r\n      Property: \"ScalingMinZ\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxX\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxY\", \"bool\", \"\",0\r\n      Property: \"ScalingMaxZ\", \"bool\", \"\",0\r\n      Property: \"GeometricTranslation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"GeometricRotation\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"GeometricScaling\", \"Vector3D\", \"\",1,1,1\r\n      Property: \"LookAtProperty\", \"object\", \"\"\r\n      Property: \"UpVectorProperty\", \"object\", \"\"\r\n      Property: \"Show\", \"bool\", \"\",1\r\n      Property: \"NegativePercentShapeSupport\", \"bool\", \"\",1\r\n      Property: \"DefaultAttributeIndex\", \"int\", \"\",0\r\n      Property: \"Color\", \"Color\", \"A+\",0,0,0\r\n      Property: \"Size\", \"double\", \"\",100\r\n      Property: \"Look\", \"enum\", \"\",1\r\n    }`;\r\n\r\n// Default materials layer\r\nconst defaultMaterialLayer = `\r\n    LayerElementMaterial: 0 {\r\n      Version: 101\r\n      Name: \"\"\r\n      MappingInformationType: \"AllSame\"\r\n      ReferenceInformationType: \"Direct\"\r\n      Materials: 0\r\n    }`;\r\n\r\n// Default layers block\r\nconst defaultLayerBlock = `\r\n    Layer: 0 {\r\n      Version: 100\r\n      LayerElement:  {\r\n        Type: \"LayerElementNormal\"\r\n        TypedIndex: 0\r\n      }\r\n      LayerElement:  {\r\n        Type: \"LayerElementColor\"\r\n        TypedIndex: 0\r\n      }\r\n      LayerElement:  {\r\n        Type: \"LayerElementMaterial\"\r\n        TypedIndex: 0\r\n      }\r\n    }`;\r\n\r\n/**\r\n * globalSettings info in output file.\r\n */\r\nconst globalSettings = `GlobalSettings: {\r\n    Version: 1000\r\n    Properties60:  {\r\n      Property: \"UpAxis\", \"int\", \"\",1\r\n      Property: \"UpAxisSign\", \"int\", \"\",1\r\n      Property: \"FrontAxis\", \"int\", \"\",2\r\n      Property: \"FrontAxisSign\", \"int\", \"\",1\r\n      Property: \"CoordAxis\", \"int\", \"\",0\r\n      Property: \"CoordAxisSign\", \"int\", \"\",1\r\n      Property: \"UnitScaleFactor\", \"double\", \"\",1\r\n    }\r\n  }`;\r\n\r\nexport default class FBXResult {\r\n  constructor() {\r\n    this._resultArray = [];\r\n    this._info = null;\r\n  }\r\n\r\n  getResult(info) {\r\n    this._info = info;\r\n    this._resultArray.push(this._writeHeader());\r\n    this._resultArray.push(this._writeDefinitions());\r\n    this._resultArray.push(this._writeObjects(info.models, info.materials));\r\n    this._resultArray.push(this._writeRelations());\r\n    this._resultArray.push(this._writeConnections()); // connections between models and materials)\r\n    this._info = null;\r\n    return this._resultArray.join('');\r\n  }\r\n\r\n  /**\r\n   * Add FBXHeader info to output file.\r\n   * Some fields are really confusing, but it seems that all listed fields are very informative\r\n   */\r\n  _writeHeader() {\r\n    const FBXHeaderVersion = 1003; // 1003 is some number which appears to present in many 6.1 ASCII files\r\n    const FBXVersion = 6100; // Mandatory and only supported version\r\n    const date = new Date();\r\n    const timeStampVersion = 1000;\r\n    const creator = `Miew FBX Exporter v${this._info.version}`; // Supposed to be an engine\r\n\r\n    return `; FBX 6.1.0 project file\r\n; Created by ${creator} Copyright (c) 2015-2024 EPAM Systems, Inc.\r\n; For support please contact miew@epam.com\r\n; ----------------------------------------------------\r\n\r\nFBXHeaderExtension:  {\r\n  FBXHeaderVersion: ${FBXHeaderVersion}\r\n  FBXVersion: ${FBXVersion}\r\n  CreationTimeStamp:  {\r\n    Version: ${timeStampVersion}\r\n    Year: ${date.getFullYear()}\r\n    Month: ${date.getMonth() + 1}\r\n    Day: ${date.getDate()}\r\n    Hour: ${date.getHours()}\r\n    Minute: ${date.getMinutes()}\r\n    Second: ${date.getSeconds()}\r\n    Millisecond: ${date.getMilliseconds()}\r\n  }\r\n  Creator: \"${creator}\"\r\n  OtherFlags:  {\r\n    FlagPLE: 0\r\n  }\r\n}\r\nCreationTime: \"${date}\"\r\nCreator: \"${creator}\"\r\n`;\r\n  }\r\n\r\n  /**\r\n   * Add Definitions info to output file.\r\n   * Not exactly sure if this section is template section (as it is in 7.4+) or it should every time be like this\r\n   */\r\n  _writeDefinitions() {\r\n    return `\r\n; Object definitions\r\n;------------------------------------------------------------------\r\n\r\n${defaultDefinitions}\r\n`;\r\n  }\r\n\r\n  /**\r\n   * Adding gathered information about Models to resulting string.\r\n   * Reminder - there may be more then 1 model in scene, but we must place materials after ALL models.\r\n   * @returns {string} string containing all models (vertices, indices, colors, normals etc)\r\n   */\r\n  _models() {\r\n    const modelVersion = 232;\r\n    let allModels = '';\r\n    const { models } = this._info;\r\n    for (let i = 0; i < models.length; ++i) {\r\n      const model = models[i];\r\n      const vertCount = model.verticesCount;\r\n      allModels += `\r\n  Model: \"Model::${this._info.name}_${i}\", \"Mesh\" {\r\n    Version: ${modelVersion}\r\n    ${defaultProperties}\r\n    ${this._verticesIndices(model.positions, model.indices)}\r\n    ${this._normalLayer(model.normals)}\r\n    ${this._colorLayer(model.colors, vertCount)}\r\n    ${defaultMaterialLayer}\r\n    ${defaultLayerBlock}\r\n  }`;\r\n    }\r\n    return allModels;\r\n  }\r\n\r\n  /**\r\n   * Add Material info to result\r\n   */\r\n  _materials() {\r\n    const materialVersion = 102;\r\n    let allMaterials = '';\r\n    const { materials } = this._info;\r\n    for (let i = 0; i < materials.length; ++i) {\r\n      const material = materials[i];\r\n      allMaterials += `\r\n  Material: \"Material::${this._info.name}_${i}_default\", \"\" {\r\n    Version: ${materialVersion}\r\n    ShadingModel: \"lambert\"\r\n    MultiLayer: 0\r\n    ${this._materialProperties(material)}\r\n  }`;\r\n    }\r\n    return allMaterials;\r\n  }\r\n\r\n  /**\r\n   * Add Objects info to output file.\r\n   */\r\n  _writeObjects() {\r\n    return `\r\n; Object properties\r\n;------------------------------------------------------------------\r\n\r\nObjects:  {\r\n  ${this._models()}\r\n  ${this._materials()}\r\n  ${globalSettings}\r\n}\r\n`;\r\n  }\r\n\r\n  /**\r\n   * Add Relations info to output file.\r\n   */\r\n  _writeRelations() {\r\n    let modelsList = '';\r\n    for (let i = 0; i < this._info.models.length; ++i) {\r\n      modelsList += `\r\n  Model: \"Model::${this._info.name}_${i}\", \"Mesh\" {\r\n  }`;\r\n    }\r\n    let materialList = '';\r\n    for (let i = 0; i < this._info.materials.length; ++i) {\r\n      materialList += `\r\n  Material: \"Material::${this._info.name}_${i}_default\", \"\" {\r\n  }`;\r\n    }\r\n\r\n    return `\r\n; Object relations\r\n;------------------------------------------------------------------\r\n\r\nRelations:  {\r\n  ${modelsList}\r\n  Model: \"Model::Producer Perspective\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Top\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Bottom\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Front\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Back\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Right\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Producer Left\", \"Camera\" {\r\n  }\r\n  Model: \"Model::Camera Switcher\", \"CameraSwitcher\" {\r\n  }\r\n  ${materialList}\r\n}`;\r\n  }\r\n\r\n  /**\r\n   * Add Connections info to output file.\r\n   */\r\n  _writeConnections() {\r\n    let modelsList = '';\r\n    const { name } = this._info;\r\n    for (let i = 0; i < this._info.models.length; ++i) {\r\n      modelsList += `\r\n  Connect: \"OO\", \"Model::${name}_${i}\", \"Model::Scene\"`;\r\n    }\r\n\r\n    let materialList = '';\r\n    for (let i = 0; i < this._info.materials.length; ++i) {\r\n      materialList += `\r\n  Connect: \"OO\", \"Material::${name}_${i}_default\", \"Model::${name}_${i}\"`;\r\n    }\r\n\r\n    return `\r\n; Object connections\r\n;------------------------------------------------------------------\r\n\r\nConnections:  {\r\n  ${modelsList}\r\n  ${materialList}\r\n}`;\r\n  }\r\n\r\n  /**\r\n   * Write float array to string with limited precision\r\n   * @param {Float32Array} array - array to be fixed\r\n   * @returns {String} String with fixed floats\r\n   */\r\n  _floatArrayToString(array) {\r\n    const str = [];\r\n    for (let i = 0; i < array.length; ++i) {\r\n      str[i] = array[i].toFixed(6);\r\n    }\r\n    return str.join(',');\r\n  }\r\n\r\n  /**\r\n   * Adding color layer to resulting file\r\n   * @param {Float32Array} colorArray attribute\r\n   * @param {number} vertCount - number of vertices in the model\r\n   * @returns {string} color layer info\r\n   */\r\n  _colorLayer(colorArray, vertCount) {\r\n    const layerElementColorNumber = 0;\r\n    const layerElementColorVersion = 101;\r\n    const layerElementColorName = '';\r\n    const colorsStr = this._floatArrayToString(colorArray);\r\n    // Mapping Information type and Reference Information type are mandatory for our Miew! Must not be changed\r\n    // As said [..Array(...)] - fastest and easiest way to produce [0, 1, .....] array\r\n    const colorIndices = [...Array(vertCount).keys()];\r\n    return `\r\n    LayerElementColor: ${layerElementColorNumber} {\r\n      Version: ${layerElementColorVersion}\r\n      Name: \"${layerElementColorName}\"\r\n      MappingInformationType: \"ByVertice\"\r\n      ReferenceInformationType: \"Direct\"\r\n      Colors: ${colorsStr}\r\n      ColorIndex: ${colorIndices}\r\n    }`;\r\n  }\r\n\r\n  /**\r\n   * Adding normal layer to resulting file\r\n   * @param {Float32Array} normalArray attribute\r\n   * @returns {string} normal layer info\r\n   */\r\n  _normalLayer(normalArray) {\r\n    const layerElementNormalNumber = 0;\r\n    const layerElementNormalVersion = 101;\r\n    const layerElementNormalName = '';\r\n    const normalsStr = this._floatArrayToString(normalArray);\r\n    // Mapping Information type and Reference Information type are mandatory for our Miew! Must not be changed\r\n    return `\r\n    LayerElementNormal: ${layerElementNormalNumber} {\r\n      Version: ${layerElementNormalVersion}\r\n      Name: \"${layerElementNormalName}\"\r\n      MappingInformationType: \"ByVertice\"\r\n      ReferenceInformationType: \"Direct\"\r\n      Normals: ${normalsStr}\r\n    }`;\r\n  }\r\n\r\n  /**\r\n   * Adding vertices and indices to resulting string\r\n   * @return {string} resulting string in FBX notation\r\n   */\r\n  _verticesIndices(positions, indices) {\r\n    const multiLayer = 0;\r\n    const multiTake = 1;\r\n    const shading = 'Y';\r\n    const culling = 'CullingOff';\r\n    const geometryVersion = 124;\r\n    const vertStr = this._floatArrayToString(positions);\r\n    /* About _correctArrayNotation: Float32Arrays will contains only Float32 numbers, which implies that it will be floating points with 17 numbers after point.\r\n    * We cannot (and it's logically incorrect) save all this information, so we convert this Float32Array into Array-like object with numbers with only 6 numbers after point\r\n    * Reminder - this is big memory loss (as we must save at one moment two arrays with similar information) */\r\n    return `MultiLayer: ${multiLayer}\r\n    MultiTake: ${multiTake}\r\n    Shading: ${shading}\r\n    Culling: \"${culling}\"\r\n    Vertices: ${vertStr}\r\n    PolygonVertexIndex: ${indices}\r\n    GeometryVersion: ${geometryVersion}`;\r\n  }\r\n\r\n  /**\r\n   * Forming material properties block.\r\n   * @param {Object} material - given material of model\r\n   * @returns {String} material properties string\r\n   */\r\n  _materialProperties(material) {\r\n    return `Properties60:  {\r\n      Property: \"ShadingModel\", \"KString\", \"\", \"Lambert\"\r\n      Property: \"MultiLayer\", \"bool\", \"\",0\r\n      Property: \"EmissiveColor\", \"ColorRGB\", \"\",0,0,0\r\n      Property: \"EmissiveFactor\", \"double\", \"\",0.0000\r\n      Property: \"AmbientColor\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"AmbientFactor\", \"double\", \"\",0.0000\r\n      Property: \"DiffuseColor\", \"ColorRGB\", \"\",${material.diffuse}\r\n      Property: \"DiffuseFactor\", \"double\", \"\",1.0000\r\n      Property: \"Bump\", \"Vector3D\", \"\",0,0,0\r\n      Property: \"TransparentColor\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"TransparencyFactor\", \"double\", \"\",0.0000\r\n      Property: \"SpecularColor\", \"ColorRGB\", \"\",${material.specular}\r\n      Property: \"SpecularFactor\", \"double\", \"\",1.0000\r\n      Property: \"ShininessExponent\", \"double\", \"\",${material.shininess}\r\n      Property: \"ReflectionColor\", \"ColorRGB\", \"\",0,0,0\r\n      Property: \"ReflectionFactor\", \"double\", \"\",1\r\n      Property: \"Ambient\", \"ColorRGB\", \"\",1,1,1\r\n      Property: \"Diffuse\", \"ColorRGB\", \"\",${material.diffuse}\r\n      Property: \"Specular\", \"ColorRGB\", \"\",${material.specular}\r\n      Property: \"Shininess\", \"double\", \"\",${material.shininess}\r\n      Property: \"Opacity\", \"double\", \"\",${material.opacity}\r\n      Property: \"Reflectivity\", \"double\", \"\",0\r\n    }`;\r\n  }\r\n}\r\n","import Exporter from './Exporter';\r\nimport FBXInfoExtractor from './fbx/FBXInfoExtractor';\r\nimport FBXResult from './fbx/FBXResult';\r\nimport ComplexVisual from '../../ComplexVisual';\r\n\r\nexport default class FBXExporter extends Exporter {\r\n  constructor(source, options) {\r\n    super(source, options);\r\n    // Data\r\n    this._data = source;\r\n    this._version = options.miewVersion || '0.0-UNSPECIFIED';\r\n    this._extractor = new FBXInfoExtractor();\r\n  }\r\n\r\n  /**\r\n   * Entry point to exporter.\r\n   */\r\n  exportSync() {\r\n    // Creating mandatory blocks\r\n    const result = new FBXResult();\r\n    if (!this._source) {\r\n      return this._result;\r\n    }\r\n\r\n    const info = this._extractor.process(this._data);\r\n    info.version = this._version;\r\n    this._result = result.getResult(info);\r\n    return this._result;\r\n  }\r\n}\r\n\r\nFBXExporter.formats = ['fbx'];\r\nFBXExporter.SourceClass = ComplexVisual;\r\n","import ExporterList from './exporters/ExporterList';\r\n\r\nimport PDBExporter from './exporters/PDBExporter';\r\nimport FBXExporter from './exporters/FBXExporter';\r\n\r\nexport default new ExporterList([\r\n  PDBExporter,\r\n  FBXExporter,\r\n]);\r\n","import loaders from './loaders';\r\nimport parsers from './parsers';\r\nimport exporters from './exporters';\r\n\r\nexport default {\r\n  loaders,\r\n  parsers,\r\n  exporters,\r\n};\r\n","/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nimport * as THREE from 'three';\r\nimport CSS2DObject from './CSS2DObject';\r\n\r\nconst tempColor = new THREE.Color();\r\n\r\nclass CSS2DRenderer {\r\n  constructor() {\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this._widthHalf = 0;\r\n    this._heightHalf = 0;\r\n\r\n    this._vector = new THREE.Vector3();\r\n    this._viewMatrix = new THREE.Matrix4();\r\n    this._projectionMatrix = new THREE.Matrix4();\r\n\r\n    this._domElement = document.createElement('div');\r\n    this._domElement.style.overflow = 'hidden';\r\n    this._domElement.style.position = 'absolute';\r\n    this._domElement.style.top = '0';\r\n    this._domElement.style.zIndex = '0'; // start a new Stacking Context to enclose all z-ordered children\r\n    this._domElement.style.pointerEvents = 'none';\r\n  }\r\n\r\n  getElement() {\r\n    return this._domElement;\r\n  }\r\n\r\n  reset() {\r\n    const myNode = this.getElement();\r\n    while (myNode.firstChild) {\r\n      myNode.removeChild(myNode.firstChild);\r\n    }\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this._width = width;\r\n    this._height = height;\r\n\r\n    this._widthHalf = this._width / 2;\r\n    this._heightHalf = this._height / 2;\r\n\r\n    this._domElement.style.width = `${width}px`;\r\n    this._domElement.style.height = `${height}px`;\r\n  }\r\n\r\n  _renderObject(object, camera, scene) {\r\n    function lerpColorAsHex(a, b, t) {\r\n      tempColor.setHex(a);\r\n      tempColor.lerp(b, t);\r\n      return `#${tempColor.getHexString()}`;\r\n    }\r\n\r\n    function colorAsHex(a) {\r\n      tempColor.setHex(a);\r\n      return `#${tempColor.getHexString()}`;\r\n    }\r\n\r\n    if (object instanceof CSS2DObject) {\r\n      this._vector.setFromMatrixPosition(object.matrixWorld);\r\n\r\n      if (object.userData !== undefined && object.userData.offset !== undefined) {\r\n        const localOffset = new THREE.Vector3(object.userData.offset.x, object.userData.offset.y, 0);\r\n        this._vector.add(localOffset.multiplyScalar(object.matrixWorld.getMaxScaleOnAxis()));\r\n      }\r\n\r\n      this._vector.applyMatrix4(this._viewMatrix);\r\n\r\n      const visibility = this._vector.z > -camera.near ? 'hidden' : 'visible';\r\n      const zIndex = 10000 * (camera.far - (-this._vector.z)) / (camera.far - camera.near);\r\n\r\n      const element = object.getElement();\r\n      if (typeof scene.fog === 'undefined') {\r\n        element.style.color = colorAsHex(object.userData.color);\r\n        if (object.userData.background !== 'transparent') {\r\n          element.style.background = colorAsHex(object.userData.background);\r\n        }\r\n      } else {\r\n        const fogFactor = THREE.MathUtils.smoothstep(-this._vector.z, scene.fog.near, scene.fog.far);\r\n        element.style.color = lerpColorAsHex(object.userData.color, scene.fog.color, fogFactor);\r\n        if (object.userData.background !== 'transparent') {\r\n          element.style.background = lerpColorAsHex(object.userData.background, scene.fog.color, fogFactor);\r\n        }\r\n      }\r\n\r\n      this._vector.applyMatrix4(this._projectionMatrix);\r\n\r\n      const style = `${object.userData !== {} ? object.userData.translation : 'translate(-50%, -50%) '\r\n      }translate(${this._vector.x * this._widthHalf + this._widthHalf}px,${\r\n        -this._vector.y * this._heightHalf + this._heightHalf}px)`;\r\n      element.style.visibility = visibility;\r\n      element.style.WebkitTransform = style;\r\n      element.style.MozTransform = style;\r\n      element.style.oTransform = style;\r\n      element.style.transform = style;\r\n      element.style.zIndex = Number(zIndex).toFixed(0);\r\n\r\n      if (element.parentNode !== this._domElement) {\r\n        this._domElement.appendChild(element);\r\n      }\r\n    }\r\n\r\n    for (let i = 0, l = object.children.length; i < l; i++) {\r\n      this._renderObject(object.children[i], camera, scene);\r\n    }\r\n  }\r\n\r\n  render(scene, camera) {\r\n    scene.updateMatrixWorld();\r\n\r\n    if (camera.parent === null) {\r\n      camera.updateMatrixWorld();\r\n    }\r\n\r\n    camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\r\n\r\n    this._viewMatrix.copy(camera.matrixWorldInverse);\r\n    this._projectionMatrix.copy(camera.projectionMatrix);\r\n\r\n    this._renderObject(scene, camera, scene);\r\n  }\r\n}\r\nexport default CSS2DRenderer;\r\n","export default function getTopWindow() {\r\n  // intercept the exception if we have cross-origin iframe\r\n  try {\r\n    if (window.top.location.href !== undefined) {\r\n      return window.top;\r\n    }\r\n  } catch (e) {\r\n    // provide fallback\r\n  }\r\n  return window;\r\n}\r\n","import * as THREE from 'three';\r\nimport Timer from '../Timer';\r\nimport settings from '../settings';\r\nimport EventDispatcher from '../utils/EventDispatcher';\r\nimport getTopWindow from '../utils/getTopWindow';\r\n\r\nconst VK_LEFT = 37;\r\nconst VK_UP = 38;\r\nconst VK_RIGHT = 39;\r\nconst VK_DOWN = 40;\r\n\r\nconst STATE = {\r\n  NONE: -1, ROTATE: 0, TRANSLATE: 1, SCALE: 2, TRANSLATE_PIVOT: 3,\r\n};\r\n\r\n// pausing for this amount of time before releasing mouse button prevents inertial rotation (seconds)\r\nconst FULL_STOP_THRESHOLD = 0.1;\r\n\r\nconst quaternion = new THREE.Quaternion();\r\nconst matrix4 = new THREE.Matrix4();\r\n\r\n// pivot -- local offset of the rotation pivot point\r\nfunction ObjectHandler(objects, camera, pivot, options) {\r\n  this.objects = objects;\r\n  [this.object] = objects;\r\n  this.camera = camera;\r\n  this.pivot = pivot;\r\n  this.axis = new THREE.Vector3(0, 0, 1);\r\n  this.options = options;\r\n\r\n  this.lastRotation = {\r\n    axis: new THREE.Vector3(),\r\n    angle: 0.0,\r\n  };\r\n}\r\n\r\nObjectHandler.prototype._rotate = (function () {\r\n  const p = new THREE.Vector3();\r\n  const q = new THREE.Quaternion();\r\n  const s = new THREE.Vector3();\r\n\r\n  const m = new THREE.Matrix4();\r\n\r\n  return function (quat) {\r\n    const zeroPivot = (this.pivot.x === 0.0 && this.pivot.y === 0.0 && this.pivot.z === 0.0);\r\n\r\n    m.copy(this.object.matrix);\r\n\r\n    if (zeroPivot) {\r\n      m.multiply(matrix4.makeRotationFromQuaternion(quat));\r\n    } else {\r\n      m.multiply(matrix4.makeTranslation(this.pivot.x, this.pivot.y, this.pivot.z));\r\n      m.multiply(matrix4.makeRotationFromQuaternion(quat));\r\n      m.multiply(matrix4.makeTranslation(-this.pivot.x, -this.pivot.y, -this.pivot.z));\r\n    }\r\n\r\n    m.decompose(p, q, s);\r\n\r\n    // update objects\r\n    if (!zeroPivot) {\r\n      for (let i = 0; i < this.objects.length; ++i) {\r\n        this.objects[i].position.copy(p);\r\n      }\r\n    }\r\n\r\n    for (let j = 0; j < this.objects.length; ++j) {\r\n      this.objects[j].quaternion.copy(q);\r\n      this.objects[j].updateMatrix();\r\n    }\r\n  };\r\n}());\r\n\r\nObjectHandler.prototype.setObjects = function (objects) {\r\n  this.objects = objects;\r\n  [this.object] = objects;\r\n};\r\n\r\nObjectHandler.prototype.rotate = (function () {\r\n  const rot = {\r\n    axis: new THREE.Vector3(),\r\n    angle: 0.0,\r\n  };\r\n\r\n  return function (quat, mousePrevPos, mouseCurPos, aboutAxis) {\r\n    this.mouse2rotation(rot, mousePrevPos, mouseCurPos, aboutAxis);\r\n    quat.setFromAxisAngle(rot.axis, rot.angle);\r\n\r\n    if (rot.angle) {\r\n      this._rotate(quat);\r\n    }\r\n\r\n    this.lastRotation = rot;\r\n  };\r\n}());\r\n\r\nObjectHandler.prototype.translate = (function () {\r\n  const dir = new THREE.Vector3();\r\n  const pivot = new THREE.Vector3();\r\n\r\n  return function (delta) {\r\n    // reverse-project viewport movement to view coords (compensate for screen aspect ratio)\r\n    dir.set(\r\n      delta.x / this.camera.projectionMatrix.elements[0],\r\n      delta.y / this.camera.projectionMatrix.elements[5],\r\n      0,\r\n    );\r\n    let dist = dir.length();\r\n    dir.normalize();\r\n\r\n    // transform movement direction to object local coords\r\n    dir.transformDirection(matrix4.copy(this.object.matrixWorld).invert());\r\n\r\n    // visible translate distance shouldn't depend on camera-to-object distance\r\n    pivot.copy(this.pivot);\r\n    this.object.localToWorld(pivot);\r\n    dist *= Math.abs(pivot.z - this.camera.position.z);\r\n\r\n    // visible translate distance shouldn't depend on object scale\r\n    dist /= this.object.matrixWorld.getMaxScaleOnAxis();\r\n\r\n    // all objects are translated similar to principal object\r\n    // (we assume they all have identical pivot and scale)\r\n    for (let i = 0; i < this.objects.length; ++i) {\r\n      this.objects[i].translateOnAxis(dir, dist);\r\n    }\r\n  };\r\n}());\r\n\r\nObjectHandler.prototype.update = (function () {\r\n  const axis = new THREE.Vector3();\r\n\r\n  return function (timeSinceLastUpdate, timeSinceMove) {\r\n    if (settings.now.autoRotation !== 0.0) {\r\n      // auto-rotation with constant speed\r\n\r\n      // if rotation axis is fixed or hasn't been defined yet\r\n      if (settings.now.autoRotationAxisFixed || this.lastRotation.axis.length() === 0.0) {\r\n        // use Y-axis (transformed to local object coords)\r\n        axis.set(0, 1, 0).transformDirection(matrix4.copy(this.object.matrixWorld).invert());\r\n      } else {\r\n        // use axis defined by last user rotation\r\n        axis.copy(this.lastRotation.axis);\r\n      }\r\n\r\n      this._rotate(quaternion.setFromAxisAngle(axis, settings.now.autoRotation * timeSinceLastUpdate));\r\n      return true;\r\n    }\r\n\r\n    if (this.options.intertia && this.lastRotation.angle) {\r\n      // inertial object rotation\r\n      const angle = this.lastRotation.angle * ((1.0 - this.options.dynamicDampingFactor) ** (40.0 * timeSinceMove));\r\n\r\n      if (Math.abs(angle) <= this.options.intertiaThreshold) {\r\n        this.lastRotation.angle = 0.0;\r\n      } else {\r\n        this._rotate(quaternion.setFromAxisAngle(this.lastRotation.axis, angle));\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n}());\r\n\r\nObjectHandler.prototype.stop = function () {\r\n  this.lastRotation.angle = 0.0;\r\n};\r\n\r\n// calculate (axis, angle) pair from mouse/touch movement\r\nObjectHandler.prototype.mouse2rotation = (function () {\r\n  const center = new THREE.Vector3();\r\n\r\n  const eye = new THREE.Vector3();\r\n  const eyeDirection = new THREE.Vector3();\r\n\r\n  const cameraUpDirection = new THREE.Vector3();\r\n  const cameraSidewaysDirection = new THREE.Vector3();\r\n\r\n  const moveDirection = new THREE.Vector3();\r\n\r\n  const mouseDelta = new THREE.Vector2();\r\n\r\n  return function (rot, mousePrev, mouseCur, aboutAxis) {\r\n    if (aboutAxis) {\r\n      rot.axis.copy(this.axis);\r\n      rot.angle = this.options.axisRotateFactor * (mouseCur.y - mousePrev.y);\r\n\r\n      /* cool method that allows rotation around Z axis to be \"tied\" to mouse cursor\r\n\r\n        res.axis.copy(this.axis);\r\n\r\n        var pivot = this.pivot.clone();\r\n        this.object.localToWorld(pivot);\r\n        pivot.project(this.camera);\r\n\r\n        var v1 = new THREE.Vector3(mousePrev.x, mousePrev.y, this.camera.position.z);\r\n        v1.sub(pivot);\r\n        var v2 = new THREE.Vector3(mouseCur.x, mouseCur.y, this.camera.position.z);\r\n        v2.sub(pivot);\r\n\r\n        v1.sub(res.axis.clone().multiplyScalar(v1.dot(res.axis)));\r\n        v2.sub(res.axis.clone().multiplyScalar(v2.dot(res.axis)));\r\n\r\n        var abs = v1.length() * v2.length();\r\n        if (abs > 0) {\r\n          res.angle = res.axis.dot(v1.cross(v2)) / abs;\r\n        }\r\n      */\r\n    } else {\r\n      mouseDelta.subVectors(mouseCur, mousePrev);\r\n      const angle = mouseDelta.length();\r\n      if (angle === 0.0) {\r\n        return;\r\n      }\r\n\r\n      center.copy(this.pivot);\r\n      this.object.localToWorld(center);\r\n      eye.subVectors(this.camera.position, center);\r\n      eyeDirection.copy(eye).normalize();\r\n\r\n      cameraUpDirection.copy(this.camera.up).normalize();\r\n      cameraSidewaysDirection.crossVectors(cameraUpDirection, eyeDirection).normalize();\r\n\r\n      cameraUpDirection.setLength(mouseDelta.y);\r\n      cameraSidewaysDirection.setLength(mouseDelta.x);\r\n\r\n      moveDirection.copy(cameraUpDirection.add(cameraSidewaysDirection));\r\n\r\n      rot.axis.crossVectors(moveDirection, eye);\r\n\r\n      rot.angle = -angle * this.options.rotateFactor;\r\n    }\r\n\r\n    rot.axis.transformDirection(matrix4.copy(this.object.matrixWorld).invert());\r\n\r\n    // make sure angle is always positive (thus 'axis' defines both axis and direction of rotation)\r\n    if (rot.angle < 0.0) {\r\n      rot.axis.negate();\r\n      rot.angle = -rot.angle;\r\n    }\r\n  };\r\n}());\r\n\r\nfunction ObjectControls(object, objectPivot, camera, domElement, getAltObj) {\r\n  EventDispatcher.call(this);\r\n  const self = this;\r\n\r\n  this.object = object;\r\n  this.objectPivot = objectPivot;\r\n  this.camera = camera;\r\n  this.domElement = (typeof domElement !== 'undefined') ? domElement : document;\r\n  this.getAltObj = getAltObj;\r\n\r\n  // API\r\n\r\n  this.enabled = true;\r\n  this.hotkeysEnabled = true;\r\n\r\n  this.screen = {\r\n    left: 0, top: 0, width: 0, height: 0,\r\n  };\r\n\r\n  this.options = {\r\n    rotateFactor: Math.PI, // full screen slide (along short side) would roughly mean 180 deg. rotation\r\n    axisRotateFactor: 4 * Math.PI, // full screen slide (along short side) would roughly mean 720 deg. rotation\r\n    intertia: true,\r\n    dynamicDampingFactor: 0.1,\r\n    intertiaThreshold: 1e-3,\r\n  };\r\n\r\n  // internals\r\n\r\n  this._state = STATE.NONE;\r\n\r\n  this._mousePrevPos = new THREE.Vector2();\r\n  this._mouseCurPos = new THREE.Vector2();\r\n\r\n  this._mainObj = new ObjectHandler([this.object], this.camera, new THREE.Vector3(0, 0, 0), this.options);\r\n  this._altObj = new ObjectHandler([this.object], this.camera, new THREE.Vector3(0, 0, 0), this.options);\r\n  this._affectedObj = this._mainObj;\r\n  this._isAltObjFreeRotationAllowed = true;\r\n  this._isTranslationAllowed = true;\r\n  this._isKeysTranslatingObj = false;\r\n\r\n  this._pressedKeys = [];\r\n\r\n  this._clock = new Timer();\r\n  this._clock.start();\r\n  this._lastUpdateTime = this._clock.getElapsedTime();\r\n\r\n  // events\r\n  this._listeners = [\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousedown',\r\n      handler(e) {\r\n        self.mousedown(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseup',\r\n      handler(e) {\r\n        self.mouseup(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousemove',\r\n      handler(e) {\r\n        self.mousemove(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousewheel',\r\n      handler(e) {\r\n        self.mousewheel(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'DOMMouseScroll',\r\n      handler(e) {\r\n        self.mousewheel(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseout',\r\n      handler(e) {\r\n        self.mouseup(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchstart',\r\n      handler(e) {\r\n        self.touchstartend(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchend',\r\n      handler(e) {\r\n        self.touchstartend(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchmove',\r\n      handler(e) {\r\n        self.touchmove(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.getKeyBindObject(),\r\n      type: 'keydown',\r\n      handler(e) {\r\n        self.keydownup(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.getKeyBindObject(),\r\n      type: 'keyup',\r\n      handler(e) {\r\n        self.keydownup(e);\r\n      },\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'resize',\r\n      handler() {\r\n        self.handleResize();\r\n      },\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'blur',\r\n      handler() {\r\n        self.resetKeys();\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'contextmenu',\r\n      handler(e) {\r\n        self.contextmenu(e);\r\n      },\r\n    }];\r\n\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i];\r\n    l.obj.addEventListener(l.type, l.handler);\r\n  }\r\n\r\n  this.handleResize();\r\n\r\n  this.resetKeys();\r\n\r\n  // force an update at start\r\n  this.update();\r\n}\r\n\r\n// methods\r\n\r\nObjectControls.prototype = Object.create(EventDispatcher.prototype);\r\nObjectControls.prototype.constructor = ObjectControls;\r\n\r\nObjectControls.prototype.resetKeys = function () {\r\n  this._pressedKeys[VK_LEFT] = false;\r\n  this._pressedKeys[VK_UP] = false;\r\n  this._pressedKeys[VK_RIGHT] = false;\r\n  this._pressedKeys[VK_DOWN] = false;\r\n};\r\n\r\nObjectControls.prototype.contextmenu = function (e) {\r\n  e.stopPropagation();\r\n  e.preventDefault();\r\n};\r\n\r\nObjectControls.prototype.handleResize = function () {\r\n  if (this.domElement === document) {\r\n    this.screen.left = 0;\r\n    this.screen.top = 0;\r\n    this.screen.width = window.innerWidth;\r\n    this.screen.height = window.innerHeight;\r\n  } else {\r\n    const box = this.domElement.getBoundingClientRect();\r\n    // adjustments come from similar code in the jquery offset() function\r\n    const d = this.domElement.ownerDocument.documentElement;\r\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft;\r\n    this.screen.top = box.top + window.pageYOffset - d.clientTop;\r\n    this.screen.width = box.width;\r\n    this.screen.height = box.height;\r\n  }\r\n};\r\n\r\nObjectControls.prototype.enable = function (enable) {\r\n  this.enabled = enable;\r\n};\r\n\r\nObjectControls.prototype.enableHotkeys = function (enable) {\r\n  this.hotkeysEnabled = enable;\r\n};\r\n\r\nObjectControls.prototype.allowTranslation = function (allow) {\r\n  this._isTranslationAllowed = allow;\r\n};\r\n\r\nObjectControls.prototype.allowAltObjFreeRotation = function (allow) {\r\n  this._isAltObjFreeRotationAllowed = allow;\r\n};\r\n\r\nObjectControls.prototype.keysTranslateObj = function (on) {\r\n  this._isKeysTranslatingObj = on;\r\n};\r\n\r\nObjectControls.prototype.isEditingAltObj = function () {\r\n  return ((this._state === STATE.ROTATE) || (this._state === STATE.TRANSLATE))\r\n            && (this._affectedObj === this._altObj);\r\n};\r\n\r\n// convert page coords of mouse/touch to uniform coords with smaller side being [-0.5, 0.5]\r\n// (uniform coords keep direct proportion with screen distance travelled by mouse regardless of screen aspect ratio)\r\nObjectControls.prototype.convertMouseToOnCircle = function (coords, pageX, pageY) {\r\n  const screenSize = Math.min(this.screen.width, this.screen.height);\r\n\r\n  if (screenSize === 0) {\r\n    coords.set(0, 0);\r\n    return;\r\n  }\r\n\r\n  coords.set(\r\n    ((pageX - this.screen.width * 0.5 - this.screen.left) / screenSize),\r\n    ((0.5 * this.screen.height + this.screen.top - pageY) / screenSize),\r\n  );\r\n};\r\n\r\n// convert page coords of mouse/touch to viewport coords with both sides being [-1, 1]\r\n// (those are non-uniform coords affected by screen aspect ratio)\r\nObjectControls.prototype.convertMouseToViewport = function (coords, pageX, pageY) {\r\n  if (this.screen.width === 0 || this.screen.height === 0) {\r\n    coords.set(0, 0);\r\n    return;\r\n  }\r\n\r\n  coords.set(\r\n    (2.0 * (pageX - this.screen.width * 0.5 - this.screen.left) / this.screen.width),\r\n    (2.0 * (0.5 * this.screen.height + this.screen.top - pageY) / this.screen.height),\r\n  );\r\n};\r\n\r\nObjectControls.prototype.stop = function () {\r\n  this._mainObj.stop();\r\n  this._altObj.stop();\r\n};\r\n\r\n// rotate object based on latest mouse/touch movement\r\nObjectControls.prototype.rotateByMouse = (function () {\r\n  const quat = new THREE.Quaternion();\r\n\r\n  return function (aboutZAxis) {\r\n    this._affectedObj.rotate(quat, this._mousePrevPos, this._mouseCurPos, aboutZAxis);\r\n    this.dispatchEvent({ type: 'change', action: 'rotate', quaternion: quat });\r\n  };\r\n}());\r\n\r\n// rotate object by specified quaternion\r\nObjectControls.prototype.rotate = function (quat) {\r\n  this.object.quaternion.multiply(quat);\r\n  this.dispatchEvent({ type: 'change', action: 'rotate', quaternion: quat });\r\n};\r\n\r\n// get object's orientation\r\nObjectControls.prototype.getOrientation = function () {\r\n  return this.object.quaternion;\r\n};\r\n\r\n// set object's orientation\r\nObjectControls.prototype.setOrientation = function (quat) {\r\n  this.object.quaternion.copy(quat);\r\n};\r\n\r\n// translate object based on latest mouse/touch movement\r\nObjectControls.prototype.translate = (function () {\r\n  const delta = new THREE.Vector2();\r\n  return function () {\r\n    delta.subVectors(this._mouseCurPos, this._mousePrevPos);\r\n    this._affectedObj.translate(delta);\r\n    this.dispatchEvent({ type: 'change', action: 'translate' });\r\n  };\r\n}());\r\n\r\n// get object scale\r\nObjectControls.prototype.getScale = function () {\r\n  return this.object.scale.x;\r\n};\r\n\r\n// set uniform object scale\r\nObjectControls.prototype.setScale = function (scale) {\r\n  this.object.scale.set(scale, scale, scale);\r\n};\r\n\r\n// scale object by factor (factor should be greater than zero)\r\nObjectControls.prototype.scale = function (factor) {\r\n  if (factor <= 0) {\r\n    return;\r\n  }\r\n  this.setScale(this.object.scale.x * factor);\r\n  this.dispatchEvent({ type: 'change', action: 'zoom', factor });\r\n};\r\n\r\nObjectControls.prototype.update = (function () {\r\n  const shift = new THREE.Vector2();\r\n\r\n  return function () {\r\n    const curTime = this._clock.getElapsedTime();\r\n    const timeSinceLastUpdate = curTime - this._lastUpdateTime;\r\n\r\n    // update object handler\r\n    if (this._state === STATE.NONE) {\r\n      const timeSinceMove = curTime - this._lastMouseMoveTime;\r\n      if (this._mainObj.update(timeSinceLastUpdate, timeSinceMove)\r\n        || this._altObj.update(timeSinceLastUpdate, timeSinceMove)) {\r\n        this.dispatchEvent({ type: 'change', action: 'auto' });\r\n      }\r\n    }\r\n\r\n    // apply arrow keys\r\n    if (this._isKeysTranslatingObj) {\r\n      const speedX = Number(this._pressedKeys[VK_RIGHT]) - Number(this._pressedKeys[VK_LEFT]);\r\n      const speedY = Number(this._pressedKeys[VK_UP]) - Number(this._pressedKeys[VK_DOWN]);\r\n      if (speedX !== 0.0 || speedY !== 0.0) {\r\n        const delta = timeSinceLastUpdate;\r\n\r\n        // update object translation\r\n        const altObj = this.getAltObj();\r\n        if (altObj.objects.length > 0) {\r\n          this._altObj.setObjects(altObj.objects);\r\n          this._altObj.pivot = altObj.pivot;\r\n\r\n          if ('axis' in altObj) {\r\n            this._altObj.axis = altObj.axis.clone();\r\n          } else {\r\n            this._altObj.axis.set(0, 0, 1);\r\n          }\r\n\r\n          shift.set(delta * speedX, delta * speedY);\r\n          this._altObj.translate(shift);\r\n          this.dispatchEvent({ type: 'change', action: 'translate' });\r\n        }\r\n      }\r\n    }\r\n\r\n    this._lastUpdateTime = curTime;\r\n  };\r\n}());\r\n\r\nObjectControls.prototype.reset = function () {\r\n  this._state = STATE.NONE;\r\n\r\n  this.object.quaternion.copy(quaternion.set(0, 0, 0, 1));\r\n};\r\n\r\n// listeners\r\n\r\nObjectControls.prototype.mousedown = function (event) {\r\n  if (this.enabled === false || this._state !== STATE.NONE) {\r\n    return;\r\n  }\r\n\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  if (this._state === STATE.NONE) {\r\n    if (event.button === 0) {\r\n      this._affectedObj.stop(); // can edit only one object at a time\r\n\r\n      let workWithAltObj = false;\r\n\r\n      if (event.altKey) {\r\n        const altObj = this.getAltObj();\r\n        workWithAltObj = (altObj.objects.length > 0);\r\n        if (workWithAltObj) {\r\n          this._altObj.setObjects(altObj.objects);\r\n          this._altObj.pivot = altObj.pivot;\r\n\r\n          if ('axis' in altObj) {\r\n            this._altObj.axis = altObj.axis.clone();\r\n          } else {\r\n            this._altObj.axis.set(0, 0, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      this._affectedObj = workWithAltObj ? this._altObj : this._mainObj;\r\n\r\n      this._state = (workWithAltObj && event.ctrlKey && this._isTranslationAllowed) ? STATE.TRANSLATE : STATE.ROTATE;\r\n    } else if (event.button === 2) {\r\n      this._state = STATE.TRANSLATE_PIVOT;\r\n    }\r\n  }\r\n\r\n  if (this._state === STATE.ROTATE) {\r\n    this.convertMouseToOnCircle(this._mouseCurPos, event.pageX, event.pageY);\r\n    this._mousePrevPos.copy(this._mouseCurPos);\r\n  }\r\n\r\n  if (this._state === STATE.TRANSLATE || this._state === STATE.TRANSLATE_PIVOT) {\r\n    this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY);\r\n    this._mousePrevPos.copy(this._mouseCurPos);\r\n  }\r\n};\r\n\r\nObjectControls.prototype.mousemove = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return;\r\n  }\r\n\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  switch (this._state) {\r\n    case STATE.ROTATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos);\r\n      this.convertMouseToOnCircle(this._mouseCurPos, event.pageX, event.pageY);\r\n      this.rotateByMouse((event.altKey && !this._isAltObjFreeRotationAllowed) || event.shiftKey);\r\n      this._lastMouseMoveTime = this._clock.getElapsedTime();\r\n      break;\r\n\r\n    case STATE.TRANSLATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos);\r\n      this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY);\r\n      this.translate();\r\n      break;\r\n\r\n    case STATE.TRANSLATE_PIVOT:\r\n      this._mousePrevPos.copy(this._mouseCurPos);\r\n      this.convertMouseToViewport(this._mouseCurPos, event.pageX, event.pageY);\r\n      this.translatePivotByMouse();\r\n      break;\r\n\r\n    default: break;\r\n  }\r\n};\r\n\r\nObjectControls.prototype.mousewheel = function (event) {\r\n  if (this.enabled === false || !settings.now.zooming || this._state !== STATE.NONE || event.shiftKey) {\r\n    return;\r\n  }\r\n\r\n  event.preventDefault();\r\n\r\n  let delta = 0;\r\n\r\n  if (event.wheelDelta) {\r\n    // WebKit / Opera / Explorer 9\r\n    delta = event.wheelDelta / 40;\r\n  } else if (event.detail) {\r\n    // Firefox\r\n    delta = -event.detail / 3;\r\n  }\r\n\r\n  let factor = 1.0 + delta * 0.05;\r\n  factor = Math.max(factor, 0.01);\r\n  this.scale(factor);\r\n};\r\n\r\nObjectControls.prototype.mouseup = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return;\r\n  }\r\n\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  this._state = STATE.NONE;\r\n\r\n  if (this._clock.getElapsedTime() - this._lastMouseMoveTime > FULL_STOP_THRESHOLD) {\r\n    this._affectedObj.stop();\r\n  }\r\n};\r\n\r\nObjectControls.prototype.touchstartend = function (event) {\r\n  if (this.enabled === false) {\r\n    return;\r\n  }\r\n\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  switch (event.touches.length) {\r\n    case 1:\r\n      this._state = STATE.ROTATE;\r\n      this.convertMouseToOnCircle(this._mouseCurPos, event.touches[0].pageX, event.touches[0].pageY);\r\n      this._mousePrevPos.copy(this._mouseCurPos);\r\n      break;\r\n\r\n    case 2: {\r\n      // prevent inertial rotation\r\n      this._mainObj.stop();\r\n      this._altObj.stop();\r\n\r\n      this._state = STATE.SCALE;\r\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\r\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\r\n      this._touchDistanceCur = this._touchDistanceStart = Math.sqrt(dx * dx + dy * dy);\r\n      this._scaleStart = this.object.scale.x;\r\n      break;\r\n    }\r\n\r\n    default:\r\n      this._state = STATE.NONE;\r\n  }\r\n};\r\n\r\nObjectControls.prototype.touchmove = function (event) {\r\n  if (this.enabled === false || this._state === STATE.NONE) {\r\n    return;\r\n  }\r\n\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  switch (this._state) {\r\n    case STATE.ROTATE:\r\n      this._mousePrevPos.copy(this._mouseCurPos);\r\n      this.convertMouseToOnCircle(this._mouseCurPos, event.touches[0].pageX, event.touches[0].pageY);\r\n      this.rotateByMouse(false);\r\n\r\n      this._lastMouseMoveTime = this._clock.getElapsedTime();\r\n      break;\r\n\r\n    case STATE.SCALE:\r\n      if (settings.now.zooming) {\r\n        // update scale\r\n        const dx = event.touches[0].pageX - event.touches[1].pageX;\r\n        const dy = event.touches[0].pageY - event.touches[1].pageY;\r\n        this._touchDistanceCur = Math.sqrt(dx * dx + dy * dy);\r\n        const newScale = this._scaleStart * this._touchDistanceCur / this._touchDistanceStart;\r\n        const factor = newScale / this.object.scale.x;\r\n        this.scale(factor);\r\n      }\r\n      break;\r\n\r\n    default:\r\n  }\r\n};\r\n\r\nObjectControls.prototype.keydownup = function (event) {\r\n  if (this.enabled === false || this.hotkeysEnabled === false) {\r\n    return;\r\n  }\r\n\r\n  switch (event.keyCode) {\r\n    case VK_LEFT:\r\n    case VK_UP:\r\n    case VK_RIGHT:\r\n    case VK_DOWN:\r\n      this._pressedKeys[event.keyCode] = (event.type === 'keydown');\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      break;\r\n    default:\r\n  }\r\n};\r\n\r\nObjectControls.prototype.getKeyBindObject = function () {\r\n  return getTopWindow();\r\n};\r\n\r\nObjectControls.prototype.dispose = function () {\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i];\r\n    l.obj.removeEventListener(l.type, l.handler);\r\n  }\r\n};\r\n\r\nObjectControls.prototype.translatePivotByMouse = (function () {\r\n  const delta = new THREE.Vector2();\r\n  return function () {\r\n    delta.subVectors(this._mouseCurPos, this._mousePrevPos);\r\n    this.translatePivotInWorld(settings.now.translationSpeed * delta.x, settings.now.translationSpeed * delta.y, 0);\r\n  };\r\n}());\r\n\r\n// Translate in WorldCS, translation is scaled with root scale matrix\r\nObjectControls.prototype.translatePivotInWorld = function (x, y, z) {\r\n  const pos = this.objectPivot.position;\r\n  pos.applyMatrix4(this.object.matrixWorld);\r\n  pos.setX(pos.x + x);\r\n  pos.setY(pos.y + y);\r\n  pos.setZ(pos.z + z);\r\n  pos.applyMatrix4(matrix4.copy(this.object.matrixWorld).invert());\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' });\r\n};\r\n\r\n// Translate in ModelCS, x, y, z are Ang\r\nObjectControls.prototype.translatePivot = function (x, y, z) {\r\n  const pos = this.objectPivot.position;\r\n  pos.setX(pos.x + x);\r\n  pos.setY(pos.y + y);\r\n  pos.setZ(pos.z + z);\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' });\r\n};\r\n\r\n// Set pivot\r\nObjectControls.prototype.setPivot = function (newPivot) {\r\n  this.objectPivot.position.copy(newPivot);\r\n\r\n  this.dispatchEvent({ type: 'change', action: 'translatePivot' });\r\n};\r\n\r\nexport default ObjectControls;\r\n","import * as THREE from 'three';\r\nimport settings from '../settings';\r\nimport Timer from '../Timer';\r\nimport EventDispatcher from '../utils/EventDispatcher';\r\n\r\nfunction Picker(gfxObj, camera, domElement) {\r\n  EventDispatcher.call(this);\r\n  const self = this;\r\n\r\n  this.gfxObj = gfxObj;\r\n  this.camera = camera;\r\n  this.domElement = (typeof domElement !== 'undefined') ? domElement : document;\r\n  this.screen = {\r\n    left: 0, top: 0, width: 0, height: 0,\r\n  };\r\n  this._lastMousePos = new THREE.Vector2(0, 0);\r\n  this._mouseTotalDist = 0.0;\r\n  this._lastClickBeginTime = -1000.0;\r\n  this._lastClickPos = new THREE.Vector2(0, 0);\r\n  this._clickBeginTime = 0.0;\r\n\r\n  this._clock = new Timer();\r\n  this._clock.start();\r\n\r\n  this._listeners = [\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousedown',\r\n      handler(e) {\r\n        self.mousedown(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mouseup',\r\n      handler(e) {\r\n        self.mouseup(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'mousemove',\r\n      handler(e) {\r\n        self.mousemove(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchstart',\r\n      handler(e) {\r\n        self.touchstart(e);\r\n      },\r\n    },\r\n    {\r\n      obj: self.domElement,\r\n      type: 'touchend',\r\n      handler(e) {\r\n        self.touchend(e);\r\n      },\r\n    },\r\n    {\r\n      obj: window,\r\n      type: 'resize',\r\n      handler() {\r\n        self.handleResize();\r\n      },\r\n    }];\r\n\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i];\r\n    l.obj.addEventListener(l.type, l.handler);\r\n  }\r\n\r\n  this.handleResize();\r\n}\r\n\r\nPicker.prototype = Object.create(EventDispatcher.prototype);\r\nPicker.prototype.constructor = Picker;\r\n\r\nPicker.prototype.reset = function () {\r\n  this.picked = {};\r\n  this.dispatchEvent({ type: 'newpick', obj: {} });\r\n};\r\n\r\nPicker.prototype.handleResize = function () {\r\n  if (this.domElement === document) {\r\n    this.screen.left = 0;\r\n    this.screen.top = 0;\r\n    this.screen.width = window.innerWidth;\r\n    this.screen.height = window.innerHeight;\r\n  } else {\r\n    const box = this.domElement.getBoundingClientRect();\r\n    // adjustments come from similar code in the jquery offset() function\r\n    const d = this.domElement.ownerDocument.documentElement;\r\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft;\r\n    this.screen.top = box.top + window.pageYOffset - d.clientTop;\r\n    this.screen.width = box.width;\r\n    this.screen.height = box.height;\r\n  }\r\n};\r\n\r\nPicker.prototype.pickObject = function (screenPos) {\r\n  if (!this.gfxObj) {\r\n    this.picked = {};\r\n    this.dispatchEvent({ type: 'newpick', obj: {} });\r\n    return;\r\n  }\r\n\r\n  const { gfxObj } = this;\r\n  const rayCaster = new THREE.Raycaster();\r\n  rayCaster.ray.origin.setFromMatrixPosition(this.camera.matrixWorld);\r\n  rayCaster.ray.direction.set(screenPos.x, screenPos.y, 0.5).unproject(this.camera).sub(rayCaster.ray.origin).normalize();\r\n\r\n  const clipPlane = (settings.now.draft.clipPlane && this.clipPlaneValue) ? this.clipPlaneValue : Infinity;\r\n  const fogFarPlane = (settings.now.fog && this.fogFarValue) ? this.fogFarValue : Infinity;\r\n  const point = rayCaster.intersectVisibleObject(gfxObj, this.camera, clipPlane, fogFarPlane);\r\n  if (!point) {\r\n    this.picked = {};\r\n    this.dispatchEvent({ type: 'newpick', obj: {} });\r\n    return;\r\n  }\r\n\r\n  let picked = {};\r\n  if (point.residue || point.atom) {\r\n    const residue = point.residue || point.atom.residue;\r\n    if (settings.now.pick === 'chain') {\r\n      picked = { chain: residue.getChain() };\r\n    } else if (settings.now.pick === 'molecule') {\r\n      picked = { molecule: residue.getMolecule() };\r\n    } else if (point.residue || settings.now.pick === 'residue') {\r\n      picked = { residue };\r\n    } else if (point.atom) {\r\n      picked = { atom: point.atom };\r\n    }\r\n  }\r\n  this.picked = picked;\r\n  this.dispatchEvent({ type: 'newpick', obj: picked });\r\n};\r\n\r\nPicker.prototype.getMouseInViewport = function (pageX, pageY) {\r\n  return new THREE.Vector2(\r\n    (pageX - this.screen.left) / this.screen.width * 2 - 1,\r\n    -(pageY - this.screen.top) / this.screen.height * 2 + 1,\r\n  );\r\n};\r\n\r\nPicker.prototype.mousedown = function (event) {\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  if (event.button === 0) {\r\n    this._lastMousePos = this.getMouseInViewport(event.pageX, event.pageY);\r\n    this._mouseTotalDist = 0.0;\r\n    this._clickBeginTime = this._clock.getElapsedTime();\r\n  }\r\n};\r\n\r\nPicker.prototype.mousemove = function (event) {\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  const pos = this.getMouseInViewport(event.pageX, event.pageY);\r\n  this._mouseTotalDist += pos.sub(this._lastMousePos).length();\r\n};\r\n\r\nPicker.prototype.mouseup = function (event) {\r\n  const self = this;\r\n\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  if (event.button === 0) {\r\n    if (this._mouseTotalDist < 0.01) {\r\n      const curTime = this._clock.getElapsedTime();\r\n      const curPos = this.getMouseInViewport(event.pageX, event.pageY);\r\n\r\n      const timeSinceLastClickBegin = curTime - this._lastClickBeginTime;\r\n      if (timeSinceLastClickBegin < 0.7) {\r\n        const clickDist = new THREE.Vector2().subVectors(curPos, this._lastClickPos);\r\n        if (clickDist.length() < 0.01) {\r\n          // it's a double click\r\n          this.dispatchEvent({ type: 'dblclick', obj: this.picked });\r\n\r\n          this._lastClickPos = curPos;\r\n          this._lastClickBeginTime = -1000; // this click cannot serve as first click in double-click\r\n          return;\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        self.pickObject(curPos);\r\n      }, 0);\r\n\r\n      this._lastClickPos = curPos;\r\n      this._lastClickBeginTime = this._clickBeginTime;\r\n    }\r\n  }\r\n};\r\n\r\nPicker.prototype.touchstart = function (event) {\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  if (event.touches.length === 1) {\r\n    this._lastTouchdownPos = this.getMouseInViewport(event.touches[0].pageX, event.touches[0].pageY);\r\n  }\r\n};\r\n\r\nPicker.prototype.touchend = function (event) {\r\n  const self = this;\r\n\r\n  event.preventDefault();\r\n  event.stopPropagation();\r\n\r\n  if (event.touches.length === 0\r\n        && event.changedTouches.length === 1) {\r\n    const pos = this.getMouseInViewport(event.changedTouches[0].pageX, event.changedTouches[0].pageY);\r\n    const dist = pos.sub(this._lastTouchdownPos).length();\r\n    if (dist < 0.01) {\r\n      setTimeout(() => {\r\n        self.pickObject(self._lastTouchdownPos);\r\n      }, 0);\r\n    }\r\n  }\r\n};\r\n\r\nPicker.prototype.dispose = function () {\r\n  for (let i = 0; i < this._listeners.length; i++) {\r\n    const l = this._listeners[i];\r\n    l.obj.removeEventListener(l.type, l.handler);\r\n  }\r\n};\r\n\r\nexport default Picker;\r\n","import * as THREE from 'three';\r\n\r\nclass Axes {\r\n  constructor(target, targetCamera) {\r\n    this._target = target;\r\n    this._targetCamera = targetCamera;\r\n    this._camera = new THREE.PerspectiveCamera(targetCamera.fov, targetCamera.aspect, 1, 100);\r\n    this._object = new THREE.AxesHelper(1);\r\n    this._scene = new THREE.Scene();\r\n    this._scene.add(this._object);\r\n    this._full = new THREE.Vector2();\r\n\r\n    this._update();\r\n  }\r\n\r\n  _update() {\r\n    const { fov } = this._targetCamera;\r\n    const camera = this._camera;\r\n    camera.aspect = this._targetCamera.aspect;\r\n    camera.setMinimalFov(fov);\r\n    camera.setDistanceToFit(1.0, fov);\r\n    camera.updateProjectionMatrix();\r\n\r\n    this._object.quaternion.copy(this._target.quaternion);\r\n  }\r\n\r\n  render(renderer) {\r\n    this._update();\r\n\r\n    renderer.getSize(this._full);\r\n    const width = this._full.width * 0.25;\r\n    const height = this._full.height * 0.25;\r\n\r\n    const { autoClear } = renderer;\r\n    renderer.autoClear = false;\r\n    renderer.setViewport(0.0, 0.0, width, height);\r\n    renderer.clear(false, true, false);\r\n    renderer.render(this._scene, this._camera);\r\n    renderer.setViewport(0, 0, this._full.width, this._full.height);\r\n    renderer.autoClear = autoClear;\r\n  }\r\n}\r\nexport default Axes;\r\n","import * as THREE from 'three';\r\nimport SecondaryStructureColorer from './colorers/SecondaryStructureColorer';\r\n\r\nconst cDataOffset = 12;\r\nconst cFirstMask = 0x0FFFFF00;\r\nconst cFirstShift = 8;\r\nconst cSecMask1 = 0x000000FF;\r\nconst cSecShift1 = 12;\r\nconst cSecMask2 = 0xFFF00000;\r\nconst cSecShift2 = 20;\r\nconst cThirdMask = 0x000FFFFF;\r\nconst cStrMask = 0xF0000000;\r\nconst cStrShift = 28;\r\nconst c219 = 1 << 19;\r\nconst c220 = 1 << 20;\r\n\r\nconst cHelixIdx = 1;\r\nconst cSheetIdx = 2;\r\nconst secTypes = ['helix', 'strand'];\r\nconst cSecNames = ['fs', 'ps', 'ns', 'us'];\r\n\r\nfunction _createSecondary(strArray, complex) {\r\n  const residues = complex._residues;\r\n  const nRes = residues.length;\r\n  const resid = new Uint8Array(nRes);\r\n\r\n  const atoms = complex._atoms;\r\n  for (let i = 0, n = strArray.length; i < n; ++i) {\r\n    const atom = atoms[i];\r\n    resid[atom.residue._index] = strArray[i];\r\n  }\r\n\r\n  const secondary = [];\r\n  let rIdx = 0;\r\n  while (rIdx < nRes) {\r\n    if (resid[rIdx] !== 0) {\r\n      const start = rIdx;\r\n      const val = resid[rIdx];\r\n      while (rIdx < nRes - 1 && resid[rIdx + 1] === val\r\n      && residues[rIdx].isConnected(residues[rIdx + 1])) {\r\n        ++rIdx;\r\n      }\r\n      secondary.push({ start, end: rIdx, type: secTypes[val - 1] });\r\n    }\r\n    ++rIdx;\r\n  }\r\n  return secondary;\r\n}\r\n\r\nfunction fromUInt20ToInt20(uint20) {\r\n  return uint20 >= c219 ? uint20 - c220 : uint20;\r\n}\r\n\r\nclass FrameInfo {\r\n  constructor(complex, payload, callbacks) {\r\n    this._complex = complex;\r\n    this._secondary = null;\r\n    this.isLoading = false;\r\n    this._framesRange = {\r\n      start: 0,\r\n      end: -1,\r\n    };\r\n    this.frameIsReady = false;\r\n    this._buffer = null;\r\n    this._frameRequest = null;\r\n    this._callbacks = callbacks;\r\n    if (typeof payload === 'function') {\r\n      this._framesRequestLength = 1;\r\n      this._downloadDataFn = payload;\r\n    } else {\r\n      this.parseBinaryData(payload, true);\r\n    }\r\n    this.reset();\r\n    this.setFrame(0);\r\n  }\r\n\r\n  _prepareBuffer(framesStart, framesEnd) {\r\n    if (framesStart === undefined || framesStart === null) {\r\n      framesStart = 0;\r\n    }\r\n    if (framesEnd === undefined || framesEnd === null) {\r\n      framesEnd = framesStart + this._framesRequestLength;\r\n    }\r\n    if (this._framesCount !== undefined) {\r\n      framesEnd = Math.min(this._framesCount - 1, framesEnd);\r\n    }\r\n    if (this._downloadDataFn) {\r\n      const self = this;\r\n      const onDone = function (data) {\r\n        self.isLoading = false;\r\n        if (self._callbacks && typeof self._callbacks.onLoadStatusChanged === 'function') {\r\n          self._callbacks.onLoadStatusChanged();\r\n        }\r\n        self._buffer = {\r\n          data,\r\n          state: 'ready',\r\n          start: framesStart,\r\n          end: framesEnd,\r\n        };\r\n        if (self._frameRequest !== null) {\r\n          const idx = self._frameRequest;\r\n          self._frameRequest = null;\r\n          self.setFrame(idx);\r\n        }\r\n      };\r\n      const onFail = function () {\r\n        self.isLoading = false;\r\n        if (self._callbacks && typeof self._callbacks.onError === 'function') {\r\n          self._callbacks.onError('Streaming failed');\r\n        }\r\n      };\r\n      if (!this._buffer) {\r\n        this._buffer = {};\r\n      }\r\n      this._buffer.state = 'downloading';\r\n      this.isLoading = true;\r\n      if (self._callbacks && typeof self._callbacks.onLoadStatusChanged === 'function') {\r\n        self._callbacks.onLoadStatusChanged();\r\n      }\r\n      this._downloadDataFn({ start: framesStart, end: framesEnd + 1 }, onDone, onFail);\r\n    }\r\n  }\r\n\r\n  _parseBuffer() {\r\n    if (this._buffer && this._buffer.state === 'ready') {\r\n      this._framesRange = {\r\n        start: this._buffer.start,\r\n        end: this._buffer.end,\r\n      };\r\n      this.parseBinaryData(this._buffer.data, false);\r\n      let _bufferRequestStart = (this._buffer.end + 1) % this._framesCount;\r\n      if (_bufferRequestStart >= this._framesCount) {\r\n        _bufferRequestStart = 0;\r\n      }\r\n      this._buffer = {\r\n        state: 'none',\r\n      };\r\n      this._prepareBuffer(_bufferRequestStart, _bufferRequestStart + this._framesRequestLength);\r\n      if (this._frameRequest !== null) {\r\n        const idx = this._frameRequest;\r\n        this._frameRequest = null;\r\n        this.setFrame(idx);\r\n      }\r\n    }\r\n  }\r\n\r\n  parseBinaryData(arrayBuffer) {\r\n    const dataView = new DataView(arrayBuffer);\r\n    let offset = 0;\r\n    const atomsCount = dataView.getUint32(offset, true);\r\n    offset += 4;\r\n    const framesCount = dataView.getUint32(offset, true);\r\n    this._framesCount = framesCount;\r\n    this._framesRange.end = this._framesRange.end > 0\r\n      ? Math.min(this._framesRange.end, framesCount - 1) : framesCount - 1;\r\n    offset += 4;\r\n    this._atomsCount = atomsCount;\r\n    const maxSize = 1024 * 1024; // 1 MB\r\n    this._framesRequestLength = Math.ceil(maxSize / (atomsCount * 8));\r\n    const chunkedFramesCount = this._framesRange.end - this._framesRange.start + 1;\r\n    if (atomsCount !== this._complex._atoms.length\r\n      || arrayBuffer.byteLength !== cDataOffset + chunkedFramesCount * atomsCount * 8) {\r\n      throw new Error();\r\n    }\r\n    const complex = this._complex;\r\n    let timeStep = dataView.getUint32(offset, true);\r\n    let iName = 0;\r\n    while (timeStep > 1000 && iName < cSecNames.length - 1) {\r\n      timeStep /= 1000;\r\n      ++iName;\r\n    }\r\n\r\n    this._timeStep = `${timeStep.toString()} ${cSecNames[iName]}`;\r\n    offset += 4;\r\n    const secondary = [];\r\n    const posData = new Float32Array(chunkedFramesCount * atomsCount * 3);\r\n    let coordIdx = 0;\r\n    const secondaryArr = new Int8Array(atomsCount);\r\n    for (let j = 0; j < chunkedFramesCount; ++j) {\r\n      for (let i = 0; i < atomsCount; ++i) {\r\n        const hiWord = dataView.getUint32(offset, true);\r\n        offset += 4;\r\n        const loWord = dataView.getUint32(offset, true);\r\n        offset += 4;\r\n        const str = (loWord & cStrMask) >>> cStrShift;\r\n        const x = fromUInt20ToInt20(((loWord & cFirstMask) >>> cFirstShift) >> 0);\r\n        const y = fromUInt20ToInt20((((loWord & cSecMask1) << cSecShift1)\r\n          | ((hiWord & cSecMask2) >>> cSecShift2)) >> 0);\r\n        const z = fromUInt20ToInt20((hiWord & cThirdMask) >> 0);\r\n        secondaryArr[i] = 0;\r\n        if (str > 0 && str < 4) {\r\n          secondaryArr[i] = cHelixIdx;\r\n        } else if (str === 4) {\r\n          secondaryArr[i] = cSheetIdx;\r\n        }\r\n        posData[coordIdx++] = x / 100;\r\n        posData[coordIdx++] = y / 100;\r\n        posData[coordIdx++] = z / 100;\r\n      }\r\n      secondary.push(_createSecondary(secondaryArr, complex));\r\n    }\r\n    this._secondaryData = secondary;\r\n    this._data = posData;\r\n  }\r\n\r\n  nextFrame() {\r\n    this.setFrame((this._currFrame + 1) % this._framesCount);\r\n  }\r\n\r\n  needsColorUpdate(colorer) {\r\n    return colorer instanceof SecondaryStructureColorer;\r\n  }\r\n\r\n  getAtomColor(colorer, atom) {\r\n    return colorer.getResidueColor(this._residues[atom.residue._index], this._complex);\r\n  }\r\n\r\n  getResidueColor(colorer, residue) {\r\n    return colorer.getResidueColor(this._residues[residue._index], this._complex);\r\n  }\r\n\r\n  _updateSecondary() {\r\n    let i;\r\n    const myResidues = this._residues;\r\n    let n = myResidues.length;\r\n    for (i = 0; i < n; ++i) {\r\n      myResidues[i]._secondary = null;\r\n    }\r\n    const sec = this._secondaryData[this._currFrame - this._framesRange.start];\r\n    for (i = 0, n = sec.length; i < n; ++i) {\r\n      const oldSec = sec[i];\r\n      const { start, end } = oldSec;\r\n      const nSec = {\r\n        _start: myResidues[start],\r\n        _end: myResidues[end],\r\n        type: oldSec.type,\r\n        generic: oldSec.generic,\r\n      };\r\n      for (let j = start; j <= end; ++j) {\r\n        myResidues[j]._secondary = nSec;\r\n      }\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const compRes = this._complex._residues;\r\n    const n = compRes.length;\r\n    this._residues = new Array(n);\r\n    const myResidues = this._residues;\r\n    const getSec = function () {\r\n      return this._secondary;\r\n    };\r\n    for (let i = 0; i < n; ++i) {\r\n      myResidues[i] = {\r\n        _type: compRes[i]._type,\r\n        _isValid: compRes[i]._isValid,\r\n        _controlPoint: null,\r\n        _wingVector: null,\r\n        _secondary: null,\r\n        getSecondary: getSec,\r\n      };\r\n    }\r\n  }\r\n\r\n  setFrame(frameIdx) {\r\n    this.frameIsReady = false;\r\n    if (frameIdx >= this._framesRange.start && frameIdx <= this._framesRange.end) {\r\n      this._currFrame = frameIdx;\r\n      this._cachedResidues = false;\r\n      this._updateSecondary();\r\n      this.frameIsReady = true;\r\n    } else {\r\n      this._frameRequest = frameIdx;\r\n      if (!this._buffer) {\r\n        this._prepareBuffer(frameIdx);\r\n      } else {\r\n        const self = this;\r\n        switch (this._buffer.state) {\r\n          case 'none':\r\n            this._prepareBuffer(frameIdx);\r\n            break;\r\n          case 'ready':\r\n            self._parseBuffer();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  disableEvents() {\r\n    this._callbacks = null;\r\n  }\r\n\r\n  /**\r\n   * Returns link to atom pos vector, clone it if needed\r\n   */\r\n\r\n  static _vec = new THREE.Vector3();\r\n\r\n  getAtomPos(atomIdx) {\r\n    const vec = FrameInfo._vec;\r\n    const self = this;\r\n    const data = self._data;\r\n    const idx = (self._atomsCount * (self._currFrame - self._framesRange.start) + atomIdx) * 3;\r\n    vec.set(data[idx], data[idx + 1], data[idx + 2]);\r\n    return vec;\r\n  }\r\n\r\n  getResidues() {\r\n    if (this._cachedResidues) {\r\n      return this._residues;\r\n    }\r\n    this._complex.updateToFrame(this);\r\n    return this._residues;\r\n  }\r\n}\r\nexport default FrameInfo;\r\n","import _ from 'lodash';\r\nimport settings from '../../settings';\r\nimport utils from '../../utils';\r\nimport gfxutils from '../gfxutils';\r\n\r\n/**\r\n * Create new scene object.\r\n *\r\n * @param {array=} params - Object required params.\r\n * @param {object=} opts - Options to override defaults with.\r\n *\r\n *   These options are copied locally and not kept by reference, so the created instance will not reflect further\r\n *   changes to the `opts` object. However, changes in defaults **will** affect the colorer after its creation.\r\n *\r\n * @exports SceneObject\r\n * @this SceneObject\r\n * @abstract\r\n * @constructor\r\n * @classdesc Basic class for all scene objects that are not reps.\r\n */\r\nclass SceneObject {\r\n  constructor(params, opts) {\r\n    if (this.constructor === SceneObject) {\r\n      throw new Error('Can not instantiate abstract class!');\r\n    }\r\n    /**\r\n     * Object's options inherited (prototyped) from defaults.\r\n     * @type {object}\r\n     */\r\n    this.params = params;\r\n    this.opts = _.merge(utils.deriveDeep(settings.now.objects[this.type], true), opts);\r\n    this.needsRebuild = false;\r\n    this._mesh = null;\r\n    this.id = null;\r\n  }\r\n\r\n  /**\r\n   * Get object identification, probably with options.\r\n   *  @returns {Object} field type contains type information, params - object's formal parameters,\r\n   * opts - changed options\r\n   * Options are returned if they were changed during or after object creation.\r\n   */\r\n  identify() {\r\n    const result = {\r\n      type: this.type,\r\n      params: this.params,\r\n    };\r\n    const diff = utils.objectsDiff(this.opts, settings.now.modes[this.id]);\r\n    if (!_.isEmpty(diff)) {\r\n      result.opts = diff;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toString() {\r\n    const paramsStr = `o=${this.type},${this.params.join(',')}`;\r\n    const optsStr = utils.compareOptionsWithDefaults(this.opts, settings.defaults.objects[this.type]);\r\n    return paramsStr + optsStr;\r\n  }\r\n\r\n  getGeometry() {\r\n    return this._mesh;\r\n  }\r\n\r\n  destroy() {\r\n    if (this._mesh) {\r\n      gfxutils.destroyObject(this._mesh);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Scene object identifier.\r\n * @type {string}\r\n */\r\nSceneObject.prototype.type = '__';\r\n\r\nexport default SceneObject;\r\n","import * as THREE from 'three';\r\nimport SceneObject from './SceneObject';\r\nimport meshutils from '../meshutils';\r\nimport UberMaterial from '../shaders/UberMaterial';\r\nimport meshes from '../meshes/meshes';\r\nimport settings from '../../settings';\r\n\r\nclass LinesObj extends SceneObject {\r\n  constructor(params, opts) {\r\n    super(params, opts);\r\n    if (params.length < 2) {\r\n      throw new Error('Wrong number of argumets on line object creation!');\r\n    }\r\n    [this._id1, this._id2] = params;\r\n  }\r\n\r\n  _getAtomFromName(complex, atomId) {\r\n    const err = ' - Wrong atom format it must be \\'#CHAIN_NAME.#RESIDUE_NUMBER.#ATOM_NAME\\' (e.g. \\'A.38.CO1\\')';\r\n    const atom1 = complex.getAtomByFullname(atomId);\r\n    if (!atom1) {\r\n      throw new Error(atomId + err);\r\n    }\r\n    return atom1;\r\n  }\r\n\r\n  build(complex) {\r\n    const geom = new THREE.BufferGeometry();\r\n    this._atom1 = this._getAtomFromName(complex, this._id1);\r\n    this._atom2 = this._getAtomFromName(complex, this._id2);\r\n\r\n    const p1 = this._atom1.position;\r\n    const p2 = this._atom2.position;\r\n    const vertices = new Float32Array([\r\n      p1.x, p1.y, p1.z,\r\n      p2.x, p2.y, p2.z,\r\n    ]);\r\n\r\n    geom.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n    geom.computeBoundingBox();\r\n\r\n    this._line = new meshes.Line(geom, new UberMaterial({\r\n      lights: false,\r\n      overrideColor: true,\r\n      dashedLine: true,\r\n      fogTransparent: settings.now.bg.transparent,\r\n    }));\r\n    this._line.computeLineDistances();\r\n    this._line.material.setUberOptions({\r\n      fixedColor: new THREE.Color(this.opts.color),\r\n      dashedLineSize: this.opts.dashSize,\r\n      dashedLinePeriod: this.opts.dashSize + this.opts.gapSize,\r\n    });\r\n    this._line.material.updateUniforms();\r\n\r\n    this._line.raycast = function (_raycaster, _intersects) {};\r\n    this._mesh = this._line;\r\n    const transforms = complex.getTransforms();\r\n    if (transforms.length > 0) {\r\n      this._mesh = new THREE.Group();\r\n      this._mesh.add(this._line);\r\n      meshutils.applyTransformsToMeshes(this._mesh, transforms);\r\n    }\r\n  }\r\n\r\n  updateToFrame(frameData) {\r\n    if (!this._atom1 || !this._atom2 || !this._line) {\r\n      return;\r\n    }\r\n\r\n    const geo = this._line.geometry;\r\n    geo.vertices[0].copy(frameData.getAtomPos(this._atom1.index));\r\n    geo.vertices[1].copy(frameData.getAtomPos(this._atom2.index));\r\n    this._line.computeLineDistances();\r\n    geo.computeBoundingSphere();\r\n\r\n    geo.verticesNeedUpdate = true;\r\n  }\r\n}\r\n\r\nLinesObj.prototype.constructor = LinesObj;\r\nLinesObj.prototype.type = 'line';\r\n\r\nexport default LinesObj;\r\n","/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport * as THREE from 'three';\r\nimport vertexShader from './ScreenQuad.vert';\r\nimport fragmentShader from './Outline.frag';\r\n\r\nclass OutlineMaterial extends THREE.RawShaderMaterial {\r\n  constructor(params) {\r\n    // add depth outline\r\n    super(params);\r\n\r\n    const settings = {\r\n      uniforms: {\r\n        srcTex: { type: 't', value: null },\r\n        srcDepthTex: { type: 't', value: null },\r\n        srcTexSize: { type: 'v2', value: new THREE.Vector2(512, 512) },\r\n        color: { type: 'v3', value: null },\r\n        threshold: { type: 'f', value: null },\r\n        opacity: { type: 'f', value: 1.0 },\r\n        thickness: { type: 'v2', value: new THREE.Vector2(1, 1) },\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: true,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    };\r\n\r\n    this.setValues(settings);\r\n  }\r\n\r\n  copy(source) {\r\n    super.copy(source);\r\n    this.depth = source.depth;\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values);\r\n    const defines = {};\r\n\r\n    if (this.depth) {\r\n      defines.DEPTH_OUTLINE = 1;\r\n    }\r\n\r\n    // set dependent values\r\n    this.defines = defines;\r\n  }\r\n}\r\n\r\nOutlineMaterial.prototype.depth = false;\r\n\r\nexport default OutlineMaterial;\r\n","/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport * as THREE from 'three';\r\nimport vertexShader from './ScreenQuad.vert';\r\nimport fragmentShader from './FXAA.frag';\r\n\r\nclass FXAAMaterial extends THREE.RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    // set default values\r\n    this.setValues.call(this, {\r\n      uniforms: {\r\n        srcTex: { type: 't', value: null },\r\n        srcTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / 512.0, 1.0 / 512.0) },\r\n        bgColor: { type: 'c', value: new THREE.Color(0xffffff) },\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    });\r\n\r\n    this.setValues(params);\r\n  }\r\n\r\n  copy(source) {\r\n    super.copy(source);\r\n    this.depth = source.depth;\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values);\r\n\r\n    const defines = {};\r\n\r\n    if (this.bgTransparent) {\r\n      defines.BG_TRANSPARENT = 1;\r\n    }\r\n    // set dependent values\r\n    this.defines = defines;\r\n  }\r\n}\r\n\r\nFXAAMaterial.prototype.bgTransparent = false;\r\n\r\nexport default FXAAMaterial;\r\n","/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport * as THREE from 'three';\r\nimport vertexShader from './ScreenQuad.vert';\r\nimport fragmentShader from './AO.frag';\r\nimport noise from '../noiseTexture';\r\n\r\nconst _samplesKernel = [\r\n  // hemisphere samples adopted to sphere\r\n  new THREE.Vector3(0.295184, 0.077723, 0.068429),\r\n  new THREE.Vector3(-0.271976, -0.365221, 0.838363),\r\n  new THREE.Vector3(0.547713, 0.467576, 0.488515),\r\n  new THREE.Vector3(0.662808, -0.031733, 0.584758),\r\n  new THREE.Vector3(-0.025717, 0.218955, 0.657094),\r\n  new THREE.Vector3(-0.310153, -0.365223, 0.370701),\r\n  new THREE.Vector3(-0.101407, -0.006313, 0.747665),\r\n  new THREE.Vector3(-0.769138, 0.360399, 0.086847),\r\n  new THREE.Vector3(-0.271988, -0.275140, 0.905353),\r\n  new THREE.Vector3(0.096740, -0.566901, 0.700151),\r\n  new THREE.Vector3(0.562872, -0.735136, 0.094647),\r\n  new THREE.Vector3(0.379877, 0.359278, 0.190061),\r\n  new THREE.Vector3(0.519064, -0.023055, 0.405068),\r\n  new THREE.Vector3(-0.301036, 0.114696, 0.088885),\r\n  new THREE.Vector3(-0.282922, 0.598305, 0.487214),\r\n  new THREE.Vector3(-0.181859, 0.251670, 0.679702),\r\n  new THREE.Vector3(-0.191463, -0.635818, 0.512919),\r\n  new THREE.Vector3(-0.293655, 0.427423, 0.078921),\r\n  new THREE.Vector3(-0.267983, 0.680534, 0.132880),\r\n  new THREE.Vector3(0.139611, 0.319637, 0.477439),\r\n  new THREE.Vector3(-0.352086, 0.311040, 0.653913),\r\n  new THREE.Vector3(0.321032, 0.805279, 0.487345),\r\n  new THREE.Vector3(0.073516, 0.820734, 0.414183),\r\n  new THREE.Vector3(-0.155324, 0.589983, 0.411460),\r\n  new THREE.Vector3(0.335976, 0.170782, 0.527627),\r\n  new THREE.Vector3(0.463460, -0.355658, 0.167689),\r\n  new THREE.Vector3(0.222654, 0.596550, 0.769406),\r\n  new THREE.Vector3(0.922138, -0.042070, 0.147555),\r\n  new THREE.Vector3(-0.727050, -0.329192, 0.369826),\r\n  new THREE.Vector3(-0.090731, 0.533820, 0.463767),\r\n  new THREE.Vector3(-0.323457, -0.876559, 0.238524),\r\n  new THREE.Vector3(-0.663277, -0.372384, 0.342856),\r\n];\r\n\r\nclass AOMaterial extends THREE.RawShaderMaterial {\r\n  constructor() {\r\n    super();\r\n\r\n    // set default values\r\n    this.setValues.call(this, {\r\n      uniforms: {\r\n        noiseTexture: { type: 't', value: noise.noiseTexture },\r\n        noiseTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / noise.noiseWidth, 1.0 / noise.noiseHeight) },\r\n        diffuseTexture: { type: 't', value: null },\r\n        normalTexture: { type: 't', value: null },\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / 512.0, 1.0 / 512.0) },\r\n        camNearFar: { type: 'v2', value: new THREE.Vector2(1.0, 10.0) },\r\n        projMatrix: { type: 'mat4', value: new THREE.Matrix4() },\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        samplesKernel: { type: 'v3v', value: _samplesKernel },\r\n        kernelRadius: { type: 'f', value: 1.0 },\r\n        depthThreshold: { type: 'f', value: 1.0 },\r\n        factor: { type: 'f', value: 1.0 },\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    });\r\n  }\r\n}\r\n\r\nexport default AOMaterial;\r\n","/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport * as THREE from 'three';\r\nimport vertexShader from './ScreenQuad.vert';\r\nimport fragmentShader from './AOHorBlur.frag';\r\n\r\nconst _kernelOffsets = [-2.0, -1.0, 0.0, 1.0, 2.0];\r\n\r\nclass AOHorBlurMaterial extends THREE.RawShaderMaterial {\r\n  constructor() {\r\n    super();\r\n\r\n    // set default values\r\n    this.setValues.call(this, {\r\n      uniforms: {\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / 512.0, 1.0 / 512.0) },\r\n        aoMap: { type: 't', value: null },\r\n        samplesOffsets: { type: 'fv1', value: _kernelOffsets },\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    });\r\n  }\r\n}\r\n\r\nexport default AOHorBlurMaterial;\r\n","/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport * as THREE from 'three';\r\nimport vertexShader from './ScreenQuad.vert';\r\nimport fragmentShader from './AOVertBlurWithBlend.frag';\r\n\r\nconst _kernelOffsets = [-2.0, -1.0, 0.0, 1.0, 2.0];\r\n\r\nclass AOVertBlurWithBlendMaterial extends THREE.RawShaderMaterial {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    // set default values\r\n    this.setValues.call(this, {\r\n      uniforms: {\r\n        diffuseTexture: { type: 't', value: null },\r\n        depthTexture: { type: 't', value: null },\r\n        srcTexelSize: { type: 'v2', value: new THREE.Vector2(1.0 / 512.0, 1.0 / 512.0) },\r\n        aoMap: { type: 't', value: null },\r\n        samplesOffsets: { type: 'fv1', value: _kernelOffsets },\r\n        projMatrix: { type: 'mat4', value: new THREE.Matrix4() },\r\n        aspectRatio: { type: 'f', value: 0.0 },\r\n        tanHalfFOV: { type: 'f', value: 0.0 },\r\n        fogNearFar: { type: 'v2', value: new THREE.Vector2(100.0, 100.0) },\r\n        fogColor: { type: 'v4', value: new THREE.Vector4(0.0, 0.5, 0.0, 1.0) },\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    });\r\n\r\n    this.setValues(params);\r\n  }\r\n\r\n  setValues(values) {\r\n    if (typeof values === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    // set direct values\r\n    super.setValues(values);\r\n\r\n    const defines = {};\r\n\r\n    if (this.useFog) {\r\n      defines.USE_FOG = 1;\r\n    }\r\n    if (this.fogTransparent) {\r\n      defines.FOG_TRANSPARENT = 1;\r\n    }\r\n    // set dependent values\r\n    this.defines = defines;\r\n  }\r\n}\r\n\r\nAOVertBlurWithBlendMaterial.prototype.useFog = true;\r\nAOVertBlurWithBlendMaterial.prototype.fogTransparent = false;\r\n\r\nexport default AOVertBlurWithBlendMaterial;\r\n","/* eslint-disable no-magic-numbers */\r\n/* eslint-disable guard-for-in */\r\nimport * as THREE from 'three';\r\nimport vertexShader from './ScreenQuad.vert';\r\nimport fragmentShader from './Anaglyph.frag';\r\n\r\nclass AnaglyphMaterial extends THREE.RawShaderMaterial {\r\n  constructor() {\r\n    super();\r\n    const settings = {\r\n      uniforms: {\r\n        srcL: { type: 't', value: null },\r\n        srcR: { type: 't', value: null },\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n      transparent: false,\r\n      depthTest: false,\r\n      depthWrite: false,\r\n    };\r\n    this.setValues(settings);\r\n  }\r\n}\r\n\r\nexport default AnaglyphMaterial;\r\n","import * as THREE from 'three';\r\nimport settings from '../settings';\r\n\r\nclass View {\r\n  constructor() {\r\n    this.position = new THREE.Vector3(0, 0, 0);\r\n    this.scale = 1;\r\n    this.orientation = new THREE.Quaternion(0, 0, 0, 1);\r\n  }\r\n\r\n  set(position, scale, orientation) {\r\n    this.position = position;\r\n    this.scale = scale;\r\n    this.orientation = orientation;\r\n  }\r\n}\r\n\r\nconst _transitionTime = 1.5; // in seconds\r\n\r\nexport default class ViewInterpolator {\r\n  setup(startView, endView) {\r\n    this._startTime = undefined;\r\n    this._endTime = undefined;\r\n    this._isPaused = false;\r\n\r\n    this._srcView = startView;\r\n    this._dstView = endView;\r\n    this._isMoving = false;\r\n  }\r\n\r\n  isMoving() {\r\n    return this._isMoving;\r\n  }\r\n\r\n  wasStarted() {\r\n    return typeof this._startTime !== 'undefined' && typeof this._endTime !== 'undefined';\r\n  }\r\n\r\n  start() {\r\n    this._startTime = Date.now();\r\n    const transTime = settings.now.interpolateViews ? _transitionTime * 1000 : 0;\r\n    this._endTime = this._startTime + transTime;\r\n    this._isMoving = true;\r\n  }\r\n\r\n  getCurrentView() {\r\n    if (typeof this._srcView === 'undefined' || typeof this._dstView === 'undefined'\r\n      || !this._isMoving || !this.wasStarted()) {\r\n      return { success: false };\r\n    }\r\n\r\n    let view = this.createView();\r\n    const time = Date.now();\r\n    if (time > this._endTime) {\r\n      view = this._dstView;\r\n      this.reset();\r\n      return { success: true, view };\r\n    }\r\n\r\n    const factor = (time - this._startTime) / (this._endTime - this._startTime);\r\n    view.position.copy(this._srcView.position);\r\n    view.position.lerp(this._dstView.position, factor);\r\n    view.scale = (1 - factor) * this._srcView.scale + factor * this._dstView.scale;\r\n    view.orientation.copy(this._srcView.orientation);\r\n    view.orientation.slerp(this._dstView.orientation, factor);\r\n    return { success: true, view };\r\n  }\r\n\r\n  reset() {\r\n    this._startTime = this._endTime = 0;\r\n    this._isMoving = false;\r\n  }\r\n\r\n  pause() {\r\n    if (!this._isPaused) {\r\n      this.setup(this.getCurrentView().view, this._dstView);\r\n      this._isPaused = true;\r\n    }\r\n  }\r\n\r\n  resume() {\r\n    this._isPaused = false;\r\n  }\r\n\r\n  createView() {\r\n    return new View();\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport makeContextDependent from './makeContextDependent';\r\n\r\nconst MAX_COOKIE_LEN = 4000;\r\nconst COUNT_SUFFIX = 'Cnt';\r\n\r\nfunction _chunkString(string, chunkLen) {\r\n  const l = string.length;\r\n  const chunks = [];\r\n  for (let c = 0, lc = 0; lc < l; c++, lc += chunkLen) {\r\n    chunks[c] = string.slice(lc, lc + chunkLen);\r\n  }\r\n  return chunks;\r\n}\r\n\r\n/**\r\n * Create new context dependent Cookie holder object.\r\n * @param context\r\n * @param {Object} opts - options\r\n * @param {string} opts.path - cookie path\r\n * @constructor\r\n */\r\nfunction Cookies(context, opts) {\r\n  this.context = context;\r\n  this._opts = _.merge({\r\n    path: '/',\r\n  }, opts);\r\n}\r\n\r\nmakeContextDependent(Cookies.prototype);\r\n\r\n/**\r\n * Remove cookie by the name.\r\n * @param key\r\n */\r\nCookies.prototype.removeCookie = function (key) {\r\n  const cntKey = this._toCount(key);\r\n  let cntVal = this._getSimpleCookie(cntKey);\r\n  if (!cntVal) {\r\n    this._removeSimpleCookie(key);\r\n    return;\r\n  }\r\n  this._removeSimpleCookie(cntKey);\r\n  cntVal = parseInt(cntVal, 10);\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    this._removeSimpleCookie(key + i);\r\n  }\r\n};\r\n\r\n/**\r\n * Set new cookie value. Automatically splits\r\n * values that are too large into multiple cookies.\r\n * @param key\r\n * @param value\r\n */\r\nCookies.prototype.setCookie = function (key, value) {\r\n  this.removeCookie(key);\r\n  value = encodeURIComponent(value);\r\n  const values = _chunkString(value, MAX_COOKIE_LEN - key.length - 1);\r\n  const cntVal = values.length;\r\n  if (cntVal === 1) {\r\n    this._setSimpleCookie(key, value);\r\n    return;\r\n  }\r\n  const cntKey = this._toCount(key);\r\n  this._setSimpleCookie(cntKey, cntVal.toString());\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    this._setSimpleCookie(key + i, values[i]);\r\n  }\r\n};\r\n\r\n/**\r\n * Obtain the value of a compound cookie.\r\n * @param key\r\n */\r\nCookies.prototype.getCookie = function (key) {\r\n  const cntKey = this._toCount(key);\r\n  let cntVal = this._getSimpleCookie(cntKey);\r\n  if (!cntVal) {\r\n    return this._getSimpleCookie(key);\r\n  }\r\n  cntVal = parseInt(cntVal, 10);\r\n  const value = [];\r\n  for (let i = 0; i < cntVal; ++i) {\r\n    value[i] = this._getSimpleCookie(key + i);\r\n  }\r\n  return value.join('');\r\n};\r\n\r\nCookies.prototype._toCount = function (key) {\r\n  return key + COUNT_SUFFIX;\r\n};\r\n\r\nCookies.prototype._removeSimpleCookie = function (key) {\r\n  document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:01 GMT;`;\r\n};\r\n\r\nCookies.prototype._getExpirationDate = function () {\r\n  const today = new Date();\r\n  const EXP_PERIOD_YEARS = 10;\r\n  today.setFullYear(today.getFullYear() + EXP_PERIOD_YEARS);\r\n  return today;\r\n};\r\n\r\nCookies.prototype._setSimpleCookie = function (key, value) {\r\n  document.cookie = `${key}=${value\r\n  };expires=${this._getExpirationDate().toUTCString()\r\n  };path=${this._opts.path}`;\r\n};\r\n\r\nCookies.prototype._getSimpleCookie = function (key) {\r\n  const matches = document.cookie.match(new RegExp(`(?:^|; )${key}=([^;]*)`));\r\n  return matches ? decodeURIComponent(matches[1]) : '';\r\n};\r\n\r\nCookies.prototype._exists = function (key) {\r\n  return document.cookie.match(new RegExp(`(?:^|; )${key}=([^;]*)`));\r\n};\r\n\r\nexport default Cookies;\r\n","/*\r\n * Toggling WebVR is done through button.click because of limitations on calling requestPresent in webVR:\r\n * VRDisplay::requestPresent should be called from user gesture:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/requestPresent\r\n */\r\nexport default function (webVRPoC) {\r\n  function showEnterVR(button) {\r\n    button.style.display = '';\r\n    button.style.cursor = 'pointer';\r\n    button.style.left = 'calc(50% - 50px)';\r\n    button.style.width = '100px';\r\n\r\n    button.textContent = 'ENTER VR';\r\n\r\n    let currentSession = null;\r\n\r\n    function onSessionEnded(/* event */) {\r\n      currentSession.removeEventListener('end', onSessionEnded);\r\n      button.textContent = 'ENTER VR';\r\n      currentSession = null;\r\n    }\r\n\r\n    function onSessionStarted(session) {\r\n      session.addEventListener('end', onSessionEnded);\r\n      webVRPoC._gfx.renderer.xr.setReferenceSpaceType('local');\r\n      webVRPoC._gfx.renderer.xr.setSession(session);\r\n      button.textContent = 'EXIT VR';\r\n      currentSession = session;\r\n    }\r\n\r\n    button.onmouseenter = function () { button.style.opacity = '1.0'; };\r\n    button.onmouseleave = function () { button.style.opacity = '0.5'; };\r\n\r\n    button.onclick = function () {\r\n      if (currentSession === null) {\r\n        // WebXR's requestReferenceSpace only works if the corresponding feature\r\n        // was requested at session creation time. For simplicity, just ask for\r\n        // the interesting ones as optional features, but be aware that the\r\n        // requestReferenceSpace call will fail if it turns out to be unavailable.\r\n        // ('local' is always available for immersive sessions and doesn't need to\r\n        // be requested separately.)\r\n\r\n        const sessionInit = { optionalFeatures: ['local-floor', 'bounded-floor'] };\r\n        navigator.xr.requestSession('immersive-vr', sessionInit).then(onSessionStarted);\r\n        webVRPoC.moveSceneBehindHeadset();\r\n      } else {\r\n        currentSession.end();\r\n      }\r\n    };\r\n  }\r\n\r\n  function showWebXRNotFound(button) {\r\n    button.style.display = '';\r\n    button.style.cursor = 'auto';\r\n    button.style.left = 'calc(50% - 75px)';\r\n    button.style.width = '150px';\r\n    button.textContent = 'VR NOT FOUND';\r\n    button.onmouseenter = null;\r\n    button.onmouseleave = null;\r\n    button.onclick = null;\r\n  }\r\n\r\n  function stylizeElement(element) {\r\n    element.style.position = 'absolute';\r\n    element.style.bottom = '20px';\r\n    element.style.padding = '12px 6px';\r\n    element.style.border = '1px solid #fff';\r\n    element.style.borderRadius = '4px';\r\n    element.style.background = 'transparent';\r\n    element.style.color = '#fff';\r\n    element.style.font = 'normal 13px sans-serif';\r\n    element.style.textAlign = 'center';\r\n    element.style.opacity = '0.5';\r\n    element.style.outline = 'none';\r\n    element.style.zIndex = '999';\r\n  }\r\n\r\n  if ('xr' in navigator) {\r\n    const button = document.createElement('button');\r\n    button.style.display = 'none';\r\n    stylizeElement(button);\r\n    navigator.xr.isSessionSupported('immersive-vr').then((supported) => (\r\n      supported ? showEnterVR(button) : showWebXRNotFound(button)\r\n    ));\r\n    return button;\r\n  }\r\n  const message = document.createElement('a');\r\n  message.href = 'https://webvr.info';\r\n  message.innerHTML = 'WEBXR NOT SUPPORTED';\r\n  message.style.left = 'calc(50% - 90px)';\r\n  message.style.width = '180px';\r\n  message.style.textDecoration = 'none';\r\n  stylizeElement(message);\r\n  return message;\r\n}\r\n","import * as THREE from 'three';\r\nimport createWebVRButton from './createWebVRButton';\r\nimport gfxutils from '../gfxutils';\r\nimport logger from '../../utils/logger';\r\nimport settings from '../../settings';\r\nimport UberMaterial from '../shaders/UberMaterial';\r\n\r\nexport default class WebVRPoC {\r\n  constructor(onToggle) {\r\n    this._mainCamera = new THREE.PerspectiveCamera();\r\n    this._button = null;\r\n    this._onToggle = onToggle;\r\n\r\n    this._molContainer = new gfxutils.RCGroup();\r\n    this._user = new gfxutils.RCGroup();\r\n    this._scalingPivot = new THREE.Object3D();\r\n    this._user.add(this._scalingPivot);\r\n\r\n    this._controller1 = null;\r\n    this._controller2 = null;\r\n    this._pressedGripsCounter = 0;\r\n    this._distance = 0;\r\n\r\n    this._gfx = null;\r\n  }\r\n\r\n  startScalingByControllers() {\r\n    // reset scale\r\n    this._distance = this._controller1.position.distanceTo(this._controller2.position);\r\n    gfxutils.getMiddlePoint(this._controller1.position, this._controller2.position, this._scalingPivot.position);\r\n    this._scalingPivot.scale.set(1, 1, 1);\r\n    this._scalingPivot.updateMatrix();\r\n    this._scalingPivot.updateMatrixWorld();\r\n    // link molecule to pivot\r\n    this._scalingPivot.addSavingWorldTransform(this._molContainer);\r\n  }\r\n\r\n  stopScalingByControllers() {\r\n    this._gfx.scene.addSavingWorldTransform(this._molContainer);\r\n  }\r\n\r\n  handleGripsDown(event) {\r\n    this._pressedGripsCounter++;\r\n    if (this._pressedGripsCounter === 2) {\r\n      this.startScalingByControllers();\r\n    } else if (this._pressedGripsCounter === 1) {\r\n      event.target.addSavingWorldTransform(this._molContainer);\r\n    }\r\n  }\r\n\r\n  handleGripsUp(event) {\r\n    this._pressedGripsCounter--;\r\n    if (this._pressedGripsCounter === 1) {\r\n      this.stopScalingByControllers();\r\n      // reattach molecule to other controller\r\n      const anotherController = event.target === this._controller1 ? this._controller2 : this._controller1;\r\n      anotherController.addSavingWorldTransform(this._molContainer);\r\n    } else if (this._pressedGripsCounter === 0) {\r\n      this._gfx.scene.addSavingWorldTransform(this._molContainer);\r\n    }\r\n  }\r\n\r\n  enable(gfx) {\r\n    if (!gfx) {\r\n      logger.warn('WebVR couldn\\'t be enabled, because gfx is not defined');\r\n      return;\r\n    }\r\n    this._gfx = gfx;\r\n    const { renderer, camera } = gfx;\r\n    if (!renderer) {\r\n      throw new Error('No renderer is available to toggle WebVR');\r\n    }\r\n    if (!camera) {\r\n      throw new Error('No camera is available to toggle WebVR');\r\n    }\r\n\r\n    // enable xr in renderer\r\n    renderer.xr.enabled = true;\r\n    // add button for turning vr mode\r\n    if (!this._button) {\r\n      this._button = createWebVRButton(this);\r\n      document.body.appendChild(this._button);\r\n    } else {\r\n      this._button.style.display = 'block';\r\n    }\r\n    // store fog setting\r\n    this._mainFog = settings.now.fog;\r\n    settings.set('fog', false);\r\n\r\n    this._plugVRNodesIntoScene(gfx, renderer);\r\n    this._setControllersListeners();\r\n\r\n    // make some Miew job\r\n    if (this._onToggle) {\r\n      this._onToggle(true);\r\n    }\r\n  }\r\n\r\n  _plugVRNodesIntoScene(gfx, renderer) {\r\n    // store common scene camera\r\n    this._mainCamera.copy(gfx.camera);\r\n    // add hierarchical structure for webVR into scene\r\n    gfx.scene.add(this._user);\r\n    // turn on webvr transformation\r\n    gfx.scene.add(this._molContainer);\r\n    this._molContainer.add(gfx.root);\r\n\r\n    this._controller1 = renderer.xr.getController(0);\r\n    this._controller2 = renderer.xr.getController(1);\r\n    const mesh = this._createControllerMesh();\r\n    this._controller1.add(mesh);\r\n    this._controller2.add(mesh.clone());\r\n    this._user.add(this._controller1);\r\n    this._user.add(this._controller2);\r\n  }\r\n\r\n  _setControllersListeners() {\r\n    this._controller1.addEventListener('selectstart', (event) => {\r\n      this.handleGripsDown(event);\r\n    });\r\n    this._controller1.addEventListener('selectend', (event) => {\r\n      this.handleGripsUp(event);\r\n    });\r\n    this._controller2.addEventListener('selectstart', (event) => {\r\n      this.handleGripsDown(event);\r\n    });\r\n    this._controller2.addEventListener('selectend', (event) => {\r\n      this.handleGripsUp(event);\r\n    });\r\n\r\n    this._controller1.addEventListener('squeezestart', (event) => {\r\n      this.handleGripsDown(event);\r\n    });\r\n    this._controller1.addEventListener('squeezeend', (event) => {\r\n      this.handleGripsUp(event);\r\n    });\r\n    this._controller2.addEventListener('squeezestart', (event) => {\r\n      this.handleGripsDown(event);\r\n    });\r\n    this._controller2.addEventListener('squeezeend', (event) => {\r\n      this.handleGripsUp(event);\r\n    });\r\n  }\r\n\r\n  disable() {\r\n    if (!this._gfx) {\r\n      return;\r\n    }\r\n    const { renderer, camera } = this._gfx;\r\n    if (!renderer) {\r\n      throw new Error('No renderer is available to toggle WebVR');\r\n    }\r\n\r\n    // nullify webxr callback for animation frame\r\n    renderer.setAnimationLoop(null);\r\n    const session = renderer.xr.getSession();\r\n    if (session) {\r\n      session.end();\r\n    }\r\n    renderer.xr.enabled = false;\r\n    // remove button of VR entering\r\n    if (this._button) {\r\n      this._button.style.display = 'none';\r\n    }\r\n    // restore fog param\r\n    settings.set('fog', this._mainFog);\r\n\r\n    this._unplugVRNodesFromScene(camera);\r\n\r\n    // make some Miew job\r\n    if (this._onToggle) {\r\n      this._onToggle(false);\r\n    }\r\n  }\r\n\r\n  _unplugVRNodesFromScene(camera) {\r\n    // restore common camera\r\n    if (this._mainCamera && camera) {\r\n      camera.copy(this._mainCamera);\r\n    }\r\n    // turn off webvr transformation\r\n    const root = this._molContainer.children[0];\r\n    if (root) {\r\n      this._gfx.scene.add(root);\r\n    }\r\n    this._molContainer.parent.remove(this._molContainer);\r\n    if (this._user) {\r\n      this._gfx.scene.remove(this._user);\r\n    }\r\n    // free scene nodes\r\n    this._molContainer = null;\r\n    this._user = null;\r\n    this._scalingPivot = null;\r\n    this._user = null;\r\n    this._controller1 = null;\r\n    this._controller2 = null;\r\n  }\r\n\r\n  _createControllerMesh() {\r\n    // visualize controllers with cylinders\r\n    const geometry = new THREE.CylinderGeometry(0.04, 0.04, 0.3);\r\n    const material = new UberMaterial({ lights: false, overrideColor: true });\r\n    material.setUberOptions({ fixedColor: new THREE.Color(0x4444ff) });\r\n    material.updateUniforms();\r\n    const cylinder = new THREE.Mesh(geometry, material);\r\n    cylinder.rotateX(-Math.PI / 2);\r\n    return cylinder;\r\n  }\r\n\r\n  updateMoleculeScale() {\r\n    if (!this._controller1 || !this._controller2) {\r\n      return;\r\n    }\r\n\r\n    const self = this;\r\n    // update molecule scaling by controllers\r\n    if (self._pressedGripsCounter === 2) {\r\n      // recalc scaling pivot\r\n      gfxutils.getMiddlePoint(self._controller1.position, self._controller2.position, self._scalingPivot.position);\r\n      // recalc scaler\r\n      const dist = self._controller1.position.distanceTo(self._controller2.position);\r\n      const scaler = dist / self._distance;\r\n      self._scalingPivot.scale.multiplyScalar(scaler);\r\n      // save cur distance for next frame\r\n      self._distance = dist;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reposition molecule right before the camera.\r\n   * @note The proper way is to initiate headset in the place of common Miew's camera.\r\n   * But threejs limitations on setting new XRReferenceSpace enforce the molecule repositioning\r\n   * Hope, something will change.\r\n   */\r\n  moveSceneBehindHeadset() {\r\n    const gfx = this._gfx;\r\n    const { camera } = gfx;\r\n\r\n    // set container position in camera space\r\n    const container = this._molContainer;\r\n    container.matrix.identity();\r\n    container.position.set(0, 0, -4.0);\r\n    container.updateMatrix();\r\n\r\n    // update container world matrix\r\n    container.matrixWorld.multiplyMatrices(camera.matrixWorld, container.matrix);\r\n    // readd to scene\r\n    gfx.scene.addSavingWorldTransform(container);\r\n    if (this._onToggle) {\r\n      this._onToggle(true);\r\n    }\r\n  }\r\n\r\n  getCanvas() {\r\n    const gfx = this._gfx;\r\n    return (gfx && gfx.renderer) ? gfx.renderer.domElement : null;\r\n  }\r\n}\r\n","/* global PACKAGE_VERSION:false */\r\nimport _ from 'lodash';\r\nimport * as THREE from 'three';\r\nimport { Spinner } from 'spin.js';\r\nimport Stats from './gfx/Stats';\r\nimport utils from './utils';\r\nimport JobHandle from './utils/JobHandle';\r\nimport options from './options';\r\nimport settings from './settings';\r\nimport chem from './chem';\r\nimport Visual from './Visual';\r\nimport ComplexVisual from './ComplexVisual';\r\nimport Complex from './chem/Complex';\r\nimport VolumeVisual from './VolumeVisual';\r\nimport io from './io/io';\r\nimport modes from './gfx/modes';\r\nimport colorers from './gfx/colorers';\r\nimport palettes from './gfx/palettes';\r\nimport materials from './gfx/materials';\r\nimport Representation from './gfx/Representation';\r\nimport CSS2DRenderer from './gfx/CSS2DRenderer';\r\nimport ObjectControls from './ui/ObjectControls';\r\nimport Picker from './ui/Picker';\r\nimport Axes from './gfx/Axes';\r\nimport gfxutils from './gfx/gfxutils';\r\nimport meshutils from './gfx/meshutils';\r\nimport FrameInfo from './gfx/FrameInfo';\r\nimport meshes from './gfx/meshes/meshes';\r\nimport LinesObject from './gfx/objects/LinesObj';\r\nimport UberMaterial from './gfx/shaders/UberMaterial';\r\nimport OutlineMaterial from './gfx/shaders/OutlineMaterial';\r\nimport FXAAMaterial from './gfx/shaders/FXAAMaterial';\r\nimport AOMaterial from './gfx/shaders/AOMaterial';\r\nimport AOHorBlurMaterial from './gfx/shaders/AOHorBlurMaterial';\r\nimport AOVertBlurWithBlendMaterial from './gfx/shaders/AOVertBlurWithBlendMaterial';\r\nimport AnaglyphMaterial from './gfx/shaders/AnaglyphMaterial';\r\nimport VolumeMaterial from './gfx/shaders/VolumeMaterial';\r\nimport ViewInterpolator from './gfx/ViewInterpolator';\r\nimport EventDispatcher from './utils/EventDispatcher';\r\nimport logger from './utils/logger';\r\nimport Cookies from './utils/Cookies';\r\nimport capabilities from './gfx/capabilities';\r\nimport WebVRPoC from './gfx/vr/WebVRPoC';\r\nimport vertexScreenQuadShader from './gfx/shaders/ScreenQuad.vert';\r\nimport fragmentScreenQuadFromDistTex from './gfx/shaders/ScreenQuadFromDistortionTex.frag';\r\nimport getTopWindow from './utils/getTopWindow';\r\n\r\nconst {\r\n  selectors,\r\n  Atom,\r\n  Residue,\r\n  Chain,\r\n  Molecule,\r\n} = chem;\r\n\r\nconst EDIT_MODE = { COMPLEX: 0, COMPONENT: 1, FRAGMENT: 2 };\r\n\r\nconst LOADER_NOT_FOUND = 'Could not find suitable loader for this source';\r\nconst PARSER_NOT_FOUND = 'Could not find suitable parser for this source';\r\n\r\n// Color management changed a lot in threejs 152+ version.\r\n// To keep miew colors we disable the new color management system\r\nTHREE.ColorManagement.enabled = false;\r\n\r\nconst { createElement } = utils;\r\n\r\nfunction updateFogRange(fog, center, radius) {\r\n  fog.near = center - radius * settings.now.fogNearFactor;\r\n  fog.far = center + radius * settings.now.fogFarFactor;\r\n}\r\n\r\nfunction removeExtension(fileName) {\r\n  const dot = fileName.lastIndexOf('.');\r\n  if (dot >= 0) {\r\n    fileName = fileName.substr(0, dot);\r\n  }\r\n  return fileName;\r\n}\r\n\r\nfunction hasValidResidues(complex) {\r\n  let hasValidRes = false;\r\n  complex.forEachComponent((component) => {\r\n    component.forEachResidue((residue) => {\r\n      if (residue._isValid) {\r\n        hasValidRes = true;\r\n      }\r\n    });\r\n  });\r\n  return hasValidRes;\r\n}\r\n\r\nfunction reportProgress(log, action, percent) {\r\n  const TOTAL_PERCENT = 100;\r\n  if (percent !== undefined) {\r\n    log.debug(`${action}... ${Math.floor(percent * TOTAL_PERCENT)}%`);\r\n  } else {\r\n    log.debug(`${action}...`);\r\n  }\r\n}\r\n\r\nfunction chooseFogColor() {\r\n  return settings.now.fogColorEnable ? settings.now.fogColor : settings.now.bg.color;\r\n}\r\n\r\n// ////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Main 3D Molecular Viewer class.\r\n *\r\n * @param {object} opts - Viewer options.\r\n * @param {HTMLElement=} opts.container - DOM element that serves as a viewer container.\r\n * @param {object=} opts.settings - An object with properties to override default settings.\r\n * @param {string=} opts.settingsCookie='settings' - The name of the cookie to save current settings to.\r\n * @param {string=} opts.cookiePath='/' - The path option for cookies. Defaults to root.\r\n *\r\n * @exports Miew\r\n * @constructor\r\n */\r\nfunction Miew(opts) {\r\n  EventDispatcher.call(this);\r\n  this._opts = _.merge({\r\n    settingsCookie: 'settings',\r\n    cookiePath: '/',\r\n  }, opts);\r\n  /** @type {?object} */\r\n  this._gfx = null;\r\n  /** @type {ViewInterpolator} */\r\n  this._interpolator = new ViewInterpolator();\r\n  /** @type {HTMLElement} */\r\n  this._container = (opts && opts.container)\r\n    || document.getElementById('miew-container')\r\n    || _.head(document.getElementsByClassName('miew-container'))\r\n    || document.body;\r\n  /** @type {HTMLElement} */\r\n  this._containerRoot = this._container;\r\n\r\n  /** @type {boolean} */\r\n  this._running = false;\r\n  /** @type {boolean} */\r\n  this._halting = false;\r\n  /** @type {boolean} */\r\n  this._building = false;\r\n  /** @type {boolean} */\r\n  this._needRender = true;\r\n  /** @type {boolean} */\r\n  this._hotKeysEnabled = true;\r\n\r\n  /** @type {Settings} */\r\n  this.settings = settings;\r\n  const log = logger;\r\n  log.console = DEBUG;\r\n  log.level = DEBUG ? 'debug' : 'info';\r\n  /**\r\n   * @type {Logger}\r\n   * @example\r\n   * miew.logger.addEventListener('message', function _onLogMessage(evt) {\r\n   *   console.log(evt.message);\r\n   * });\r\n   */\r\n  this.logger = log;\r\n\r\n  this._cookies = new Cookies(this);\r\n  this.restoreSettings();\r\n  if (opts && opts.settings) {\r\n    this.settings.set(opts.settings);\r\n  }\r\n\r\n  /** @type {?Spinner} */\r\n  this._spinner = null;\r\n  /** @type {JobHandle[]} */\r\n  this._loading = [];\r\n  /** @type {?number}\r\n   * @deprecated until Animation system refactoring\r\n   */\r\n  this._animInterval = null;\r\n\r\n  /** @type {object} */\r\n  this._visuals = {};\r\n  /** @type {?string} */\r\n  this._curVisualName = null;\r\n\r\n  /** @type {array} */\r\n  this._objects = [];\r\n\r\n  /** @type {object} */\r\n  this._sourceWindow = null;\r\n\r\n  this.reset();\r\n\r\n  if (this._repr) {\r\n    log.debug(`Selected ${this._repr.mode.name} mode with ${this._repr.colorer.name} colorer.`);\r\n  }\r\n\r\n  const self = this;\r\n  Miew.registeredPlugins.forEach((plugin) => {\r\n    plugin.call(self);\r\n  });\r\n\r\n  this._initOnSettingsChanged();\r\n}\r\n\r\nMiew.prototype = Object.create(EventDispatcher.prototype);\r\nMiew.prototype.constructor = Miew;\r\n\r\nMiew.prototype.getMaxRepresentationCount = function () {\r\n  return ComplexVisual.NUM_REPRESENTATION_BITS;\r\n};\r\n\r\n/**\r\n * Replace viewer container contents with a DOM element.\r\n * @param {HTMLElement} container - parent container.\r\n * @param {HTMLElement} element - DOM element to show.\r\n * @private\r\n */\r\nfunction _setContainerContents(container, element) {\r\n  const parent = container;\r\n  while (parent.firstChild) {\r\n    parent.removeChild(parent.firstChild);\r\n  }\r\n  parent.appendChild(element);\r\n}\r\n\r\n/**\r\n * Update Shadow Camera target position and frustum.\r\n * @private\r\n */\r\nMiew.prototype._updateShadowCamera = (function () {\r\n  const shadowMatrix = new THREE.Matrix4();\r\n  const direction = new THREE.Vector3();\r\n  const OBB = { center: new THREE.Vector3(), halfSize: new THREE.Vector3() };\r\n\r\n  return function () {\r\n    this._gfx.scene.updateMatrixWorld();\r\n    for (let i = 0; i < this._gfx.scene.children.length; i++) {\r\n      if (this._gfx.scene.children[i].type === 'DirectionalLight') {\r\n        const light = this._gfx.scene.children[i];\r\n        shadowMatrix.copy(light.shadow.camera.matrixWorldInverse);\r\n        this.getOBB(shadowMatrix, OBB);\r\n\r\n        direction.subVectors(light.target.position, light.position);\r\n        light.position.subVectors(OBB.center, direction);\r\n        light.target.position.copy(OBB.center);\r\n\r\n        light.shadow.bias = 0.09;\r\n        light.shadow.camera.bottom = -OBB.halfSize.y;\r\n        light.shadow.camera.top = OBB.halfSize.y;\r\n        light.shadow.camera.right = OBB.halfSize.x;\r\n        light.shadow.camera.left = -OBB.halfSize.x;\r\n        light.shadow.camera.near = direction.length() - OBB.halfSize.z;\r\n        light.shadow.camera.far = direction.length() + OBB.halfSize.z;\r\n\r\n        light.shadow.camera.updateProjectionMatrix();\r\n      }\r\n    }\r\n  };\r\n}());\r\n\r\n/**\r\n * Initialize the viewer.\r\n * @returns {boolean} true on success.\r\n * @throws Forwards exception raised during initialization.\r\n * @see Miew#term\r\n */\r\nMiew.prototype.init = function () {\r\n  const container = this._container;\r\n  const elem = utils.createElement('div', { class: 'miew-canvas' });\r\n  _setContainerContents(container, elem);\r\n  this._container = elem;\r\n\r\n  const frag = document.createDocumentFragment();\r\n  frag.appendChild(this._msgMode = createElement(\r\n    'div',\r\n    { class: 'mode-message overlay' },\r\n    createElement('p', {}, 'COMPONENT EDIT MODE'),\r\n  ));\r\n  frag.appendChild(this._msgAtomInfo = createElement(\r\n    'div',\r\n    { class: 'atom-info overlay' },\r\n    createElement('p', {}, ''),\r\n  ));\r\n  container.appendChild(frag);\r\n\r\n  if (this._gfx !== null) { // block double init\r\n    return true;\r\n  }\r\n\r\n  const self = this;\r\n  this._showMessage('Viewer is being initialized...');\r\n  try {\r\n    this._initGfx();\r\n\r\n    this._initListeners();\r\n    this._spinner = new Spinner({\r\n      lines: 13,\r\n      length: 28,\r\n      width: 14,\r\n      radius: 42,\r\n      color: '#fff',\r\n      zIndex: 700,\r\n    });\r\n\r\n    const target = getTopWindow();\r\n    target.addEventListener('keydown', (event) => {\r\n      self._onKeyDown(event);\r\n    });\r\n\r\n    target.addEventListener('keyup', (event) => {\r\n      self._onKeyUp(event);\r\n    });\r\n\r\n    this._objectControls = new ObjectControls(\r\n      this._gfx.root,\r\n      this._gfx.pivot,\r\n      this._gfx.camera,\r\n      this._gfx.renderer.domElement,\r\n      () => self._getAltObj(),\r\n    );\r\n    this._objectControls.addEventListener('change', (e) => {\r\n      if (settings.now.shadow.on) {\r\n        self._updateShadowCamera();\r\n      }\r\n      // route rotate, zoom, translate and translatePivot events to the external API\r\n      switch (e.action) {\r\n        case 'rotate':\r\n          self.dispatchEvent({ type: 'rotate', quaternion: e.quaternion });\r\n          break;\r\n        case 'zoom':\r\n          self.dispatchEvent({ type: 'zoom', factor: e.factor });\r\n          break;\r\n        default:\r\n          self.dispatchEvent({ type: e.action });\r\n      }\r\n      self.dispatchEvent({ type: 'transform' });\r\n      self._needRender = true;\r\n    });\r\n\r\n    const gfx = this._gfx;\r\n    this._picker = new Picker(gfx.root, gfx.camera, gfx.renderer.domElement);\r\n    this._picker.addEventListener('newpick', (event) => {\r\n      self._onPick(event);\r\n    });\r\n    this._picker.addEventListener('dblclick', (event) => {\r\n      self.center(event);\r\n    });\r\n  } catch (error) {\r\n    if (error.name === 'TypeError' && error.message === 'Cannot read property \\'getExtension\\' of null') {\r\n      this._showMessage('Could not create WebGL context.');\r\n    } else if (error.message.search(/webgl/i) > 1) {\r\n      this._showMessage(error.message);\r\n    } else {\r\n      this._showMessage('Viewer initialization failed.');\r\n      throw error;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // automatically load default file\r\n  const file = this._opts && this._opts.load;\r\n  if (file) {\r\n    const type = this._opts && this._opts.type;\r\n    this.load(file, { fileType: type, keepRepsInfo: true });\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Terminate the viewer completely.\r\n * @see Miew#init\r\n */\r\nMiew.prototype.term = function () {\r\n  this._showMessage('Viewer has been terminated.');\r\n  this._loading.forEach((job) => {\r\n    job.cancel();\r\n  });\r\n  this._loading.length = 0;\r\n  this.halt();\r\n  this._gfx = null;\r\n};\r\n\r\n/**\r\n * Display message inside the viewer container, hiding WebGL canvas.\r\n * @param {string} msg - Message to show.\r\n * @private\r\n */\r\nMiew.prototype._showMessage = function (msg) {\r\n  const element = document.createElement('div');\r\n  element.setAttribute('class', 'miew-message');\r\n  element.appendChild(document.createElement('p')).appendChild(document.createTextNode(msg));\r\n  _setContainerContents(this._container, element);\r\n};\r\n\r\n/**\r\n * Display WebGL canvas inside the viewer container, hiding any message shown.\r\n * @private\r\n */\r\nMiew.prototype._showCanvas = function () {\r\n  _setContainerContents(this._container, this._gfx.renderer.domElement);\r\n};\r\n\r\nMiew.prototype._requestAnimationFrame = function (callback) {\r\n  const { xr } = this._gfx.renderer;\r\n  if (xr && xr.enabled) {\r\n    this._gfx.renderer.setAnimationLoop(callback);\r\n    return;\r\n  }\r\n  requestAnimationFrame(callback);\r\n};\r\n\r\nfunction arezSpritesSupported(context) {\r\n  return context.getExtension('EXT_frag_depth');\r\n}\r\n\r\nfunction isAOSupported(context) {\r\n  return (context.getExtension('WEBGL_depth_texture')\r\n  && context.getExtension('WEBGL_draw_buffers'));\r\n}\r\n\r\n/**\r\n * Initialize WebGL and set 3D scene up.\r\n * @private\r\n */\r\nMiew.prototype._initGfx = function () {\r\n  const gfx = {\r\n    width: this._container.clientWidth,\r\n    height: this._container.clientHeight,\r\n  };\r\n\r\n  const webGLOptions = { preserveDrawingBuffer: true, alpha: true, premultipliedAlpha: false };\r\n  if (settings.now.antialias) {\r\n    webGLOptions.antialias = true;\r\n  }\r\n\r\n  gfx.renderer2d = new CSS2DRenderer();\r\n\r\n  gfx.renderer = new THREE.WebGL1Renderer(webGLOptions);\r\n  gfx.renderer.shadowMap.enabled = settings.now.shadow.on;\r\n  gfx.renderer.shadowMap.autoUpdate = false;\r\n  gfx.renderer.shadowMap.type = THREE.PCFShadowMap;\r\n  capabilities.init(gfx.renderer);\r\n\r\n  // z-sprites and ambient occlusion possibility\r\n  if (!arezSpritesSupported(gfx.renderer.getContext())) {\r\n    settings.set('zSprites', false);\r\n  }\r\n  if (!isAOSupported(gfx.renderer.getContext())) {\r\n    settings.set('ao', false);\r\n  }\r\n\r\n  gfx.renderer.autoClear = false;\r\n  gfx.renderer.setPixelRatio(window.devicePixelRatio);\r\n  gfx.renderer.setSize(gfx.width, gfx.height);\r\n  gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\r\n  gfx.renderer.clearColor();\r\n\r\n  gfx.renderer2d.setSize(gfx.width, gfx.height);\r\n\r\n  gfx.camera = new THREE.PerspectiveCamera(\r\n    settings.now.camFov,\r\n    gfx.width / gfx.height,\r\n    settings.now.camNear,\r\n    settings.now.camFar,\r\n  );\r\n  gfx.camera.setMinimalFov(settings.now.camFov);\r\n  gfx.camera.position.z = settings.now.camDistance;\r\n  gfx.camera.updateProjectionMatrix();\r\n  gfx.camera.layers.set(gfxutils.LAYERS.DEFAULT);\r\n  gfx.camera.layers.enable(gfxutils.LAYERS.VOLUME);\r\n  gfx.camera.layers.enable(gfxutils.LAYERS.VOLUME_BFPLANE);\r\n\r\n  gfx.stereoCam = new THREE.StereoCamera();\r\n\r\n  gfx.scene = new THREE.Scene();\r\n\r\n  const color = chooseFogColor();\r\n  gfx.scene.fog = new THREE.Fog(color, settings.now.camNear, settings.now.camFar);\r\n\r\n  gfx.root = new gfxutils.RCGroup();\r\n  gfx.scene.add(gfx.root);\r\n\r\n  gfx.pivot = new gfxutils.RCGroup();\r\n  gfx.root.add(gfx.pivot);\r\n\r\n  gfx.selectionScene = new THREE.Scene();\r\n  gfx.selectionRoot = new THREE.Group();\r\n  gfx.selectionRoot.matrixAutoUpdate = false;\r\n  gfx.selectionScene.add(gfx.selectionRoot);\r\n\r\n  gfx.selectionPivot = new THREE.Group();\r\n  gfx.selectionPivot.matrixAutoUpdate = false;\r\n  gfx.selectionRoot.add(gfx.selectionPivot);\r\n\r\n  const light12 = new THREE.DirectionalLight(0xffffff, 0.45);\r\n  light12.position.set(0, 0.414, 1);\r\n  light12.layers.enable(gfxutils.LAYERS.TRANSPARENT);\r\n  light12.castShadow = true;\r\n  light12.shadow.bias = 0.09;\r\n  light12.shadow.radius = settings.now.shadow.radius;\r\n  light12.shadow.camera.layers.set(gfxutils.LAYERS.SHADOWMAP);\r\n\r\n  const pixelRatio = gfx.renderer.getPixelRatio();\r\n  const shadowMapSize = Math.max(gfx.width, gfx.height) * pixelRatio;\r\n  light12.shadow.mapSize.width = shadowMapSize;\r\n  light12.shadow.mapSize.height = shadowMapSize;\r\n  light12.target.position.set(0.0, 0.0, 0.0);\r\n  gfx.scene.add(light12);\r\n  gfx.scene.add(light12.target);\r\n\r\n  const light3 = new THREE.AmbientLight(0x666666);\r\n  light3.layers.enable(gfxutils.LAYERS.TRANSPARENT);\r\n  gfx.scene.add(light3);\r\n\r\n  // add axes\r\n  gfx.axes = new Axes(gfx.root, gfx.camera);\r\n  const deviceWidth = gfx.width * pixelRatio;\r\n  const deviceHeight = gfx.height * pixelRatio;\r\n\r\n  gfx.offscreenBuf = new THREE.WebGLRenderTarget(\r\n    deviceWidth,\r\n    deviceHeight,\r\n    {\r\n      minFilter: THREE.LinearFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat, depthBuffer: true,\r\n    },\r\n  );\r\n\r\n  if (gfx.renderer.getContext().getExtension('WEBGL_depth_texture')) {\r\n    gfx.offscreenBuf.depthTexture = new THREE.DepthTexture();\r\n    gfx.offscreenBuf.depthTexture.type = THREE.UnsignedShortType;\r\n  }\r\n\r\n  gfx.offscreenBuf2 = new THREE.WebGLRenderTarget(\r\n    deviceWidth,\r\n    deviceHeight,\r\n    {\r\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\r\n    },\r\n  );\r\n\r\n  gfx.offscreenBuf3 = new THREE.WebGLRenderTarget(\r\n    deviceWidth,\r\n    deviceHeight,\r\n    {\r\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\r\n    },\r\n  );\r\n\r\n  gfx.offscreenBuf4 = new THREE.WebGLRenderTarget(\r\n    deviceWidth,\r\n    deviceHeight,\r\n    {\r\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\r\n    },\r\n  );\r\n\r\n  gfx.volBFTex = gfx.offscreenBuf3;\r\n  gfx.volFFTex = gfx.offscreenBuf4;\r\n  gfx.volWFFTex = gfx.offscreenBuf;\r\n\r\n  // use float textures for volume rendering if possible\r\n  if (gfx.renderer.getContext().getExtension('OES_texture_float')) {\r\n    gfx.offscreenBuf5 = new THREE.WebGLRenderTarget(\r\n      deviceWidth,\r\n      deviceHeight,\r\n      {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        type: THREE.FloatType,\r\n        depthBuffer: false,\r\n      },\r\n    );\r\n\r\n    gfx.offscreenBuf6 = new THREE.WebGLRenderTarget(\r\n      deviceWidth,\r\n      deviceHeight,\r\n      {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        type: THREE.FloatType,\r\n        depthBuffer: false,\r\n      },\r\n    );\r\n\r\n    gfx.offscreenBuf7 = new THREE.WebGLRenderTarget(\r\n      deviceWidth,\r\n      deviceHeight,\r\n      {\r\n        minFilter: THREE.LinearFilter,\r\n        magFilter: THREE.LinearFilter,\r\n        format: THREE.RGBAFormat,\r\n        type: THREE.FloatType,\r\n        depthBuffer: true,\r\n      },\r\n    );\r\n\r\n    gfx.volBFTex = gfx.offscreenBuf5;\r\n    gfx.volFFTex = gfx.offscreenBuf6;\r\n    gfx.volWFFTex = gfx.offscreenBuf7;\r\n  } else {\r\n    this.logger.warn('Device doesn\\'t support OES_texture_float extension');\r\n  }\r\n\r\n  gfx.stereoBufL = new THREE.WebGLRenderTarget(\r\n    deviceWidth,\r\n    deviceHeight,\r\n    {\r\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\r\n    },\r\n  );\r\n\r\n  gfx.stereoBufR = new THREE.WebGLRenderTarget(\r\n    deviceWidth,\r\n    deviceHeight,\r\n    {\r\n      minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, depthBuffer: false,\r\n    },\r\n  );\r\n\r\n  this._gfx = gfx;\r\n  this._showCanvas();\r\n\r\n  this._embedWebXR(settings.now.stereo === 'WEBVR');\r\n\r\n  this._container.appendChild(gfx.renderer2d.getElement());\r\n\r\n  // add FPS counter\r\n  const stats = new Stats();\r\n  stats.domElement.style.position = 'absolute';\r\n  stats.domElement.style.right = '0';\r\n  stats.domElement.style.bottom = '0';\r\n  this._container.appendChild(stats.domElement);\r\n  this._fps = stats;\r\n  this._fps.show(settings.now.fps);\r\n};\r\n\r\n/**\r\n * Setup event listeners.\r\n * @private\r\n */\r\nMiew.prototype._initListeners = function () {\r\n  const self = this;\r\n  window.addEventListener('resize', () => {\r\n    self._onResize();\r\n  });\r\n};\r\n\r\n/**\r\n * Try to add numbers to the base name to make it unique among visuals\r\n * @private\r\n */\r\nMiew.prototype._makeUniqueVisualName = function (baseName) {\r\n  if (!baseName) {\r\n    return Math.random().toString();\r\n  }\r\n\r\n  let name = baseName;\r\n  let suffix = 1;\r\n  while (this._visuals.hasOwnProperty(name)) {\r\n    name = `${baseName} (${suffix.toString()})`;\r\n    suffix++;\r\n  }\r\n\r\n  return name;\r\n};\r\n\r\n/**\r\n * Add visual to the viewer\r\n * @private\r\n */\r\nMiew.prototype._addVisual = function (visual) {\r\n  if (!visual) {\r\n    return null;\r\n  }\r\n\r\n  // change visual name in order to make it unique\r\n  const name = this._makeUniqueVisualName(visual.name);\r\n  visual.name = name;\r\n\r\n  this._visuals[name] = visual;\r\n  this._gfx.pivot.add(visual);\r\n  if (visual.getSelectionGeo) {\r\n    this._gfx.selectionPivot.add(visual.getSelectionGeo());\r\n  }\r\n\r\n  return name;\r\n};\r\n\r\n/**\r\n * Remove visual from the viewer\r\n * @private\r\n */\r\nMiew.prototype._removeVisual = function (visual) {\r\n  let name = '';\r\n  let obj = null;\r\n  if (visual instanceof Visual) {\r\n    ({ name } = visual);\r\n    obj = visual;\r\n  } else if (typeof visual === 'string') {\r\n    name = visual;\r\n    obj = this._visuals[name];\r\n  }\r\n\r\n  if (!obj || !this._visuals.hasOwnProperty(name) || this._visuals[name] !== obj) {\r\n    return;\r\n  }\r\n\r\n  if (name === this._curVisualName) {\r\n    this._curVisualName = undefined;\r\n  }\r\n\r\n  delete this._visuals[name];\r\n  obj.release(); // removes nodes from scene\r\n\r\n  this._needRender = true;\r\n};\r\n\r\n/**\r\n * Call specified function for each Visual\r\n * @private\r\n */\r\nMiew.prototype._forEachVisual = function (callback) {\r\n  for (const name in this._visuals) {\r\n    if (this._visuals.hasOwnProperty(name)) {\r\n      callback(this._visuals[name]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Release (destroy) all visuals in the scene\r\n * @private\r\n */\r\nMiew.prototype._releaseAllVisuals = function () {\r\n  if (!this._gfx || !this._gfx.pivot) {\r\n    return;\r\n  }\r\n\r\n  for (const name in this._visuals) {\r\n    if (this._visuals.hasOwnProperty(name)) {\r\n      this._visuals[name].release();\r\n    }\r\n  }\r\n\r\n  this._visuals = {};\r\n};\r\n\r\n/**\r\n * Call specified function for each ComplexVisual\r\n * @private\r\n */\r\nMiew.prototype._forEachComplexVisual = function (callback) {\r\n  if (!this._gfx || !this._gfx.pivot) {\r\n    return;\r\n  }\r\n\r\n  for (const name in this._visuals) {\r\n    if (this._visuals.hasOwnProperty(name)\r\n          && this._visuals[name] instanceof ComplexVisual) {\r\n      callback(this._visuals[name]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Returns ComplexVisual with specified name, or current (if not found), or any, or null\r\n * @private\r\n */\r\nMiew.prototype._getComplexVisual = function (name) {\r\n  name = name || this._curVisualName;\r\n  let any = null;\r\n  let named = null;\r\n  this._forEachComplexVisual((visual) => {\r\n    any = visual;\r\n    if (visual.name === name) {\r\n      named = visual;\r\n    }\r\n  });\r\n  return named || any;\r\n};\r\n\r\n/**\r\n * Returns first found VolumeVisual (no more than one should be present actually)\r\n * @private\r\n */\r\nMiew.prototype._getVolumeVisual = function () {\r\n  let any = null;\r\n  this._forEachVisual((visual) => {\r\n    if (visual instanceof VolumeVisual) {\r\n      any = visual;\r\n    }\r\n  });\r\n  return any;\r\n};\r\n\r\n/**\r\n * Returns ComplexVisual corresponding to specified complex\r\n * @private\r\n */\r\nMiew.prototype._getVisualForComplex = function (complex) {\r\n  if (!complex) {\r\n    return null;\r\n  }\r\n\r\n  let found = null;\r\n  this._forEachComplexVisual((visual) => {\r\n    if (visual.getComplex() === complex) {\r\n      found = visual;\r\n    }\r\n  });\r\n  return found;\r\n};\r\n\r\n/*\r\n   * Get a list of names of visuals currently shown by the viewer\r\n   */\r\nMiew.prototype.getVisuals = function () {\r\n  return Object.keys(this._visuals);\r\n};\r\n\r\n/*\r\n   * Get complex visuals count\r\n   */\r\nMiew.prototype.getComplexVisualsCount = function () {\r\n  let count = 0;\r\n  this._forEachComplexVisual(() => count++);\r\n  return count;\r\n};\r\n\r\n/*\r\n   * Get current visual\r\n   */\r\nMiew.prototype.getCurrentVisual = function () {\r\n  return this._curVisualName;\r\n};\r\n\r\n/*\r\n   * Set current visual.\r\n   * All further operations will be performed on this visual (complex) if not stated otherwise.\r\n   */\r\nMiew.prototype.setCurrentVisual = function (name) {\r\n  if (!this._visuals[name]) {\r\n    return;\r\n  }\r\n\r\n  this._curVisualName = name;\r\n};\r\n\r\n/**\r\n * Run the viewer, start processing update/render frames periodically.\r\n * Has no effect if already running.\r\n * @see Miew#halt\r\n */\r\nMiew.prototype.run = function () {\r\n  if (!this._running) {\r\n    this._running = true;\r\n    if (this._halting) {\r\n      this._halting = false;\r\n      return;\r\n    }\r\n\r\n    this._objectControls.enable(true);\r\n    this._interpolator.resume();\r\n\r\n    this._requestAnimationFrame(() => this._onTick());\r\n  }\r\n};\r\n\r\n/**\r\n * Request the viewer to stop.\r\n * Will be processed during the next frame.\r\n * @see Miew#run\r\n */\r\nMiew.prototype.halt = function () {\r\n  if (this._running) {\r\n    this._discardComponentEdit();\r\n    this._discardFragmentEdit();\r\n    this._objectControls.enable(false);\r\n    this._interpolator.pause();\r\n    this._halting = true;\r\n  }\r\n};\r\n\r\n/**\r\n * Request the viewer to start / stop responsing\r\n * on hot keys.\r\n * @param enabled - start (true) or stop (false) response on hot keys.\r\n */\r\nMiew.prototype.enableHotKeys = function (enabled) {\r\n  this._hotKeysEnabled = enabled;\r\n  this._objectControls.enableHotkeys(enabled);\r\n};\r\n\r\n/**\r\n * Callback which processes window resize.\r\n * @private\r\n */\r\nMiew.prototype._onResize = function () {\r\n  const gfx = this._gfx;\r\n  if (!gfx) {\r\n    return;\r\n  }\r\n\r\n  this._needRender = true;\r\n\r\n  gfx.width = this._container.clientWidth;\r\n  gfx.height = this._container.clientHeight;\r\n\r\n  gfx.camera.aspect = gfx.width / gfx.height;\r\n  gfx.camera.setMinimalFov(settings.now.camFov);\r\n  gfx.camera.updateProjectionMatrix();\r\n\r\n  gfx.renderer.setSize(gfx.width, gfx.height);\r\n  gfx.renderer2d.setSize(gfx.width, gfx.height);\r\n\r\n  this.dispatchEvent({ type: 'resize' });\r\n};\r\n\r\nMiew.prototype._resizeOffscreenBuffers = function (width, height, stereo) {\r\n  const gfx = this._gfx;\r\n  stereo = stereo || 'NONE';\r\n  const isAnaglyph = (stereo === 'NONE' || stereo === 'ANAGLYPH');\r\n  const multi = isAnaglyph ? 1 : 0.5;\r\n  gfx.offscreenBuf.setSize(multi * width, height);\r\n  gfx.offscreenBuf2.setSize(multi * width, height);\r\n  gfx.offscreenBuf3.setSize(multi * width, height);\r\n  gfx.offscreenBuf4.setSize(multi * width, height);\r\n  if (gfx.offscreenBuf5) {\r\n    gfx.offscreenBuf5.setSize(multi * width, height);\r\n  }\r\n  if (gfx.offscreenBuf6) {\r\n    gfx.offscreenBuf6.setSize(multi * width, height);\r\n  }\r\n  if (gfx.offscreenBuf7) {\r\n    gfx.offscreenBuf7.setSize(multi * width, height);\r\n  }\r\n  if (isAnaglyph) {\r\n    gfx.stereoBufL.setSize(width, height);\r\n    gfx.stereoBufR.setSize(width, height);\r\n  }\r\n};\r\n\r\n/**\r\n * Callback which processes update/render frames.\r\n * @private\r\n */\r\nMiew.prototype._onTick = function () {\r\n  if (this._halting) {\r\n    this._running = false;\r\n    this._halting = false;\r\n    return;\r\n  }\r\n\r\n  this._fps.update();\r\n\r\n  this._requestAnimationFrame(() => this._onTick());\r\n\r\n  this._onUpdate();\r\n  if (this._needRender) {\r\n    this._onRender();\r\n    this._needRender = !settings.now.suspendRender || settings.now.stereo === 'WEBVR';\r\n  }\r\n};\r\n\r\nMiew.prototype._getBSphereRadius = function () {\r\n  // calculate radius that would include all visuals\r\n  let radius = 0;\r\n  this._forEachVisual((visual) => {\r\n    radius = Math.max(radius, visual.getBoundaries().boundingSphere.radius);\r\n  });\r\n  return radius * this._objectControls.getScale();\r\n};\r\n\r\n/**\r\n * Calculate bounding box that would include all visuals and being axis aligned in world defined by\r\n * transformation matrix: matrix\r\n * @param {Matrix4} matrix - transformation matrix.\r\n * @param {object}  OBB           - calculating bounding box.\r\n * @param {Vector3} OBB.center    - OBB center.\r\n * @param {Vector3} OBB.halfSize  - half magnitude of OBB sizes.\r\n */\r\nMiew.prototype.getOBB = (function () {\r\n  const _bSphereForOneVisual = new THREE.Sphere();\r\n  const _bBoxForOneVisual = new THREE.Box3();\r\n  const _bBox = new THREE.Box3();\r\n\r\n  const _invMatrix = new THREE.Matrix4();\r\n\r\n  const _points = [\r\n    new THREE.Vector3(),\r\n    new THREE.Vector3(),\r\n    new THREE.Vector3(),\r\n    new THREE.Vector3(),\r\n  ];\r\n\r\n  return function (matrix, OBB) {\r\n    _bBox.makeEmpty();\r\n\r\n    this._forEachVisual((visual) => {\r\n      _bSphereForOneVisual.copy(visual.getBoundaries().boundingSphere);\r\n      _bSphereForOneVisual.applyMatrix4(visual.matrixWorld).applyMatrix4(matrix);\r\n      _bSphereForOneVisual.getBoundingBox(_bBoxForOneVisual);\r\n      _bBox.union(_bBoxForOneVisual);\r\n    });\r\n    _bBox.getCenter(OBB.center);\r\n\r\n    _invMatrix.copy(matrix).invert();\r\n    OBB.center.applyMatrix4(_invMatrix);\r\n\r\n    const { min } = _bBox;\r\n    const { max } = _bBox;\r\n    _points[0].set(min.x, min.y, min.z); // 000\r\n    _points[1].set(max.x, min.y, min.z); // 100\r\n    _points[2].set(min.x, max.y, min.z); // 010\r\n    _points[3].set(min.x, min.y, max.z); // 001\r\n    for (let i = 0, l = _points.length; i < l; i++) {\r\n      _points[i].applyMatrix4(_invMatrix);\r\n    }\r\n\r\n    OBB.halfSize.set(\r\n      Math.abs(_points[0].x - _points[1].x),\r\n      Math.abs(_points[0].y - _points[2].y),\r\n      Math.abs(_points[0].z - _points[3].z),\r\n    ).multiplyScalar(0.5);\r\n  };\r\n}());\r\n\r\nMiew.prototype._updateFog = function () {\r\n  const gfx = this._gfx;\r\n\r\n  if (settings.now.fog) {\r\n    if (typeof gfx.scene.fog === 'undefined' || gfx.scene.fog === null) {\r\n      const color = chooseFogColor();\r\n      gfx.scene.fog = new THREE.Fog(color);\r\n      this._setUberMaterialValues({ fog: settings.now.fog });\r\n    }\r\n    updateFogRange(gfx.scene.fog, gfx.camera.position.z, this._getBSphereRadius());\r\n  } else if (gfx.scene.fog) {\r\n    gfx.scene.fog = undefined;\r\n    this._setUberMaterialValues({ fog: settings.now.fog });\r\n  }\r\n};\r\n\r\nMiew.prototype._onUpdate = function () {\r\n  if (this.isScriptingCommandAvailable !== undefined && this.isScriptingCommandAvailable() && !this._building) {\r\n    this.callNextCmd();\r\n  }\r\n\r\n  this._objectControls.update();\r\n\r\n  this._forEachComplexVisual((visual) => {\r\n    visual.getComplex().update();\r\n  });\r\n\r\n  if (settings.now.autobuild && !this._loading.length && !this._building && this._needRebuild()) {\r\n    this.rebuild();\r\n  }\r\n\r\n  if (!this._loading.length && !this._building && !this._needRebuild()) {\r\n    this._updateView();\r\n  }\r\n\r\n  this._updateFog();\r\n\r\n  if (this._gfx.renderer.xr.enabled) {\r\n    this.webVR.updateMoleculeScale();\r\n  }\r\n};\r\n\r\nMiew.prototype._onRender = function () {\r\n  const gfx = this._gfx;\r\n\r\n  // update all matrices\r\n  gfx.scene.updateMatrixWorld();\r\n  gfx.camera.updateMatrixWorld();\r\n\r\n  this._clipPlaneUpdateValue(this._getBSphereRadius());\r\n  this._fogFarUpdateValue();\r\n\r\n  gfx.renderer.setRenderTarget(null);\r\n  gfx.renderer.clear();\r\n\r\n  this._renderFrame(settings.now.stereo);\r\n};\r\n\r\nMiew.prototype._renderFrame = (function () {\r\n  const _anaglyphMat = new AnaglyphMaterial();\r\n  const _size = new THREE.Vector2();\r\n\r\n  return function (stereo) {\r\n    const gfx = this._gfx;\r\n    const { renderer } = gfx;\r\n\r\n    renderer.getSize(_size);\r\n\r\n    if (stereo !== 'NONE') {\r\n      gfx.camera.focus = gfx.camera.position.z; // set focus to the center of the object\r\n      gfx.stereoCam.aspect = 1.0;\r\n\r\n      // in anaglyph mode we render full-size image for each eye\r\n      // while in other stereo modes only half-size (two images on the screen)\r\n      if (stereo === 'ANAGLYPH') {\r\n        gfx.stereoCam.update(gfx.camera);\r\n      } else {\r\n        gfx.stereoCam.updateHalfSized(gfx.camera, settings.now.camFov);\r\n      }\r\n    }\r\n\r\n    // resize offscreen buffers to match the target\r\n    const pixelRatio = gfx.renderer.getPixelRatio();\r\n    this._resizeOffscreenBuffers(_size.width * pixelRatio, _size.height * pixelRatio, stereo);\r\n\r\n    this._renderShadowMap();\r\n\r\n    switch (stereo) {\r\n      case 'WEBVR':\r\n      case 'NONE':\r\n        this._renderScene(gfx.camera, false);\r\n        break;\r\n      case 'SIMPLE':\r\n      case 'DISTORTED':\r\n        renderer.setScissorTest(true);\r\n\r\n        renderer.setScissor(0, 0, _size.width / 2, _size.height);\r\n        renderer.setViewport(0, 0, _size.width / 2, _size.height);\r\n        this._renderScene(this._gfx.stereoCam.cameraL, stereo === 'DISTORTED');\r\n\r\n        renderer.setScissor(_size.width / 2, 0, _size.width / 2, _size.height);\r\n        renderer.setViewport(_size.width / 2, 0, _size.width / 2, _size.height);\r\n        this._renderScene(this._gfx.stereoCam.cameraR, stereo === 'DISTORTED');\r\n\r\n        renderer.setScissorTest(false);\r\n        break;\r\n      case 'ANAGLYPH':\r\n        this._renderScene(this._gfx.stereoCam.cameraL, false, gfx.stereoBufL);\r\n        this._renderScene(this._gfx.stereoCam.cameraR, false, gfx.stereoBufR);\r\n        renderer.setRenderTarget(null);\r\n        _anaglyphMat.uniforms.srcL.value = gfx.stereoBufL.texture;\r\n        _anaglyphMat.uniforms.srcR.value = gfx.stereoBufR.texture;\r\n        gfx.renderer.renderScreenQuad(_anaglyphMat);\r\n        break;\r\n      default:\r\n    }\r\n\r\n    gfx.renderer2d.render(gfx.scene, gfx.camera);\r\n\r\n    if (settings.now.axes && gfx.axes && !gfx.renderer.xr.enabled) {\r\n      gfx.axes.render(renderer);\r\n    }\r\n  };\r\n}());\r\n\r\nMiew.prototype._onBgColorChanged = function () {\r\n  const gfx = this._gfx;\r\n  const color = chooseFogColor();\r\n  if (gfx) {\r\n    if (gfx.scene.fog) {\r\n      gfx.scene.fog.color.set(color);\r\n    }\r\n    gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\r\n  }\r\n  this._needRender = true;\r\n};\r\n\r\nMiew.prototype._onFogColorChanged = function () {\r\n  const gfx = this._gfx;\r\n  const color = chooseFogColor();\r\n  if (gfx && gfx.scene.fog) {\r\n    gfx.scene.fog.color.set(color);\r\n  }\r\n  this._needRender = true;\r\n};\r\n\r\nMiew.prototype._setUberMaterialValues = function (values) {\r\n  this._gfx.root.traverse((obj) => {\r\n    if ((obj instanceof THREE.Mesh || obj instanceof THREE.LineSegments || obj instanceof THREE.Line)\r\n        && obj.material instanceof UberMaterial) {\r\n      obj.material.setValues(values);\r\n      obj.material.needsUpdate = true;\r\n    }\r\n  });\r\n};\r\n\r\nMiew.prototype._enableMRT = function (on, renderBuffer, textureBuffer) {\r\n  const gfx = this._gfx;\r\n  const gl = gfx.renderer.getContext();\r\n  const ext = gl.getExtension('WEBGL_draw_buffers');\r\n  const { properties } = gfx.renderer;\r\n\r\n  if (!on) {\r\n    ext.drawBuffersWEBGL([gl.COLOR_ATTACHMENT0, null]);\r\n    return;\r\n  }\r\n\r\n  // take extra texture from Texture Buffer\r\n  gfx.renderer.setRenderTarget(textureBuffer);\r\n  const tx8 = properties.get(textureBuffer.texture).__webglTexture;\r\n  gl.bindTexture(gl.TEXTURE_2D, tx8);\r\n\r\n  // take texture and framebuffer from renderbuffer\r\n  gfx.renderer.setRenderTarget(renderBuffer);\r\n  const fb = properties.get(renderBuffer).__webglFramebuffer;\r\n  const tx = properties.get(renderBuffer.texture).__webglTexture;\r\n\r\n  // set framebuffer\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n  fb.width = renderBuffer.width;\r\n  fb.height = renderBuffer.height;\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tx, 0);\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, ext.COLOR_ATTACHMENT1_WEBGL, gl.TEXTURE_2D, tx8, 0);\r\n\r\n  // mapping textures\r\n  ext.drawBuffersWEBGL([gl.COLOR_ATTACHMENT0, ext.COLOR_ATTACHMENT1_WEBGL]);\r\n};\r\n\r\nMiew.prototype._renderScene = (function () {\r\n  return function (camera, distortion, target) {\r\n    distortion = distortion || false;\r\n    target = target || null;\r\n\r\n    const gfx = this._gfx;\r\n\r\n    // render to offscreen buffer\r\n    gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\r\n    gfx.renderer.setRenderTarget(target);\r\n    gfx.renderer.clear();\r\n    if (gfx.renderer.xr.enabled) {\r\n      gfx.renderer.render(gfx.scene, camera);\r\n      return;\r\n    }\r\n\r\n    // clean buffer for normals texture\r\n    gfx.renderer.setClearColor(0x000000, 0.0);\r\n    gfx.renderer.setRenderTarget(gfx.offscreenBuf4);\r\n    gfx.renderer.clearColor();\r\n\r\n    gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\r\n    gfx.renderer.setRenderTarget(gfx.offscreenBuf);\r\n    gfx.renderer.clear();\r\n\r\n    const bHaveComplexes = (this._getComplexVisual() !== null);\r\n    const volumeVisual = this._getVolumeVisual();\r\n    const ssao = bHaveComplexes && settings.now.ao;\r\n\r\n    if (ssao) {\r\n      this._enableMRT(true, gfx.offscreenBuf, gfx.offscreenBuf4);\r\n    }\r\n\r\n    if (settings.now.transparency === 'prepass') {\r\n      this._renderWithPrepassTransparency(camera, gfx.offscreenBuf);\r\n    } else if (settings.now.transparency === 'standard') {\r\n      gfx.renderer.setRenderTarget(gfx.offscreenBuf);\r\n      gfx.renderer.render(gfx.scene, camera);\r\n    }\r\n\r\n    if (ssao) {\r\n      this._enableMRT(false, null, null);\r\n    }\r\n\r\n    // when fxaa we should get resulting image in temp off-screen buff2 for further postprocessing with fxaa filter\r\n    // otherwise we render to canvas\r\n    const outline = bHaveComplexes && settings.now.outline.on;\r\n    const fxaa = bHaveComplexes && settings.now.fxaa;\r\n    const volume = (volumeVisual !== null) && (volumeVisual.getMesh().material != null);\r\n    let dstBuffer = (ssao || outline || volume || fxaa || distortion) ? gfx.offscreenBuf2 : target;\r\n    let srcBuffer = gfx.offscreenBuf;\r\n\r\n    if (ssao) {\r\n      this._performAO(\r\n        srcBuffer,\r\n        gfx.offscreenBuf4,\r\n        gfx.offscreenBuf.depthTexture,\r\n        dstBuffer,\r\n        gfx.offscreenBuf3,\r\n        gfx.offscreenBuf2,\r\n      );\r\n      if (!fxaa && !distortion && !volume && !outline) {\r\n        srcBuffer = dstBuffer;\r\n        dstBuffer = target;\r\n        gfx.renderer.setRenderTarget(dstBuffer);\r\n        gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 1.0);\r\n      }\r\n    } else {\r\n      // just copy color buffer to dst buffer\r\n      gfx.renderer.setRenderTarget(dstBuffer);\r\n      gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 1.0);\r\n    }\r\n\r\n    // outline\r\n    if (outline) {\r\n      srcBuffer = dstBuffer;\r\n      dstBuffer = (volume || fxaa || distortion) ? gfx.offscreenBuf3 : target;\r\n      if (srcBuffer != null) {\r\n        this._renderOutline(camera, gfx.offscreenBuf, srcBuffer, dstBuffer);\r\n      }\r\n    }\r\n\r\n    // render selected part with outline material\r\n    this._renderSelection(camera, gfx.offscreenBuf, dstBuffer);\r\n\r\n    if (volume) {\r\n      // copy current picture to the buffer that retains depth-data of the original molecule render\r\n      // so that volume renderer could use depth-test\r\n      gfx.renderer.setRenderTarget(gfx.offscreenBuf);\r\n      gfx.renderer.renderScreenQuadFromTex(dstBuffer.texture, 1.0);\r\n      dstBuffer = gfx.offscreenBuf;\r\n      this._renderVolume(volumeVisual, camera, dstBuffer, gfx.volBFTex, gfx.volFFTex, gfx.volWFFTex);\r\n\r\n      // if this is the last stage -- copy image to target\r\n      if (!fxaa && !distortion) {\r\n        gfx.renderer.setRenderTarget(target);\r\n        gfx.renderer.renderScreenQuadFromTex(dstBuffer.texture, 1.0);\r\n      }\r\n    }\r\n\r\n    srcBuffer = dstBuffer;\r\n\r\n    if (fxaa) {\r\n      dstBuffer = distortion ? gfx.offscreenBuf4 : target;\r\n      this._performFXAA(srcBuffer, dstBuffer);\r\n      srcBuffer = dstBuffer;\r\n    }\r\n\r\n    if (distortion) {\r\n      dstBuffer = target;\r\n      this._performDistortion(srcBuffer, dstBuffer, true);\r\n    }\r\n  };\r\n}());\r\n\r\nMiew.prototype._performDistortion = (function () {\r\n  const _scene = new THREE.Scene();\r\n  const _camera = new THREE.OrthographicCamera(-1.0, 1.0, 1.0, -1.0, -500, 1000);\r\n\r\n  const _material = new THREE.RawShaderMaterial({\r\n    uniforms: {\r\n      srcTex: { type: 't', value: null },\r\n      aberration: { type: 'fv3', value: new THREE.Vector3(1.0) },\r\n    },\r\n    vertexShader: vertexScreenQuadShader,\r\n    fragmentShader: fragmentScreenQuadFromDistTex,\r\n    transparent: false,\r\n    depthTest: false,\r\n    depthWrite: false,\r\n  });\r\n\r\n  const _geo = gfxutils.buildDistorionMesh(10, 10, settings.now.debug.stereoBarrel);\r\n  _scene.add(new meshes.Mesh(_geo, _material));\r\n\r\n  return function (srcBuffer, targetBuffer, mesh) {\r\n    this._gfx.renderer.setRenderTarget(targetBuffer);\r\n    this._gfx.renderer.clear();\r\n\r\n    if (mesh) {\r\n      _material.uniforms.srcTex.value = srcBuffer.texture;\r\n      _material.uniforms.aberration.value.set(0.995, 1.0, 1.01);\r\n      this._gfx.renderer.render(_scene, _camera);\r\n    } else {\r\n      this._gfx.renderer.renderScreenQuadFromTexWithDistortion(srcBuffer, settings.now.debug.stereoBarrel);\r\n    }\r\n  };\r\n}());\r\n\r\nMiew.prototype._renderOutline = (function () {\r\n  const _outlineMaterial = new OutlineMaterial({ depth: true });\r\n\r\n  return function (camera, srcDepthBuffer, srcColorBuffer, targetBuffer) {\r\n    const self = this;\r\n    const gfx = self._gfx;\r\n\r\n    // apply Sobel filter -- draw outline\r\n    _outlineMaterial.uniforms.srcTex.value = srcColorBuffer.texture;\r\n    _outlineMaterial.uniforms.srcDepthTex.value = srcDepthBuffer.depthTexture;\r\n    _outlineMaterial.uniforms.srcTexSize.value.set(srcDepthBuffer.width, srcDepthBuffer.height);\r\n    _outlineMaterial.uniforms.color.value = new THREE.Color(settings.now.outline.color);\r\n    _outlineMaterial.uniforms.threshold.value = settings.now.outline.threshold;\r\n    _outlineMaterial.uniforms.thickness.value = new THREE.Vector2(\r\n      settings.now.outline.thickness,\r\n      settings.now.outline.thickness,\r\n    );\r\n\r\n    gfx.renderer.setRenderTarget(targetBuffer);\r\n    gfx.renderer.renderScreenQuad(_outlineMaterial);\r\n  };\r\n}());\r\n\r\nMiew.prototype._renderShadowMap = (function () {\r\n  const pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\r\n\r\n  return function () {\r\n    if (!settings.now.shadow.on) {\r\n      return;\r\n    }\r\n\r\n    const gfx = this._gfx;\r\n    const currentRenderTarget = gfx.renderer.getRenderTarget();\r\n    const activeCubeFace = gfx.renderer.getActiveCubeFace();\r\n    const activeMipmapLevel = gfx.renderer.getActiveMipmapLevel();\r\n\r\n    const _state = gfx.renderer.state;\r\n\r\n    // Set GL state for depth map.\r\n    _state.setBlending(THREE.NoBlending);\r\n    _state.buffers.color.setClear(1, 1, 1, 1);\r\n    _state.buffers.depth.setTest(true);\r\n    _state.setScissorTest(false);\r\n\r\n    for (let i = 0; i < gfx.scene.children.length; i++) {\r\n      if (gfx.scene.children[i].type === 'DirectionalLight') {\r\n        const light = gfx.scene.children[i];\r\n\r\n        if (light.shadow.map == null) {\r\n          light.shadow.map = new THREE.WebGLRenderTarget(light.shadow.mapSize.width, light.shadow.mapSize.height, pars);\r\n          light.shadow.camera.updateProjectionMatrix();\r\n        }\r\n        light.shadow.updateMatrices(light);\r\n\r\n        gfx.renderer.setRenderTarget(light.shadow.map);\r\n        gfx.renderer.clear();\r\n\r\n        gfx.renderer.render(gfx.scene, light.shadow.camera);\r\n      }\r\n    }\r\n    gfx.renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\r\n  };\r\n}());\r\n\r\n/**\r\n * Check if there is selection which must be rendered or not.\r\n * @private\r\n * @returns {boolean} true on existing selection to render\r\n */\r\nMiew.prototype._hasSelectionToRender = function () {\r\n  const selPivot = this._gfx.selectionPivot;\r\n\r\n  for (let i = 0; i < selPivot.children.length; i++) {\r\n    const selPivotChild = selPivot.children[i];\r\n    if (selPivotChild.children.length > 0) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nMiew.prototype._renderSelection = (function () {\r\n  const _outlineMaterial = new OutlineMaterial();\r\n\r\n  return function (camera, srcBuffer, targetBuffer) {\r\n    const self = this;\r\n    const gfx = self._gfx;\r\n\r\n    // clear offscreen buffer (leave z-buffer intact)\r\n    gfx.renderer.setClearColor('black', 0);\r\n\r\n    // render selection to offscreen buffer\r\n    gfx.renderer.setRenderTarget(srcBuffer);\r\n    gfx.renderer.clear(true, false, false);\r\n    if (self._hasSelectionToRender()) {\r\n      gfx.selectionRoot.matrix = gfx.root.matrix;\r\n      gfx.selectionPivot.matrix = gfx.pivot.matrix;\r\n      gfx.renderer.render(gfx.selectionScene, camera);\r\n    } else {\r\n      // just render something to force \"target clear\" operation to finish\r\n      gfx.renderer.renderDummyQuad();\r\n    }\r\n\r\n    // overlay to screen\r\n    gfx.renderer.setRenderTarget(targetBuffer);\r\n    gfx.renderer.renderScreenQuadFromTex(srcBuffer.texture, 0.6);\r\n\r\n    // apply Sobel filter -- draw outline\r\n    _outlineMaterial.uniforms.srcTex.value = srcBuffer.texture;\r\n    _outlineMaterial.uniforms.srcTexSize.value.set(srcBuffer.width, srcBuffer.height);\r\n    gfx.renderer.renderScreenQuad(_outlineMaterial);\r\n  };\r\n}());\r\n\r\nMiew.prototype._checkVolumeRenderingSupport = function (renderTarget) {\r\n  if (!renderTarget) {\r\n    return false;\r\n  }\r\n  const gfx = this._gfx;\r\n  const oldRT = gfx.renderer.getRenderTarget();\r\n\r\n  gfx.renderer.setRenderTarget(renderTarget);\r\n  const context = gfx.renderer.getContext();\r\n  const result = context.checkFramebufferStatus(context.FRAMEBUFFER);\r\n  gfx.renderer.setRenderTarget(oldRT);\r\n  if (result !== context.FRAMEBUFFER_COMPLETE) {\r\n    // floatFrameBufferWarning = ;\r\n    this.logger.warn('Device doesn\\'t support electron density rendering');\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nMiew.prototype._renderVolume = (function () {\r\n  const volumeBFMat = new VolumeMaterial.BackFacePosMaterial();\r\n  const volumeFFMat = new VolumeMaterial.FrontFacePosMaterial();\r\n  const cubeOffsetMat = new THREE.Matrix4().makeTranslation(0.5, 0.5, 0.5);\r\n  const world2colorMat = new THREE.Matrix4();\r\n\r\n  let volumeRenderingSupported;\r\n\r\n  return function (volumeVisual, camera, dstBuf, tmpBuf1, tmpBuf2, tmpBuf3) {\r\n    const gfx = this._gfx;\r\n\r\n    if (typeof volumeRenderingSupported === 'undefined') {\r\n      volumeRenderingSupported = this._checkVolumeRenderingSupport(tmpBuf1);\r\n    }\r\n\r\n    if (!volumeRenderingSupported) {\r\n      return;\r\n    }\r\n\r\n    const mesh = volumeVisual.getMesh();\r\n\r\n    mesh.rebuild(gfx.camera);\r\n\r\n    // use main camera to prepare special textures to be used by volumetric rendering\r\n    // these textures have the size of the window and are stored in offscreen buffers\r\n    gfx.renderer.setClearColor('black', 0);\r\n    gfx.renderer.setRenderTarget(tmpBuf1);\r\n    gfx.renderer.clear();\r\n    gfx.renderer.setRenderTarget(tmpBuf2);\r\n    gfx.renderer.clear();\r\n    gfx.renderer.setRenderTarget(tmpBuf3);\r\n    gfx.renderer.clear();\r\n\r\n    gfx.renderer.setRenderTarget(tmpBuf1);\r\n    // draw plane with its own material, because it differs slightly from volumeBFMat\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME_BFPLANE);\r\n    gfx.renderer.render(gfx.scene, camera);\r\n\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME);\r\n    gfx.scene.overrideMaterial = volumeBFMat;\r\n    gfx.renderer.render(gfx.scene, camera);\r\n\r\n    gfx.renderer.setRenderTarget(tmpBuf2);\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME);\r\n    gfx.scene.overrideMaterial = volumeFFMat;\r\n    gfx.renderer.render(gfx.scene, camera);\r\n\r\n    gfx.scene.overrideMaterial = null;\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT);\r\n\r\n    // prepare texture that contains molecule positions\r\n    world2colorMat.copy(mesh.matrixWorld).invert();\r\n    UberMaterial.prototype.uberOptions.world2colorMatrix.multiplyMatrices(cubeOffsetMat, world2colorMat);\r\n    camera.layers.set(gfxutils.LAYERS.COLOR_FROM_POSITION);\r\n    gfx.renderer.setRenderTarget(tmpBuf3);\r\n    gfx.renderer.render(gfx.scene, camera);\r\n\r\n    // render volume\r\n    const vm = mesh.material;\r\n    vm.uniforms._BFRight.value = tmpBuf1.texture;\r\n    vm.uniforms._FFRight.value = tmpBuf2.texture;\r\n    vm.uniforms._WFFRight.value = tmpBuf3.texture;\r\n    camera.layers.set(gfxutils.LAYERS.VOLUME);\r\n    gfx.renderer.setRenderTarget(dstBuf);\r\n    gfx.renderer.render(gfx.scene, camera);\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT);\r\n  };\r\n}());\r\n\r\n/*  Render scene with 'ZPrepass transparency Effect'\r\n   * Idea: transparent objects are rendered in two passes. The first one writes result only into depth buffer.\r\n   * The second pass reads depth buffer and writes only to color buffer. The method results in\r\n   * correct image of front part of the semi-transparent objects, but we can see only front transparent objects\r\n   * and opaque objects inside, there is no transparent objects inside.\r\n   * Notes: 1. Opaque objects should be rendered strictly before semi-transparent ones.\r\n   * 2. Realization doesn't use camera layers because scene traversing is used for material changes and\r\n   * we can use it to select needed meshes and don't complicate meshes builders with layers\r\n  */\r\nMiew.prototype._renderWithPrepassTransparency = (function () {\r\n  return function (camera, targetBuffer) {\r\n    const gfx = this._gfx;\r\n    gfx.renderer.setRenderTarget(targetBuffer);\r\n\r\n    // opaque objects\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT);\r\n    gfx.renderer.render(gfx.scene, camera);\r\n\r\n    // transparent objects z prepass\r\n    camera.layers.set(gfxutils.LAYERS.PREPASS_TRANSPARENT);\r\n    gfx.renderer.getContext().colorMask(false, false, false, false); // don't update color buffer\r\n    gfx.renderer.render(gfx.scene, camera);\r\n    gfx.renderer.getContext().colorMask(true, true, true, true); // update color buffer\r\n\r\n    // transparent objects color pass\r\n    camera.layers.set(gfxutils.LAYERS.TRANSPARENT);\r\n    gfx.renderer.render(gfx.scene, camera);\r\n\r\n    // restore default layer\r\n    camera.layers.set(gfxutils.LAYERS.DEFAULT);\r\n  };\r\n}());\r\n\r\nMiew.prototype._performFXAA = (function () {\r\n  const _fxaaMaterial = new FXAAMaterial();\r\n\r\n  return function (srcBuffer, targetBuffer) {\r\n    if (typeof srcBuffer === 'undefined' || typeof targetBuffer === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    const gfx = this._gfx;\r\n\r\n    // clear canvas\r\n    gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\r\n    gfx.renderer.setRenderTarget(targetBuffer);\r\n    gfx.renderer.clear();\r\n\r\n    // do fxaa processing of offscreen buff2\r\n    _fxaaMaterial.uniforms.srcTex.value = srcBuffer.texture;\r\n    _fxaaMaterial.uniforms.srcTexelSize.value.set(1.0 / srcBuffer.width, 1.0 / srcBuffer.height);\r\n    _fxaaMaterial.uniforms.bgColor.value.set(settings.now.bg.color);\r\n\r\n    if (_fxaaMaterial.bgTransparent !== settings.now.bg.transparent) {\r\n      _fxaaMaterial.setValues({ bgTransparent: settings.now.bg.transparent });\r\n      _fxaaMaterial.needsUpdate = true;\r\n    }\r\n    gfx.renderer.renderScreenQuad(_fxaaMaterial);\r\n  };\r\n}());\r\n\r\nMiew.prototype._performAO = (function () {\r\n  const _aoMaterial = new AOMaterial();\r\n  const _horBlurMaterial = new AOHorBlurMaterial();\r\n  const _vertBlurMaterial = new AOVertBlurWithBlendMaterial();\r\n\r\n  const _scale = new THREE.Vector3();\r\n  return function (srcColorBuffer, normalBuffer, srcDepthTexture, targetBuffer, tempBuffer, tempBuffer1) {\r\n    if (!srcColorBuffer || !normalBuffer || !srcDepthTexture || !targetBuffer || !tempBuffer || !tempBuffer1) {\r\n      return;\r\n    }\r\n    const gfx = this._gfx;\r\n    const tanHalfFOV = Math.tan(THREE.MathUtils.DEG2RAD * 0.5 * gfx.camera.fov);\r\n\r\n    _aoMaterial.uniforms.diffuseTexture.value = srcColorBuffer.texture;\r\n    _aoMaterial.uniforms.depthTexture.value = srcDepthTexture;\r\n    _aoMaterial.uniforms.normalTexture.value = normalBuffer.texture;\r\n    _aoMaterial.uniforms.srcTexelSize.value.set(1.0 / srcColorBuffer.width, 1.0 / srcColorBuffer.height);\r\n    _aoMaterial.uniforms.camNearFar.value.set(gfx.camera.near, gfx.camera.far);\r\n    _aoMaterial.uniforms.projMatrix.value = gfx.camera.projectionMatrix;\r\n    _aoMaterial.uniforms.aspectRatio.value = gfx.camera.aspect;\r\n    _aoMaterial.uniforms.tanHalfFOV.value = tanHalfFOV;\r\n    gfx.root.matrix.extractScale(_scale);\r\n    _aoMaterial.uniforms.kernelRadius.value = settings.now.debug.ssaoKernelRadius * _scale.x;\r\n    _aoMaterial.uniforms.depthThreshold.value = 2.0 * this._getBSphereRadius(); // diameter\r\n    _aoMaterial.uniforms.factor.value = settings.now.debug.ssaoFactor;\r\n    // N: should be tempBuffer1 for proper use of buffers (see buffers using outside the function)\r\n    gfx.renderer.setRenderTarget(tempBuffer1);\r\n    gfx.renderer.renderScreenQuad(_aoMaterial);\r\n\r\n    _horBlurMaterial.uniforms.aoMap.value = tempBuffer1.texture;\r\n    _horBlurMaterial.uniforms.srcTexelSize.value.set(1.0 / tempBuffer1.width, 1.0 / tempBuffer1.height);\r\n    _horBlurMaterial.uniforms.depthTexture.value = srcDepthTexture;\r\n    gfx.renderer.setRenderTarget(tempBuffer);\r\n    gfx.renderer.renderScreenQuad(_horBlurMaterial);\r\n\r\n    _vertBlurMaterial.uniforms.aoMap.value = tempBuffer.texture;\r\n    _vertBlurMaterial.uniforms.diffuseTexture.value = srcColorBuffer.texture;\r\n    _vertBlurMaterial.uniforms.srcTexelSize.value.set(1.0 / tempBuffer.width, 1.0 / tempBuffer.height);\r\n    _vertBlurMaterial.uniforms.depthTexture.value = srcDepthTexture;\r\n    _vertBlurMaterial.uniforms.projMatrix.value = gfx.camera.projectionMatrix;\r\n    _vertBlurMaterial.uniforms.aspectRatio.value = gfx.camera.aspect;\r\n    _vertBlurMaterial.uniforms.tanHalfFOV.value = tanHalfFOV;\r\n    const { fog } = gfx.scene;\r\n    if (fog) {\r\n      _vertBlurMaterial.uniforms.fogNearFar.value.set(fog.near, fog.far);\r\n      _vertBlurMaterial.uniforms.fogColor.value.set(fog.color.r, fog.color.g, fog.color.b, settings.now.fogAlpha);\r\n    }\r\n    if ((_vertBlurMaterial.useFog !== settings.now.fog)\r\n      || (_vertBlurMaterial.fogTransparent !== settings.now.bg.transparent)) {\r\n      _vertBlurMaterial.setValues({ useFog: settings.now.fog, fogTransparent: settings.now.bg.transparent });\r\n      _vertBlurMaterial.needsUpdate = true;\r\n    }\r\n    gfx.renderer.setRenderTarget(targetBuffer);\r\n    gfx.renderer.renderScreenQuad(_vertBlurMaterial);\r\n  };\r\n}());\r\n\r\n/**\r\n * Reset the viewer, unload molecules.\r\n * @param {boolean=} keepReps - Keep representations while resetting viewer state.\r\n */\r\nMiew.prototype.reset = function (/* keepReps */) {\r\n  if (this._picker) {\r\n    this._picker.reset();\r\n  }\r\n  this._lastPick = null;\r\n\r\n  this._releaseAllVisuals();\r\n\r\n  this._setEditMode(EDIT_MODE.COMPLEX);\r\n\r\n  this._resetObjects();\r\n\r\n  if (this._gfx) {\r\n    gfxutils.clearTree(this._gfx.pivot);\r\n    this._gfx.renderer2d.reset();\r\n  }\r\n\r\n  this.setNeedRender();\r\n};\r\n\r\nMiew.prototype._resetScene = function () {\r\n  this._objectControls.reset();\r\n  this._objectControls.allowTranslation(true);\r\n  this._objectControls.allowAltObjFreeRotation(true);\r\n  this.resetReps();\r\n  this.resetPivot();\r\n  this.rebuildAll();\r\n};\r\n\r\nMiew.prototype.resetView = function () {\r\n  // reset controls\r\n  if (this._picker) {\r\n    this._picker.reset();\r\n  }\r\n  this._setEditMode(EDIT_MODE.COMPLEX);\r\n  this._resetScene();\r\n\r\n  // reset selection\r\n  this._forEachComplexVisual((visual) => {\r\n    visual.updateSelectionMask({});\r\n    visual.rebuildSelectionGeometry();\r\n  });\r\n};\r\n\r\nMiew.prototype._export = function (format) {\r\n  const TheExporter = _.head(io.exporters.find({ format }));\r\n  if (!TheExporter) {\r\n    this.logger.error('Could not find suitable exporter for this source');\r\n    return Promise.reject(new Error('Could not find suitable exporter for this source'));\r\n  }\r\n  this.dispatchEvent({ type: 'exporting' });\r\n\r\n  if (this._visuals[this._curVisualName] instanceof ComplexVisual) {\r\n    let dataSource = null;\r\n    if (TheExporter.SourceClass === ComplexVisual) {\r\n      dataSource = this._visuals[this._curVisualName];\r\n    } else if (TheExporter.SourceClass === Complex) {\r\n      dataSource = this._visuals[this._curVisualName]._complex;\r\n    }\r\n    const exporter = new TheExporter(dataSource, { miewVersion: Miew.VERSION });\r\n    return exporter.export().then((data) => data);\r\n  }\r\n  if (this._visuals[this._curVisualName] instanceof VolumeVisual) {\r\n    return Promise.reject(new Error('Sorry, exporter for volume data not implemented yet'));\r\n  }\r\n  return Promise.reject(new Error('Unexpected format of data'));\r\n};\r\n\r\nconst rePdbId = /^(?:(pdb|cif|ccp4|dsn6):\\s*)?(\\d[a-z\\d]{3})$/i;\r\nconst rePubchem = /^(?:pc|pubchem):\\s*([a-z]+)$/i;\r\nconst reUrlScheme = /^([a-z][a-z\\d\\-+.]*):/i;\r\n\r\nfunction resolveSourceShortcut(source, opts) {\r\n  if (!_.isString(source)) {\r\n    return source;\r\n  }\r\n\r\n  // e.g. \"cif:1CRN\"\r\n  const matchesPdbId = rePdbId.exec(source);\r\n  if (matchesPdbId) {\r\n    let [, format = 'pdb', id] = matchesPdbId;\r\n\r\n    format = format.toLowerCase();\r\n    id = id.toUpperCase();\r\n\r\n    switch (format) {\r\n      case 'pdb':\r\n        source = `https://files.rcsb.org/download/${id}.pdb`;\r\n        break;\r\n      case 'cif':\r\n        source = `https://files.rcsb.org/download/${id}.cif`;\r\n        break;\r\n      case 'ccp4':\r\n        source = `https://www.ebi.ac.uk/pdbe/coordinates/files/${id.toLowerCase()}.ccp4`;\r\n        break;\r\n      case 'dsn6':\r\n        source = `https://edmaps.rcsb.org/maps/${id.toLowerCase()}_2fofc.dsn6`;\r\n        break;\r\n      default:\r\n        throw new Error('Unexpected data format shortcut');\r\n    }\r\n\r\n    opts.fileType = format;\r\n    opts.fileName = `${id}.${format}`;\r\n    opts.sourceType = 'url';\r\n    return source;\r\n  }\r\n\r\n  // e.g. \"pc:aspirin\"\r\n  const matchesPubchem = rePubchem.exec(source);\r\n  if (matchesPubchem) {\r\n    const compound = matchesPubchem[1].toLowerCase();\r\n    source = `https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/name/${compound}/JSON?record_type=3d`;\r\n    opts.fileType = 'pubchem';\r\n    opts.fileName = `${compound}.json`;\r\n    opts.sourceType = 'url';\r\n    return source;\r\n  }\r\n\r\n  // otherwise is should be an URL\r\n  if (opts.sourceType === 'url' || opts.sourceType === undefined) {\r\n    opts.sourceType = 'url';\r\n\r\n    // e.g. \"./data/1CRN.pdb\"\r\n    if (!reUrlScheme.test(source)) {\r\n      source = utils.resolveURL(source);\r\n    }\r\n  }\r\n\r\n  return source;\r\n}\r\n\r\nfunction updateBinaryMode(opts) {\r\n  let { binary } = opts;\r\n\r\n  // detect by format\r\n  if (opts.fileType !== undefined) {\r\n    const TheParser = _.head(io.parsers.find({ format: opts.fileType }));\r\n    if (TheParser) {\r\n      binary = TheParser.binary || false;\r\n    } else {\r\n      throw new Error('Could not find suitable parser for this format');\r\n    }\r\n  }\r\n\r\n  // detect by file extension\r\n  if (binary === undefined && opts.fileExt !== undefined) {\r\n    const TheParser = _.head(io.parsers.find({ ext: opts.fileExt }));\r\n    if (TheParser) {\r\n      binary = TheParser.binary || false;\r\n    }\r\n  }\r\n\r\n  // temporary workaround for animation\r\n  if (opts.fileExt !== undefined && opts.fileExt.toLowerCase() === '.man') {\r\n    opts.binary = true;\r\n    opts.animation = true; // who cares?\r\n  }\r\n\r\n  // update if detected\r\n  if (binary !== undefined) {\r\n    if (opts.binary !== undefined && opts.binary !== binary) {\r\n      opts.context.logger.warn('Overriding incorrect binary mode');\r\n    }\r\n  }\r\n\r\n  opts.binary = binary || false;\r\n}\r\n\r\nfunction _fetchData(source, opts, job) {\r\n  return new Promise(((resolve) => {\r\n    if (job.shouldCancel()) {\r\n      throw new Error('Operation cancelled');\r\n    }\r\n    job.notify({ type: 'fetching' });\r\n\r\n    // allow for source shortcuts\r\n    source = resolveSourceShortcut(source, opts);\r\n\r\n    // detect a proper loader\r\n    const TheLoader = _.head(io.loaders.find({ type: opts.sourceType, source }));\r\n    if (!TheLoader) {\r\n      throw new Error(LOADER_NOT_FOUND);\r\n    }\r\n\r\n    // split file name\r\n    const fileName = opts.fileName || TheLoader.extractName(source);\r\n    if (fileName) {\r\n      const [name, fileExt] = utils.splitFileName(fileName);\r\n      _.defaults(opts, { name, fileExt, fileName });\r\n    }\r\n\r\n    // should it be text or binary?\r\n    updateBinaryMode(opts);\r\n\r\n    // FIXME: All new settings retrieved from server are applied after the loading is complete. However, we need some\r\n    // flags to alter the loading process itself. Here we apply them in advance. Dirty hack. Kill the server, remove\r\n    // all hacks and everybody's happy.\r\n    let newOptions = _.get(opts, 'preset.expression');\r\n    if (!_.isUndefined(newOptions)) {\r\n      newOptions = JSON.parse(newOptions);\r\n      if (newOptions && newOptions.settings) {\r\n        const keys = ['singleUnit'];\r\n        for (let keyIndex = 0, keyCount = keys.length; keyIndex < keyCount; ++keyIndex) {\r\n          const key = keys[keyIndex];\r\n          const value = _.get(newOptions.settings, key);\r\n          if (!_.isUndefined(value)) {\r\n            settings.set(key, value);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // create a loader\r\n    const loader = new TheLoader(source, opts);\r\n    loader.context = opts.context;\r\n    job.addEventListener('cancel', () => loader.abort());\r\n\r\n    loader.addEventListener('progress', (event) => {\r\n      if (event.lengthComputable && event.total > 0) {\r\n        reportProgress(loader.logger, 'Fetching', event.loaded / event.total);\r\n      } else {\r\n        reportProgress(loader.logger, 'Fetching');\r\n      }\r\n    });\r\n\r\n    console.time('fetch');\r\n    const promise = loader.load()\r\n      .then((data) => {\r\n        console.timeEnd('fetch');\r\n        opts.context.logger.info('Fetching finished');\r\n        job.notify({ type: 'fetchingDone', data });\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.timeEnd('fetch');\r\n        opts.context.logger.debug(error.message);\r\n        if (error.stack) {\r\n          opts.context.logger.debug(error.stack);\r\n        }\r\n        opts.context.logger.error('Fetching failed');\r\n        job.notify({ type: 'fetchingDone', error });\r\n        throw error;\r\n      });\r\n    resolve(promise);\r\n  }));\r\n}\r\n\r\nfunction _parseData(data, opts, job) {\r\n  if (job.shouldCancel()) {\r\n    return Promise.reject(new Error('Operation cancelled'));\r\n  }\r\n\r\n  job.notify({ type: 'parsing' });\r\n\r\n  const TheParser = _.head(io.parsers.find({ format: opts.fileType, ext: opts.fileExt, data }));\r\n  if (!TheParser) {\r\n    return Promise.reject(new Error('Could not find suitable parser'));\r\n  }\r\n\r\n  const parser = new TheParser(data, opts);\r\n  parser.context = opts.context;\r\n  job.addEventListener('cancel', () => parser.abort());\r\n\r\n  console.time('parse');\r\n  return parser.parse()\r\n    .then((dataSet) => {\r\n      console.timeEnd('parse');\r\n      job.notify({ type: 'parsingDone', data: dataSet });\r\n      return dataSet;\r\n    })\r\n    .catch((error) => {\r\n      console.timeEnd('parse');\r\n      opts.error = error;\r\n      opts.context.logger.debug(error.message);\r\n      if (error.stack) {\r\n        opts.context.logger.debug(error.stack);\r\n      }\r\n      opts.context.logger.error('Parsing failed');\r\n      job.notify({ type: 'parsingDone', error });\r\n      throw error;\r\n    });\r\n}\r\n\r\n/**\r\n * Load molecule asynchronously.\r\n * @param {string|File} source - Molecule source to load (e.g. PDB ID, URL or File object).\r\n * @param {object=} opts - Options.\r\n * @param {string=} opts.sourceType - Data source type (e.g. 'url', 'file').\r\n * @param {string=} opts.fileType - Data contents type (e.g. 'pdb', 'cml').\r\n * @param {string=} opts.mdFile - .nc file path.\r\n * @param {boolean=} opts.keepRepsInfo - prevent reset of object and reps information.\r\n * @returns {Promise} name of the visual that was added to the viewer\r\n */\r\nMiew.prototype.load = function (source, opts) {\r\n  opts = _.merge({}, opts, {\r\n    context: this,\r\n  });\r\n\r\n  // for a single-file scenario\r\n  if (!this.settings.now.use.multiFile) {\r\n    // abort all loaders in progress\r\n    if (this._loading.length) {\r\n      this._loading.forEach((job) => {\r\n        job.cancel();\r\n      });\r\n      this._loading.length = 0;\r\n    }\r\n\r\n    // reset\r\n    if (!opts.animation) { // FIXME: sometimes it is set AFTERWARDS!\r\n      this.reset(true);\r\n    }\r\n  }\r\n\r\n  this._interpolator.reset();\r\n\r\n  this.dispatchEvent({ type: 'loading', options: opts, source });\r\n\r\n  const job = new JobHandle();\r\n  this._loading.push(job);\r\n  job.addEventListener('notification', (e) => {\r\n    this.dispatchEvent(e.slaveEvent);\r\n  });\r\n\r\n  this._spinner.spin(this._container);\r\n\r\n  const onLoadEnd = (anything) => {\r\n    const jobIndex = this._loading.indexOf(job);\r\n    if (jobIndex !== -1) {\r\n      this._loading.splice(jobIndex, 1);\r\n    }\r\n    this._spinner.stop();\r\n    this._refreshTitle();\r\n    job.notify({ type: 'loadingDone', anything });\r\n    return anything;\r\n  };\r\n\r\n  return _fetchData(source, opts, job)\r\n    .then((data) => _parseData(data, opts, job))\r\n    .then((object) => {\r\n      const name = this._onLoad(object, opts);\r\n      return onLoadEnd(name);\r\n    })\r\n    .catch((err) => {\r\n      this.logger.error('Could not load data');\r\n      this.logger.debug(err);\r\n      throw onLoadEnd(err);\r\n    });\r\n};\r\n\r\n/**\r\n * Unload molecule (delete corresponding visual).\r\n * @param {string=} name - name of the visual\r\n */\r\nMiew.prototype.unload = function (name) {\r\n  this._removeVisual(name || this.getCurrentVisual());\r\n  this.resetPivot();\r\n  if (settings.now.shadow.on) {\r\n    this._updateShadowCamera();\r\n  }\r\n};\r\n\r\n/**\r\n * Start new animation. Now is broken.\r\n * @param fileData - new data to animate\r\n * @private\r\n * @deprecated until animation system refactoring.\r\n */\r\nMiew.prototype._startAnimation = function (fileData) {\r\n  this._stopAnimation();\r\n  const self = this;\r\n  const visual = this._getComplexVisual();\r\n  if (visual === null) {\r\n    this.logger.error('Unable to start animation - no molecule is loaded.');\r\n    return;\r\n  }\r\n  try {\r\n    this._frameInfo = new FrameInfo(\r\n      visual.getComplex(),\r\n      fileData,\r\n      {\r\n        onLoadStatusChanged() {\r\n          self.dispatchEvent({\r\n            type: 'mdPlayerStateChanged',\r\n            state: {\r\n              isPlaying: self._isAnimating,\r\n              isLoading: self._frameInfo ? self._frameInfo.isLoading : true,\r\n            },\r\n          });\r\n        },\r\n        onError(message) {\r\n          self._stopAnimation();\r\n          self.logger.error(message);\r\n        },\r\n      },\r\n    );\r\n  } catch (e) {\r\n    this.logger.error('Animation file does not fit to current complex!');\r\n    return;\r\n  }\r\n  this._continueAnimation();\r\n};\r\n\r\n/**\r\n * Pause current animation. Now is broken.\r\n * @private\r\n * @deprecated until animation system refactoring.\r\n */\r\nMiew.prototype._pauseAnimation = function () {\r\n  if (this._animInterval === null) {\r\n    return;\r\n  }\r\n  this._isAnimating = false;\r\n  clearInterval(this._animInterval);\r\n  this._animInterval = null;\r\n  if (this._frameInfo) {\r\n    this.dispatchEvent({\r\n      type: 'mdPlayerStateChanged',\r\n      state: {\r\n        isPlaying: this._isAnimating,\r\n        isLoading: this._frameInfo.isLoading,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Continue current animation after pausing. Now is broken.\r\n * @private\r\n * @deprecated until animation system refactoring.\r\n */\r\nMiew.prototype._continueAnimation = function () {\r\n  this._isAnimating = true;\r\n  let minFrameTime = 1000 / settings.now.maxfps;\r\n  minFrameTime = Number.isNaN(minFrameTime) ? 0 : minFrameTime;\r\n  const self = this;\r\n  const { pivot } = self._gfx;\r\n  const visual = this._getComplexVisual();\r\n  if (visual) {\r\n    visual.resetSelectionMask();\r\n    visual.rebuildSelectionGeometry();\r\n    this._msgAtomInfo.style.opacity = 0.0;\r\n  }\r\n  this._animInterval = setInterval(() => {\r\n    self.dispatchEvent({\r\n      type: 'mdPlayerStateChanged',\r\n      state: {\r\n        isPlaying: self._isAnimating,\r\n        isLoading: self._frameInfo.isLoading,\r\n      },\r\n    });\r\n    if (self._frameInfo.frameIsReady) {\r\n      pivot.updateToFrame(self._frameInfo);\r\n      self._updateObjsToFrame(self._frameInfo);\r\n      self._refreshTitle(` Frame ${self._frameInfo._currFrame} of ${self._frameInfo._framesCount\r\n      } time interval - ${self._frameInfo._timeStep}`);\r\n      try {\r\n        self._frameInfo.nextFrame();\r\n      } catch (e) {\r\n        self.logger.error('Error during animation');\r\n        self._stopAnimation();\r\n        return;\r\n      }\r\n      self._needRender = true;\r\n    }\r\n  }, minFrameTime);\r\n};\r\n\r\n/**\r\n * Stop current animation. Now is broken.\r\n * @private\r\n * @deprecated until animation system refactoring.\r\n */\r\nMiew.prototype._stopAnimation = function () {\r\n  if (this._animInterval === null) {\r\n    return;\r\n  }\r\n  clearInterval(this._animInterval);\r\n  this._frameInfo.disableEvents();\r\n  this._frameInfo = null;\r\n  this._animInterval = null;\r\n  this.dispatchEvent({\r\n    type: 'mdPlayerStateChanged',\r\n    state: null,\r\n  });\r\n};\r\n\r\n/**\r\n * Invoked upon successful loading of some data source\r\n * @param {DataSource} dataSource - Data source for visualization (molecular complex or other)\r\n * @param {object} opts - Options.\r\n * @private\r\n */\r\nMiew.prototype._onLoad = function (dataSource, opts) {\r\n  const gfx = this._gfx;\r\n  let visualName = null;\r\n\r\n  if (opts.animation) {\r\n    this._refreshTitle();\r\n    this._startAnimation(dataSource);\r\n    return null;\r\n  }\r\n  this._stopAnimation();\r\n  if (!opts || !opts.keepRepsInfo) {\r\n    this._opts.reps = null;\r\n    this._opts._objects = null;\r\n  }\r\n\r\n  if (dataSource.id === 'Complex') {\r\n    const complex = dataSource;\r\n\r\n    // update title\r\n    if (opts.fileName) {\r\n      complex.name = complex.name || removeExtension(opts.fileName).toUpperCase();\r\n    } else if (opts.amberFileName) {\r\n      complex.name = complex.name || removeExtension(opts.amberFileName).toUpperCase();\r\n    } else {\r\n      complex.name = `Dynamic ${opts.fileType} molecule`;\r\n    }\r\n\r\n    visualName = this._addVisual(new ComplexVisual(complex.name, complex));\r\n    this._curVisualName = visualName;\r\n\r\n    const desc = this.info();\r\n    this.logger.info(`Parsed ${opts.fileName} (${\r\n      desc.atoms} atoms, ${\r\n      desc.bonds} bonds, ${\r\n      desc.residues} residues, ${\r\n      desc.chains} chains).`);\r\n\r\n    if (_.isNumber(this._opts.unit)) {\r\n      complex.setCurrentUnit(this._opts.unit);\r\n    }\r\n\r\n    if (opts.preset) {\r\n      // ...removed server access...\r\n    } else if (settings.now.autoPreset) {\r\n      switch (opts.fileType) {\r\n        case 'cml':\r\n          this.resetReps('small');\r\n          break;\r\n        case 'pdb':\r\n        case 'mmtf':\r\n        case 'cif':\r\n          if (hasValidResidues(complex)) {\r\n            this.resetReps('macro');\r\n          } else {\r\n            this.resetReps('small');\r\n          }\r\n          break;\r\n        default:\r\n          this.resetReps('default');\r\n          break;\r\n      }\r\n    } else {\r\n      this.resetReps('default');\r\n    }\r\n  } else if (dataSource.id === 'Volume') {\r\n    this.resetEd();\r\n    visualName = this._onLoadEd(dataSource);\r\n  }\r\n\r\n  gfx.camera.updateProjectionMatrix();\r\n  this._updateFog();\r\n\r\n  // reset global transform\r\n  gfx.root.resetTransform();\r\n  this.resetPivot();\r\n\r\n  // set scale to fit everything on the screen\r\n  this._objectControls.setScale(settings.now.radiusToFit / this._getBSphereRadius());\r\n\r\n  this._resetObjects();\r\n\r\n  if (settings.now.autoResolution) {\r\n    this._tweakResolution();\r\n  }\r\n\r\n  if (settings.now.shadow.on) {\r\n    this._updateShadowCamera();\r\n  }\r\n\r\n  if (this._opts.view) {\r\n    this.view(this._opts.view);\r\n    delete this._opts.view;\r\n  }\r\n\r\n  this._refreshTitle();\r\n\r\n  return visualName;\r\n};\r\n\r\nMiew.prototype.resetEd = function () {\r\n  if (this._edLoader) {\r\n    this._edLoader.abort();\r\n    this._edLoader = null;\r\n  }\r\n\r\n  // free all resources\r\n  this._removeVisual(this._getVolumeVisual());\r\n\r\n  this._needRender = true;\r\n};\r\n\r\nMiew.prototype.loadEd = function (source) {\r\n  this.resetEd();\r\n\r\n  const TheLoader = _.head(io.loaders.find({ source }));\r\n  if (!TheLoader) {\r\n    this.logger.error(LOADER_NOT_FOUND);\r\n    return Promise.reject(new Error(LOADER_NOT_FOUND));\r\n  }\r\n\r\n  const loader = this._edLoader = new TheLoader(source, { binary: true });\r\n  loader.context = this;\r\n  return loader.load().then((data) => {\r\n    const TheParser = _.head(io.parsers.find({ format: 'ccp4' }));\r\n    if (!TheParser) {\r\n      throw new Error(PARSER_NOT_FOUND);\r\n    }\r\n    const parser = new TheParser(data);\r\n    parser.context = this;\r\n    return parser.parse().then((dataSource) => {\r\n      this._onLoadEd(dataSource);\r\n    });\r\n  }).catch((error) => {\r\n    this.logger.error('Could not load ED data');\r\n    this.logger.debug(error);\r\n  });\r\n};\r\n\r\nMiew.prototype._onLoadEd = function (dataSource) {\r\n  dataSource.normalize();\r\n\r\n  const volumeVisual = new VolumeVisual('volume', dataSource);\r\n  volumeVisual.getMesh().layers.set(gfxutils.LAYERS.VOLUME); // volume mesh is not visible to common render\r\n  const visualName = this._addVisual(volumeVisual);\r\n\r\n  this._needRender = true;\r\n  return visualName;\r\n};\r\n\r\nMiew.prototype._needRebuild = function () {\r\n  let needsRebuild = false;\r\n  this._forEachComplexVisual((visual) => {\r\n    needsRebuild = needsRebuild || visual.needsRebuild();\r\n  });\r\n  return needsRebuild;\r\n};\r\n\r\nMiew.prototype._rebuildObjects = function () {\r\n  const self = this;\r\n  const gfx = this._gfx;\r\n  let i;\r\n  let n;\r\n\r\n  // remove old object geometry\r\n  const toRemove = [];\r\n  for (i = 0; i < gfx.pivot.children.length; ++i) {\r\n    const child = gfx.pivot.children[i];\r\n    if (!(child instanceof Visual)) {\r\n      toRemove.push(child);\r\n    }\r\n  }\r\n  for (i = 0; i < toRemove.length; ++i) {\r\n    toRemove[i].parent.remove(toRemove[i]);\r\n  }\r\n\r\n  setTimeout(() => {\r\n    const objList = self._objects;\r\n    for (i = 0, n = objList.length; i < n; ++i) {\r\n      const obj = objList[i];\r\n      if (obj.needsRebuild) {\r\n        obj.build();\r\n      }\r\n      if (obj.getGeometry()) {\r\n        gfx.pivot.add(obj.getGeometry());\r\n      }\r\n    }\r\n  }, 10);\r\n};\r\n\r\nMiew.prototype.changeUnit = function (unitIdx, name) {\r\n  const visual = this._getComplexVisual(name);\r\n  if (!visual) {\r\n    throw new Error('There is no complex to change!');\r\n  }\r\n\r\n  function currentUnitInfo() {\r\n    const unit = visual ? visual.getComplex().getCurrentUnit() : 0;\r\n    const type = unit > 0 ? (`Bio molecule ${unit}`) : 'Asymmetric unit';\r\n    return `Current unit: ${unit} (${type})`;\r\n  }\r\n\r\n  if (unitIdx === undefined) {\r\n    return currentUnitInfo();\r\n  }\r\n  if (_.isString(unitIdx)) {\r\n    unitIdx = Math.max(parseInt(unitIdx, 10), 0);\r\n  }\r\n  if (visual.getComplex().setCurrentUnit(unitIdx)) {\r\n    this._resetScene();\r\n    this._updateInfoPanel();\r\n  }\r\n  return currentUnitInfo();\r\n};\r\n\r\n/**\r\n * Start to rebuild geometry asynchronously.\r\n */\r\nMiew.prototype.rebuild = function () {\r\n  if (this._building) {\r\n    this.logger.warn('Miew.rebuild(): already building!');\r\n    return;\r\n  }\r\n  this._building = true;\r\n\r\n  this.dispatchEvent({ type: 'rebuilding' });\r\n\r\n  this._rebuildObjects();\r\n\r\n  this._gfx.renderer2d.reset();\r\n\r\n  const rebuildActions = [];\r\n  this._forEachComplexVisual((visual) => {\r\n    if (visual.needsRebuild()) {\r\n      rebuildActions.push(visual.rebuild().then(() => new Promise(((resolve) => {\r\n        visual.rebuildSelectionGeometry();\r\n        resolve();\r\n      }))));\r\n    }\r\n  });\r\n\r\n  // Start asynchronous rebuild\r\n  const self = this;\r\n  this._spinner.spin(this._container);\r\n  Promise.all(rebuildActions).then(() => {\r\n    self._spinner.stop();\r\n\r\n    self._needRender = true;\r\n\r\n    self._refreshTitle();\r\n    this.dispatchEvent({ type: 'buildingDone' });\r\n    self._building = false;\r\n  });\r\n};\r\n\r\n/** Mark all representations for rebuilding */\r\nMiew.prototype.rebuildAll = function () {\r\n  this._forEachComplexVisual((visual) => {\r\n    visual.setNeedsRebuild();\r\n  });\r\n};\r\n\r\nMiew.prototype._refreshTitle = function (appendix) {\r\n  let title;\r\n  appendix = appendix === undefined ? '' : appendix;\r\n  const visual = this._getComplexVisual();\r\n  if (visual) {\r\n    title = visual.getComplex().name;\r\n    const rep = visual.repGet(visual.repCurrent());\r\n    title += (rep ? ` – ${rep.mode.name} Mode` : '');\r\n  } else {\r\n    title = Object.keys(this._visuals).length > 0 ? 'Unknown' : 'No Data';\r\n  }\r\n  title += appendix;\r\n\r\n  this.dispatchEvent({ type: 'titleChanged', data: title });\r\n};\r\n\r\nMiew.prototype.setNeedRender = function () {\r\n  this._needRender = true;\r\n};\r\n\r\nMiew.prototype._extractRepresentation = function () {\r\n  const changed = [];\r\n\r\n  this._forEachComplexVisual((visual) => {\r\n    if (visual.getSelectionCount() === 0) {\r\n      return;\r\n    }\r\n\r\n    const selector = visual.buildSelectorFromMask(1 << visual.getSelectionBit());\r\n    const defPreset = settings.now.presets.default;\r\n    const res = visual.repAdd({\r\n      selector,\r\n      mode: defPreset[0].mode.id,\r\n      colorer: defPreset[0].colorer.id,\r\n      material: defPreset[0].material.id,\r\n    });\r\n    if (!res) {\r\n      if (visual.repCount() === ComplexVisual.NUM_REPRESENTATION_BITS) {\r\n        this.logger.warn(`Number of representations is limited to ${ComplexVisual.NUM_REPRESENTATION_BITS}`);\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.dispatchEvent({ type: 'repAdded', index: res.index, name: visual.name });\r\n    visual.repCurrent(res.index);\r\n\r\n    changed.push(visual.name);\r\n  });\r\n\r\n  if (changed.length > 0) {\r\n    this.logger.report(`New representation from selection for complexes: ${changed.join(', ')}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Change current representation list.\r\n * @param {array} reps - Representation list.\r\n */\r\nMiew.prototype._setReps = function (reps) {\r\n  reps = reps || (this._opts && this._opts.reps) || [];\r\n  this._forEachComplexVisual((visual) => visual.resetReps(reps));\r\n};\r\n\r\n/**\r\n * Apply existing preset to current scene.\r\n * @param preset\r\n */\r\nMiew.prototype.applyPreset = function (preset) {\r\n  const { presets } = settings.now;\r\n  const presList = [\r\n    preset || settings.defaults.preset,\r\n    settings.defaults.preset,\r\n    Object.keys(presets)[0],\r\n  ];\r\n  let reps = null;\r\n  for (let i = 0; !reps && i < presList.length; ++i) {\r\n    settings.set('preset', presList[i]);\r\n    reps = presets[settings.now.preset];\r\n    if (!reps) {\r\n      this.logger.warn(`Unknown preset \"${settings.now.preset}\"`);\r\n    }\r\n  }\r\n  this._setReps(reps);\r\n};\r\n\r\n/**\r\n * Reset current representation list to initial values.\r\n * @param {string} [preset] - The source preset in case of uninitialized representation list.\r\n */\r\nMiew.prototype.resetReps = function (preset) {\r\n  const reps = this._opts && this._opts.reps;\r\n  if (reps) {\r\n    this._setReps(reps);\r\n  } else {\r\n    this.applyPreset(preset);\r\n  }\r\n};\r\n\r\n/**\r\n * Get number of representations created so far.\r\n * @returns {number} Number of reps.\r\n */\r\nMiew.prototype.repCount = function (name) {\r\n  const visual = this._getComplexVisual(name);\r\n  return visual ? visual.repCount() : 0;\r\n};\r\n\r\n/**\r\n * Get or set the current representation index.\r\n * @param {number=} index - Zero-based index, up to {@link Miew#repCount()}. Defaults to the current one.\r\n * @param {string=} [name] - Complex name. Defaults to the current one.\r\n * @returns {number} The current index.\r\n */\r\nMiew.prototype.repCurrent = function (index, name) {\r\n  const visual = this._getComplexVisual(name);\r\n  const newIdx = visual ? visual.repCurrent(index) : -1;\r\n  if (index && newIdx !== index) {\r\n    this.logger.warn(`Representation ${index} was not found. Current rep remains unchanged.`);\r\n  }\r\n  return newIdx;\r\n};\r\n\r\n/**\r\n * Get or set representation by index.\r\n * @param {number=} index - Zero-based index, up to {@link Miew#repCount}(). Defaults to the current one.\r\n * @param {object=} rep - Optional representation description.\r\n * @param {string=} rep.selector - Selector string.\r\n * @param {string=} rep.mode - Mode id.\r\n * @param {string=} rep.colorer - Colorer id.\r\n * @param {string=} rep.material - Material id.\r\n * @returns {?object} Representation description.\r\n */\r\nMiew.prototype.rep = function (index, rep) {\r\n  const visual = this._getComplexVisual('');\r\n  if (!visual) {\r\n    return null;\r\n  }\r\n  const res = visual.rep(index, rep);\r\n  if (res.status === 'created') {\r\n    this.dispatchEvent({ type: 'repAdded', index: res.index, name: visual.name });\r\n  } else if (res.status === 'changed') {\r\n    this.dispatchEvent({ type: 'repChanged', index: res.index, name: visual.name });\r\n  }\r\n  return res.desc;\r\n};\r\n\r\n/**\r\n * Get representation (not just description) by index.\r\n * @param {number=} index - Zero-based index, up to {@link Miew#repCount}(). Defaults to the current one.\r\n * @returns {?object} Representation.\r\n */\r\nMiew.prototype.repGet = function (index, name) {\r\n  const visual = this._getComplexVisual(name);\r\n  return visual ? visual.repGet(index) : null;\r\n};\r\n\r\n/**\r\n * Add new representation.\r\n * @param {object=} rep - Representation description.\r\n * @returns {number} Index of the new representation.\r\n */\r\nMiew.prototype.repAdd = function (rep, name) {\r\n  const visual = this._getComplexVisual(name);\r\n  if (!visual) {\r\n    return -1;\r\n  }\r\n\r\n  const res = visual.repAdd(rep);\r\n  if (res) {\r\n    this.dispatchEvent({ type: 'repAdded', index: res.index, name });\r\n    return res.index;\r\n  }\r\n  return -1;\r\n};\r\n\r\n/**\r\n * Remove representation.\r\n * @param {number=} index - Zero-based representation index.\r\n */\r\nMiew.prototype.repRemove = function (index, name) {\r\n  const visual = this._getComplexVisual(name);\r\n  if (!visual) {\r\n    return;\r\n  }\r\n\r\n  visual.repRemove(index);\r\n  this.dispatchEvent({ type: 'repRemoved', index, name });\r\n};\r\n\r\n/**\r\n * Hide representation.\r\n * @param {number} index - Zero-based representation index.\r\n * @param {boolean=} hide - Specify false to make rep visible, true to hide (by default).\r\n */\r\nMiew.prototype.repHide = function (index, hide, name) {\r\n  this._needRender = true;\r\n  const visual = this._getComplexVisual(name);\r\n  return visual ? visual.repHide(index, hide) : null;\r\n};\r\n\r\nMiew.prototype._setEditMode = function (mode) {\r\n  this._editMode = mode;\r\n\r\n  const elem = this._msgMode;\r\n  if (elem) {\r\n    elem.style.opacity = (mode === EDIT_MODE.COMPLEX) ? 0.0 : 1.0;\r\n\r\n    if (mode !== EDIT_MODE.COMPLEX) {\r\n      const t = elem.getElementsByTagName('p')[0];\r\n      t.innerHTML = (mode === EDIT_MODE.COMPONENT) ? 'COMPONENT EDIT MODE' : 'FRAGMENT EDIT MODE';\r\n    }\r\n  }\r\n\r\n  this.dispatchEvent({ type: 'editModeChanged', data: mode === EDIT_MODE.COMPLEX });\r\n};\r\n\r\nMiew.prototype._enterComponentEditMode = function () {\r\n  if (this._editMode !== EDIT_MODE.COMPLEX) {\r\n    return;\r\n  }\r\n\r\n  const editors = [];\r\n  this._forEachComplexVisual((visual) => {\r\n    const editor = visual.beginComponentEdit();\r\n    if (editor) {\r\n      editors.push(editor);\r\n    }\r\n  });\r\n\r\n  if (editors === []) {\r\n    return;\r\n  }\r\n\r\n  this._editors = editors;\r\n\r\n  this.logger.info('COMPONENT EDIT MODE -- ON');\r\n  this._setEditMode(EDIT_MODE.COMPONENT);\r\n  this._objectControls.keysTranslateObj(true);\r\n};\r\n\r\nMiew.prototype._applyComponentEdit = function () {\r\n  if (this._editMode !== EDIT_MODE.COMPONENT) {\r\n    return;\r\n  }\r\n\r\n  this._objectControls.stop();\r\n  this._objectControls.keysTranslateObj(false);\r\n\r\n  for (let i = 0; i < this._editors.length; ++i) {\r\n    this._editors[i].apply();\r\n  }\r\n  this._editors = [];\r\n\r\n  this.logger.info('COMPONENT EDIT MODE -- OFF (applied)');\r\n  this._setEditMode(EDIT_MODE.COMPLEX);\r\n\r\n  this.rebuildAll();\r\n};\r\n\r\nMiew.prototype._discardComponentEdit = function () {\r\n  if (this._editMode !== EDIT_MODE.COMPONENT) {\r\n    return;\r\n  }\r\n\r\n  this._objectControls.stop();\r\n  this._objectControls.keysTranslateObj(false);\r\n\r\n  for (let i = 0; i < this._editors.length; ++i) {\r\n    this._editors[i].discard();\r\n  }\r\n  this._editors = [];\r\n\r\n  this.logger.info('COMPONENT EDIT MODE -- OFF (discarded)');\r\n  this._setEditMode(EDIT_MODE.COMPLEX);\r\n\r\n  this._needRender = true;\r\n  this.rebuildAll();\r\n};\r\n\r\nMiew.prototype._enterFragmentEditMode = function () {\r\n  if (this._editMode !== EDIT_MODE.COMPLEX) {\r\n    return;\r\n  }\r\n\r\n  const selectedVisuals = [];\r\n  this._forEachComplexVisual((visual) => {\r\n    if (visual instanceof ComplexVisual\r\n          && visual.getSelectionCount() > 0) {\r\n      selectedVisuals.push(visual);\r\n    }\r\n  });\r\n\r\n  if (selectedVisuals.length !== 1) {\r\n    // either we have no selection or\r\n    // we have selected atoms in two or more visuals -- not supported\r\n    return;\r\n  }\r\n\r\n  const editor = selectedVisuals[0].beginFragmentEdit();\r\n  if (!editor) {\r\n    return;\r\n  }\r\n  this._editors = [editor];\r\n\r\n  this.logger.info('FRAGMENT EDIT MODE -- ON (single bond)');\r\n  this._setEditMode(EDIT_MODE.FRAGMENT);\r\n  this._objectControls.allowTranslation(false);\r\n  this._objectControls.allowAltObjFreeRotation(editor.isFreeRotationAllowed());\r\n\r\n  this._needRender = true;\r\n};\r\n\r\nMiew.prototype._applyFragmentEdit = function () {\r\n  if (this._editMode !== EDIT_MODE.FRAGMENT) {\r\n    return;\r\n  }\r\n\r\n  this._objectControls.stop();\r\n\r\n  for (let i = 0; i < this._editors.length; ++i) {\r\n    this._editors[i].apply();\r\n  }\r\n  this._editors = [];\r\n\r\n  this.logger.info('FRAGMENT EDIT MODE -- OFF (applied)');\r\n  this._setEditMode(EDIT_MODE.COMPLEX);\r\n  this._objectControls.allowTranslation(true);\r\n  this._objectControls.allowAltObjFreeRotation(true);\r\n\r\n  this.rebuildAll();\r\n};\r\n\r\nMiew.prototype._discardFragmentEdit = function () {\r\n  if (this._editMode !== EDIT_MODE.FRAGMENT) {\r\n    return;\r\n  }\r\n\r\n  this._objectControls.stop();\r\n\r\n  for (let i = 0; i < this._editors.length; ++i) {\r\n    this._editors[i].discard();\r\n  }\r\n  this._editors = [];\r\n\r\n  this.logger.info('FRAGMENT EDIT MODE -- OFF (discarded)');\r\n  this._setEditMode(EDIT_MODE.COMPLEX);\r\n  this._objectControls.allowTranslation(true);\r\n  this._objectControls.allowAltObjFreeRotation(true);\r\n\r\n  this._needRender = true;\r\n};\r\n\r\nMiew.prototype._onPick = function (event) {\r\n  if (!settings.now.picking) {\r\n    // picking is disabled\r\n    return;\r\n  }\r\n\r\n  if (this._animInterval !== null) {\r\n    // animation playback is on\r\n    return;\r\n  }\r\n\r\n  if (this._editMode === EDIT_MODE.FRAGMENT) {\r\n    // prevent picking in fragment edit mode\r\n    return;\r\n  }\r\n\r\n  if (this._objectControls.isEditingAltObj()) {\r\n    // prevent picking during component rotation\r\n    return;\r\n  }\r\n\r\n  // update last pick & find complex\r\n  let complex = null;\r\n  if (event.obj.atom) {\r\n    complex = event.obj.atom.residue.getChain().getComplex();\r\n    this._lastPick = event.obj.atom;\r\n  } else if (event.obj.residue) {\r\n    complex = event.obj.residue.getChain().getComplex();\r\n    this._lastPick = event.obj.residue;\r\n  } else if (event.obj.chain) {\r\n    complex = event.obj.chain.getComplex();\r\n    this._lastPick = event.obj.chain;\r\n  } else if (event.obj.molecule) {\r\n    complex = event.obj.molecule.complex;\r\n    this._lastPick = event.obj.molecule;\r\n  } else {\r\n    this._lastPick = null;\r\n  }\r\n\r\n  function _updateSelection(visual) {\r\n    visual.updateSelectionMask(event.obj);\r\n    visual.rebuildSelectionGeometry();\r\n  }\r\n\r\n  // update visual\r\n  if (complex) {\r\n    const visual = this._getVisualForComplex(complex);\r\n    if (visual) {\r\n      _updateSelection(visual);\r\n      this._needRender = true;\r\n    }\r\n  } else {\r\n    this._forEachComplexVisual(_updateSelection);\r\n    this._needRender = true;\r\n  }\r\n\r\n  this._updateInfoPanel();\r\n  this.dispatchEvent(event);\r\n};\r\n\r\nMiew.prototype._onKeyDown = function (event) {\r\n  if (!this._running || !this._hotKeysEnabled) {\r\n    return;\r\n  }\r\n\r\n  // editing keys\r\n  if (settings.now.editing) {\r\n    switch (event.code) {\r\n      case 'KeyC':\r\n        this._enterComponentEditMode();\r\n        break;\r\n      case 'KeyF':\r\n        this._enterFragmentEditMode();\r\n        break;\r\n      case 'KeyA':\r\n        switch (this._editMode) {\r\n          case EDIT_MODE.COMPONENT:\r\n            this._applyComponentEdit();\r\n            break;\r\n          case EDIT_MODE.FRAGMENT:\r\n            this._applyFragmentEdit();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case 'KeyD':\r\n        switch (this._editMode) {\r\n          case EDIT_MODE.COMPONENT:\r\n            this._discardComponentEdit();\r\n            break;\r\n          case EDIT_MODE.FRAGMENT:\r\n            this._discardFragmentEdit();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  // other keys\r\n  switch (event.code) {\r\n    case 'NumpadAdd':\r\n      if (event.altKey) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this._forEachComplexVisual((visual) => {\r\n          visual.expandSelection();\r\n          visual.rebuildSelectionGeometry();\r\n        });\r\n        this._updateInfoPanel();\r\n        this._needRender = true;\r\n      }\r\n      break;\r\n    case 'NumpadSubtract':\r\n      if (event.altKey) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this._forEachComplexVisual((visual) => {\r\n          visual.shrinkSelection();\r\n          visual.rebuildSelectionGeometry();\r\n        });\r\n        this._updateInfoPanel();\r\n        this._needRender = true;\r\n      }\r\n      break;\r\n    default:\r\n  }\r\n};\r\n\r\nMiew.prototype._onKeyUp = function (event) {\r\n  if (!this._running || !this._hotKeysEnabled) {\r\n    return;\r\n  }\r\n\r\n  if (event.code === 'KeyX') {\r\n    this._extractRepresentation();\r\n  }\r\n};\r\n\r\nMiew.prototype._updateInfoPanel = function () {\r\n  const info = this._msgAtomInfo.getElementsByTagName('p')[0];\r\n  let atom;\r\n  let residue;\r\n\r\n  let count = 0;\r\n  this._forEachComplexVisual((visual) => {\r\n    count += visual.getSelectionCount();\r\n  });\r\n\r\n  while (info.firstChild) {\r\n    info.removeChild(info.firstChild);\r\n  }\r\n\r\n  if (count === 0) {\r\n    this._msgAtomInfo.style.opacity = 0.0;\r\n    return;\r\n  }\r\n\r\n  let firstLine = `${String(count)} atom${count !== 1 ? 's' : ''} selected`;\r\n  if (this._lastPick !== null) {\r\n    firstLine += ', the last pick:';\r\n  }\r\n  let secondLine = '';\r\n  let aName = '';\r\n  let coordLine = '';\r\n\r\n  if (this._lastPick instanceof Atom) {\r\n    atom = this._lastPick;\r\n    residue = atom.residue;\r\n\r\n    aName = atom.name;\r\n    const location = (atom.location !== 32) ? String.fromCharCode(atom.location) : ''; // 32 is code of white-space\r\n    secondLine = `${atom.element.fullName} #${atom.serial}${location}: \\\r\n      ${residue._chain._name}.${residue._type._name}${residue._sequence}${residue._icode.trim()}.`;\r\n    secondLine += aName;\r\n\r\n    coordLine = `Coord: (${atom.position.x.toFixed(2).toString()},\\\r\n     ${atom.position.y.toFixed(2).toString()},\\\r\n     ${atom.position.z.toFixed(2).toString()})`;\r\n  } else if (this._lastPick instanceof Residue) {\r\n    residue = this._lastPick;\r\n\r\n    secondLine = `${residue._type._fullName}: \\\r\n      ${residue._chain._name}.${residue._type._name}${residue._sequence}${residue._icode.trim()}`;\r\n  } else if (this._lastPick instanceof Chain) {\r\n    secondLine = `chain ${this._lastPick._name}`;\r\n  } else if (this._lastPick instanceof Molecule) {\r\n    secondLine = `molecule ${this._lastPick._name}`;\r\n  }\r\n\r\n  info.appendChild(document.createTextNode(firstLine));\r\n\r\n  if (secondLine !== '') {\r\n    info.appendChild(document.createElement('br'));\r\n    info.appendChild(document.createTextNode(secondLine));\r\n  }\r\n\r\n  if (coordLine !== '') {\r\n    info.appendChild(document.createElement('br'));\r\n    info.appendChild(document.createTextNode(coordLine));\r\n  }\r\n\r\n  this._msgAtomInfo.style.opacity = 1.0;\r\n};\r\n\r\nMiew.prototype._getAltObj = function () {\r\n  if (this._editors) {\r\n    let altObj = null;\r\n    for (let i = 0; i < this._editors.length; ++i) {\r\n      const nextAltObj = this._editors[i].getAltObj();\r\n      if (nextAltObj.objects.length > 0) {\r\n        if (altObj) {\r\n          // we have selected atoms in two or more visuals -- not supported\r\n          altObj = null;\r\n          break;\r\n        }\r\n        altObj = nextAltObj;\r\n      }\r\n    }\r\n    if (altObj) {\r\n      return altObj;\r\n    }\r\n  }\r\n\r\n  return {\r\n    objects: [],\r\n    pivot: new THREE.Vector3(0, 0, 0),\r\n  };\r\n};\r\n\r\nMiew.prototype.resetPivot = (function () {\r\n  const boundingBox = new THREE.Box3();\r\n  const center = new THREE.Vector3();\r\n\r\n  return function () {\r\n    boundingBox.makeEmpty();\r\n    this._forEachVisual((visual) => {\r\n      boundingBox.union(visual.getBoundaries().boundingBox);\r\n    });\r\n\r\n    boundingBox.getCenter(center);\r\n    this._objectControls.setPivot(center.negate());\r\n    this.dispatchEvent({ type: 'transform' });\r\n  };\r\n}());\r\n\r\nMiew.prototype.setPivotResidue = (function () {\r\n  const center = new THREE.Vector3();\r\n\r\n  return function (residue) {\r\n    const visual = this._getVisualForComplex(residue.getChain().getComplex());\r\n    if (!visual) {\r\n      return;\r\n    }\r\n\r\n    if (residue._controlPoint) {\r\n      center.copy(residue._controlPoint);\r\n    } else {\r\n      let x = 0;\r\n      let y = 0;\r\n      let z = 0;\r\n      const amount = residue._atoms.length;\r\n      for (let i = 0; i < amount; ++i) {\r\n        const p = residue._atoms[i].position;\r\n        x += p.x / amount;\r\n        y += p.y / amount;\r\n        z += p.z / amount;\r\n      }\r\n      center.set(x, y, z);\r\n    }\r\n    center.applyMatrix4(visual.matrix).negate();\r\n    this._objectControls.setPivot(center);\r\n    this.dispatchEvent({ type: 'transform' });\r\n  };\r\n}());\r\n\r\nMiew.prototype.setPivotAtom = (function () {\r\n  const center = new THREE.Vector3();\r\n\r\n  return function (atom) {\r\n    const visual = this._getVisualForComplex(atom.residue.getChain().getComplex());\r\n    if (!visual) {\r\n      return;\r\n    }\r\n\r\n    center.copy(atom.position);\r\n    center.applyMatrix4(visual.matrix).negate();\r\n    this._objectControls.setPivot(center);\r\n    this.dispatchEvent({ type: 'transform' });\r\n  };\r\n}());\r\n\r\nMiew.prototype.getSelectionCenter = (function () {\r\n  const _centerInVisual = new THREE.Vector3(0.0, 0.0, 0.0);\r\n\r\n  return function (center, includesAtom, selector) {\r\n    center.set(0.0, 0.0, 0.0);\r\n    let count = 0;\r\n\r\n    this._forEachComplexVisual((visual) => {\r\n      if (visual.getSelectionCenter(_centerInVisual, includesAtom, selector || visual.getSelectionBit())) {\r\n        center.add(_centerInVisual);\r\n        count++;\r\n      }\r\n    });\r\n    if (count === 0) {\r\n      return false;\r\n    }\r\n    center.divideScalar(count);\r\n    center.negate();\r\n    return true;\r\n  };\r\n}());\r\n\r\nMiew.prototype.setPivotSubset = (function () {\r\n  const _center = new THREE.Vector3(0.0, 0.0, 0.0);\r\n\r\n  function _includesInCurSelection(atom, selectionBit) {\r\n    return atom.mask & (1 << selectionBit);\r\n  }\r\n\r\n  function _includesInSelector(atom, selector) {\r\n    return selector.selector.includesAtom(atom);\r\n  }\r\n\r\n  return function (selector) {\r\n    const includesAtom = (selector) ? _includesInSelector : _includesInCurSelection;\r\n\r\n    if (this.getSelectionCenter(_center, includesAtom, selector)) {\r\n      this._objectControls.setPivot(_center);\r\n      this.dispatchEvent({ type: 'transform' });\r\n    } else {\r\n      this.logger.warn('selection is empty. Center operation not performed');\r\n    }\r\n  };\r\n}());\r\n\r\n/**\r\n * Makes a screenshot.\r\n * @param {number} [width] - Width of an image. Defaults to the canvas width.\r\n * @param {number} [height] - Height of an image. Defaults to the width (square) or canvas height,\r\n *        if width is omitted too.\r\n * @returns {string} Data URL representing the image contents.\r\n */\r\nMiew.prototype.screenshot = function (width, height) {\r\n  const gfx = this._gfx;\r\n  const deviceWidth = gfx.renderer.domElement.width;\r\n  const deviceHeight = gfx.renderer.domElement.height;\r\n\r\n  function fov2Tan(fov) {\r\n    return Math.tan(THREE.MathUtils.degToRad(0.5 * fov));\r\n  }\r\n\r\n  function tan2Fov(tan) {\r\n    return THREE.MathUtils.radToDeg(Math.atan(tan)) * 2.0;\r\n  }\r\n\r\n  function getDataURL() {\r\n    let dataURL;\r\n    const currBrowser = utils.getBrowser();\r\n\r\n    if (currBrowser === utils.browserType.SAFARI) {\r\n      const canvas = document.createElement('canvas');\r\n      const canvasContext = canvas.getContext('2d');\r\n\r\n      canvas.width = width === undefined ? deviceWidth : width;\r\n      canvas.height = height === undefined ? deviceHeight : height;\r\n\r\n      canvasContext.drawImage(gfx.renderer.domElement, 0, 0, canvas.width, canvas.height);\r\n      dataURL = canvas.toDataURL('image/png');\r\n    } else {\r\n      // Copy current canvas to screenshot\r\n      dataURL = gfx.renderer.domElement.toDataURL('image/png');\r\n    }\r\n    return dataURL;\r\n  }\r\n  height = height || width;\r\n\r\n  let screenshotURI;\r\n  if ((width === undefined && height === undefined)\r\n    || (width === deviceWidth && height === deviceHeight)) {\r\n    // renderer.domElement.toDataURL('image/png') returns flipped image in Safari\r\n    // It hasn't been resolved yet, but getScreenshotSafari()\r\n    // fixes it using an extra canvas.\r\n    screenshotURI = getDataURL();\r\n  } else {\r\n    const originalAspect = gfx.camera.aspect;\r\n    const originalFov = gfx.camera.fov;\r\n    const originalTanFov2 = fov2Tan(gfx.camera.fov);\r\n\r\n    // screenshot should contain the principal area of interest (a centered square touching screen sides)\r\n    const areaOfInterestSize = Math.min(gfx.width, gfx.height);\r\n    const areaOfInterestTanFov2 = originalTanFov2 * areaOfInterestSize / gfx.height;\r\n\r\n    // set appropriate camera aspect & FOV\r\n    const shotAspect = width / height;\r\n    gfx.renderer.setPixelRatio(1);\r\n    gfx.camera.aspect = shotAspect;\r\n    gfx.camera.fov = tan2Fov(areaOfInterestTanFov2 / Math.min(shotAspect, 1.0));\r\n    gfx.camera.updateProjectionMatrix();\r\n\r\n    // resize canvas to the required size of screenshot\r\n    gfx.renderer.setDrawingBufferSize(width, height, 1);\r\n\r\n    // make screenshot\r\n    this._renderFrame(settings.now.stereo);\r\n    screenshotURI = getDataURL();\r\n\r\n    // restore original camera & canvas proportions\r\n    gfx.renderer.setPixelRatio(window.devicePixelRatio);\r\n    gfx.camera.aspect = originalAspect;\r\n    gfx.camera.fov = originalFov;\r\n    gfx.camera.updateProjectionMatrix();\r\n    gfx.renderer.setDrawingBufferSize(gfx.width, gfx.height, window.devicePixelRatio);\r\n    this._needRender = true;\r\n  }\r\n\r\n  return screenshotURI;\r\n};\r\n\r\n/**\r\n * Makes screenshot and initiates a download.\r\n * @param {string} [filename] - Name of a file. Default to a 'screenshot-XXXXX.png', where XXXXX is a current\r\n *        date/time in seconds.\r\n * @param {number} [width] - Width of an image. Defaults to the canvas width.\r\n * @param {number} [height] - Height of an image. Defaults to the width (square) or canvas height,\r\n *        if width is omitted too.\r\n */\r\nMiew.prototype.screenshotSave = function (filename, width, height) {\r\n  const uri = this.screenshot(width, height);\r\n  utils.shotDownload(uri, filename);\r\n};\r\n\r\nMiew.prototype.save = function (opts) {\r\n  this._export(opts.fileType).then((dataString) => {\r\n    const filename = this._visuals[this._curVisualName]._complex.name;\r\n    utils.download(dataString, filename, opts.fileType);\r\n    this._refreshTitle();\r\n    this.dispatchEvent({ type: 'exportingDone' });\r\n  }).catch((error) => {\r\n    this.logger.error('Could not export data');\r\n    this.logger.debug(error);\r\n    this._refreshTitle();\r\n    this.dispatchEvent({ type: 'exportingDone', error });\r\n  });\r\n};\r\n\r\nMiew.prototype._tweakResolution = function () {\r\n  const maxPerf = [\r\n    ['poor', 100],\r\n    ['low', 500],\r\n    ['medium', 1000],\r\n    ['high', 5000],\r\n    ['ultra', Number.MAX_VALUE],\r\n  ];\r\n\r\n  let atomCount = 0;\r\n  this._forEachComplexVisual((visual) => {\r\n    atomCount += visual.getComplex().getAtomCount();\r\n  });\r\n\r\n  if (atomCount > 0) {\r\n    const performance = this._gfxScore * 10e5 / atomCount;\r\n    // set resolution based on estimated performance\r\n    for (let i = 0; i < maxPerf.length; ++i) {\r\n      if (performance < maxPerf[i][1]) {\r\n        this._autoChangeResolution(maxPerf[i][0]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nMiew.prototype._autoChangeResolution = function (resolution) {\r\n  if (resolution !== settings.now.resolution) {\r\n    this.logger.report(`Your rendering resolution was changed to \"${resolution}\" for best performance.`);\r\n  }\r\n  settings.now.resolution = resolution;\r\n};\r\n\r\n/**\r\n * Save current settings to cookies.\r\n */\r\nMiew.prototype.saveSettings = function () {\r\n  this._cookies.setCookie(this._opts.settingsCookie, JSON.stringify(this.settings.getDiffs(true)));\r\n};\r\n\r\n/**\r\n * Load settings from cookies.\r\n */\r\nMiew.prototype.restoreSettings = function () {\r\n  try {\r\n    const cookie = this._cookies.getCookie(this._opts.settingsCookie);\r\n    const diffs = cookie ? JSON.parse(cookie) : {};\r\n    this.settings.applyDiffs(diffs, true);\r\n  } catch (e) {\r\n    this.logger.error(`Cookies parse error: ${e.message}`);\r\n  }\r\n};\r\n\r\n/**\r\n * Reset current settings to the defaults.\r\n */\r\nMiew.prototype.resetSettings = function () {\r\n  this.settings.reset();\r\n};\r\n\r\n/*\r\n   * DANGEROUS and TEMPORARY. The method should change or disappear in future versions.\r\n   * @param {string|object} opts - See {@link Miew} constructor.\r\n   * @see {@link Miew#set}, {@link Miew#repAdd}, {@link Miew#rep}.\r\n   */\r\nMiew.prototype.setOptions = function (opts) {\r\n  if (typeof opts === 'string') {\r\n    opts = Miew.options.fromAttr(opts);\r\n  }\r\n  if (opts.reps) {\r\n    this._opts.reps = null;\r\n  }\r\n  _.merge(this._opts, opts);\r\n  if (opts.settings) {\r\n    this.set(opts.settings);\r\n  }\r\n\r\n  this._opts._objects = opts._objects;\r\n  this._resetObjects();\r\n\r\n  if (opts.load) {\r\n    this.load(opts.load, { fileType: opts.type });\r\n  }\r\n\r\n  if (opts.preset) {\r\n    settings.now.preset = opts.preset;\r\n  }\r\n\r\n  if (opts.reps) {\r\n    this.resetReps(opts.preset);\r\n  }\r\n\r\n  if (this._opts.view) {\r\n    this.view(this._opts.view);\r\n    delete this._opts.view;\r\n  }\r\n\r\n  const visual = this._getComplexVisual();\r\n  if (visual) {\r\n    visual.getComplex().resetCurrentUnit();\r\n    if (_.isNumber(opts.unit)) {\r\n      visual.getComplex().setCurrentUnit(opts.unit);\r\n    }\r\n    this.resetView();\r\n    this.rebuildAll();\r\n  }\r\n};\r\n\r\nMiew.prototype.info = function (name) {\r\n  const visual = this._getComplexVisual(name);\r\n  if (!visual) {\r\n    return {};\r\n  }\r\n  const complex = visual.getComplex();\r\n  const { metadata } = complex;\r\n  return {\r\n    id: metadata.id || complex.name || 'UNKNOWN',\r\n    title: (metadata.title && metadata.title.join(' ')) || 'UNKNOWN DATA',\r\n    atoms: complex.getAtomCount(),\r\n    bonds: complex.getBondCount(),\r\n    residues: complex.getResidueCount(),\r\n    chains: complex.getChainCount(),\r\n  };\r\n};\r\n\r\n/*\r\n   * OBJECTS SEGMENT\r\n   */\r\n\r\nMiew.prototype.addObject = function (objData, bThrow) {\r\n  let Ctor = null;\r\n\r\n  if (objData.type === LinesObject.prototype.type) {\r\n    Ctor = LinesObject;\r\n  }\r\n\r\n  if (Ctor === null) {\r\n    throw new Error(`Unknown scene object type - ${objData.type}`);\r\n  }\r\n\r\n  try {\r\n    const newObj = new Ctor(objData.params, objData.opts);\r\n    this._addSceneObject(newObj);\r\n  } catch (error) {\r\n    if (!bThrow) {\r\n      this.logger.debug(`Error during scene object creation: ${error.message}`);\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n  this._needRender = true;\r\n};\r\n\r\nMiew.prototype._addSceneObject = function (sceneObject) {\r\n  const visual = this._getComplexVisual();\r\n  if (sceneObject.build && visual) {\r\n    sceneObject.build(visual.getComplex());\r\n    this._gfx.pivot.add(sceneObject.getGeometry());\r\n  }\r\n  const objects = this._objects;\r\n  objects[objects.length] = sceneObject;\r\n};\r\n\r\nMiew.prototype._updateObjsToFrame = function (frameData) {\r\n  const objs = this._objects;\r\n  for (let i = 0, n = objs.length; i < n; ++i) {\r\n    if (objs[i].updateToFrame) {\r\n      objs[i].updateToFrame(frameData);\r\n    }\r\n  }\r\n};\r\n\r\nMiew.prototype._resetObjects = function () {\r\n  const objs = this._opts._objects;\r\n\r\n  this._objects = [];\r\n  if (objs) {\r\n    for (let i = 0, n = objs.length; i < n; ++i) {\r\n      this.addObject(objs[i], false);\r\n    }\r\n  }\r\n};\r\n\r\nMiew.prototype.removeObject = function (index) {\r\n  const obj = this._objects[index];\r\n  if (!obj) {\r\n    throw new Error(`Scene object with index ${index} does not exist`);\r\n  }\r\n  obj.destroy();\r\n  this._objects.splice(index, 1);\r\n  this._needRender = true;\r\n};\r\n\r\n/**\r\n * Get a string with a URL to reproduce the current scene.\r\n *\r\n * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n * preset information regardless of the differences with settings\r\n * @param {boolean} [opts.settings=false] - when this flag is true, changes in settings are included\r\n * @param {boolean} [opts.view=false] - when this flag is true, a view information is included\r\n * @returns {string} URL\r\n */\r\nMiew.prototype.getURL = function (opts) {\r\n  return options.toURL(this.getState(_.defaults(opts, {\r\n    compact: true,\r\n    settings: false,\r\n    view: false,\r\n  })));\r\n};\r\n\r\n/**\r\n * Get a string with a script to reproduce the current scene.\r\n *\r\n * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n * preset information regardless of the differences with settings\r\n * @param {boolean} [opts.settings=true] - when this flag is true, changes in settings are included\r\n * @param {boolean} [opts.view=true] - when this flag is true, a view information is included\r\n * @returns {string} script\r\n */\r\nMiew.prototype.getScript = function (opts) {\r\n  return options.toScript(this.getState(_.defaults(opts, {\r\n    compact: true,\r\n    settings: true,\r\n    view: true,\r\n  })));\r\n};\r\n\r\n/*\r\n   * Generates object that represents the current state of representations list\r\n   * @param {boolean} compareWithDefaults - when this flag is true, reps list is compared (if possible)\r\n   * to preset's defaults and only diffs are generated\r\n   */\r\nMiew.prototype._compareReps = function (complexVisual, compareWithDefaults) {\r\n  const ans = {};\r\n  let repCount = 0;\r\n\r\n  if (complexVisual) {\r\n    repCount = complexVisual.repCount();\r\n  }\r\n\r\n  const currPreset = settings.defaults.presets[settings.now.preset];\r\n  let compare = compareWithDefaults;\r\n  if (currPreset === undefined || currPreset.length > repCount) {\r\n    compare = false;\r\n    ans.preset = 'empty';\r\n  } else if (settings.now.preset !== settings.defaults.preset) {\r\n    ans.preset = settings.now.preset;\r\n  }\r\n\r\n  const repsDiff = [];\r\n  let emptyReps = true;\r\n  for (let i = 0, n = repCount; i < n; ++i) {\r\n    repsDiff[i] = complexVisual.repGet(i).compare(compare ? currPreset[i] : null);\r\n    if (!_.isEmpty(repsDiff[i])) {\r\n      emptyReps = false;\r\n    }\r\n  }\r\n  if (!emptyReps) {\r\n    ans.reps = repsDiff;\r\n  }\r\n  return ans;\r\n};\r\n\r\n/*\r\n   * Obtain object that represents current state of miew (might be used as options in constructor).\r\n   * @param {boolean} [opts.compact=true] - set this flag to false if you want to include full\r\n   * preset information regardless of the differences with settings\r\n   * @param {boolean} [opts.settings=false] - when this flag is true, changes in settings are included\r\n   * @param {boolean} [opts.view=false] - when this flag is true, a view information is included\r\n   * @returns {Object} State object.\r\n   */\r\nMiew.prototype.getState = function (opts) {\r\n  const state = {};\r\n\r\n  opts = _.defaults(opts, {\r\n    compact: true,\r\n    settings: false,\r\n    view: false,\r\n  });\r\n\r\n  // load\r\n  const visual = this._getComplexVisual();\r\n  if (visual !== null) {\r\n    const complex = visual.getComplex();\r\n    const { metadata } = complex;\r\n    if (metadata.id) {\r\n      const format = metadata.format ? `${metadata.format}:` : '';\r\n      state.load = format + metadata.id;\r\n    }\r\n    const unit = complex.getCurrentUnit();\r\n    if (unit !== 1) {\r\n      state.unit = unit;\r\n    }\r\n  }\r\n\r\n  // representations\r\n  const repsInfo = this._compareReps(visual, opts.compact);\r\n  if (repsInfo.preset) {\r\n    state.preset = repsInfo.preset;\r\n  }\r\n\r\n  if (repsInfo.reps) {\r\n    state.reps = repsInfo.reps;\r\n  }\r\n\r\n  // objects\r\n  const objects = this._objects;\r\n  const objectsState = [];\r\n  for (let i = 0, n = objects.length; i < n; ++i) {\r\n    objectsState[i] = objects[i].identify();\r\n  }\r\n  if (objects.length > 0) {\r\n    state._objects = objectsState;\r\n  }\r\n\r\n  // view\r\n  if (opts.view) {\r\n    state.view = this.view();\r\n  }\r\n\r\n  // settings\r\n  if (opts.settings) {\r\n    const diff = this.settings.getDiffs(false);\r\n    if (!_.isEmpty(diff)) {\r\n      state.settings = diff;\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\n/**\r\n * Get parameter value.\r\n * @param {string} param - Parameter name or path (e.g. 'modes.BS.atom').\r\n * @param {*=} value - Default value.\r\n * @returns {*} Parameter value.\r\n */\r\nMiew.prototype.get = function (param, value) {\r\n  return settings.get(param, value);\r\n};\r\n\r\nMiew.prototype._clipPlaneUpdateValue = function (radius) {\r\n  const clipPlaneValue = Math.max(\r\n    this._gfx.camera.position.z - radius * settings.now.draft.clipPlaneFactor,\r\n    settings.now.camNear,\r\n  );\r\n\r\n  const opts = { clipPlaneValue };\r\n  this._forEachComplexVisual((visual) => {\r\n    visual.setUberOptions(opts);\r\n  });\r\n  for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n    const obj = this._objects[i];\r\n    if (obj._line) {\r\n      obj._line.material.setUberOptions(opts);\r\n    }\r\n  }\r\n  if (this._picker !== null) {\r\n    this._picker.clipPlaneValue = clipPlaneValue;\r\n  }\r\n};\r\n\r\nMiew.prototype._fogFarUpdateValue = function () {\r\n  if (this._picker !== null) {\r\n    if (this._gfx.scene.fog) {\r\n      this._picker.fogFarValue = this._gfx.scene.fog.far;\r\n    } else {\r\n      this._picker.fogFarValue = undefined;\r\n    }\r\n  }\r\n};\r\n\r\nMiew.prototype._updateShadowmapMeshes = function (process) {\r\n  this._forEachComplexVisual((visual) => {\r\n    const reprList = visual._reprList;\r\n    for (let i = 0, n = reprList.length; i < n; ++i) {\r\n      const repr = reprList[i];\r\n      process(repr.geo, repr.material);\r\n    }\r\n  });\r\n};\r\n\r\nMiew.prototype._updateMaterials = function (values, needTraverse = false, process = undefined) {\r\n  this._forEachComplexVisual((visual) => visual.setMaterialValues(values, needTraverse, process));\r\n  for (let i = 0, n = this._objects.length; i < n; ++i) {\r\n    const obj = this._objects[i];\r\n    if (obj._line) {\r\n      obj._line.material.setValues(values);\r\n      obj._line.material.needsUpdate = true;\r\n    }\r\n  }\r\n};\r\n\r\nMiew.prototype._fogAlphaChanged = function () {\r\n  this._forEachComplexVisual((visual) => {\r\n    visual.setUberOptions({\r\n      fogAlpha: settings.now.fogAlpha,\r\n    });\r\n  });\r\n};\r\n\r\nMiew.prototype._embedWebXR = function () {\r\n  // switch off\r\n  if (settings.now.stereo !== 'WEBVR') {\r\n    if (this.webVR) {\r\n      this.webVR.disable();\r\n    }\r\n    this.webVR = null;\r\n    return;\r\n  }\r\n  // switch on\r\n  if (!this.webVR) {\r\n    this.webVR = new WebVRPoC(() => {\r\n      this._requestAnimationFrame(() => this._onTick());\r\n      this._needRender = true;\r\n      this._onResize();\r\n    });\r\n  }\r\n  this.webVR.enable(this._gfx);\r\n};\r\n\r\nMiew.prototype._initOnSettingsChanged = function () {\r\n  const on = (props, func) => {\r\n    props = _.isArray(props) ? props : [props];\r\n    props.forEach((prop) => {\r\n      this.settings.addEventListener(`change:${prop}`, func);\r\n    });\r\n  };\r\n\r\n  on('modes.VD.frame', () => {\r\n    const volume = this._getVolumeVisual();\r\n    if (volume === null) return;\r\n\r\n    volume.showFrame(settings.now.modes.VD.frame);\r\n    this._needRender = true;\r\n  });\r\n\r\n  on('modes.VD.isoMode', () => {\r\n    const volume = this._getVolumeVisual();\r\n    if (volume === null) return;\r\n\r\n    volume.getMesh().material.updateDefines();\r\n    this._needRender = true;\r\n  });\r\n\r\n  on('bg.color', () => {\r\n    this._onBgColorChanged();\r\n  });\r\n\r\n  on('ao', () => {\r\n    if (settings.now.ao && !isAOSupported(this._gfx.renderer.getContext())) {\r\n      this.logger.warn('Your device or browser does not support ao');\r\n      settings.set('ao', false);\r\n    } else {\r\n      const values = { normalsToGBuffer: settings.now.ao };\r\n      this._setUberMaterialValues(values);\r\n    }\r\n  });\r\n\r\n  on('zSprites', () => {\r\n    if (settings.now.zSprites && !arezSpritesSupported(this._gfx.renderer.getContext())) {\r\n      this.logger.warn('Your device or browser does not support zSprites');\r\n      settings.set('zSprites', false);\r\n    }\r\n    this.rebuildAll();\r\n  });\r\n\r\n  on('fogColor', () => {\r\n    this._onFogColorChanged();\r\n  });\r\n\r\n  on('fogColorEnable', () => {\r\n    this._onFogColorChanged();\r\n  });\r\n\r\n  on('bg.transparent', (evt) => {\r\n    const gfx = this._gfx;\r\n    if (gfx) {\r\n      gfx.renderer.setClearColor(settings.now.bg.color, Number(!settings.now.bg.transparent));\r\n    }\r\n    // update materials\r\n    this._updateMaterials({ fogTransparent: evt.value });\r\n    this.rebuildAll();\r\n  });\r\n\r\n  on('draft.clipPlane', (evt) => {\r\n    // update materials\r\n    this._updateMaterials({ clipPlane: evt.value });\r\n    this.rebuildAll();\r\n  });\r\n\r\n  on('shadow.on', (evt) => {\r\n    // update materials\r\n    const values = { shadowmap: evt.value, shadowmapType: settings.now.shadow.type };\r\n    const gfx = this._gfx;\r\n    if (gfx) {\r\n      gfx.renderer.shadowMap.enabled = Boolean(values.shadowmap);\r\n    }\r\n    this._updateMaterials(values, true);\r\n    if (values.shadowmap) {\r\n      this._updateShadowCamera();\r\n      this._updateShadowmapMeshes(meshutils.createShadowmapMaterial);\r\n    } else {\r\n      this._updateShadowmapMeshes(meshutils.removeShadowmapMaterial);\r\n    }\r\n    this._needRender = true;\r\n  });\r\n\r\n  on('shadow.type', (evt) => {\r\n    // update materials if shadowmap is enable\r\n    if (settings.now.shadow.on) {\r\n      this._updateMaterials({ shadowmapType: evt.value }, true);\r\n      this._needRender = true;\r\n    }\r\n  });\r\n\r\n  on('shadow.radius', (evt) => {\r\n    for (let i = 0; i < this._gfx.scene.children.length; i++) {\r\n      if (this._gfx.scene.children[i].shadow !== undefined) {\r\n        const light = this._gfx.scene.children[i];\r\n        light.shadow.radius = evt.value;\r\n        this._needRender = true;\r\n      }\r\n    }\r\n  });\r\n\r\n  on('fps', () => {\r\n    this._fps.show(settings.now.fps);\r\n  });\r\n\r\n  on(['fog', 'fogNearFactor', 'fogFarFactor'], () => {\r\n    this._updateFog();\r\n    this._needRender = true;\r\n  });\r\n\r\n  on('fogAlpha', () => {\r\n    const { fogAlpha } = settings.now;\r\n    if (fogAlpha < 0 || fogAlpha > 1) {\r\n      this.logger.warn('fogAlpha must belong range [0,1]');\r\n    }\r\n    this._fogAlphaChanged();\r\n    this._needRender = true;\r\n  });\r\n\r\n  on('autoResolution', (evt) => {\r\n    if (evt.value && !this._gfxScore) {\r\n      this.logger.warn('Benchmarks are missed, autoresolution will not work! '\r\n        + 'Autoresolution should be set during miew startup.');\r\n    }\r\n  });\r\n\r\n  on('stereo', () => {\r\n    this._embedWebXR(settings.now.stereo === 'WEBVR');\r\n    this._needRender = true;\r\n  });\r\n\r\n  on(['transparency', 'palette'], () => {\r\n    this.rebuildAll();\r\n  });\r\n\r\n  on('resolution', () => {\r\n    // update complex visuals\r\n    this.rebuildAll();\r\n\r\n    // update volume visual\r\n    const volume = this._getVolumeVisual();\r\n    if (volume) {\r\n      volume.getMesh().material.updateDefines();\r\n      this._needRender = true;\r\n    }\r\n  });\r\n\r\n  on(['axes', 'fxaa', 'ao',\r\n    'outline.on', 'outline.color', 'outline.threshold', 'outline.thickness'], () => {\r\n    this._needRender = true;\r\n  });\r\n};\r\n\r\n/**\r\n * Set parameter value.\r\n * @param {string|object} params - Parameter name or path (e.g. 'modes.BS.atom') or even settings object.\r\n * @param {*=} value - Value.\r\n */\r\nMiew.prototype.set = function (params, value) {\r\n  settings.set(params, value);\r\n};\r\n\r\n/**\r\n * Select atoms with selection string.\r\n * @param {string} expression - string expression of selection\r\n * @param {boolean=} append - true to append selection atoms to current selection, false to rewrite selection\r\n */\r\nMiew.prototype.select = function (expression, append) {\r\n  const visual = this._getComplexVisual();\r\n  if (!visual) {\r\n    return;\r\n  }\r\n\r\n  let sel = expression;\r\n  if (_.isString(expression)) {\r\n    sel = selectors.parse(expression).selector;\r\n  }\r\n\r\n  visual.select(sel, append);\r\n  this._lastPick = null;\r\n\r\n  this._updateInfoPanel();\r\n  this._needRender = true;\r\n};\r\n\r\nconst VIEW_VERSION = '1';\r\n\r\n/**\r\n * Get or set view info packed into string.\r\n *\r\n * **Note:** view is stored for *left-handed* cs, euler angles are stored in radians and *ZXY-order*,\r\n *\r\n * @param {string=} expression - Optional string encoded the view\r\n */\r\nMiew.prototype.view = function (expression) {\r\n  const self = this;\r\n  const { pivot } = this._gfx;\r\n  let transform = [];\r\n  const eulerOrder = 'ZXY';\r\n\r\n  function encode() {\r\n    const pos = pivot.position;\r\n    const scale = self._objectControls.getScale() / settings.now.radiusToFit;\r\n    const euler = new THREE.Euler();\r\n    euler.setFromQuaternion(self._objectControls.getOrientation(), eulerOrder);\r\n    transform = [\r\n      pos.x, pos.y, pos.z,\r\n      scale,\r\n      euler.x, euler.y, euler.z,\r\n    ];\r\n    return VIEW_VERSION + utils.arrayToBase64(transform, Float32Array);\r\n  }\r\n\r\n  function decode() {\r\n    // backwards compatible: old non-versioned view is the 0th version\r\n    if (expression.length === 40) {\r\n      expression = `0${expression}`;\r\n    }\r\n\r\n    const version = expression[0];\r\n    transform = utils.arrayFromBase64(expression.substr(1), Float32Array);\r\n\r\n    // apply adapter for old versions\r\n    if (version !== VIEW_VERSION) {\r\n      if (version === '0') {\r\n        // cancel radiusToFit included in old views\r\n        transform[3] /= 8.0;\r\n      } else {\r\n        // do nothing\r\n        self.logger.warn(`Encoded view version mismatch, stored as ${version} vs ${VIEW_VERSION} expected`);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const interpolator = self._interpolator;\r\n    const srcView = interpolator.createView();\r\n    srcView.position.copy(pivot.position);\r\n    srcView.scale = self._objectControls.getScale();\r\n    srcView.orientation.copy(self._objectControls.getOrientation());\r\n\r\n    const dstView = interpolator.createView();\r\n    dstView.position.set(transform[0], transform[1], transform[2]);\r\n\r\n    // hack to make preset views work after we moved centering offset to visual nodes\r\n    // FIXME should only store main pivot offset in preset\r\n    if (self._getComplexVisual()) {\r\n      dstView.position.sub(self._getComplexVisual().position);\r\n    }\r\n\r\n    dstView.scale = transform[3]; // eslint-disable-line prefer-destructuring\r\n    dstView.orientation.setFromEuler(new THREE.Euler(transform[4], transform[5], transform[6], eulerOrder));\r\n\r\n    interpolator.setup(srcView, dstView);\r\n  }\r\n\r\n  if (typeof expression === 'undefined') {\r\n    return encode();\r\n  }\r\n  decode();\r\n\r\n  return expression;\r\n};\r\n\r\n/*\r\n   * Update current view due to viewinterpolator state\r\n   */\r\nMiew.prototype._updateView = function () {\r\n  const self = this;\r\n  const { pivot } = this._gfx;\r\n\r\n  const interpolator = this._interpolator;\r\n  if (!interpolator.wasStarted()) {\r\n    interpolator.start();\r\n  }\r\n\r\n  if (!interpolator.isMoving()) {\r\n    return;\r\n  }\r\n\r\n  const res = interpolator.getCurrentView();\r\n  if (res.success) {\r\n    const curr = res.view;\r\n    pivot.position.copy(curr.position);\r\n    self._objectControls.setScale(curr.scale * settings.now.radiusToFit);\r\n    self._objectControls.setOrientation(curr.orientation);\r\n    this.dispatchEvent({ type: 'transform' });\r\n    self._needRender = true;\r\n  }\r\n};\r\n\r\n/**\r\n * Translate object by vector\r\n * @param {number} x - translation value (Ang) along model's X axis\r\n * @param {number} y - translation value (Ang) along model's Y axis\r\n * @param {number} z - translation value (Ang) along model's Z axis\r\n */\r\nMiew.prototype.translate = function (x, y, z) {\r\n  this._objectControls.translatePivot(x, y, z);\r\n  this.dispatchEvent({ type: 'transform' });\r\n  this._needRender = true;\r\n};\r\n\r\n/**\r\n * Rotate object by Euler angles\r\n * @param {number} x - rotation angle around X axis in radians\r\n * @param {number} y - rotation angle around Y axis in radians\r\n * @param {number} z - rotation angle around Z axis in radians\r\n */\r\nMiew.prototype.rotate = function (x, y, z) {\r\n  this._objectControls.rotate(new THREE.Quaternion().setFromEuler(new THREE.Euler(x, y, z, 'XYZ')));\r\n  this.dispatchEvent({ type: 'transform' });\r\n  this._needRender = true;\r\n};\r\n\r\n/**\r\n * Scale object by factor\r\n * @param {number} factor - scale multiplier, should greater than zero\r\n */\r\nMiew.prototype.scale = function (factor) {\r\n  if (factor <= 0) {\r\n    throw new RangeError('Scale should be greater than zero');\r\n  }\r\n  this._objectControls.scale(factor);\r\n  this.dispatchEvent({ type: 'transform' });\r\n  this._needRender = true;\r\n};\r\n\r\n/**\r\n * Center view on selection\r\n * @param {empty | subset | string} selector - defines part of molecule which must be centered (\r\n * empty - center on current selection;\r\n * subset - center on picked atom/residue/molecule;\r\n * string - center on atoms correspond to selection string)\r\n */\r\nMiew.prototype.center = function (selector) {\r\n  // no arguments - center on current selection;\r\n  if (selector === undefined) {\r\n    this.setPivotSubset();\r\n    this._needRender = true;\r\n    return;\r\n  }\r\n  // subset with atom or residue - center on picked atom/residue;\r\n  if (selector.obj !== undefined && ('atom' in selector.obj || 'residue' in selector.obj)) { // from event with selection\r\n    if ('atom' in selector.obj) {\r\n      this.setPivotAtom(selector.obj.atom);\r\n    } else {\r\n      this.setPivotResidue(selector.obj.residue);\r\n    }\r\n    this._needRender = true;\r\n    return;\r\n  }\r\n  // string - center on atoms correspond to selection string\r\n  if (selector.obj === undefined && selector !== '') {\r\n    const sel = selectors.parse(selector);\r\n    if (sel.error === undefined) {\r\n      this.setPivotSubset(sel);\r\n      this._needRender = true;\r\n      return;\r\n    }\r\n  }\r\n  // empty subset or incorrect/empty string - center on all molecule;\r\n  this.resetPivot();\r\n  this._needRender = true;\r\n};\r\n\r\n/**\r\n * Build selector that contains all atoms within given distance from group of atoms\r\n * @param {Selector} selector - selector describing source group of atoms\r\n * @param {number} radius - distance\r\n * @returns {Selector} selector describing result group of atoms\r\n */\r\nMiew.prototype.within = function (selector, radius) {\r\n  const visual = this._getComplexVisual();\r\n  if (!visual) {\r\n    return selectors.None();\r\n  }\r\n\r\n  if (selector instanceof String) {\r\n    selector = selectors.parse(selector);\r\n  }\r\n\r\n  const res = visual.within(selector, radius);\r\n  if (res) {\r\n    visual.rebuildSelectionGeometry();\r\n    this._needRender = true;\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Get atom position in 2D canvas coords\r\n * @param {string} fullAtomName - full atom name, like A.38.CG\r\n * @returns {Object} {x, y} or false if atom not found\r\n */\r\nMiew.prototype.projected = function (fullAtomName, complexName) {\r\n  const visual = this._getComplexVisual(complexName);\r\n  if (!visual) {\r\n    return false;\r\n  }\r\n\r\n  const atom = visual.getComplex().getAtomByFullname(fullAtomName);\r\n  if (atom === null) {\r\n    return false;\r\n  }\r\n\r\n  const pos = atom.position.clone();\r\n  // we consider atom position to be affected only by common complex transform\r\n  // ignoring any transformations that may add during editing\r\n  this._gfx.pivot.updateMatrixWorldRecursive();\r\n  this._gfx.camera.updateMatrixWorldRecursive();\r\n  this._gfx.pivot.localToWorld(pos);\r\n  pos.project(this._gfx.camera);\r\n\r\n  return {\r\n    x: (pos.x + 1.0) * 0.5 * this._gfx.width,\r\n    y: (1.0 - pos.y) * 0.5 * this._gfx.height,\r\n  };\r\n};\r\n\r\n/**\r\n * Replace secondary structure with calculated one.\r\n *\r\n * DSSP algorithm implementation is used.\r\n *\r\n * Kabsch W, Sander C. 1983. Dictionary of protein secondary structure: pattern recognition of hydrogen-bonded and\r\n * geometrical features. Biopolymers. 22(12):2577-2637. doi:10.1002/bip.360221211.\r\n *\r\n * @param {string=} complexName - complex name\r\n */\r\nMiew.prototype.dssp = function (complexName) {\r\n  const visual = this._getComplexVisual(complexName);\r\n  if (!visual) {\r\n    return;\r\n  }\r\n  visual.getComplex().dssp();\r\n\r\n  // rebuild dependent representations (cartoon or ss-colored)\r\n  visual._reprList.forEach((rep) => {\r\n    if (rep.mode.id === 'CA' || rep.colorer.id === 'SS') {\r\n      rep.needsRebuild = true;\r\n    }\r\n  });\r\n};\r\n\r\nMiew.prototype.exportCML = function () {\r\n  const self = this;\r\n\r\n  function extractRotation(m) {\r\n    const xAxis = new THREE.Vector3();\r\n    const yAxis = new THREE.Vector3();\r\n    const zAxis = new THREE.Vector3();\r\n    m.extractBasis(xAxis, yAxis, zAxis);\r\n    xAxis.normalize();\r\n    yAxis.normalize();\r\n    zAxis.normalize();\r\n    const retMat = new THREE.Matrix4();\r\n    retMat.identity();\r\n    retMat.makeBasis(xAxis, yAxis, zAxis);\r\n    return retMat;\r\n  }\r\n\r\n  function updateCMLData(complex) {\r\n    const { root } = self._gfx;\r\n    const mat = extractRotation(root.matrixWorld);\r\n    const v4 = new THREE.Vector4(0, 0, 0, 0);\r\n    const vCenter = new THREE.Vector4(0, 0, 0, 0);\r\n    let xml = null;\r\n    let ap = null;\r\n\r\n    // update atoms in cml\r\n    complex.forEachAtom((atom) => {\r\n      if (atom.xmlNodeRef && atom.xmlNodeRef.xmlNode) {\r\n        xml = atom.xmlNodeRef.xmlNode;\r\n        ap = atom.position;\r\n        v4.set(ap.x, ap.y, ap.z, 1.0);\r\n        v4.applyMatrix4(mat);\r\n        xml.setAttribute('x3', v4.x.toString());\r\n        xml.setAttribute('y3', v4.y.toString());\r\n        xml.setAttribute('z3', v4.z.toString());\r\n        xml.removeAttribute('x2');\r\n        xml.removeAttribute('y2');\r\n      }\r\n    });\r\n    // update stereo groups in cml\r\n    complex.forEachSGroup((sGroup) => {\r\n      if (sGroup.xmlNodeRef && sGroup.xmlNodeRef.xmlNode) {\r\n        xml = sGroup.xmlNodeRef.xmlNode;\r\n        ap = sGroup.getPosition();\r\n        v4.set(ap.x, ap.y, ap.z, 1.0);\r\n        const cp = sGroup.getCentralPoint();\r\n        if (cp === null) {\r\n          v4.applyMatrix4(mat);\r\n        } else {\r\n          vCenter.set(cp.x, cp.y, cp.z, 0.0);\r\n          v4.add(vCenter);\r\n          v4.applyMatrix4(mat); // pos in global space\r\n          vCenter.set(cp.x, cp.y, cp.z, 1.0);\r\n          vCenter.applyMatrix4(mat);\r\n          v4.sub(vCenter);\r\n        }\r\n        xml.setAttribute('x', v4.x.toString());\r\n        xml.setAttribute('y', v4.y.toString());\r\n        xml.setAttribute('z', v4.z.toString());\r\n      }\r\n    });\r\n  }\r\n\r\n  const visual = self._getComplexVisual();\r\n  const complex = visual ? visual.getComplex() : null;\r\n  if (complex && complex.originalCML) {\r\n    updateCMLData(complex);\r\n\r\n    // serialize xml structure to string\r\n    const oSerializer = new XMLSerializer();\r\n    return oSerializer.serializeToString(complex.originalCML);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Reproduce the RCSB PDB Molecule of the Month style by David S. Goodsell\r\n *\r\n * @see http://pdb101.rcsb.org/motm/motm-about\r\n */\r\nMiew.prototype.motm = function () {\r\n  settings.set({\r\n    fogColorEnable: true,\r\n    fogColor: 0x000000,\r\n    outline: { on: true, threshold: 0.01 },\r\n    bg: { color: 0xffffff },\r\n  });\r\n\r\n  this._forEachComplexVisual((visual) => {\r\n    const rep = [];\r\n    const complex = visual.getComplex();\r\n    const palette = palettes.get(settings.now.palette);\r\n    for (let i = 0; i < complex.getChainCount(); i++) {\r\n      const curChainName = complex._chains[i]._name;\r\n      const curChainColor = palette.getChainColor(curChainName);\r\n      rep[i] = {\r\n        selector: `chain ${curChainName}`,\r\n        mode: 'VW',\r\n        colorer: ['CB', { color: curChainColor, factor: 0.9 }],\r\n        material: 'FL',\r\n      };\r\n    }\r\n    visual.resetReps(rep);\r\n  });\r\n};\r\n\r\nMiew.prototype.VERSION = (typeof PACKAGE_VERSION !== 'undefined' && PACKAGE_VERSION) || '0.0.0-dev';\r\n\r\n// Uncomment this to get debug trace:\r\n// Miew.prototype.debugTracer = new utils.DebugTracer(Miew.prototype);\r\n\r\n_.assign(Miew, /** @lends Miew */ {\r\n  VERSION: Miew.prototype.VERSION,\r\n\r\n  registeredPlugins: [],\r\n\r\n  // export namespaces // TODO: WIP: refactoring external interface\r\n  chem,\r\n  io,\r\n  modes,\r\n  colorers,\r\n  materials,\r\n  palettes,\r\n  options,\r\n  settings,\r\n  utils,\r\n  gfx: {\r\n    Representation,\r\n  },\r\n\r\n  /**\r\n   * Third-party libraries packaged together with Miew.\r\n   *\r\n   * @property {object} lodash - [Lodash](https://lodash.com/), a modern JavaScript utility library delivering\r\n   *   modularity, performance & extras.\r\n   * @property {object} three - [three.js](https://threejs.org/), JavaScript 3D library.\r\n   *\r\n   * @example\r\n   * var _ = Miew.thirdParty.lodash;\r\n   * var opts = _.merge({ ... }, Miew.options.fromURL(window.location.search));\r\n   * var miew = new Miew(opts);\r\n   */\r\n  thirdParty: {\r\n    lodash: _,\r\n    three: THREE,\r\n  },\r\n});\r\n\r\nexport default Miew;\r\n","import palettes from '../gfx/palettes';\r\nimport settings from '../settings';\r\n\r\nconst modeIdDesc = {\r\n  $help: [\r\n    'Rendering mode shortcut',\r\n    '    BS - balls and sticks mode',\r\n    '    LN - lines mode',\r\n    '    LC - licorice mode',\r\n    '    VW - van der waals mode',\r\n    '    TR - trace mode',\r\n    '    TU - tube mode',\r\n    '    CA - cartoon mode',\r\n    '    SA - isosurface mode',\r\n    '    QS - quick surface mode',\r\n    '    SE - solvent excluded mode',\r\n    '    TX - text mode',\r\n  ],\r\n  BS: {\r\n    $help: [\r\n      '   Balls and sticks',\r\n      '      aromrad = <number> #aromatic radius',\r\n      '      atom = <number>    #atom radius',\r\n      '      bond = <number>    #bond radius',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      space = <number>   #space value\\n',\r\n    ],\r\n  },\r\n  CA: {\r\n    $help: [\r\n      '   Cartoon',\r\n      '      arrow = <number>   #arrow size',\r\n      '      depth = <number>   #depth of surface',\r\n      '      heightSegmentsRatio = <number>',\r\n      '      radius = <number>  #tube radius',\r\n      '      tension = <number> #',\r\n      '      width = <number>  #secondary width\\n',\r\n    ],\r\n  },\r\n  LN: {\r\n    $help: [\r\n      '   Lines',\r\n      '      atom = <number>    #atom radius',\r\n      '      chunkarom = <number>',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      offsarom = <number>\\n',\r\n    ],\r\n  },\r\n  LC: {\r\n    $help: [\r\n      '   Licorice',\r\n      '      aromrad = <number> #aromatic radius',\r\n      '      bond = <number>    #bond radius',\r\n      '      multibond = <bool> #use multibond',\r\n      '      showarom = <bool>  #show aromatic',\r\n      '      space = <number>   #space value\\n',\r\n    ],\r\n  },\r\n  VW: {\r\n    $help: [\r\n      '   Van der Waals',\r\n      '      nothing\\n',\r\n    ],\r\n  },\r\n  TR: {\r\n    $help: [\r\n      '   Trace',\r\n      '      radius = <number>  #tube radius\\n',\r\n    ],\r\n  },\r\n  TU: {\r\n    $help: [\r\n      '   Tube',\r\n      '      heightSegmentsRatio = <number>',\r\n      '      radius = <number>  #tube radius',\r\n      '      tension = <number> \\n',\r\n    ],\r\n  },\r\n  SA: {\r\n    $help: [\r\n      '   Surface',\r\n      '      zClip = <bool> #clip z plane\\n',\r\n    ],\r\n  },\r\n  QS: {\r\n    $help: [\r\n      '   Quick surface',\r\n      '      isoValue = <number>',\r\n      '      scale = <number>',\r\n      '      wireframe = <bool>',\r\n      '      zClip = <bool> #clip z plane\\n',\r\n    ],\r\n  },\r\n  SE: {\r\n    $help: [\r\n      '   Solvent excluded surface',\r\n      '      zClip = <bool> #clip z plane\\n',\r\n    ],\r\n  },\r\n  TX: {\r\n    $help: [\r\n      '   Text mode',\r\n      '      template = <format string> string that can include \"{{ id }}\"',\r\n      '          it will be replaced by value, id can be one of next:',\r\n      '          serial, name, type, sequence, residue, chain, hetatm, water\\n',\r\n      '      horizontalAlign = <string> {\"left\", \"right\", \"center\"}',\r\n      '      verticalAlign = <string> {\"top\", \"bottom\", \"middle\"}',\r\n      '      dx = <number> #offset along x',\r\n      '      dy = <number> #offset along y',\r\n      '      dz = <number> #offset along z',\r\n      '      fg = <string> #text color modificator',\r\n      '           could be keyword, named color or hex',\r\n      '      fg = <string> #back color modificator',\r\n      '           could be keyword, named color or hex',\r\n      '      showBg = <bool> #if set show background',\r\n      '           plate under text',\r\n    ],\r\n  },\r\n};\r\n\r\nconst colorDesc = {\r\n  $help: [\r\n    'Coloring mode shortcut',\r\n    '    EL - color by element',\r\n    '    CH - color by chain',\r\n    '    SQ - color by sequence',\r\n    '    RT - color by residue type',\r\n    '    SS - color by secondary structure',\r\n    '    UN - uniform',\r\n  ],\r\n  UN: {\r\n    $help: [\r\n      'Parameters of coloring modes customization',\r\n      '   Uniform',\r\n      '      color = <number|color> #RGB->HEX->dec\\n',\r\n    ],\r\n    color: {\r\n      $help: Object.keys(palettes.get(settings.now.palette).namedColors).sort().join('\\n'),\r\n    },\r\n  },\r\n};\r\n\r\nconst materialDesc = {\r\n  $help: [\r\n    'Material shortcut',\r\n    '    DF - diffuse',\r\n    '    TR - transparent',\r\n    '    SF - soft plastic',\r\n    '    PL - glossy plastic',\r\n    '    ME - metal',\r\n    '    GL - glass',\r\n  ],\r\n};\r\n\r\nconst addRepDesc = {\r\n  $help: [\r\n    'Short (packed) representation description as a set of variables',\r\n    '    s=<EXPRESSION>',\r\n    '        selector property',\r\n    '    m=<MODE_ID>[!<PARAMETER>:<VALUE>[,...]]',\r\n    '        render mode property',\r\n    '    c=<COLORER_ID>[!<PARAMETER>:<VALUE>[,...]]',\r\n    '        color mode property',\r\n    '    mt=<MATERIAL_ID>',\r\n    '        material property',\r\n  ],\r\n  s: {\r\n    $help: 'Selection expression string as it is in menu->representations->selection',\r\n  },\r\n  m: modeIdDesc,\r\n  c: colorDesc,\r\n  mt: materialDesc,\r\n};\r\n\r\nconst setGetParameterDesc = {\r\n  $help: [\r\n    'Parameters of rendering modes customization: modes',\r\n    'Parameters of colorer customization: colorers',\r\n    'Autobuild: autobuild = (<number>|<bool>)',\r\n  ],\r\n  modes: modeIdDesc,\r\n  colorers: colorDesc,\r\n};\r\n\r\nconst help = {\r\n  $help: [\r\n    'help (<cmd name>| <path to property>)',\r\n    'You can get detailed information about command options',\r\n    '   using \"help cmd.opt.opt.[...]\"\\n',\r\n    '   you can use one line comments',\r\n    '   everything started from (#|//) will be skipped',\r\n    '   Example: >build //some comment\\n',\r\n    'List of available commands:',\r\n  ],\r\n  reset: {\r\n    $help: [\r\n      'Reload current object, delete all representations',\r\n      '    Nothing will work until load new object',\r\n    ],\r\n  },\r\n  load: {\r\n    $help: [\r\n      'load (<PDBID>|<URL>|-f [<*.NC FILE URL STRING>])',\r\n      '    Load new pdb object from selected source',\r\n    ],\r\n    PDBID: {\r\n      $help: 'pdb id in remote molecule database',\r\n    },\r\n    URL: {\r\n      $help: 'url to source file',\r\n    },\r\n    f: {\r\n      $help: [\r\n        'open file system dialog to fetch local file',\r\n        'optionally you can determine trajectory file',\r\n        'via URL for *.top model',\r\n      ],\r\n    },\r\n  },\r\n  clear: {\r\n    $help: 'No args. Clear terminal',\r\n  },\r\n  add: {\r\n    $help: [\r\n      'add [<REP_NAME>] [<DESCRIPTION>]',\r\n      '    Add new item to representation set with',\r\n      '    default or <DESCRIPTION> params',\r\n    ],\r\n    REP_NAME: {\r\n      $help: 'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\r\n    },\r\n    DESCRIPTION: addRepDesc,\r\n  },\r\n  rep: {\r\n    $help: [\r\n      'rep [<REP_NAME>|<REP_INDEX>] [<DESCRIPTION>]',\r\n      '    set current representation by name or index',\r\n      '    edit current representation by <DESCRIPTION>',\r\n    ],\r\n    REP_NAME: {\r\n      $help: [\r\n        'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\r\n        'Must be declared before',\r\n      ],\r\n    },\r\n    REP_INDEX: {\r\n      $help: 'Index of available representation',\r\n    },\r\n    DESCRIPTION: addRepDesc,\r\n  },\r\n  remove: {\r\n    $help: [\r\n      'remove (<REP_NAME>|<REP_INDEX>)',\r\n      'Remove representation by name or index',\r\n    ],\r\n    REP_NAME: {\r\n      $help: [\r\n        'Identifier string [_,a-z,A-Z,0-9] can not start from digit',\r\n        'Must be declared before',\r\n      ],\r\n    },\r\n    REP_INDEX: {\r\n      $help: 'Index of available representation',\r\n    },\r\n  },\r\n  selector: {\r\n    $help: [\r\n      'selector <EXPRESSION>',\r\n      '   set selector from EXPRESSION to current representation',\r\n    ],\r\n    EXPRESSION: {\r\n      $help: 'Selection expression string as it is in menu->representations->selection',\r\n    },\r\n  },\r\n  mode: {\r\n    $help: [\r\n      'mode <MODE_ID> [<PARAMETER>=<VALUE>...]',\r\n      '   set rendering mode and apply parameters to current representation',\r\n    ],\r\n    MODE_ID: modeIdDesc,\r\n  },\r\n  color: {\r\n    $help: [\r\n      'color <COLORER_ID> [<PARAMETER>=<VALUE>...]',\r\n      '   set colorer and apply parameters to current representation',\r\n    ],\r\n    COLORER_ID: colorDesc,\r\n  },\r\n  material: {\r\n    $help: [\r\n      'material <MATERIAL_ID>',\r\n      '   set material to current representation',\r\n    ],\r\n    MATERIAL_ID: materialDesc,\r\n  },\r\n  build: {\r\n    $help: 'build help str',\r\n    add: {\r\n      $help: 'build.add',\r\n      new: {\r\n        $help: [\r\n          'add.new',\r\n          'add.new new line 1',\r\n          'add.new new line 2',\r\n          'add.new new line 3',\r\n        ],\r\n      },\r\n    },\r\n    del: {\r\n      $help: 'build.del',\r\n    },\r\n  },\r\n  list: {\r\n    $help: [\r\n      'list [-e|-s|<REP_NAME>|<REP_INDEX>]',\r\n      'Print representations if no args print list of representations',\r\n      '    -e expand list and show all representations',\r\n      '    -s show all user-registered selectors',\r\n      '    <REP_NAME>|<REP_INDEX> show only current representation',\r\n    ],\r\n  },\r\n  hide: {\r\n    $help: [\r\n      'hide (<REP_NAME>|<REP_INDEX>)',\r\n      'Hide representation referenced in args',\r\n    ],\r\n  },\r\n  show: {\r\n    $help: [\r\n      'show (<REP_NAME>|<REP_INDEX>)',\r\n      'Show representation referenced in args',\r\n    ],\r\n  },\r\n  get: {\r\n    $help: [\r\n      'get <PARAMETER>',\r\n      'Print <PARAMETER> value',\r\n      '    <PARAMETER> - path to option use get.PARAMETER to get more info',\r\n    ],\r\n    PARAMETER: setGetParameterDesc,\r\n  },\r\n  set: {\r\n    $help: [\r\n      'set <PARAMETER> <VALUE>',\r\n      'Set <PARAMETER> with <VALUE>',\r\n      '    <PARAMETER> - path to option use set.PARAMETER to get more info',\r\n    ],\r\n    PARAMETER: setGetParameterDesc,\r\n  },\r\n  set_save: {\r\n    $help: [\r\n      'set_save',\r\n      'Save current settings to cookie',\r\n    ],\r\n  },\r\n  set_restore: {\r\n    $help: [\r\n      'set_restore',\r\n      'Load and apply settings from cookie',\r\n    ],\r\n  },\r\n  set_reset: {\r\n    $help: [\r\n      'set_reset',\r\n      'Reset current settings to the defaults',\r\n    ],\r\n  },\r\n  preset: {\r\n    $help: [\r\n      'preset [<PRESET>]',\r\n      'Reset current representation or set preset to <PRESET>',\r\n    ],\r\n    PRESET: {\r\n      $help: [\r\n        'default',\r\n        'wire',\r\n        'small',\r\n        'macro',\r\n      ],\r\n    },\r\n  },\r\n  unit: {\r\n    $help: [\r\n      'unit [<unit_id>]',\r\n      'Change current biological structure view. Zero <unit_id> value means asymmetric unit,',\r\n      'positive values set an assembly with corresponding number.',\r\n      'Being called with no parameters command prints current unit information.',\r\n    ],\r\n  },\r\n  view: {\r\n    $help: [\r\n      'view [<ENCODED_VIEW>]',\r\n      'Get current encoded view or set if ENCODED_VIEW placed as argument',\r\n    ],\r\n    ENCODED_VIEW: {\r\n      $help: [\r\n        'encoded view matrix string (binary code)',\r\n      ],\r\n    },\r\n  },\r\n  rotate: {\r\n    $help: [\r\n      'rotate (x|y|z) [<DEGREES>] [(x|y|z) [<DEGREES>]]...',\r\n      'Rotate scene',\r\n    ],\r\n  },\r\n  scale: {\r\n    $help: [\r\n      'scale <SCALE>',\r\n      'Scale scene',\r\n    ],\r\n  },\r\n  select: {\r\n    $help: [\r\n      'select <SELECTOR_STRING> [as <SELECTOR_NAME>]',\r\n      'Select atoms using selector defined in SELECTOR_STRING',\r\n      '    and if SELECTOR_NAME is defined register it in viewer',\r\n      '    you can use it later as a complex selector',\r\n    ],\r\n  },\r\n  within: {\r\n    $help: [\r\n      'within <DISTANCE> of <SELECTOR_STRING> as <SELECTOR_NAME>',\r\n      'Build within named selector',\r\n      '    DISTANCE        <number>',\r\n      '    SELECTOR_STRING <string(selection language)>',\r\n      '    SELECTOR_NAME   <identifier>',\r\n    ],\r\n  },\r\n  url: {\r\n    $help: [\r\n      'url [-s] [-v]',\r\n      'Report URL encoded scene',\r\n      '    if -s set that include settings in the URL',\r\n      '    if -v set that include view in the URL',\r\n    ],\r\n  },\r\n  screenshot: {\r\n    $help: [\r\n      'screenshot [<WIDTH> [<HEIGHT>]]',\r\n      'Make a screenshot of the scene',\r\n      '    WIDTH  <number> in pixels',\r\n      '    HEIGHT <number> in pixels, equal to WIDTH by default',\r\n    ],\r\n  },\r\n  line: {\r\n    $help: [\r\n      'line <first_atom_path> <second_atom_path> [<PARAMETER>=<VALUE>]',\r\n      'Draw dashed line between two specified atoms',\r\n    ],\r\n  },\r\n  removeobj: {\r\n    $help: [\r\n      'removeobj <id>',\r\n      'Remove scene object by its index. Indices could be obtained by <listobj> command',\r\n    ],\r\n  },\r\n  listobj: {\r\n    $help: [\r\n      'listobj',\r\n      'Display the list of all existing scene objects',\r\n    ],\r\n  },\r\n};\r\n\r\nexport default help;\r\n","import _ from 'lodash';\r\nimport Miew from './Miew';\r\nimport { parser as parsercli } from './utils/MiewCLIParser';\r\nimport clihelp from './utils/MiewCLIHelp';\r\nimport logger from './utils/logger';\r\nimport utils from './utils';\r\n\r\nconst {\r\n  chem: { selectors },\r\n  modes,\r\n  colorers,\r\n  materials,\r\n  palettes,\r\n  options,\r\n  settings,\r\n} = Miew;\r\n\r\nfunction None() {\r\n}\r\n\r\nconst NULL = (function () {\r\n  const obj = new None();\r\n  return function () {\r\n    return obj;\r\n  };\r\n}());\r\n\r\nclass RepresentationMap {\r\n  constructor() {\r\n    this.representationMap = {};\r\n    this.representationID = {};\r\n  }\r\n\r\n  get(strId) {\r\n    return this.representationMap[strId] || this.representationID[strId] || '<no name>';\r\n  }\r\n\r\n  add(strId, index) {\r\n    if (strId === -1) {\r\n      return 'Can not create representation: there is no data';\r\n    }\r\n\r\n    if (index !== undefined) {\r\n      if (!this.representationMap.hasOwnProperty(strId)) {\r\n        this.representationMap[strId.toString()] = index;\r\n        this.representationID[index] = strId.toString();\r\n      } else {\r\n        return 'This name has already existed, registered without name';\r\n      }\r\n    }\r\n    return `Representation ${strId} successfully added`;\r\n  }\r\n\r\n  remove(index) {\r\n    if (index && this.representationID.hasOwnProperty(index)) {\r\n      delete this.representationMap[this.representationID[index]];\r\n      delete this.representationID[index];\r\n    }\r\n\r\n    const sortedKeys = Object.keys(this.representationID).sort();\r\n    for (const i in sortedKeys) {\r\n      if (sortedKeys.hasOwnProperty(i)) {\r\n        const id = sortedKeys[i];\r\n        if (id > index) {\r\n          this.representationID[id - 1] = this.representationID[id];\r\n          this.representationMap[this.representationID[id]] -= 1;\r\n          delete this.representationID[id];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.representationMap = {};\r\n    this.representationID = {};\r\n  }\r\n}\r\n\r\nconst representationsStorage = new RepresentationMap();\r\n\r\nfunction keyRemap(key) {\r\n  const keys = {\r\n    s: 'selector',\r\n    m: 'mode',\r\n    c: 'colorer',\r\n    mt: 'material',\r\n    mode: 'modes',\r\n    color: 'colorers',\r\n    colorer: 'colorers',\r\n    select: 'selector',\r\n    material: 'materials',\r\n    selector: 'selector',\r\n  };\r\n  const ans = keys[key];\r\n  return ans === undefined ? key : ans;\r\n}\r\n\r\nclass CLIUtils {\r\n  list(miew, repMap, key) {\r\n    let ret = '';\r\n    if (miew && repMap !== undefined) {\r\n      if (key === undefined || key === '-e') {\r\n        const count = miew.repCount();\r\n\r\n        for (let i = 0; i < count; i++) {\r\n          ret += this.listRep(miew, repMap, i, key);\r\n        }\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  listRep(miew, repMap, repIndex, key) {\r\n    let ret = '';\r\n    const rep = miew.repGet(repIndex);\r\n    if (!rep) {\r\n      logger.warn(`Rep ${repIndex} does not exist!`);\r\n      return ret;\r\n    }\r\n    const index = repIndex;\r\n    const repName = repMap.get(index);\r\n\r\n    const { mode, colorer } = rep;\r\n    const selectionStr = rep.selectorString;\r\n    const material = rep.materialPreset;\r\n\r\n    ret += `#${index} : ${mode.name}${repName === '<no name>' ? '' : `, ${repName}`}\\n`;\r\n\r\n    if (key !== undefined) {\r\n      ret += `    selection : \"${selectionStr}\"\\n`;\r\n      ret += `    mode      : (${mode.id}), ${mode.name}\\n`;\r\n      ret += `    colorer   : (${colorer.id}), ${colorer.name}\\n`;\r\n      ret += `    material  : (${material.id}), ${material.name}\\n`;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  listSelector(miew, context) {\r\n    let ret = '';\r\n\r\n    for (const k in context) {\r\n      if (context.hasOwnProperty(k)) {\r\n        ret += `${k} : \"${context[k]}\"\\n`;\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  listObjs(miew) {\r\n    const objs = miew._objects;\r\n\r\n    if (!objs || !Array.isArray(objs) || objs.length === 0) {\r\n      return 'There are no objects on the scene';\r\n    }\r\n\r\n    const strList = [];\r\n    for (let i = 0, n = objs.length; i < n; ++i) {\r\n      strList[i] = `${i}: ${objs[i].toString()}`;\r\n    }\r\n\r\n    return strList.join('\\n');\r\n  }\r\n\r\n  joinHelpStr(helpData) {\r\n    if (helpData instanceof Array) {\r\n      return helpData.join('\\n');\r\n    }\r\n    return helpData;\r\n  }\r\n\r\n  help(path) {\r\n    if (_.isUndefined(path)) {\r\n      return `${this.joinHelpStr(clihelp.$help)}\\n${_.slice(_.sortBy(_.keys(clihelp)), 1).join(', ')}\\n`;\r\n    }\r\n\r\n    const helpItem = _.get(clihelp, path);\r\n    return _.isUndefined(helpItem) ? this.help() : `${this.joinHelpStr(helpItem.$help)}\\n`;\r\n  }\r\n\r\n  load(miew, arg) {\r\n    if (miew === undefined || arg === undefined || arg === '-f') {\r\n      return;\r\n    }\r\n    miew.awaitWhileCMDisInProcess();\r\n    const finish = () => miew.finishAwaitingCMDInProcess();\r\n    miew.load(arg).then(finish, finish);\r\n  }\r\n\r\n  checkArg(key, arg, modificate) {\r\n    if (key !== undefined && arg !== undefined) {\r\n      if (keyRemap(key) === 'selector') {\r\n        const res = selectors.parse(arg);\r\n\r\n        if (res.error !== undefined) {\r\n          const selExc = { message: res.error };\r\n          throw selExc;\r\n        }\r\n\r\n        if (modificate !== undefined && modificate) {\r\n          return res.selector;\r\n        }\r\n        return arg;\r\n      }\r\n\r\n      const modificators = {\r\n        colorers,\r\n        modes,\r\n        materials,\r\n      };\r\n\r\n      let modificator = key;\r\n      let temp;\r\n      while (modificator !== temp) {\r\n        temp = modificator;\r\n        modificator = keyRemap(temp);\r\n      }\r\n\r\n      if (modificators[modificator].get(arg) === undefined) {\r\n        const exc = { message: `${arg} is not existed in ${modificator}` };\r\n        throw exc;\r\n      }\r\n      return arg;\r\n    }\r\n    return NULL;\r\n  }\r\n\r\n  propagateProp(path, arg) {\r\n    if (path !== undefined) {\r\n      let argExc = {};\r\n      const adapter = options.adapters[typeof _.get(settings.defaults, path)];\r\n      if (adapter === undefined) {\r\n        const pathExc = { message: `${path} is not existed` };\r\n        throw pathExc;\r\n      }\r\n\r\n      if ((path.endsWith('.color') || path.endsWith('.baseColor')\r\n        || path.endsWith('.EL.carbon')) && typeof arg !== 'number') {\r\n        arg = palettes.get(settings.now.palette).getNamedColor(arg);\r\n      }\r\n\r\n      if (path.endsWith('.fg') || path.endsWith('.bg')) {\r\n        if (typeof arg !== 'number') {\r\n          const val = palettes.get(settings.now.palette).getNamedColor(arg, true);\r\n          if (val !== undefined) {\r\n            arg = `0x${val.toString(16)}`;\r\n          }\r\n        } else {\r\n          arg = `0x${arg.toString(16)}`;\r\n        }\r\n      }\r\n\r\n      if (path.endsWith('.template')) {\r\n        arg = arg.replace(/\\\\n/g, '\\n');// NOSONAR\r\n      }\r\n\r\n      if (arg !== undefined && adapter(arg) !== arg && adapter(arg) !== (arg > 0)) {\r\n        argExc = { message: `${path} must be a \"${typeof _.get(settings.defaults, path)}\"` };\r\n        throw argExc;\r\n      }\r\n    }\r\n    return arg;\r\n  }\r\n\r\n  unquoteString(value) {\r\n    return utils.unquoteString(value);\r\n  }\r\n}\r\n// repIndexOrRepMap could be RepresentationMap or index\r\n\r\nconst utilFunctions = new CLIUtils();\r\n\r\nfunction CreateObjectPair(a, b) {\r\n  const obj = {};\r\n  obj[a] = b;\r\n  return obj;\r\n}\r\n\r\nfunction ArgList(arg) {\r\n  if (arg instanceof this.constructor) {\r\n    return arg;\r\n  }\r\n  if (arg instanceof Array) {\r\n    this._values = arg.slice(0);\r\n  } else if (arg) {\r\n    this._values = [arg];\r\n  } else {\r\n    this._values = [];\r\n  }\r\n}\r\n\r\nArgList.prototype.append = function (value) {\r\n  const values = this._values;\r\n  values[values.length] = value;\r\n  return this;\r\n};\r\n\r\nArgList.prototype.remove = function (value) {\r\n  const values = this._values;\r\n  const index = values.indexOf(value);\r\n  if (index >= 0) {\r\n    values.splice(index, 1);\r\n  }\r\n  return this;\r\n};\r\n\r\nArgList.prototype.toJSO = function (cliUtils, cmd, arg) {\r\n  const res = {};\r\n\r\n  const list = this._values;\r\n  for (let i = 0, n = list.length; i < n; ++i) {\r\n    _.set(res, list[i].id, cliUtils.propagateProp(`${keyRemap(cmd)}.${arg}.${list[i].id}`, list[i].val));\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nfunction Arg(_id, _val) {\r\n  this.id = _id;\r\n  this.val = _val;\r\n}\r\n\r\nconst cliutils = Object.create({});\r\n\r\ncliutils.Arg = Arg;\r\ncliutils.ArgList = ArgList;\r\n\r\ncliutils.miew = null;\r\ncliutils.echo = null;\r\ncliutils.representations = representationsStorage;\r\ncliutils.utils = utilFunctions;\r\n\r\ncliutils._ = _;\r\ncliutils.CreateObjectPair = CreateObjectPair;\r\ncliutils.keyRemap = keyRemap;\r\ncliutils.Context = selectors.Context;\r\ncliutils.ClearContext = selectors.ClearContext;\r\n\r\ncliutils.NULL = NULL;\r\n\r\ncliutils.notimplemented = function () {\r\n  return this.NULL;\r\n};\r\n\r\nMiew.prototype.script = function (script, _printCallback, _errorCallback) {\r\n  parsercli.yy.miew = this;\r\n  parsercli.yy.echo = _printCallback;\r\n  parsercli.yy.error = _errorCallback;\r\n  if (this.cmdQueue === undefined) {\r\n    this.cmdQueue = [];\r\n  }\r\n\r\n  if (this.commandInAction === undefined) {\r\n    this.commandInAction = false;\r\n  }\r\n\r\n  this.cmdQueue = this.cmdQueue.concat(script.split('\\n'));\r\n};\r\n\r\nMiew.prototype.awaitWhileCMDisInProcess = function () {\r\n  this.commandInAction = true;\r\n};\r\n\r\nMiew.prototype.finishAwaitingCMDInProcess = function () {\r\n  this.commandInAction = false;\r\n};\r\n\r\nMiew.prototype.isScriptingCommandAvailable = function () {\r\n  return this.commandInAction !== undefined\r\n         && !this.commandInAction\r\n         && this.cmdQueue !== undefined\r\n         && this.cmdQueue.length > 0;\r\n};\r\n\r\nMiew.prototype.callNextCmd = function () {\r\n  if (this.isScriptingCommandAvailable()) {\r\n    const cmd = this.cmdQueue.shift();\r\n\r\n    const res = {};\r\n    res.success = false;\r\n    try {\r\n      parsercli.parse(cmd);\r\n      res.success = true;\r\n    } catch (e) {\r\n      res.error = e.message;\r\n      parsercli.yy.error(res.error);\r\n      this.finishAwaitingCMDInProcess();\r\n    }\r\n    return res;\r\n  }\r\n  return '';\r\n};\r\n\r\nparsercli.yy = cliutils;\r\n// workaround for incorrect JISON parser generator for AMD module\r\nparsercli.yy.parseError = parsercli.parseError;\r\n","import Miew from './Miew';\r\nimport './Miew-cli';\r\n\r\nexport default Miew;\r\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__535__","__WEBPACK_EXTERNAL_MODULE__698__","parser","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","miew","reset","ClearContext","resetReps","rebuild","rebuildAll","echo","utils","help","toString","motm","propagateProp","get","set","saveSettings","restoreSettings","resetSettings","applyPreset","repRemove","representations","remove","repHide","listRep","list","listSelector","Context","select","checkArg","toLowerCase","rep","repCurrent","selector","within","Number","material","toUpperCase","view","changeUnit","dssp","scale","i","n","rotate","Math","PI","translate","center","addObject","type","params","opts","toJSO","listObjs","removeObject","getURL","settings","screenshotSave","load","clear","add","repAdd","mode","Array","colorer","_","assign","CreateObjectPair","key","val","Object","create","keyRemap","concat","ArgList","append","Arg","parseInt","JSON","parse","String","table","defaultActions","parseError","str","hash","recoverable","error","Error","input","self","stack","tstack","vstack","lstack","recovering","args","slice","call","arguments","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","symbol","preErrorSymbol","state","action","r","p","len","newState","expected","token","yyval","pop","lex","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","apply","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","flex","begin","condition","popState","conditions","topState","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","unquoteString","Parser","keyword","GetSelector","RangeList","Range","ValueList","AbstractInterpolator","CubicInterpolator","Enum","LinearInterpolator","NearestInterpolator","SincFilterInterpolator","Smooth","clipClamp","clipMirror","clipPeriodic","defaultConfig","getColumn","getType","isValidNumber","makeLanczosWindow","makeScaledFunction","makeSincKernel","normalizeScaleTo","shallowCopy","sin","sinc","validateNumber","validateVector","__hasProp","__extends","child","parent","ctor","constructor","__super__","method","METHOD_NEAREST","METHOD_LINEAR","METHOD_CUBIC","METHOD_LANCZOS","METHOD_SINC","CLIP_CLAMP","CLIP_ZERO","CLIP_PERIODIC","CLIP_MIRROR","CUBIC_TENSION_DEFAULT","CUBIC_TENSION_CATMULL_ROM","cubicTension","clip","scaleTo","sincFilterSize","sincWindow","max","min","period","array","config","clipHelper","clamp","clipHelperClamp","zero","clipHelperZero","periodic","clipHelperPeriodic","mirror","clipHelperMirror","getClippedInput","interpolate","t","_super","round","floor","tangentFactor","getTangent","m","t2","t3","x","a","window","kernel","sum","_ref","_ref2","arr","row","_i","_len","_results","f","baseScale","scaleRange","scaleFactor","translation","isNaN","isFinite","dimension","s","invalidErr","obj","copy","baseDomainEnd","interpolator","interpolatorClass","interpolators","properties","smoothFunc","lanczosFilterSize","nearest","linear","cubic","lanczos","count","_j","_len2","deepValidation","_k","_len3","domain","sort","e","byteLength","charCodeAt","setUint8","u","setUint16","setUint32","Uint8Array","buffer","setFloat64","setInt8","setInt16","setInt32","isArray","d","keys","ArrayBuffer","DataView","byteOffset","Int8Array","Int32Array","Float32Array","Int16Array","g","L","h","setFloat32","getFloat32","y","U","b","I","w","C","ceil","A","M","F","S","E","N","O","T","getInt32","subarray","j","q","D","P","z","B","V","G","R","rr","forEach","bondAtomList","bondOrderList","xCoordList","yCoordList","zCoordList","bFactorList","atomIdList","altLocList","occupancyList","groupIdList","groupTypeList","secStructList","insCodeList","sequenceIndexList","chainIdList","chainNameList","H","fromCharCode","getInt8","getUint8","getUint16","getUint32","getFloat64","getInt16","W","X","ignoreFields","nr","indexOf","J","K","firstModelOnly","onModel","onChain","onGroup","onAtom","onBond","chainsPerModel","chainCount","modelIndex","groupsPerChain","groupCount","chainIndex","chainId","chainName","groupList","atomNameList","atomCount","groupIndex","groupId","groupType","groupName","singleLetterCode","chemCompType","secStruct","insCode","sequenceIndex","atomIndex","atomId","element","elementList","atomName","formalCharge","formalChargeList","xCoord","yCoord","zCoord","bFactor","altLoc","occupancy","atomIndex1","atomIndex2","bondOrder","Q","Y","Z","response","XMLHttpRequest","addEventListener","responseType","open","send","or","ar","tr","er","ir","encode","decode","traverse","fetch","fetchReduced","version","fetchUrl","fetchReducedUrl","encodeMsgpack","encodeMmtf","decodeMsgpack","decodeMmtf","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","defineProperty","enumerable","prop","__assign","defaults","width","radius","corners","color","fadeColor","animation","direction","speed","zIndex","className","top","left","shadow","position","Spinner","spin","target","stop","el","document","createElement","setAttribute","style","transform","insertBefore","firstChild","borderRadius","shadows","boxShadow","regex","_a","xUnits","yUnits","prefix","end","parseBoxShadow","degrees","backgroundLine","height","background","getColor","transformOrigin","delay","normalizeShadow","appendChild","drawLines","parentNode","removeChild","idx","normalized","shadows_1","xy","convertOffset","radians","cos","Timer","startTime","oldTime","elapsedTime","running","start","now","getElapsedTime","update","delta","newTime","performance","bind","Date","tag","id","css","cssText","domElement","_text","_startTime","_prevTime","_deltas","_index","_total","_count","time","ms","fps","textContent","toPrecision","show","on","display","isUndefOrEqual","param","value","EventDispatcher","_handlers","callback","context","handlers","par","removeEventListener","handler","ev","values","dispatchEvent","event","priorities","debug","info","report","warn","Logger","console","_priority","verify","number","instantiate","level","levels","message","priority","_message","browserType","DEFAULT","SAFARI","decodeQueryComponent","decodeURIComponent","getUrlParameters","url","query","location","search","substring","result","exec","DebugTracer","namespace","enabled","enable","indent","methods","wrap","method_","name_","spaces","logger","_key","name","Function","OutOfMemoryError","super","bytesToBase64","bytes","binary","btoa","bytesFromBase64","atob","isAlmostPlainObject","proto","getFileExtension","fileName","lastIndexOf","Infinity","dataUrlToBlob","parts","partsCount","Blob","unquotedStringRE","enquoteHelper","encodeQueryComponent","excludeExp","encodeURIComponent","code","getUrlParametersAsDict","resolveURL","URL","href","anchor","generateRegExp","symbolStr","symbolList","listStr","RegExp","attrs","content","createTextNode","HTMLElement","deriveClass","cls","base","members","statics","deriveDeep","needZeroOwnProperties","res","hexColor","allocateTyped","TypedArrayName","size","RangeError","arrayFromBase64","TypedArrayClass","arrayToBase64","compareOptionsWithDefaults","defOpts","optsStr","objectsDiff","src","dst","diff","srcValue","dstValue","deepDiff","forInRecursive","object","iterateThrough","newPref","enquoteString","SyntaxError","getBrowser","navigator","vendor","userAgent","shotOpen","write","shotDownload","dataUrl","filename","msSaveBlob","link","download","innerHTML","createObjectURL","body","click","copySubArrays","indices","itemSize","shallowCloneNode","node","newNode","cloneNode","worldPos","correctSelectorIdentifier","test","splitFileName","ext","data","blobData","concatTypedArraysUnsafe","first","second","mergeTypedArraysUnsafe","reduce","acc","cur","JobHandle","_shouldCancel","cancel","shouldCancel","notify","slaveEvent","modes","BS","atom","bond","space","multibond","aromrad","showarom","polyComplexity","poor","low","medium","high","ultra","VW","LN","offsarom","chunkarom","lineWidth","LC","SA","zClip","probeRadius","subset","wireframe","SE","QS","isoValue","gaussLim","gridSpacing","CS","probePositions","TR","TU","heightSegmentsRatio","tension","CA","depth","ss","helix","arrow","strand","TX","template","horizontalAlign","verticalAlign","dx","dy","dz","fg","bg","showBg","VD","kSigma","kSigmaMed","kSigmaMax","frame","isoMode","colorers","EL","carbon","UN","CO","baseColor","CB","factor","SQ","gradient","TM","OC","HY","MO","antialias","camFov","camNear","camFar","camDistance","radiusToFit","fogNearFactor","fogFarFactor","fogAlpha","fogColor","fogColorEnable","palette","resolution","autoResolution","autoPreset","preset","presets","default","empty","wire","small","macro","objects","dashSize","gapSize","transparent","draft","clipPlane","clipPlaneFactor","clipPlaneSpeed","plugins","axes","fog","zSprites","isoSurfaceFakeOpacity","suspendRender","nowater","autobuild","fxaa","outline","threshold","thickness","ao","autoRotation","maxfps","fbxprec","autoRotationAxisFixed","zooming","picking","pick","editing","aromatic","singleUnit","stereo","interpolateViews","transparency","translationSpeed","example","good","ssaoKernelRadius","ssaoFactor","stereoBarrel","use","multiFile","Settings","old","_changed","path","_notifyChange","_notifyChanges","defaultValue","checkpoint","deepValue","deepPath","changed","applyDiffs","diffs","VERSION","getDiffs","versioned","setPluginOpts","plugin","repIndex","asBoolean","adapters","string","boolean","cOptsSep","cL2Ass","cLSep","cCommonIgnoreSymbols","cL1ExclExpr","encodeQueryComponentL1","cL2ExclExpr","encodeQueryComponentL2","ensureRepList","reps","ensureRepAssign","extractArgs","defaultsDict","bang","inputVal","sep","parseParams","arg","pair","adapter","actions","unit","menu","_objects","newOpts","newObj","mt","materials","dup","_fromArray","entries","entry","_processOptsForURL","_processArgsForURL","_processObjForURL","objOpts","_processOptsForScript","_processArgsForScript","_processObjForScript","map","_processRepsForScript","repString","strIdx","localAdd","fromURL","fromAttr","attr","toURL","stringList","checkAndAdd","repList","addReps","objList","addObjects","protocol","host","pathname","toScript","commandsList","command","saveQuotes","quote","trim","Atom","residue","role","het","serial","temperature","charge","mask","hydrogenCount","radicalCount","valence","bonds","flags","Flags","HYDROGEN","CARBON","isHet","isHydrogen","getVisualName","forEachBond","process","getFullName","_chain","getName","_sequence","static","NONPOLARH","Element","fullName","weight","radiusBonding","hValency","hydrogenValency","U1","Lead","U2","Wing","U18","Constants","SG","byAtomicNumber","ByAtomicNumber","byName","ByName","getByName","cBondTypes","UNKNOWN","COVALENT","AROMATIC","getAtomPos","Bond","right","order","fixed","_left","_right","_fixed","_order","_type","getLeft","getRight","getOrder","calcLength","distanceTo","_forEachNeighbour","currAtom","forEachLevelOne","forEachLevelTwo","l2Atom","_fixDir","refPoint","currDir","posGetter","rightCount","leftCount","tmpVec","clone","checkDir","sub","dot","checkCarbon","stages","stageId","multiplyScalar","calcNormalDir","third","maxNeibs","another","secondPos","firstV","secondV","crossVectors","lengthSq","normalize","BondType","cNucleicControlNames","cNucleicWing1Names","cNucleicWing2Names","cCylinderSource","cCylinderTarget","types","atoms","chain","sequence","icode","_component","_icode","_mask","_atoms","_secondary","_firstAtom","_leadAtom","_wingAtom","_lastAtom","_controlPoint","_midPoint","_wingVector","_cylinders","_isValid","_het","_molecule","getChain","getMolecule","getSequence","getSecondary","getICode","addAtom","xyz","tempFactor","getComplex","getAtomCount","forEachAtom","_findAtomByName","_findFirstAtomInList","names","collectMask","getCylinderTargetList","_name","_detectLeadWing","getAtomPosition","leadAtom","wingStart","wingEnd","cylSource","targetList","cylTarget","calcWing","prevLeadPos","currLeadPos","prevWingPos","prevWing","vectorA","vectorB","angleTo","negate","_innerFinalize","prevRes","prev","nextRes","chainAsNucleic","bFirstInChain","lp","THREE","lerp","_finalize2","asNucleic","isConnected","anotherResidue","_finalize","tempCount","occupCount","ResidueType","letterCode","_fullName","ALA","ARG","ASN","ASP","CYS","GLN","GLU","GLY","HIS","ILE","LEU","LYS","MET","PHE","PRO","PYL","SEC","SER","THR","TRP","TYR","VAL","DA","DC","DG","DI","DT","DU","WAT","H2O","HOH","DOD","UNK","UNL","PROTEIN","BASIC","ACIDIC","POLAR","NONPOLAR","NUCLEIC","PURINE","PYRIMIDINE","DNA","RNA","WATER","_addFlag","flag","StandardTypes","_addParam","ChainType","complex","_complex","_residues","minSequence","POSITIVE_INFINITY","maxSequence","NEGATIVE_INFINITY","getResidues","_determineType","residues","findResidue","seqNum","iCode","curr","updateToFrame","frameData","prevData","frameRes","currData","addResidue","getResidueType","addResidueType","Residue","getResidueCount","forEachResidue","StructuralElement","init","term","generic","genericByType","serialAtomMap","residueHash","splitUnifiedSerial","serialId","hashCode","getUnifiedSerial","Type","STRAND","BRIDGE","HELIX_310","HELIX_ALPHA","HELIX_PI","HELIX","TURN_310","TURN_ALPHA","TURN_PI","TURN","BEND","COIL","Generic","LOOP","StructuralElementType","StructuralElementGeneric","typeByPDBHelixClass","helixClass","comment","sheet","sense","atomCur","atomPrev","as","_width","_strands","getWidth","addStrand","addEmptyStrand","Strand","saveNode","_id","_position","_charge","_repeat","_center","xmlNodeRef","getPosition","getCentralPoint","_rebuildSGroupOnAtomChange","nLimon","bLow","bHight","aPos","addVectors","List","_values","splice","toJSON","includes","valuesArray","upperOnly","_validate","Selector","ListSelector","RangeListSelector","ValueListSelector","caseSensitive","NoneSelector","includesAtom","_atom","AllSelector","none","PrefixOperator","rhs","InfixOperator","lhs","keywords","defineSelector","SelectorClass","NULL_SELECTOR","defineOperator","OperatorClass","byResidueTypeFlag","selectors","_selector","_boundaries","boundingBox","boundingSphere","computeBoundaries","makeEmpty","expandByPoint","bbc","getCenter","setFromCenterAndSize","radiusSquared","pos","lengthSquared","distanceToSquared","sqrt","getTransforms","getSelector","getBoundaries","finalize","BiologicalUnit","chains","matrices","oldCenter","oldRad","applyMatrix4","newRad","addScalar","subScalar","addChain","addMatrix","matrix","_residueIndices","_cycles","_subDivs","_residueCount","resIdc","idIdc","idCount","last","setSubDivs","subDivs","resCnt","_bonds","forEachCycle","cycle","addCycle","cycles","markResidues","_forEachSubChain","subs","currRes","endRes","getMaskedSequences","_subIdx","getMaskedSubdivSequences","currIdx","lastSubIdx","subIdx","boundaries","maxPairsEstimate","numPairs","numMaxPairs","intBuffer","hashBuffer","cHashTableSize","destroy","addPair","indexA","indexB","ia","ib","codeToAdd","apI","_getBondingRadius","_maxRad","bBox","getDefaultBoundaries","_vBoxMin","_vBoxMax","_pairCollection","_addExistingPairs","getAtoms","numAtoms","aInd","collection","numBondsForAtom","bInd","_findPairs","vw","getVoxelWorld","atomsNum","rA","isHydrogenA","posA","locationA","atomA","processAtom","atomB","locationB","dist2","rB","maxAcceptable","forEachAtomWithinRadius","_addPairs","iA","iB","_addPair","bondsA","numBonds","newBond","addBond","build","_buildInner","_calcBoundingBox","AtomPairs","nAtoms","maxRad","cAromaticType","cAromaticAtoms","_coDirVectors","v1Tmp","v2Tmp","cp","v1","v2","_insertAscending","_anotherAtom","_markAromatic","Cycle","atomsList","nA","nextAtom","checkBond","_isAromatic","_isPossibleAromatic","rightIdx","leftIdx","_checkCycleSimple","_checkCycleComplex","bondsData","bondMarks","_bondsData","_bondMarks","_resetCycles","_currIdx","_haveSameCycle","bond1","bond2","arr1","arr2","n1","n2","i1","i2","_tryBond","prevBond","currRight","bondsOrder","currLeft","currVec","startAtomRef","_currStart","checkAromatic","_checkBond","anotherAtom","anotherVec","theta","_cosBetween","newDir","cross","dir","newRight","_startCycle","_findLoops","checkCycle","forEachComponent","component","newCycle","markCycles","detectCycles","_getSphereSliceRadiusRange","zMin","zMax","dzMin","dzMax","rzMin","rzMax","rMin","rMax","_getCircleSliceRadiusRange","yMin","yMax","dyMin","dyMax","ryMin","ryMax","VoxelWorld","box","vCellSizeHint","_box","getSize","divide","_last","_cellSize","_cellInnerR","_cellOuterR","numVoxels","_voxels","addAtoms","voxelIdx","_findVoxel","point","_zero","voxel","_voxel","_forEachAtomInVoxel","_forEachVoxelWithinRadius","xRange","_xRange","yRange","_yRange","zRange","_zRange","_forEachVoxelWithinRadiusSimple","rRangeXY","rRangeX","xVal","yVal","zVal","isInsideX","isInsideY","isInsideZ","divideScalar","clampScalar","vCenter","_vCenter","distTouch2","distInside2","d2","r2","isInside","forEachAtomWithinDistFromMasked","dist","_forEachAtomWithinDistFromGroup","atomProc","forEachAtomWithinDistFromSelected","voxels","processIfWithin","MINIMAL_DISTANCE","MIN_HBOND_ENERGY","COUPLING_CONSTANT","HBondInfo","_hbonds","_buildVW","_build","isBond","from","to","acc0","acc1","acceptor","energy","ri","preri","rj","prerj","_calcHBondEnergy","pairs","PairCollection","_residueGetCAlpha","_residueGetCO","_residueGetNH","predonor","donor","distanceHO","distanceHC","distanceNC","distanceNO","donorInfo","accInfo","BridgeType","freeze","NO_BRIDGE","PARALLEL","ANTI_PARALLEL","HelixFlag","START","MIDDLE","END","START_AND_END","StructureType","SecondaryStructureMap","_ss","_sheet","_betaPartners","_bend","_helixFlags","_chainLengths","_chains","_buildBetaSheets","_buildAlphaHelices","inResidues","chainLength","inPreferPiHelices","stride","kappa","_kappa","_isHelixStart","isTurn","_cosinusAngle","p1","p2","p3","p4","v12","v34","prevPrev","nextNext","curCA","ppCA","nnCA","ckap","skap","atan2","bridges","lenA","chainA","lenB","chainB","_testBridge","found","bridge","unshift","chainI","chainJ","ibi","iei","jbi","jei","ibj","iej","jbj","jej","_hasChainBreak","bulge","ladderset","Set","ladder","delete","sheetset","toMove","_areBridgesLinked","betai","betaj","parallel","ai","aj","has","helixClassMap","loopMap","Complex","_components","_helices","_sheets","structures","_residueTypes","_sgroups","_molecules","_maskNeedsUpdate","metadata","symmetry","units","_currentUnit","addSheet","addHelix","getBonds","forEachChain","resName","getSGroupCount","getSGroups","getAtomByFullname","resId","localeCompare","Chain","getChainCount","getMolecules","getMoleculeCount","forEachMolecule","molecules","forEachSGroup","groups","components","forEachVisibleComponent","getBondCount","maxSerial","uniSerial","chainShift","remnant","_fillCmpEdit","addComp","comp","Component","resCount","currStart","_fillCmpNoedit","currSubDivs","_fillComponents","enableEditing","getCurrentUnit","resetCurrentUnit","setCurrentUnit","newUnit","_computeBounds","onAtomPositionChanged","_finalizeBonds","updateStructuresMask","helices","sheets","needAutoBonding","autoConnector","AutoBond","marker","AromaticLoopsMarker","detectAromaticLoops","_finalizeMolecules","molecule","updater","structure","countAtomsByMask","getNumAtomsBySelector","resetAtomMask","markAtoms","setMask","clearMask","totalSelector","markAtomsAdditionally","clearAtomBits","reseter","getAtomNames","_atomNames","dict","getElements","_elements","getResidueNames","_residueNames","getChainNames","_chainNames","getAltLocNames","_altlocNames","_voxelWorld","addElement","srcArray","dstArray","functor","elem","joinComplexes","complexes","atomBias","bondBias","residueBias","chainBias","componentBias","bias","processBond","processResidue","processChain","processComponent","doNothing","rt","ssMap","getSheet","item","Sheet","lastCode","lastSheetIndex","lastHelixIndex","curStructure","curCode","curResidue","curSheetIndex","Helix","loopType","curSheet","filter","pow2ceil","Volume","dimensions","vecSize","volumeInfo","_dimVec","_volumeInfo","_dimX","_dimY","_dimZ","_rowElements","_planeElements","_totalElements","_data","getValue","setValue","addValue","getDimensions","getBox","getVolumeInfo","getCellSize","boxSize","computeGradient","vl","vs","xSize","ySize","zSize","volMap","_voxelValue","zi","zm","zp","yi","ym","yp","xi","xm","xp","getTiledTextureStride","buildTiledTexture","tilesX","tilesY","tileRow","texture","needsUpdate","getData","getDirectIdx","getStrideX","getStrideY","getStrideZ","SGroup","Assembly","Molecule","CSS2DObject","_element","getElement","setTransparency","transp","op","op100","opacity","RCGroup","raycast","raycaster","intersects","visible","children","enableSubset","innerOnly","disableSubset","isEmpty","getSubset","totalSubset","LAYERS","VOLUME","TRANSPARENT","PREPASS_TRANSPARENT","VOLUME_BFPLANE","COLOR_FROM_POSITION","SHADOWMAP","SELECTION_LAYERS","resetTransform","quaternion","updateMatrixWorldRecursive","updateMatrixWorld","addSavingWorldTransform","_worldMatrixInverse","matrixWorld","invert","multiply","decompose","renderDummyQuad","_material","depthWrite","_scene","_quad","_camera","render","renderScreenQuad","isIdentity","identity","equals","applyToPointsArray","elements","persp","ScreenQuadMaterial","uniforms","srcTex","vertexShader","vertexScreenQuadShader","depthTest","clearTree","geometry","dispose","removeChildren","renderScreenQuadFromTex","fragmentShader","renderScreenQuadFromTexWithDistortion","coef","setMinimalFov","angle","aspect","fov","radToDeg","atan","tan","degToRad","updateHalfSized","camera","originalAspect","originalFov","updateProjectionMatrix","setDistanceToFit","intersectVisibleObject","gfxObj","fogFarPlane","intersectObject","nearPlane","near","matrixWorldInverse","farPlane","far","extractScale","_v","te","determinant","copyAtList","attribute","indexList","_oldInstancedBufferGeometryCopy","source","instanceCount","calcCylinderMatrix","posBegin","posEnd","posCenter","matScale","makeScale","matRotHalf","makeRotationX","matRotLook","vUp","lookAt","setPosition","calcChunkMatrix","eye","up","rad","groupHasGeometryToRender","group","hasGeoms","buildDistorionMesh","widthSegments","heightSegements","calcInverseBarrel","prevR2","curR2","dr","geo","getAttribute","setXY","fillArray","startIndex","endIndex","destroyObject","belongToSelectLayers","layers","processObjRenderOrder","idMaterial","renderOrder","isGroup","applySelectionMaterial","setValues","depthFunc","overrideColor","lights","shadowmap","setUberOptions","fixedColor","zOffset","getMiddlePoint","point1","point2","optionalTarget","addScaledVector","_defaultBoundaries","Visual","gfxutils","dataSource","_dataSource","release","getDataSource","_ensureArray","EntityList","entities","_list","_dict","_indices","entity","register","registerInList","unregisterFromList","registerInDict","unregisterFromDict","unregister","all","defineProperties","CollisionSphere","_radius","sphere","_sphere","ray","intersectSphere","distance","origin","setSphere","inters","chunkIdx","computeBoundingBox","computeBoundingSphere","tmpColor","InstancedSpheresGeometry","SphereCollisionGeo","spheresCount","sphereComplexity","useZSprites","_sphGeometry","_init","setItem","itemIdx","itemPos","itemRad","_offsets","setColor","colorVal","_colors","startUpdate","finishUpdate","setOpacity","chunkIndices","alphaArr","_alpha","geom","sphereGeo","alpha","ChunkedObjectsGeometry","chunkGeo","chunksCount","_chunkGeo","colors","chunkSize","_chunkSize","mesh","facesPerChunk","faceIndex","srcPos","_positions","srcNorm","_normals","srcColor","dstPos","dstNorm","dstColor","dstPtOffset","ptIdxBegin","ptIdxEnd","attributes","chunkIndex","chunkIndexSize","pointsCount","use32bitIndex","indexSize","Uint32Array","Uint16Array","posOffset","setIndex","SimpleSpheresGeometry","sphGeometry","normals","geoNormals","normal","_chunkPos","_tmpPositions","tmpPos","geoPos","centerPos","tmpVector","normMtx","_chunkNorms","_tmpVector","botPos","topPos","firstOffset","secondOffset","tmpArray","geoNorm","lerpVectors","mtx1","getNormalMatrix","fromArray","toArray","applyMatrix3","colorVal1","colorVal2","CylinderBufferGeometry","radiusTop","radiusBottom","radialSegments","heightSegments","openEnded","thetaLength","parameters","hasTop","hasBottom","vertexCount","facesCount","heightHalf","positions","uvs","currVtxIdx","currFaceIdx","tanTheta","v3","v4","setXYZ","vx","vy","vz","startTIdx","lastIdx","fTIdx","currSrcIdx","getX","getY","getZ","nextTVtx","startBIdx","lastBIdx","fBIdx","currSrcBIdx","nextBVtx","invMatrix","setArrayXYZ","setArrayXYZW","sortNumber","Instanced2CCylindersGeometry","_useZSprites","_cylGeometry","_collisionGeo","Simple2CCylindersGeometry","me","mtxOffset","_matVector1","_matVector2","_matVector3","_invmatVector1","_invmatVector2","_invmatVector3","colorIdx","_color1","_color2","chunksIdx","cylinderInfo","newPar","_prepareCylinderInfo","cylinderIndices","color1","color2","_assignOpacity","getGeoParams","cylinderGeo","tmpPrev","tmpNext","tmpRes","simpleNormal","normalOnCut","nearRingPt","shape","ringsCount","ptsCount","totalPts","_createExtrudedChunkGeometry","_ringsCount","tmpShape","_tmpShape","hasSlope","hasCut","chunkStartIdx","_setPoints","_setSlopeNormals","_setBaseNormals","_addCut","vtxIdx","mtx","nPtsInRing","_countNormalsInRing","isSlope","shiftToExtraPt","subVectors","startSegmentIdx","segmentsCount","elemSize","ThickLinesGeometry","_initVertices","segmentIdx","setSegment","pos1","pos2","directions","_directions","dirIdx","startSegIdx","endSegIdx","getSubsetSegments","getSubsetColors","getSubsetOpacities","getNumVertexPerSegment","getPositionSize","setSegments","startPos","startDir","setColors","_buffersSize","indexOffset","pointOffset","BaseLinesGeometry","posSize","itemOffset","ChunkedLinesGeometry","LinesGeometry","enableCollision","CylinderCollisionGeo","collisionGeo","segCount","segIdx","TwoColorLinesGeometry","segmentIndices","_segCounts","vectors","vecCount","tempPos1","tempPos2","CrossGeometry","IsoSurfaceGeometry","_opts","_posRad","posRad","IsoSurfaceMarchCube","pointsValuesLinear","hasIntersection","bitsInside","numCellsPerSide","n3","striIndicesMarchCube","edgeTable","_voxelGradientFast","grad","GridCell","_arrSize","cubeIndex","Triangle","createArray","arrSize","IsoSurface","_numTriangles","_numVertices","_volumetricData","_xAxis","_yAxis","_zAxis","_xDir","_yDir","_zDir","_prepareAxesAndDirs","cellSize","xAxis","yAxis","zAxis","xDir","yDir","zDir","tmp","notZero","axe","EPSILON","_vertexInterp","isoLevel","grid","ind1","ind2","vertex","valP1","isoDiffP1","diffValP2P1","mu","_polygonize","triangles","firstIndices","_firstIndices","secondIndices","_secondIndices","vertexList","_vertexList","normalList","_normalList","triCount","triTblIdx","triTable","_triTable","_doGridPosNorms","step","appendSimple","vol","volData","dim","stepX","stepY","stepZ","gc","gcVal","gcValSize","additions","appendVertex","axis","triVertex","_origin","posMtx","globTriCount","_gradient","compute","_remapIndices","vertexMap","idcCount","newIndices","_remapVertices","vertices","newPositions","newNormals","norm","vertexFusion","faceVer","oldVerCount","vMap","newVer","matchedIndex","setColorVolTex","colorMap","atomMap","atomWeightMap","visibilitySelector","numVerts","xs","ys","zs","colorData","strideX","strideY","strideZ","atomWeightData","atomStrideX","atomStrideY","atomStrideZ","xInv","yInv","zInv","atomLookup","atomWeights","interp","idx1","idx2","collectWeight","coefX","coefY","coefZ","newVerCount","ind","mux","muy","muz","maxWeight","dominantIdx","atomIdx","c0","c1","c2","c3","cz0","cz1","numTriangles","newTriCount","i0","toMesh","_visibilitySelector","_calcSurface","_findMinMax","posRadArray","itemsCount","maxPosRad","minPosRad","tmpVal","_findNumVoxels","minMaxValues","minCoordRad","maxCoordRad","gridPadding","radScale","padRad","bbox","_makeSurface","surface","isoSurf","volTexMap","packedArrays","_computeSurface","chem","VolumeSurfaceGeometry","_shiftByOrigin","gaussdensity","atomicNum","invIsoValue","invGridSpacing","maxVoxelX","maxVoxelY","maxVoxelZ","volTexData","texStrideX","scaledRad","atomicNumFactor","radInv","radLim","radLim2","xMin","xMax","dy2dz2","addr","texAddr","expVal","density","exp","colInd","originX","originY","originZ","AVHash","maxDistance","minX","minY","minZ","maxX","maxY","maxZ","hashFunc","minW","iDim","jDim","kDim","nCells","jkDim","preHash","cid","iIdx","cellOffsets","cellLengths","maxCellLength","subArray","cellLength","neighbourListLength","withinRadii","rExtra","out","outIdx","nearI","nearJ","nearK","loI","loJ","loK","hiI","hiJ","hiK","iOffset","jOffset","cellStart","cellEnd","dataIndex","baseIndex","rSum","_indexList","maxRadius","volTex","weights","gridx","gridy","gridz","sinTable","cosTable","neighbours","lastClip","weightsMap","mid","ngTorus","fillGridDim","innI","initializeGrid","gridSize","TypeName","uniformArray","rExt","initializeAngleTables","singleAtomObscures","innX","innY","innZ","innCI","ra2","obscured","ni","projectTorus","aIdx","bIdx","xa","ya","za","r1","innR2","dmp","rInt","ng","cost","sint","px","py","pz","iax","iay","iaz","minx","miny","minz","maxx","maxy","maxz","iz","iy","dzy2","zyOffset","ix","current","getVolume","ax","ay","az","ar2","colIdx","cr","cg","cb","cIdx","ap","spx","spy","spz","dd","projectPoints","innIdx","projectTorii","innInnI","fixNegatives","contactSurface","ContactSurface","radiusAt","coord","colorX","colorY","colorZ","atomType","srcAtom","vBoxMin","vBoxMax","_numAtoms","_probeRadius","_atomsList","_voxelList","createVoxels","numAtomsRefs","aveRad","numCells","_numCells","_aveRad","side","side2","side3","xScale","_xScale","yScale","_yScale","zScale","_zScale","maxAtomsRefs","xNumVoxMult","yNumVoxMult","zNumVoxMult","diaAffect","numVoxX","numVoxY","numVoxZ","xIndMin","yIndMin","zIndMin","xIndMax","yIndMax","zIndMax","indVoxel","indexNext","destroyVoxels","_vertices","forEachRelatedAtom","xInd","yInd","zInd","ref","getClosestAtom","closest","minDist2","MAX_VALUE","buildNormals","numVertices","numCloseAtoms","vNormalX","vNormalY","vNormalZ","koef","maxRadAffect","maxRadAffect2","expScale","gatherNormals","maxClosedAtoms","buildColors","radiusColorSmoothness","colorsClose","weightsSum","gatherColors","weightNormalized","maxNumVertices","maxNumTriangles","needVertexColors","_maxNumVertices","_maxNumTriangles","HASH_SIZE","_innerBuild","geoOut","getGeo","_fromGeo","numTri3","convertToAtomsColored","atomsColored","IsoSurfaceAtomColored","nm","hashLines","hashEntries","getBoundingBox","bigNum","probeRadius2","atomRadiusScale","radMax","num","getCornerCoord","numPoints","vOut","invNP","tx","ty","tz","buildEdgePoint","sign","cube","indexPointValue","cTwentyFour","xb","yb","zb","isTriangleVisible","v0","a0","voxelWorld","a1","a2","addTriangle","indInGeo0","addVertexToGeo","indInGeo1","indInGeo2","itr","buildGeoFromCorners","meshRes","vCellStep","vaEdges","vCorner","indCell","indY","indZ","indPointValues","indValues","offs","numTri","indTri","getNumIntersectedCells","numIntersectedCells","cubeValuesIndex","indCorner","letter","atomT","calculateGridCorners","probeRad","vDif","fx","fy","fz","indXMin","indYMin","indZMin","indXMax","indYMax","indZMax","createVertexHash","numHashEtriesAllocated","numHashEntryIndex","getNewHashEntry","vAdd","oneHynberes","hashResolution","marCubeResoultion","iHash","hLineIndex","iVertAdd","entryFirst","modifyExcludedFromGeo","probeSphereRadius","distToSphere","distToBorder","probeSpRad2","sideInv","radEst","xCorner","yCorner","zCorner","ok","expandFactor","meshResolution","colorMode","useVertexColors","excludeProbe","rProbeRadius","numIntersectedCellsEstim","IsoSurfaceGeo","probeRadForNormalsColors","IsosurfaceBuildNormals","ExtrudedObjectsGeometry","QuickSurfGeometry","ContactSurfaceGeometry","SSIsosurfaceGeometry","LabelsGeometry","items","xTranslation","yTranslation","deltaPos","userData","fieldTxt","spanText","fontSize","strings","spanNodeP","spanNodeText","createLabel","textAlign","fColor","bColor","precision","renderer","capabilities","getMaxPrecision","_noiseData","_noiseWrapS","_noiseWrapT","_noiseMinFilter","_noiseMagFilter","_noiseMapping","noiseTexture","noiseWidth","noiseHeight","_samplesKernel","defaultUniforms","merge","diffuse","specular","shininess","zClipValue","clipPlaneValue","nearPlaneValue","invModelViewMatrix","world2colorMatrix","dashedLineSize","dashedLinePeriod","projMatrixInv","viewport","samplesKernel","noiseTex","noiseTexelSize","srcTexelSize","uberOptionNames","uberOptions","zClipCoef","noise","toonShading","UberMaterial","instancedPos","instancedMatrix","attrColor","attrColor2","attrAlphaColor","sphereSprite","cylinderSprite","fakeOpacity","prepassTransparancy","colorFromPos","shadowmapType","colorFromDepth","orthoCam","dashedLine","thickLine","fogTransparent","normalsToGBuffer","precisionString","defines","extensions","createInstance","inst","USE_FOG","INSTANCED_POS","INSTANCED_MATRIX","ATTR_COLOR","ATTR_COLOR2","ATTR_ALPHA_COLOR","OVERRIDE_COLOR","SPHERE_SPRITE","fragDepth","CYLINDER_SPRITE","ZCLIP","CLIP_PLANE","FAKE_OPACITY","USE_LIGHTS","COLOR_FROM_POS","SHADOWMAP_PCF_SHARP","SHADOWMAP_PCF_RAND","SHADOWMAP_BASIC","COLOR_FROM_DEPTH","ORTHOGRAPHIC_CAMERA","PREPASS_TRANSP","DASHED_LINE","THICK_LINE","FOG_TRANSPARENT","drawBuffers","NORMALS_TO_G_BUFFER","TOON_SHADING","shallow","updateUniforms","SuperClass","NewObjectType","onBeforeRender","scene","_onBeforeRender","_update","Mesh","UberObject","castShadow","receiveShadow","_geometry","_group","modelViewMatrix","multiplyMatrices","uniformsNeedUpdate","ZClippedMesh","modelView","_modelView","mvLength","_mvLength","setFromMatrixColumn","localToWorld","TextMesh","initialized","srcItem","label","visibility","_viewport","projectionMatrix","ZClipped","ZSprite","ZSpriteMesh","Text","Line","LineSegments","SimpleMesh","ThickLineMesh","Instanced","InstancedMesh","setMatParams","_createInstancedCylinders","Geometry","geometries","meshes","initMaterial","_createLineSegmentsGeoTriplet","renderParams","thickLines","_createIsoSurfaceGeoTriplet","geoClass","caps","surfaceOpts","createSpheres","create2CClosedCylinders","_caps","_settings","create2CCylinders","create2CLines","createCrosses","createExtrudedChains","createChunkedLines","createQuickSurface","createContactSurface","createSASSES","createLabels","TransformGroup","geoParams","transforms","_geoParams","mat","_transforms","_createMeshes","_ray","inverseMatrix","_inverseMatrix","childIntersects","ciCount","geos","meshCnt","ChemGroup","selection","_selection","_mode","_colorer","_chunksIdc","chunks","_polyComplexity","_geo","Name","_makeGeoArgs","_mesh","chunksList","_calcChunksList","_changeSubsetOpacity","atomsIdc","AtomsGroup","calcAtomRadius","getAtomColor","updateColor","needsColorUpdate","AtomsSphereGroup","selectedAtoms","getSurfaceOpts","getAtomText","getNode","colorMappings","adjust","inverse","propagateColor","rule","startsWith","templateMappings","hetatm","water","parseTemplate","getLabelOpts","fgColor","bgColor","_slerp","omega","oSin","radOffset","addChunk","chunksToIdx","prevVector","currVector","segmentsHeight","_segmentsHeight","leprStep","currAtomIdx","cCount","cycAtoms","chunkPoints","tmpDir","cycleRad","prevPos","currPos","upDir","currAngle","_createShape","pts","AromaticGroup","torusRad","getAromRadius","radiusV","calcStickRadius","lookAtVector","mtc","points","currPoint","getAromaticOffset","prevPt","getAromaticArcChunks","chunksIdc","resIdx","ResiduesGroup","stickRad","getResidueColor","_processItem","NucleicItemGroup","cyl1","cyl2","calcMatrix","_buildStructureInterpolator","argTrans","transformT","tt","newt","ans","_addPoints","centerPoints","topPoints","tp","_calcPoints","firstIdx","_prevIdx","_nextIdx","arrIdx","_extrapolate2","otherIdx","prevIdx","nextIdx","nucleic","nameFrom","nameTo","posFrom","posTo","shift","wing","cpPrev","tpPrev","cpNext","tpNext","_addPointsForLoneResidue","startIdx","endIdx","pointsArrays","_topInterp","_centerInterp","_shift","_valueStep","_segmentsCount","prepareMatrices","firstRad","secondRad","mtcCount","outMtc","currRad","topInterp","cenInterp","currentValue","mtxIdx","lerpVal","currTop","currCenter","nextCenter","_loopThrough","subDiv","subDivI","subDivN","idc","matrixHelper","CartoonHelper","prevLast","prevSecondRad","getResidueRadius","cmpMultiplier","getHeightSegmentsRatio","getTension","chunkIdc","subdivs","chunk","drawMultiple","drawMultiorderBonds","showAromatic","showAromaticLoops","bondsIdc","bondsCount","getBondOrder","getCylinderCount","bondIdx","BondsGroup","emptyOffset","calcSpaceFraction","normDir","leftPos","rightPos","currBondIdx","atom1","atom2","a1Pos","a2Pos","currStickRad","STEP_SIZE","AtomsSurfaceGroup","AtomsSASSESGroupStub","AtomsTextGroup","AromaticTorusGroup","AromaticLinesGroup","NucleicCylindersGroup","NucleicSpheresGroup","ResiduesSubseqGroup","ResiduesTraceGroup","BondsCylinderGroup","BondsLinesGroup","bondDir","a1Hangs","a2Hangs","_checkAtom","atomsGroup","meshIdx","chSubset","subsetEl","AtomsProcessor","ResidueGroup","_checkResidue","residuesGroup","checkResidue","ResidueProcessor","jEnd","bondsGroup","cycleIdx","perCycle","Atoms","OrphanAtoms","OrphanAtomsProcessor","Residues","ResiduesProcessor","Nucleic","NucleicProcessor","Subseqs","SubseqsProcessor","Bonds","BondsProcessor","Aromatic","AromaticProcessor","_bakeGroup","triplet","Processor","Group","AtomsSpheres","MeshCreator","processors","OrphanedAtomsCrosses","BondsCylinders","BondsLines","CartoonChains","TraceChains","NucleicSpheres","NucleicCylinders","ALoopsTorus","ALoopsLines","QuickSurfGeo","ContactSurfaceGeo","SASSESSurfaceGeo","TextLabelsGeo","Mode","identify","buildGeometry","depGroups","currGroup","newGroup","makeContextDependent","getRenderParams","LinesMode","shortName","LicoriceMode","BallsAndSticksMode","VanDerWaalsMode","TraceMode","TubeMode","_residue","TUBE_RADIUS","CartoonMode","secCache","getResidueStartRadius","secOpts","getResidueEndRadius","ARROW_END","startRad","endRad","_res","tubeRad","secHeight","secData","SurfaceMode","surfaces","surfaceNames","getVisibilitySelector","isSurface","QuickSurfaceMode","useBeads","IsoSurfaceMode","_excludeProbe","_radScale","IsoSurfaceSASMode","IsoSurfaceSESMode","ContactSurfaceMode","TextMode","getTemplateOptions","adjustColor","Palette","getElementColor","asIs","elementColors","defaultElementColor","residueColors","defaultResidueColor","getChainColor","chainColors","getSecondaryColor","secondaryColors","defaultSecondaryColor","getSequentialColor","getGradientColor","gradientName","gradients","defaultNamedColor","beta","lerpColor","getNamedColor","namedColors","minRangeColor","midRangeColor","maxRangeColor","defaultGradientColor","namedColorsArray","rainbow","temp","hot","cold","reds","blues","CL","FE","NI","CU","BR","HE","LI","BE","NE","NA","MG","AL","SI","AR","SC","TI","CR","MN","ZN","GA","GE","AS","KR","RB","SR","ZR","NB","TC","RU","RH","PD","AG","CD","IN","SN","SB","TE","XE","BA","LA","CE","PR","ND","PM","SM","EU","GD","TB","DY","HO","ER","YB","LU","HF","TA","RE","OS","IR","PT","AU","HG","TL","PB","BI","PO","AT","RN","FR","RA","AC","TH","PA","NP","PU","AM","CM","BK","CF","ES","FM","MD","NO","LR","RF","DB","BH","HS","MT","dna","rna","cpkPalette","jmolPalette","Colorer","palettes","ElementColorer","ResidueTypeColorer","SequenceColorer","ChainColorer","SecondaryStructureColorer","secondary","UniformColorer","ConditionalColorer","parsed","_subsetCached","ConformationColorer","TemperatureColorer","OccupancyColorer","_getColorByOccupancy","HydrophobicityColorer","hydrophobicity","MoleculeColorer","CarbonColorer","colorCarbon","colorNotCarbon","neutralColor","intensity","materialList","createDerivativeMesh","layer","newMesh","traverseMeshes","meshTypes","func","_gatherObjects","forEachMeshInGroup","processObj","applyTransformsToMeshes","processTransparentMaterial","matValues","prepassTranspMesh","processColFromPosMaterial","colFromPosMesh","createShadowmapMaterial","shadowmapMesh","isShadowmapMesh","removeShadowmapMaterial","countTriangles","totalCount","attribs","property","currAttr","faces","_countMeshTriangles","startMaterialValues","selectorString","materialPreset","needsRebuild","setMode","unmarkAtoms","setMaterialPreset","selectionGeo","meshutils","buildSelectionGeometry","sg","matrixAutoUpdate","compare","repSettings","selStr","valueOf","modeDiff","colorerDiff","change","newSelectorObject","newSelector","newMode","newColorer","newMaterial","_traverseComponentGroups","ComplexEditor","ComponentEditor","complexVisual","_complexVisual","_inProgress","_componentTransforms","_bakeComponentTransform","_resetComponentTransform","finalizeEdit","discard","getAltObj","pivot","visual","getSelectedComponent","getSelectionGeo","selectionMask","getSelectionBit","reprNode","bbmin","bbmax","updateMatrix","FragmentEditor","_getSelectionBorderAtoms","_fragmentBoundAtoms","pivotPos","_fragmentGeo","_fragmentSelectionGeo","vg","smeshes","sm","selectionBit","makeTranslation","_bakeAtomTransform","isFreeRotationAllowed","boundAtoms","transformDirection","atomHash","lookupAndCreate","entityList","specs","ComplexVisual","_reprList","_repr","_reprListChanged","_selectionBit","_reprUsedBits","_selectionCount","_selectionGeometry","getSelectionCount","getEditor","_editor","Representation","repCount","desc","status","repGet","_getFreeReprIdx","bits","NUM_REPRESENTATION_BITS","newSelectionBit","originalSelection","buildSelectorFromMask","def","hide","rebuildSelectionGeometry","resetSelectionMask","updateSelectionMask","pickedObj","otherObj","expandSelection","tmpMask","shrinkSelection","deselectionMask","multiple","getSelectionCenter","selRule","reprList","Promise","resolve","errorOccured","setTimeout","hasGeometry","repr","DEBUG","setNeedsRebuild","_buildSelectorFromSortedLists","optimizeList","NaN","expression","and","residx","forSelectedResidues","beginComponentEdit","editor","ComplexVisualEdit","beginFragmentEdit","setMaterialValues","needTraverse","volumeUniforms","volumeDim","tileTex","tileTexSize","tileStride","boxAngles","_isoLevel0","_flipV","_BFLeft","_BFRight","_FFLeft","_FFRight","_WFFLeft","_WFFRight","overrideUniforms","defUniforms","facesPosMaterialParams","sideType","BackFacePosMaterial","ShaderParams","BackFacePosMaterialFarPlane","matUniforms","aspectRatio","farZ","tanHalfFOV","matWorld2Volume","FrontFacePosMaterial","VolumeMaterial","shaderParams","updateDefines","ISO_MODE","STEPS_COUNT","VolumeMesh","cullFlag","edgeIntersections","_updateVertices","_corners","edges","_edges","_edgeIntersections","constant","vert","cornerMark","edgeMark","curEdge","curEdgeInter","CheckX","CheckY","CheckZ","curEdgeIdx","curEdgeSource","face","nextVertex","coplanarPoint","_collectVertices","_sortIndices","_updateIndices","faceIdx","vRight","vDir","rightProj","numIndices","setDataSource","vm","image","volInfo","obtuseAngle","_updateIsoLevel","mean","dmean","dmin","span","dmax","sd","nearClipPlaneOffset","_nearClipPlaneOffset","_pos","_norm","norm4D","_norm4D","matrixWorldToLocal","_matrixWorldToLocal","_clipPlane","getWorldDirection","getWorldPosition","setFromNormalAndCoplanarPoint","VolumeBounds","XY","XZ","YZ","bSize","offsetVert","_getBaseVertices","flatVertices","output","_flattenArray","_lines","projTable","_projectionTable","proj","inv","currDelta","getMesh","volume","planeGeo","_initPlaneGeo","_plane","frustumCulled","doubleSided","matWorldToVolume","_renderer","planeCamPos","normalMatrix","volumeMatrix","DEG2RAD","_frame","showFrame","_farPlane","VolumeFarPlane","getBoundingSphere","needShow","find","SomeLoader","canProbablyLoad","Loader","_source","_options","_abort","_agent","abort","extractName","FileLoader","_binary","blob","reader","FileReader","readAsArrayBuffer","readAsText","File","urlStartRegexp","XHRLoader","request","ImmediateLoader","LoaderList","format","formats","SomeParser","canProbablyParse","parseSync","getModel","model","_parseHeader","Remark290","_matrix","_matrixIndex","stream","readString","matrixRow","readCharCode","matrixData","matrixIndex","parseFloat","Remark350","assemblies","_assembly","assembly","_start","_nextCR","_nextLF","_next","_end","readLine","readChar","readInt","readFloat","pdbStartRegexp","remarkParsers","PDBParser","_serialAtomMap","_modelId","_compaundFound","_biomoleculeFound","_allowedChainsIDs","_lastMolId","_remarks","_remark","_compndCurrToken","fileType","_fixBondsArray","_fixChains","remark290","remark350","chainDict","chainObj","idChainMap","nj","_parseATOM","chainID","resSeq","veryLong","nameToElement","Role","_parseENDMDL","_parseCONECT","serial0","serial1","serial2","serial3","serial4","_parseCOMPND","tokenIdx","chainStr","lastChar","_parseREMARK","remarkNum","remark","RemarkParser","_parseHELIX","_parseSTRUCTURE","_parseSHEET","pars","adder","serialNumber","structureName","helLength","shWidth","shCur","shPrev","startChainID","endChainID","startSequenceNumber","iCodeStr","startICode","endSequenceNumber","endICode","cs","_parseHEADER","classification","date","_parseTITLE","title","HEADER","HETATM","ENDMDL","CONECT","COMPND","REMARK","PDBStream","tagParsers","cOrderCharCodes","cmlStartRegexp","CMLParser","_readOnlyOneMolecule","_rebuidBondIndexes","countBonds","idxs","atomRefs2","_createSGroup","moleculeArr","fieldData","atomRefs","placement","fieldName","_extractSGroup","_extractSGroups","sgroupRef","mapEntry","cycleFuncInner","cycleFunc","x2","x3","y2","y3","z3","atomsRef","_traverseData","dom","childNodes","parseNode","xmlNode","nodeName","nodeValue","jsonNode","existing","_findSuitableMolecule","molSet","atomArray","_selectComponents","doc","DOMParser","parseFromString","traversedData","rawData","cml","retData","filteredData","rd","ret","localBond","bondArray","orderAttr","tc","labels","_breadWidthSearch","retStruct","atomLabels","labelsCount","originalCML","prepareComponentCompound","_packLabel","compId","molId","_unpackLabel","molID","breadthQueue","componentID","labeledAtoms","startID","_parseBond","eAtom","mainAtom","_parseSet","varData","currentLabel","reorder","atomCharge","lLabel","atomFullNameStruct","elementType","countRef","currAtomComp","strLabel","stringify","atomSerial","added","mrvValence","complexAtom","sGrp","totalAtomsParsed","joinedComplex","ArrayComparator","original","_original","_sum","candidate","sorted","secStructToType","MMTFParser","_onModel","_modelData","_onChain","chainData","_onGroup","groupData","_updateSecStructure","_onAtom","atomData","_onBond","bondData","helixClasses","_ssType","_ssStruct","_ssStart","struct","_updateMolecules","mmtfData","chainsInModel0","chainIndexList","description","_traverse","structureId","releaseDate","eventCallbacks","modelData","MMTF","_linkAtomsToResidues","_findSynonymousChains","named","_parseAssemblyInfo","bioAssemblyList","baInfo","transformList","chainListCheck","chainNames","allChains","_chainsByName","transpose","_markHeteroAtoms","_joinSynonymousChains","primaryChainsArray","primaryChainsHash","primary","ParsingError","column","captureStackTrace","parseLine","parseColumn","_isWhitespace","_inlineIndexOf","ch0","cRequiredAtomFields","cSecondaryCoding","helx","turn","strn","getTypeFromId","typeId","arrize","arrayLikeObject","AtomDataError","_extractOperations","assemblyGen","opsDict","groupStr","gps","grIdx","grCount","gr","gp","es","cnt","ii","nn","newMtx","CIFParser","asymDict","newline","block","keysCount","valuesCount","_parseValue","keyIndex","readCIF","_toComplex","cifData","complexData","_extractAtoms","_extractSecondary","_extractAssemblies","_extractMolecules","_extractMetadata","struct_keywords","pdbx_keywords","databaserev","database_PDB_rev","date_original","pdbx_description","atom_site","auth_seq_id","Cartn_x","Cartn_y","Cartn_z","label_atom_id","group_PDB","chainIdc","auth_asym_id","chainLabelIdc","label_asym_id","serials","iCodes","pdbx_PDB_ins_code","resNames","label_comp_id","type_symbol","tempFactors","B_iso_or_equiv","occupancies","charges","pdbx_formal_charge","altLocs","label_alt_id","models","pdbx_PDB_model_num","label_entity_id","moleculeIdx","struct_conf","_extractConfs","struct_sheet_range","_extractSheets","sheetData","sheet_id","beg_label_seq_id","end_label_seq_id","beg_label_asym_id","sheetNames","strandNames","starts","beg_auth_seq_id","ends","end_auth_seq_id","stICodes","pdbx_beg_PDB_ins_code","endICodes","pdbx_end_PDB_ins_code","helicesData","conf_type_id","comments","details","lengths","pdbx_PDB_helix_length","pdbx_PDB_helix_class","asmGen","pdbx_struct_assembly_gen","asmIdx","assembly_id","asmOper","oper_expression","asmList","asym_id_list","operList","vector","ops","_getOperations","pdbx_struct_oper_list","asm","assemblyOps","valueType","_xyz2crs","_header","_boxSize","_boxStart","extent","nstart","crs2xyz","cellDims","angles","_typedCheck","_buff","TypeError","_fillHeader","headerFormat","arrays","_parseArray","_parseVector","_buffer","_setAxisIndices","_setOrigins","_getAxis","header","gamma","z1","z2","_getXYZdim","_getVolumeInfo","_setBoxParams","xaxis","yaxis","zaxis","shiftX","shiftY","_getXYZbox","_toXYZData","CCP4Header","ispg","nsymbt","lksflg","customData","machine","nlabel","Ccp4Model","VolumeModel","u32","i32","f32","xyz2crs","xyzData","crsIdx","CCP4Parser","_atomsInf","_fileName","_parseToAtomsInf","endnAtoms","endComment","startAtomsInf","_parseAtomsInf","words","PubChemParser","jsonData","PC_Compounds","aids","aid","coords","conformers","aids1","aid1","aids2","aid2","orders","SDFStream","_strings","_currentStart","_currentStringIndx","setStart","getNextString","getCurrentString","getStringFromStart","numb","findNextDataItem","curStr","findNextCompoundStart","probablyHaveDataToParse","chargeMap","orderMap","typeMap","sdfAndMolRegexp","sdfRegExp","fileFormat","tagsNames","tags","SDFParser","_format","_metadata","_currentMolProps","_compoundIndx","_assemblies","_atomsParsed","_atomsIndexes","_parseAtoms","codes","trunc","reverse","buildChainID","_parseBonds","bondsNum","bondType","_parseMOL","countsLine","_parseDataItem","_parseCompound","props","_tryToUpdateMoleculeData","_buildAssemblies","_buildMolecules","_searchTag","_tryToFind","tagsList","tagPossibleNames","_finalizeMetadata","defineFormat","DSN6Header","div","DSN6Model","i16","_pointCalculate","byteBuffer","counter","_blockCalculate","zBlock","yBlock","xBlock","inRange","blocks","_calculateInfoParams","dispersion","minDensity","maxDensity","DSN6Parser","canParse","checkDataTypeOptions","getNext","GROParser","_time","_residueNumber","_residueName","_atomName","_atomNumber","_atomPosition","_atomVelocity","filetype","_parseTitle","_parseNumberOfAtoms","_parseAtom","positionX","positionY","positionZ","GROReader","un","am","nc","du","resNumberRegex","spacesRegex","splitToFields","MOL2Parser","_currPosIdx","_currStartIdx","_parseRawStrings","_toStringFromStart","MOL2Data","newPosIdx","_toHeaderString","_toStringFromHeader","_setStart","_probablyHaveDataToParse","_findNextCompoundStart","_parseMolecule","parsedStr","_setResidue","originAtomId","targetAtomId","_fixSerialAtoms","currMolecule","molResidues","ParserList","XYZParser","Exporter","exportSync","export","PDBResult","_resultArray","_currentStr","_tag","_fixedNumeration","_numeration","_tagStrNum","getResult","writeString","_currentStrLength","newTag","numeration","newString","writeEntireString","maxStrPos","curStrLength","finish","repeat","cStr","writeBondsArray","bondsArrays","_getSubArrays","subArraySize","subArrays","writeMatrix","matrixIndx","toFixed","writeMatrices","Matrix4","PDBExporter","_tags","_result","_tagExtractors","_extractHEADER","TITLE","_extractTITLE","_extractATOM","_extractCONECT","_extractCOMPND","_extractREMARK","_extractHELIX","SHEET","_extractSHEET","_stringForRemark350","_stringForRemark290","fixedBonds","strands","startIndx","_getMoleculeChains","chainsString","_Remark290","_Remark350","biomolIndx","SourceClass","copyFbxPoint3","srcIdx","dstIdx","copyFbxPoint4","vector4","copyTransformedPoint3","setSubArray","copyFunctor","functorOpts","arridx","FBXModel","lastPos","lastNorm","lastCol","vertsCount","indsCount","setPositions","setTransformedPositions","setNormals","setTransformedNormals","setIndices","setShiftedIndices","shifted","getVerticesNumber","addInstance","currentCount","FBXGeometry","_info","FBX1CGeometry","cl","FBX2CCylinder","_cutRawStart","_cutRawEnd","_facesPerSlice","addPerCylinder","_extendVertices","_extendIndices","startToShift","_setColorRange","colorSize","part1End","part2End","capSize","cap1End","cap2End","FBXInfoExtractor","_materials","_models","_extractModelsAndMaterials","_flattenModels","layersOfInterest","checkExportAbility","_collectInstancedGeoInfo","_collectGeoInfo","_reworkIndices","faceSize","overallVertsCount","combined","verticesCount","vertCount","_collectMaterialInfo","_addToPool","_collectSpheresInfo","instCount","instMatrix","objMatrix","sphereColor","instanceIndex","_getSphereInstanceMatrix","_collectCylindersInfo","oneCCylinder","splittingInfo","_gatherCylindersColoringInfo","twoCCylinder","needToSplit","additionalVertsCount","colorStart","colorEnd","is2Colored","_getCylinderInstanceMatrix","materialIdx","_checkExistingMaterial","differs","instIdx","matVector1","matVector2","matVector3","idxOffset","FBXResult","_writeHeader","_writeDefinitions","_writeObjects","_writeRelations","_writeConnections","creator","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","allModels","_verticesIndices","_normalLayer","_colorLayer","allMaterials","_materialProperties","modelsList","_floatArrayToString","colorArray","normalArray","FBXExporter","_version","miewVersion","_extractor","loaders","parsers","exporters","ExporterList","tempColor","_height","_widthHalf","_heightHalf","_vector","_viewMatrix","_projectionMatrix","_domElement","overflow","pointerEvents","myNode","setSize","_renderObject","lerpColorAsHex","setHex","getHexString","colorAsHex","setFromMatrixPosition","localOffset","getMaxScaleOnAxis","fogFactor","smoothstep","WebkitTransform","MozTransform","oTransform","getTopWindow","STATE","matrix4","ObjectHandler","lastRotation","ObjectControls","objectPivot","hotkeysEnabled","screen","rotateFactor","axisRotateFactor","intertia","dynamicDampingFactor","intertiaThreshold","_state","_mousePrevPos","_mouseCurPos","_mainObj","_altObj","_affectedObj","_isAltObjFreeRotationAllowed","_isTranslationAllowed","_isKeysTranslatingObj","_pressedKeys","_clock","_lastUpdateTime","_listeners","mousedown","mouseup","mousemove","mousewheel","touchstartend","touchmove","getKeyBindObject","keydownup","handleResize","resetKeys","contextmenu","_rotate","quat","zeroPivot","makeRotationFromQuaternion","setObjects","rot","mousePrevPos","mouseCurPos","aboutAxis","mouse2rotation","setFromAxisAngle","translateOnAxis","timeSinceLastUpdate","timeSinceMove","eyeDirection","cameraUpDirection","cameraSidewaysDirection","moveDirection","mouseDelta","mousePrev","mouseCur","setLength","stopPropagation","preventDefault","innerWidth","innerHeight","getBoundingClientRect","ownerDocument","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","enableHotkeys","allowTranslation","allow","allowAltObjFreeRotation","keysTranslateObj","isEditingAltObj","convertMouseToOnCircle","pageX","pageY","screenSize","convertMouseToViewport","rotateByMouse","aboutZAxis","getOrientation","setOrientation","getScale","setScale","curTime","_lastMouseMoveTime","speedX","speedY","altObj","button","workWithAltObj","altKey","ctrlKey","shiftKey","translatePivotByMouse","wheelDelta","detail","touches","_touchDistanceCur","_touchDistanceStart","_scaleStart","keyCode","translatePivotInWorld","setX","setY","setZ","translatePivot","setPivot","newPivot","Picker","_lastMousePos","_mouseTotalDist","_lastClickBeginTime","_lastClickPos","_clickBeginTime","touchstart","touchend","picked","pickObject","screenPos","rayCaster","unproject","fogFarValue","getMouseInViewport","curPos","_lastTouchdownPos","changedTouches","targetCamera","_target","_targetCamera","_object","_full","autoClear","setViewport","secTypes","cSecNames","_createSecondary","strArray","nRes","resid","rIdx","fromUInt20ToInt20","uint20","FrameInfo","payload","callbacks","isLoading","_framesRange","frameIsReady","_frameRequest","_callbacks","_framesRequestLength","_downloadDataFn","parseBinaryData","setFrame","_prepareBuffer","framesStart","framesEnd","_framesCount","onDone","onLoadStatusChanged","onFail","onError","_parseBuffer","_bufferRequestStart","arrayBuffer","dataView","atomsCount","framesCount","_atomsCount","chunkedFramesCount","timeStep","iName","_timeStep","posData","coordIdx","secondaryArr","hiWord","loWord","_secondaryData","nextFrame","_currFrame","_updateSecondary","myResidues","sec","oldSec","nSec","compRes","getSec","frameIdx","_cachedResidues","disableEvents","vec","_vec","SceneObject","getGeometry","LinesObj","_id1","_id2","_getAtomFromName","_atom1","_atom2","_line","computeLineDistances","_raycaster","_intersects","verticesNeedUpdate","OutlineMaterial","srcDepthTex","srcTexSize","DEPTH_OUTLINE","FXAAMaterial","bgTransparent","BG_TRANSPARENT","AOMaterial","diffuseTexture","normalTexture","depthTexture","camNearFar","projMatrix","kernelRadius","depthThreshold","_kernelOffsets","AOHorBlurMaterial","aoMap","samplesOffsets","AOVertBlurWithBlendMaterial","fogNearFar","useFog","AnaglyphMaterial","srcL","srcR","View","orientation","ViewInterpolator","setup","startView","endView","_endTime","_isPaused","_srcView","_dstView","_isMoving","isMoving","wasStarted","transTime","_transitionTime","getCurrentView","success","createView","slerp","pause","resume","Cookies","removeCookie","cntKey","_toCount","cntVal","_getSimpleCookie","_removeSimpleCookie","setCookie","chunkLen","lc","_chunkString","_setSimpleCookie","getCookie","cookie","_getExpirationDate","today","setFullYear","toUTCString","_exists","webVRPoC","stylizeElement","bottom","padding","border","font","xr","isSessionSupported","then","supported","cursor","currentSession","onSessionEnded","onSessionStarted","session","_gfx","setReferenceSpaceType","setSession","onmouseenter","onmouseleave","onclick","sessionInit","optionalFeatures","requestSession","moveSceneBehindHeadset","showEnterVR","showWebXRNotFound","textDecoration","WebVRPoC","onToggle","_mainCamera","_button","_onToggle","_molContainer","_user","_scalingPivot","_controller1","_controller2","_pressedGripsCounter","_distance","startScalingByControllers","stopScalingByControllers","handleGripsDown","handleGripsUp","gfx","createWebVRButton","_mainFog","_plugVRNodesIntoScene","_setControllersListeners","getController","_createControllerMesh","disable","setAnimationLoop","getSession","_unplugVRNodesFromScene","cylinder","rotateX","updateMoleculeScale","scaler","container","getCanvas","EDIT_MODE","LOADER_NOT_FOUND","removeExtension","reportProgress","log","percent","chooseFogColor","Miew","settingsCookie","cookiePath","_interpolator","_container","getElementById","getElementsByClassName","_containerRoot","_running","_halting","_building","_needRender","_hotKeysEnabled","_cookies","_spinner","_loading","_animInterval","_visuals","_curVisualName","_sourceWindow","registeredPlugins","_initOnSettingsChanged","_setContainerContents","arezSpritesSupported","getExtension","isAOSupported","getMaxRepresentationCount","_updateShadowCamera","shadowMatrix","OBB","halfSize","light","getOBB","class","frag","createDocumentFragment","_msgMode","_msgAtomInfo","_showMessage","_initGfx","_initListeners","_onKeyDown","_onKeyUp","_objectControls","_getAltObj","_picker","_onPick","file","keepRepsInfo","job","halt","msg","_showCanvas","_requestAnimationFrame","requestAnimationFrame","clientWidth","clientHeight","webGLOptions","preserveDrawingBuffer","premultipliedAlpha","renderer2d","CSS2DRenderer","shadowMap","autoUpdate","getContext","setPixelRatio","devicePixelRatio","setClearColor","clearColor","stereoCam","selectionScene","selectionRoot","selectionPivot","light12","pixelRatio","getPixelRatio","shadowMapSize","mapSize","light3","Axes","deviceWidth","deviceHeight","offscreenBuf","minFilter","magFilter","depthBuffer","offscreenBuf2","offscreenBuf3","offscreenBuf4","volBFTex","volFFTex","volWFFTex","offscreenBuf5","offscreenBuf6","offscreenBuf7","stereoBufL","stereoBufR","_embedWebXR","stats","Stats","_fps","_onResize","_makeUniqueVisualName","baseName","random","suffix","_addVisual","_removeVisual","_forEachVisual","_releaseAllVisuals","_forEachComplexVisual","_getComplexVisual","any","_getVolumeVisual","VolumeVisual","_getVisualForComplex","getVisuals","getComplexVisualsCount","getCurrentVisual","setCurrentVisual","run","_onTick","_discardComponentEdit","_discardFragmentEdit","enableHotKeys","_resizeOffscreenBuffers","isAnaglyph","multi","_onUpdate","_onRender","_getBSphereRadius","_bSphereForOneVisual","_bBoxForOneVisual","_bBox","_invMatrix","_points","union","_updateFog","_setUberMaterialValues","isScriptingCommandAvailable","callNextCmd","_needRebuild","_updateView","webVR","_clipPlaneUpdateValue","_fogFarUpdateValue","setRenderTarget","_renderFrame","_anaglyphMat","_size","focus","_renderShadowMap","_renderScene","setScissorTest","setScissor","cameraL","cameraR","_onBgColorChanged","_onFogColorChanged","_enableMRT","renderBuffer","textureBuffer","gl","drawBuffersWEBGL","COLOR_ATTACHMENT0","tx8","__webglTexture","bindTexture","TEXTURE_2D","fb","__webglFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT1_WEBGL","distortion","bHaveComplexes","volumeVisual","ssao","_renderWithPrepassTransparency","dstBuffer","srcBuffer","_performAO","_renderOutline","_renderSelection","_renderVolume","_performFXAA","_performDistortion","aberration","targetBuffer","_outlineMaterial","srcDepthBuffer","srcColorBuffer","currentRenderTarget","getRenderTarget","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","setBlending","buffers","setClear","setTest","updateMatrices","_hasSelectionToRender","selPivot","_checkVolumeRenderingSupport","renderTarget","oldRT","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","volumeBFMat","volumeFFMat","cubeOffsetMat","world2colorMat","volumeRenderingSupported","dstBuf","tmpBuf1","tmpBuf2","tmpBuf3","overrideMaterial","colorMask","_fxaaMaterial","_aoMaterial","_horBlurMaterial","_vertBlurMaterial","_scale","normalBuffer","srcDepthTexture","tempBuffer","tempBuffer1","_lastPick","_setEditMode","_resetObjects","setNeedRender","_resetScene","resetPivot","resetView","_export","TheExporter","io","rePdbId","rePubchem","reUrlScheme","_fetchData","matchesPdbId","sourceType","matchesPubchem","compound","resolveSourceShortcut","TheLoader","fileExt","TheParser","updateBinaryMode","newOptions","keyCount","loader","lengthComputable","total","loaded","catch","onLoadEnd","anything","jobIndex","_refreshTitle","dataSet","_parseData","_onLoad","err","unload","_startAnimation","fileData","_stopAnimation","_frameInfo","isPlaying","_isAnimating","_continueAnimation","_pauseAnimation","clearInterval","minFrameTime","setInterval","_updateObjsToFrame","visualName","amberFileName","hasValidRes","hasValidResidues","resetEd","_onLoadEd","_tweakResolution","_edLoader","loadEd","_rebuildObjects","toRemove","unitIdx","currentUnitInfo","_updateInfoPanel","rebuildActions","appendix","_extractRepresentation","defPreset","_setReps","presList","newIdx","_editMode","getElementsByTagName","_enterComponentEditMode","editors","_editors","_applyComponentEdit","_enterFragmentEditMode","selectedVisuals","_applyFragmentEdit","_updateSelection","firstLine","secondLine","aName","coordLine","nextAltObj","setPivotResidue","amount","setPivotAtom","_centerInVisual","setPivotSubset","_includesInCurSelection","_includesInSelector","screenshot","getDataURL","dataURL","canvas","canvasContext","drawImage","toDataURL","screenshotURI","areaOfInterestTanFov2","shotAspect","setDrawingBufferSize","uri","save","dataString","maxPerf","_gfxScore","_autoChangeResolution","setOptions","objData","bThrow","Ctor","LinesObject","_addSceneObject","sceneObject","objs","getState","compact","getScript","_compareReps","compareWithDefaults","currPreset","repsDiff","emptyReps","repsInfo","objectsState","_updateShadowmapMeshes","_updateMaterials","_fogAlphaChanged","evt","Boolean","sel","euler","setFromQuaternion","srcView","dstView","setFromEuler","None","projected","fullAtomName","complexName","project","exportCML","extractBasis","retMat","makeBasis","extractRotation","xml","removeAttribute","sGroup","updateCMLData","XMLSerializer","serializeToString","curChainName","curChainColor","PACKAGE_VERSION","thirdParty","lodash","three","modeIdDesc","$help","colorDesc","materialDesc","addRepDesc","setGetParameterDesc","PDBID","REP_NAME","DESCRIPTION","REP_INDEX","EXPRESSION","MODE_ID","COLORER_ID","MATERIAL_ID","new","del","PARAMETER","set_save","set_restore","set_reset","PRESET","ENCODED_VIEW","removeobj","listobj","NULL","representationsStorage","representationMap","representationID","strId","sortedKeys","utilFunctions","repMap","repName","selectionStr","strList","joinHelpStr","helpData","clihelp","helpItem","awaitWhileCMDisInProcess","finishAwaitingCMDInProcess","modificate","modificators","modificator","argExc","endsWith","cliUtils","cmd","cliutils","_val","notimplemented","script","_printCallback","_errorCallback","parsercli","cmdQueue","commandInAction"],"sourceRoot":""}