// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Viewer component should apply custom theme when theme prop is provided 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  background-color: #f00;
  height: 100%;
  width: 100%;
  position: relative;
}

.emotion-0>.miew-canvas {
  height: 100%;
  width: 100%;
}

.emotion-0>.overlay {
  position: absolute;
  top: 10px;
  right: 10px;
  border-radius: 4px;
  color: #C0C0C0;
  background-color: rgba(142, 67, 67, 0.75);
}

.emotion-0>.overlay p {
  margin: 10px;
  text-align: left;
}

<body>
    <div>
      <div
        class="emotion-0"
      />
    </div>
  </body>,
  "container": .emotion-0 {
  background-color: #f00;
  height: 100%;
  width: 100%;
  position: relative;
}

.emotion-0>.miew-canvas {
  height: 100%;
  width: 100%;
}

.emotion-0>.overlay {
  position: absolute;
  top: 10px;
  right: 10px;
  border-radius: 4px;
  color: #C0C0C0;
  background-color: rgba(142, 67, 67, 0.75);
}

.emotion-0>.overlay p {
  margin: 10px;
  text-align: left;
}

<div>
    <div
      class="emotion-0"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Viewer component should be rendered 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  background-color: #2E6DA4;
  height: 100%;
  width: 100%;
  position: relative;
}

.emotion-0>.miew-canvas {
  height: 100%;
  width: 100%;
}

.emotion-0>.overlay {
  position: absolute;
  top: 10px;
  right: 10px;
  border-radius: 4px;
  color: #C0C0C0;
  background-color: rgba(64, 64, 64, 0.75);
}

.emotion-0>.overlay p {
  margin: 10px;
  text-align: left;
}

<body>
    <div>
      <div
        class="emotion-0"
      />
    </div>
  </body>,
  "container": .emotion-0 {
  background-color: #2E6DA4;
  height: 100%;
  width: 100%;
  position: relative;
}

.emotion-0>.miew-canvas {
  height: 100%;
  width: 100%;
}

.emotion-0>.overlay {
  position: absolute;
  top: 10px;
  right: 10px;
  border-radius: 4px;
  color: #C0C0C0;
  background-color: rgba(64, 64, 64, 0.75);
}

.emotion-0>.overlay p {
  margin: 10px;
  text-align: left;
}

<div>
    <div
      class="emotion-0"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
